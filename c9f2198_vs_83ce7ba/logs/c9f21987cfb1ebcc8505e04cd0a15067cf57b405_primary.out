cset: moving following pidspec: 2302
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 2.012336336 seconds)
loading group "string"... done (took 0.638505191 seconds)
loading group "linalg"... done (took 10.051776231 seconds)
loading group "parallel"... done (took 0.190607522 seconds)
loading group "find"... done (took 1.611731515 seconds)
loading group "tuple"... done (took 2.265422461 seconds)
loading group "dates"... done (took 1.598774091 seconds)
loading group "micro"... done (took 0.250070224 seconds)
loading group "io"... done (took 0.600379659 seconds)
loading group "scalar"... done (took 49.639417252 seconds)
loading group "sparse"... done (took 15.098152369 seconds)
loading group "broadcast"... done (took 1.338853949 seconds)
loading group "union"... done (took 13.615924844 seconds)
loading group "simd"... done (took 2.91566236 seconds)
loading group "random"... done (took 11.723028452 seconds)
loading group "problem"... done (took 1832.910874421 seconds)
loading group "array"... done (took 29.540206175 seconds)
loading group "misc"... done (took 1.30023758 seconds)
loading group "sort"... done (took 4.285477796 seconds)
loading group "collection"... done (took 21.459703991 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.793792782 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.147360467 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.229689283 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.396158064 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.24707365 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.169902079 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.180132111 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.596372766 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.073196718 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.301198768 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.163047439 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.62518217 seconds)
done (took 6.639811925 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.305631089 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.408868635 seconds)
    (2/2) benchmarking "String"...
    done (took 0.184331071 seconds)
  done (took 1.255924452 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.076870463 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.190168469 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.115771878 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.117561145 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.101863933 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.115372692 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.115189865 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.116463943 seconds)
  done (took 1.537840317 seconds)
done (took 3.84846416 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.586795453 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.888679065 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.600783407 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.181889655 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.210044512 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.189956874 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.336115384 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.160787201 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.116740661 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.114563586 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.230387786 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.385950032 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.540288654 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.051256254 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.094624207 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.129236823 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.098743666 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.697867887 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.088196507 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.137778568 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.62684343 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.121637285 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.117465818 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.12700534 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.209063168 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.139981966 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.176337707 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.099325107 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.693397337 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.105437937 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.238226589 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.085746674 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.183921726 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.262606791 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.081651349 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.110384482 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.683604891 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.190131629 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.121738742 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.10493386 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.69041934 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.081492222 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.254662251 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.110913901 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.115622463 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.196341562 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.108926473 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.102604051 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.103680534 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.088856348 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.176490709 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.466192473 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.108125448 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.176976997 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.109663751 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.714420992 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.098514197 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.157578235 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.144378347 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.109357514 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.082803632 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.115680887 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.161130505 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.118675029 seconds)
  done (took 20.681391487 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.167132955 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.175028881 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.094960618 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.144728741 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.149689257 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.097041881 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.10003341 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.08259454 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.133469699 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.243354843 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.146279918 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.195973882 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.077582851 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.102909991 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.147068775 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.256724123 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.109325157 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.126451269 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.101458318 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.093659117 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.146361477 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.116152737 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.111387496 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.099961121 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.189549718 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.205523592 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110596401 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.123335324 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.100976014 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.121321303 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142744809 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.15196565 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.092409777 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.085126533 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.209897352 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.108082587 seconds)
  done (took 5.543599838 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.233608751 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.11960365 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.249402741 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.186880413 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.153840708 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.188806361 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.147987052 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.31796789 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.302953871 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.189314072 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130584412 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.114536527 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078893106 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.098470343 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.094399856 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.802094602 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.188275125 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.15539283 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.154975956 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.106828993 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.098612759 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.387991777 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.088109688 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.099306312 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087013556 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.095199018 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.228858842 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087490058 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.46878425 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.102986005 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.111469989 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133996162 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.212150617 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.121193322 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.148074034 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.104540438 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.081560205 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.247078719 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.112441426 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.078356284 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.131062947 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133865616 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.138263209 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.100603048 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.097626237 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.258177693 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.099125342 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.106611925 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.228677666 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.205624436 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.176848789 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.100870024 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.396737999 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.117805196 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.106313707 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.083101454 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.317361283 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.145866177 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.100454865 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.094906303 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.088659104 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.095239781 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.439362812 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.1113398 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.985271433 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.098246391 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.17980178 seconds)
    (68/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101905088 seconds)
    (69/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.10710179 seconds)
    (70/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.160303047 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.104291756 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086512181 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.120979109 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.098190659 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.083708644 seconds)
    (76/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.100110997 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.096892737 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.080709956 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.103270931 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.079630358 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.124661028 seconds)
    (82/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.099536282 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.086331655 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.097179946 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.160376574 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.106094435 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.117966363 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126153096 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.101468371 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.080661994 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129768855 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098624905 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.085111037 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.193658285 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.090915724 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.12406818 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102495674 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.146590723 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.097503339 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.226159931 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.083835879 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.125628689 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.101894051 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129532204 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.127920044 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081489698 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.104570989 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.095809436 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.082145306 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.163856443 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.08116865 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.097166766 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.099944813 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.098000982 seconds)
  done (took 25.26430052 seconds)
done (took 52.152065136 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.532661026 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.126881849 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.125443303 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.125278564 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.12512878 seconds)
  done (took 1.782236294 seconds)
done (took 2.501980089 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.419218476 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.209005793 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.124892349 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.207127091 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.109915158 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.213533516 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.212888547 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.124891233 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.227193485 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.103259963 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.204244776 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.104404342 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.108862542 seconds)
  done (took 3.118923241 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.101052058 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.125629751 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086110255 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.116757791 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079011927 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.116479029 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.114781115 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.123086673 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.116546528 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.107360201 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.081893237 seconds)
  done (took 1.883118544 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.097226426 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.120295244 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085864797 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.114362383 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079562369 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.115454257 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.11295397 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107712937 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.114918061 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.092645223 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.097761076 seconds)
  done (took 1.857993337 seconds)
done (took 7.570544082 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.266870286 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 9.773585723 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.157655519 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.210216148 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.424968229 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.258061923 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.650535424 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.173614335 seconds)
  done (took 13.864345132 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.183401186 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.10609704 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.088140829 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.103736298 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.089347093 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.104776714 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.088747687 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.102650123 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.102253431 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.087486564 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.103275457 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.088821071 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.103453233 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.088156452 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.103608671 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.102717048 seconds)
  done (took 2.432604432 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.143286022 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.143744088 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.094304885 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.117375871 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.108532626 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.094500362 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.111429888 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.109197091 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.091334243 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.10794051 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.114655955 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.100187885 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.112965955 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.106539191 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.097191885 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.116005368 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.107261851 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.096769229 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.110758119 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.111158332 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.100942233 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.109008853 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.1133745 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.099853276 seconds)
  done (took 3.44411279 seconds)
done (took 20.460182788 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.186911402 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.102353087 seconds)
  done (took 1.009456587 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.155694223 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.157495728 seconds)
  done (took 1.040844523 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.118074185 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.09985735 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.146380156 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.123094233 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.102102369 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.085217562 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.139717071 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.100338626 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.085802487 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.101949898 seconds)
  done (took 1.833059867 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.091462165 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.106311095 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.113728289 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.15346535 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.098395377 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.107443887 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.106010215 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.090122126 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.11012852 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.10213686 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.095341955 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.12700152 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.108238084 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.129542954 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.210499304 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.11112429 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.117260597 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.108992586 seconds)
  done (took 2.817538945 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.085219797 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.101341083 seconds)
  done (took 0.913733071 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.092125172 seconds)
    (2/7) benchmarking "second"...
    done (took 0.101908188 seconds)
    (3/7) benchmarking "month"...
    done (took 0.091089366 seconds)
    (4/7) benchmarking "year"...
    done (took 0.106851819 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.101697004 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.085835441 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.102476321 seconds)
  done (took 1.406959754 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.582812359 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.286263777 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.397818633 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.125103373 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.149780104 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.41438561 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.148756759 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.121909129 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.120256333 seconds)
  done (took 3.117855263 seconds)
done (took 12.867651001 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.092744776 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.246055732 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.643175904 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.125998689 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.08586835 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.160658803 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.339459292 seconds)
done (took 2.425212053 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.371326422 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.16284451 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.093586085 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.097789207 seconds)
  done (took 1.453774393 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.07988912 seconds)
    (2/2) benchmarking "read"...
    done (took 0.110043132 seconds)
  done (took 0.925278873 seconds)
done (took 3.121027894 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082392186 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.097472251 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.119388451 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.101677135 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.10007064 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.083365895 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.09895811 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.083283607 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.097690202 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.083223875 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.097414591 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.083486767 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097133745 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083017473 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099894573 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082101079 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.098227225 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.0836518 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098254393 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.082209063 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.098579829 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097281015 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.083451058 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.098880906 seconds)
  done (took 3.004858207 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.108087751 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.102878868 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.106719145 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.091016806 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.106991014 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.10574549 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.09133704 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.101584576 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.106205 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.087671177 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.107842333 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.10684889 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.087463468 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.107589659 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101227358 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.092406829 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.106489614 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102032274 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087110327 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.107811648 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.105308404 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087110524 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.107277599 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091046861 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.107131654 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.107849712 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.086339744 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.103680068 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10599988 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.092015629 seconds)
  done (took 3.745532858 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.093249872 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.095523042 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.084534731 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.108603673 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.080820103 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.101130145 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.079647097 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.097100296 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.100229468 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.082911508 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.102076672 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.084098076 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.096209376 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.085704788 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.100690879 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.087648976 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.109353188 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.097210938 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.081047483 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.101695303 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.086543165 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.096587253 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.084440903 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.099574092 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.083069415 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.097156124 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.083206399 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.100062244 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.084630164 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.099521037 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.101686947 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.087945527 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.100010284 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.096042383 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.103912566 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.084609071 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.106397872 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.080700126 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.103731107 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.097193148 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.081226546 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.099649354 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.081605712 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.106382623 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.084012726 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.101395681 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.081328677 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.101307051 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.085737986 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.104037058 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.097623417 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.081955076 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.10269897 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.086968774 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.103523734 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.081631763 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.10185795 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.080867349 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.101809046 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.08349544 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.097267435 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.09537203 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.090089103 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.100037174 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.100705624 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.10704186 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.095865034 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.087488105 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.10194376 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.090186611 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.103569518 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.094639704 seconds)
  done (took 7.506424525 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.099027752 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.113516764 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.085123964 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.103057936 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100234837 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.084418934 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.11124747 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085014393 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102065861 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.110155553 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084667239 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.101451635 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086882709 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.102442862 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084753336 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.102342782 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.110330329 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.085424685 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.100301391 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.08630509 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101158508 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.108174742 seconds)
  done (took 2.897124132 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.268771055 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.091101352 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.155095037 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.119967883 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.126105904 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.1206395 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.089544609 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.107797737 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105347383 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095597257 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112869963 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106039561 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.126165158 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095752148 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.112528124 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.114549522 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.088819053 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.114034981 seconds)
  done (took 2.898490584 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.104044675 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.104290338 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.127982224 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.087457355 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.104622709 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.086837847 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.113838256 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.121296315 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.105029617 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.088351593 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.115805844 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104066538 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.087700685 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105810121 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087819878 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.104587867 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.103558648 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088460054 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114734073 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.112759651 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.096743493 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.1143718 seconds)
  done (took 3.031702442 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.104882013 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.10461004 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.143590363 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.091651151 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.101527875 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.101646681 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.09390196 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.105297437 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.111718833 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.088599768 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103464517 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.086764205 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.112674911 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.104100726 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.095069744 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.104000796 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.087187769 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.103992156 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103869827 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.086724106 seconds)
  done (took 2.787974402 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.184649867 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.103173448 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.119828328 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.134682732 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118885288 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.103292347 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.133134853 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.119409859 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.102675421 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.136891251 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.120118022 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.119601455 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.133072979 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112516361 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.118984644 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.134231259 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.13544574 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.134301146 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.103125892 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118494067 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.138454839 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102849906 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.133918551 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.119448912 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.118819684 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.102553874 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118923011 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.128998682 seconds)
  done (took 4.206606997 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084402682 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099512896 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.084074535 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.099596339 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.083960487 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.100040942 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.084527895 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.100472797 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083916887 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.101266999 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.082939373 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.100343998 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083615454 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.100728778 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.083965208 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.100859929 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084035275 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.100717457 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099554448 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084963613 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.099463427 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084764081 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.099705413 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.084196968 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099858139 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.085107028 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101901559 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084650965 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101323655 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.083984152 seconds)
  done (took 3.523949707 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.100386567 seconds)
    (2/2) benchmarking "in"...
    done (took 0.132161893 seconds)
  done (took 0.990799019 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.09447121 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.123190402 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.083853735 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.101915574 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.113068554 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.085738144 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.114689151 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.114474982 seconds)
  done (took 1.590953896 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.155551187 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.157051424 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.092075243 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.116274553 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.156784506 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.148123043 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.153713778 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.090858174 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.106197852 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.098597655 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.152369296 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.080427587 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.108719799 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.104523595 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.091413838 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.115893901 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.086437019 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.112173801 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.110820714 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.087755205 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.109720352 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115412684 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.095800321 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.114833032 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.083565886 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.110678915 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.112683889 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.099483056 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.104107027 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.111607758 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089121166 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.102637924 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.089895482 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.109254941 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.086743568 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.151969196 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117508189 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.104635537 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.091576208 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.109414988 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.113715207 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.085860797 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.110707982 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.105436724 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096417699 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.108973481 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.09233566 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.103782843 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.099035463 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.086347113 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.10424522 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085693272 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.102990354 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092221895 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.109227611 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.118134337 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.088586242 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.104386632 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.105215256 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.086785131 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.107932925 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.086454326 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.121223493 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.107032695 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093205424 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.109494348 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.10870641 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.087197674 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.106029689 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.086460045 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.108741911 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.124753584 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.093197502 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.111320039 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.092128666 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.104174615 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104956185 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.092688715 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109411764 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.109479936 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.090601091 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.112088181 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093180091 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102913414 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.103895 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.093848371 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.105048204 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.088442074 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.100055228 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118253249 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.088821639 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.104347873 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.082984116 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.105970801 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.103890132 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.089747321 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.099998047 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092327183 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.103738166 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.091209076 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.109760246 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.107680298 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.094687333 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.109801803 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.110486611 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.091480981 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.149208367 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.106045883 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.084991985 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.107084918 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.093133966 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.102731374 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.114052296 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.085441888 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106929389 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.086185534 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.109599341 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.11031524 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.087477294 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.110149412 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094736463 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.110955874 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.106546947 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.084805738 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.104965571 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.091050436 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.11438951 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.110244535 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.087972373 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.104277749 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.087119524 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.108472746 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.107971007 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.089164619 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.110267778 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.08789158 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.102857911 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.105061515 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.092938765 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.110569713 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.085995115 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.107772313 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.110800417 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.091254168 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.107001713 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.109780159 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.08663861 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.100377684 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.092178446 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.104331445 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.105356956 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.098238375 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.10584711 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.089113573 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.105686957 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.116496429 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.08839377 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.11071753 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087968597 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.109190057 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.111291937 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.082104737 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.105515421 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.088721685 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.11260832 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.105035762 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.087828178 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.103604234 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.094539629 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.100903338 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.090636936 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.100372923 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.105240141 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.092831605 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.106061969 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.090208552 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.104018806 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.123106918 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101759948 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.111377242 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.109735434 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.090363145 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.108509456 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.089847515 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.109099976 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.112508542 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.092913906 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.105745261 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.089957526 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.110370266 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.104532483 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.092206262 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108213356 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092646598 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.100592373 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.089097082 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.10029048 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.109684273 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.094641974 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.110509632 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.092705107 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.106249375 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.109113246 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.096951032 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.105034032 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.090970739 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.100721155 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.110714826 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.098383521 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.110390552 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.094781754 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.112031148 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106932569 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.088533469 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.116775736 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.087990066 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.109566821 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.106342311 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.084393006 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.101801836 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.09473993 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.108136093 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.086184475 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.103952715 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.111294272 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.095486579 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.108306249 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.08242449 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.110716232 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115017666 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.085307094 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.110489645 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.105820105 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.090046094 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.119207877 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.083963816 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.105690708 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.113760759 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.092144761 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.104520059 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.090904227 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.107436968 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.110920177 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.088733907 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.106417206 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088631809 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.111714313 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.089220031 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.104030348 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.105663598 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.089336316 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.101444264 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.088375097 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.109552813 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.107034182 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.088036851 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114742707 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.093222814 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.112838104 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.10698253 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.091239163 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.112696763 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.093661136 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107660701 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.111485211 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.085877238 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.102342358 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.08720994 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.101918828 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.105545103 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.086308207 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.110581638 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.088509356 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108007997 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.10863108 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.095376678 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.107210304 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.093071388 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.122328018 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.103375906 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.082624257 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.10758321 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.108684853 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.087277288 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.105023329 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.087146341 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110716508 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.110077948 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093886911 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.106462403 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.085974309 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.111222431 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.104926557 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.094533777 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.112965821 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.094770823 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.104698193 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.110162335 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.088466452 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.116065238 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.08347789 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.108878089 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.109435375 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.091501189 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.106352237 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.089147848 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.105342838 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.101133667 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.086726242 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.112887338 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.089633718 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.110171606 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.109029144 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.08834556 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.106188927 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085624208 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.112347973 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.108169886 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.094933935 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.10608988 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.083438468 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.102824139 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.11095438 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091543114 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.11172307 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.087455729 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.108976293 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.094810933 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.108836878 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.106134301 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.097010048 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.113551139 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.094042453 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.117062695 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.101588591 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.0879789 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116273988 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.104623479 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.089747865 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.10581287 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.085149965 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.113524825 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.093039811 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.110141888 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.107907422 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.083354713 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.104846634 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.093025252 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.109383794 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.09027118 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.107076137 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.110970895 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.085596591 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.108317917 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.094119331 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.110505831 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.113491615 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091227524 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.109299455 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.087819265 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.110009526 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.105627443 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.08421953 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.101983827 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.088466314 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.114163816 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.085208666 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.109844631 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.110974965 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.088308382 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.108141114 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.092104916 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.105987725 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.113782434 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.091803948 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.108693386 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.09862221 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.105963764 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.107177065 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.092186929 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.110301693 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.084117016 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.108836417 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110538417 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.09518141 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.108714132 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.092266398 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.109859824 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.111311064 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.088963651 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.111099399 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.092852369 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.111753469 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.08360714 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.114114103 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.114579818 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.089731515 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.107886106 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.089678418 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.105282702 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.107569903 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.094229199 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.108083792 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.115608228 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.093386753 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.10803225 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.08850969 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.111058224 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089724066 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.114951306 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.106336805 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095169617 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.10320073 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.113885333 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.089426797 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.113770031 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.086721761 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.103498262 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.091805367 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.110474263 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.109697348 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.094316054 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.112873038 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.084604169 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.103421575 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.107357065 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.088064071 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.119268455 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.114786249 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.089105238 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108834061 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.089073478 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.107317075 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.094565944 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.104451872 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.106784031 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.092297206 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.113767102 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.088988704 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.105115639 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.109223758 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.090348872 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.114436866 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.108111264 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.084523707 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.108163072 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.094033493 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.107965796 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.10470335 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.088028248 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.112971849 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.090876158 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.107103343 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.084040963 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.117621815 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.112433017 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.09466265 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.10647358 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.11102579 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.088542023 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.108777343 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.09375373 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.107345293 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110019406 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.089731091 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.112179686 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117379759 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.083561023 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.106784826 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101954715 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.110041252 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.112103766 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.089552407 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.108613433 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.094684717 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.11340364 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.089352207 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.103647686 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.104337042 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.090571271 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.104075144 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.089197301 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118125424 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.109227107 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.088970662 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.110610393 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.091056341 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.107687481 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.089209424 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.104150421 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.114329944 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.087832688 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.114301727 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.084296378 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.103589368 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.10819694 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.092486334 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109490577 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.092843503 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.107571899 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.089887785 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.103770793 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.107669247 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.096788142 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.110808821 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.091833831 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110167503 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.108022847 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.088652076 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.117821588 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.086502974 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.10887987 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.120099232 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.09470695 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.110782759 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.110320525 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096769761 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.113623667 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.088798309 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.113540893 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.107893523 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.09166525 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.113196518 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.095765372 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.12263394 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109621748 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.084828226 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.111725929 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.10777209 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.0858097 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.115927998 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.094441288 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.114640722 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.111318854 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.086485578 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.115097437 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.098179072 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110268086 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.107912537 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.088880918 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.110517421 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088491488 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.110360502 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.10776264 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.096401787 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.114223264 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.092378309 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.116026002 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.102951295 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09855095 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.114642852 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.095217933 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.106174477 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.103496943 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.085376821 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.108742027 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.096273971 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.113354499 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.089981797 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.110385957 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.090585833 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.11230606 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110641866 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.090082627 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.114184287 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.091542285 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.107403302 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.111402546 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.090214306 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.112074863 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.086709129 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.113081106 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.114133545 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.093586622 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.117642825 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.093823594 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.109164032 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.107221224 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.092122842 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.109049179 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.092616308 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.111451847 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.106617215 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.085260134 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.112805659 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.095497312 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111692006 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.113226158 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.096532456 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.109570494 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.093431256 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.117486211 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.111305751 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.087958529 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.112674595 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.088859615 seconds)
  done (took 61.742386421 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.167839437 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.097309379 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.110254308 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.089003343 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.139937016 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11062486 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.109840193 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.092296417 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.110851783 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.104609654 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.108796379 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109931742 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.134012981 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.141848093 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.139472846 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.104841681 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108953583 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.109815155 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.089631266 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110176425 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.132066773 seconds)
  done (took 3.232895934 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.114095218 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.12835477 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.127813602 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.130016975 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.120207502 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.107230773 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.127598818 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.126558244 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.131490674 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.122112927 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.132147304 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.125502327 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.103846527 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.122317786 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.122245732 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.12225634 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.111611771 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.120255738 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.126611571 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.127559581 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.122382114 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.109706408 seconds)
  done (took 3.487591875 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.098232955 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.110827864 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.094756651 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.108140509 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.093587867 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.108561829 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.117385871 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.089509698 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.117786393 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.089420099 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.105515759 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.089855238 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.114401404 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.108682314 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.086818792 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.107791674 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.098832588 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.111575247 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.095120462 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.108109811 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.126928186 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.088669818 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.10907868 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.085808976 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.122761487 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.114061139 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.092479464 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.112964231 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.085702449 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.11119897 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.087785538 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.110560728 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.112486986 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.086355344 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.106309561 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.091922403 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.111521209 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.10827555 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.088842417 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.113471909 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.090382424 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.113529869 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.117154212 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.089734231 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.108619433 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.092590159 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.112970691 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.088331571 seconds)
  done (took 5.748289952 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.153431735 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.171698673 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.123392213 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.160403051 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.134830706 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.107873245 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.121530806 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.159913356 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.115881976 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.096671415 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.137707696 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.136199924 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.123254541 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.125400892 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.100397789 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.118423738 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.123172851 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.098747562 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.124685251 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.116929641 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.130149609 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.102492852 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.133538081 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.132662454 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.120724557 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.09678279 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.123067339 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.126339049 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.132357585 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.107074147 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.125170946 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.12619236 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.133766906 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.120334434 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.102764039 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.119956732 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.136733477 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.119384249 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.099885753 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.115042367 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.102910838 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.125741514 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.118483151 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.137139964 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.121555239 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.103033154 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.117989613 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.114011298 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.118002555 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.122118591 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.127531905 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.135552589 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.120467574 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.098924786 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.126873089 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.13868627 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.119032167 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.096246241 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.122753421 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.135331462 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.096200712 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.121107449 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.140420729 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.121206004 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.106339621 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.134914175 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.120691965 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.121023737 seconds)
  done (took 9.270626914 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126793824 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.121095042 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.136677187 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.135873958 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.119234611 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.100666045 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.120849528 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.120288135 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.101304941 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.130424449 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120829542 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.21136651 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.117184985 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.128558157 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.101028858 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.121672901 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.120276231 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.120434037 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.101794203 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.12120837 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.120259895 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.134799644 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.100783499 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.136473062 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.137492631 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.116291176 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.100076523 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.121598774 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.134908181 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.121689753 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.137778783 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.100321962 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.121785966 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.135337214 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.137106053 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.121473645 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.091970179 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120786133 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.121672726 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.101893527 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.117222348 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.135259029 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.120944683 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.097298715 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.120078064 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.121085592 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.135199377 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.137776084 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.108331433 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.130260949 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.121435767 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.136467989 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121351413 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.101402128 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.136211705 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.145783521 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.134668769 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.135528777 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121692193 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.136487018 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.134876269 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.146067321 seconds)
  done (took 8.507796899 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089054003 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.109970403 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.090275912 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.111263651 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.089690838 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109826865 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.090775158 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.108905642 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.089914702 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.109339636 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089928087 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.110296209 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089388023 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109736623 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.091561154 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10883705 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089350149 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.110711831 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110134037 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.090163249 seconds)
  done (took 2.820030517 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.102849173 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.136830573 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.115091591 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.103191193 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.114554563 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.123613167 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.093953552 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114714481 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.115048706 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094613472 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.127677487 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.127365383 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094480962 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.124100934 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.126317551 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.123977371 seconds)
  done (took 2.664507191 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.116891515 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.135740539 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.172652463 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.118177967 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.115659173 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.102613999 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.115012061 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.095312487 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.112843893 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.120155344 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.097665521 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.118682287 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.093067766 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.114812863 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.11436631 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.09882007 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.111970131 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.09848021 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.114215396 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.172136376 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.121999205 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.095705289 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.116917277 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.118484243 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.096568541 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.121742156 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.122109209 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.094423775 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.116539483 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.115295635 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.098197291 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.124348323 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.113864828 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.100361448 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.113973722 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.095097568 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.113490591 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.11483862 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.100039102 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.114761603 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.094417167 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.116945898 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.113680804 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.097360329 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.112763613 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.094271779 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.112339837 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.122247922 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.09580938 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.117737024 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.093476113 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.122053124 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.119568011 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.104905082 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.125381636 seconds)
  done (took 7.016412528 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.108380056 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.116210749 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.12907664 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.09097276 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.11546102 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.096415964 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.116528838 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.117502578 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096497125 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.111895741 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.096923803 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.11584147 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.116749328 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.097167727 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.11696918 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096433191 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.112116485 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.117012479 seconds)
  done (took 2.799895446 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.099792494 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.113202714 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.098610566 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.113684759 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.093362437 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.114965306 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.112814221 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.091684473 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110536942 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.094178363 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.114129139 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.092417843 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111920339 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.113549307 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.093755721 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.115090473 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.093361536 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113068311 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.113304254 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092361347 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.113955055 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.0927609 seconds)
  done (took 3.132982458 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.110589599 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.177159535 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.127556786 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.188330225 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.115921708 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.11369407 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.106192732 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.116224788 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.135034623 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.093529134 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.112866936 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.092713125 seconds)
  done (took 2.324643138 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124240451 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.157028747 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.115306672 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093476534 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128958877 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120788363 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120030471 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100656833 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133043248 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.137990725 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120674176 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132626848 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112366741 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135540908 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12696687 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126278923 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122102501 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101479749 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114899896 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.146561269 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121918682 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133081762 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100086808 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120751354 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120331902 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13593448 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111897916 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138561524 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121398245 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134611776 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12895368 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100416458 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134484683 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.139546693 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114194076 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135125663 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100227494 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.167046271 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107831764 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136506549 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.115414379 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128908304 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112469255 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130979437 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133373643 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120785333 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132002312 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101451806 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121186249 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.15688503 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129668067 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.136198848 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129205856 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134857841 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133458025 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.156500214 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.139773518 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135236888 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107825482 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139810495 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.135373393 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128886616 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13686658 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141488363 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128386923 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13898245 seconds)
  done (took 9.220113813 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.164643526 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.096176531 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123260906 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.140733174 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135774573 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100970442 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121839142 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121377611 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101168864 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118249231 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.176501037 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120439271 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135965526 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135940487 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121751815 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101405723 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121464154 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.136584575 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095643085 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.174408427 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101633772 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137053242 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135498989 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13617163 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.139829117 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12847462 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100784092 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123132744 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120874873 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121573693 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109924641 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123949576 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.135043368 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.116799717 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13439289 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101966041 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121374149 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132340165 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100945532 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12839928 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135869001 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.14578543 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12131207 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121467574 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139467305 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101568704 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121135859 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116998151 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101387504 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117221679 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139680895 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.139218332 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.14176345 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135640504 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10179966 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121743871 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121627959 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100697871 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121850579 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127514248 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136170077 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101067244 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.176826393 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101399763 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122081303 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136884535 seconds)
  done (took 9.08301127 seconds)
done (took 167.970596741 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.157146489 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.180850236 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.154347977 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.151238013 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.108199918 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.121742214 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.141477334 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.155678335 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.106932152 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.087188259 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.107494066 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.090998358 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.17582601 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.086547886 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.106866598 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.111973992 seconds)
  done (took 2.890441314 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.21803493 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.315468764 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.132745693 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.11437216 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.09764211 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.112460925 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.09189118 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.114798463 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.10949439 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.101983832 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.111798509 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.091771194 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.125769155 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.112478111 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.089013258 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.112485884 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.122892873 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.09095698 seconds)
  done (took 3.108868558 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.116607466 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.161846372 seconds)
  done (took 1.128242927 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.129172809 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.222650211 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.307242238 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.173911842 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.143508081 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.138181125 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.173505739 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.130352515 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.212971707 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.14054815 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.139344616 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097244797 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.143565248 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.123244058 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.106581831 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.116099673 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.146378322 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.10464308 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.126137377 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.353339063 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.138803508 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.099005518 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.12409614 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.1255493 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.202106917 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.139066381 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.098335588 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.119658317 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.118242482 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.104356352 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.124381271 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.136071679 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.138977848 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.193662628 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.123351153 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.210465277 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.106235836 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.11628341 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.123908302 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.096601552 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.122218524 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.121317077 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.114594584 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.116645432 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.118244376 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.105996288 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.118549642 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.117807702 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.105388007 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.129151293 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.125298219 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.123468894 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.188105726 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.129703719 seconds)
  done (took 8.447453471 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.943625016 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.160825421 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.093460069 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.083138519 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.147784169 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.13029277 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.952551182 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.120021429 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.290883883 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.934928687 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.136202948 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.106380547 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.300580172 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.283206578 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.203562625 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.40743005 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.779467553 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.130395157 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.148467007 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.169459995 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123276923 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.146648276 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.11466391 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.469049063 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.096297887 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.11486906 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.121371987 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.109148129 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.212709429 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.092639721 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.119689603 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.234031767 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.295681143 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.236947961 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.117506392 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090498876 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112090894 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.201573771 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.336863064 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.261610172 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.190227162 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087931405 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.113533165 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.129342871 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.11634185 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.10977345 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.213780694 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.203367922 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.224128247 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.097394362 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.128707273 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.125114929 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.127598376 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.19165378 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.110662868 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.385983636 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.391227925 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.113138328 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103533253 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.135722085 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.310637884 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.115163853 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.273433602 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.145357811 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.25771564 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.112845543 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.860553979 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.195765644 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.112411168 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.103447407 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.124451803 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120328145 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.128196477 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.185164616 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.394100831 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.131686596 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.100465539 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113321799 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.259549202 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.090782219 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113682632 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.192596287 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120322928 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.125111514 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.131799621 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108676384 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.222499887 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.28013901 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.130668466 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.125167914 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.119937934 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.107298982 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.119380122 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.243878181 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.285523825 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.188716764 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.262885377 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.108622183 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.215656744 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.195569449 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.129861376 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.222712612 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.102127528 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.134007748 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.129267015 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.261997911 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.15828237 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.114685772 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.097693179 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.124025041 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.161274754 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.116949138 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.123373761 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.197740453 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.512017964 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.194584495 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.113274632 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.096094338 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124787704 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.209751842 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102791628 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.303985513 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126308398 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.217762642 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.102686458 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.11029154 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.123506642 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.196601241 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.131624602 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12483032 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.108842496 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124113937 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.30178847 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.265524221 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.13235208 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.250741894 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.21445533 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.105725416 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.224730332 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125429626 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.200151344 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.126920741 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.105936054 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120434106 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.843076812 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.131170133 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.124364264 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.098544059 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.232137179 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.092809346 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.113900377 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.092463978 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.11055798 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.847790634 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.095072152 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.111448623 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.092804722 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.124892428 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.125444298 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121223379 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.099007617 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.214075986 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.280924411 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.129480029 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.123066711 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.092558407 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.210493395 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.098463448 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.114540288 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.093837425 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.11466075 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.124940872 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.099628174 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.115327565 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.203338216 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.209649989 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.266907693 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.581580711 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.091910286 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.114465825 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.278314246 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114371863 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.353462606 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123777402 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.275487669 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.196389068 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.112600134 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.385189964 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.221254773 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.212150088 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.095497848 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.224329129 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089467885 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.126434896 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.212636502 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.092852616 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122991055 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.187883228 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.133923569 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.131949903 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.208135146 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.114677437 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.258952298 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.110949414 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.19772876 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119096221 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.128563185 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.361877677 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.113576315 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.116942658 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.213519646 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117900536 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.094382013 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.71955072 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.092577053 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.127089456 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.12683042 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.271624983 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.216677662 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.101842639 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.124788433 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.128983163 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.190980096 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.26485999 seconds)
  done (took 49.051100944 seconds)
done (took 65.467715057 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.335419079 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.290809711 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.350039498 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.240389808 seconds)
  done (took 2.173619914 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.241720417 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.166020611 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.220512575 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.090674616 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.231025146 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.090051187 seconds)
  done (took 1.910031963 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.558294759 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.454682025 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.38569324 seconds)
  done (took 2.276766423 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.276046565 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.306170134 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.375194592 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.535377472 seconds)
  done (took 2.476474744 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.292407105 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.116953211 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.132351056 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.187455702 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.263230833 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.28658931 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.161899035 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.209730185 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.119113683 seconds)
  done (took 2.69388266 seconds)
done (took 12.408508643 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("map", identity, Int8, true)...
    done (took 0.31852637 seconds)
    (2/224) benchmarking ("map", identity, Float32, false)...
    done (took 0.228410766 seconds)
    (3/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.232139689 seconds)
    (4/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.342502983 seconds)
    (5/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.341999714 seconds)
    (6/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.314964122 seconds)
    (7/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.219822767 seconds)
    (8/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.169854108 seconds)
    (9/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.279239773 seconds)
    (10/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.316735406 seconds)
    (11/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.265811484 seconds)
    (12/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.213005653 seconds)
    (13/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.100423794 seconds)
    (14/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.22705211 seconds)
    (15/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.276261264 seconds)
    (16/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.26362772 seconds)
    (17/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.215379111 seconds)
    (18/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.329726489 seconds)
    (19/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.155933057 seconds)
    (20/224) benchmarking ("perf_sum", Float64, false)...
    done (took 0.134534683 seconds)
    (21/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.23903922 seconds)
    (22/224) benchmarking ("map", identity, Float32, true)...
    done (took 0.088976172 seconds)
    (23/224) benchmarking ("map", identity, Int64, true)...
    done (took 0.306393755 seconds)
    (24/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.220911059 seconds)
    (25/224) benchmarking ("map", identity, BigInt, false)...
    done (took 0.142696701 seconds)
    (26/224) benchmarking ("map", abs, Float32, true)...
    done (took 0.172202697 seconds)
    (27/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.235000752 seconds)
    (28/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.215795027 seconds)
    (29/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.136269845 seconds)
    (30/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.10140622 seconds)
    (31/224) benchmarking ("perf_sum", Bool, true)...
    done (took 0.134626419 seconds)
    (32/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.098310608 seconds)
    (33/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.104961992 seconds)
    (34/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.202143983 seconds)
    (35/224) benchmarking ("map", abs, Int64, false)...
    done (took 0.154093897 seconds)
    (36/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.16090469 seconds)
    (37/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.10697314 seconds)
    (38/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.220068885 seconds)
    (39/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.206571475 seconds)
    (40/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.091808057 seconds)
    (41/224) benchmarking ("perf_countequals", "Int8")...
    done (took 0.138302142 seconds)
    (42/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.156010084 seconds)
    (43/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.109557443 seconds)
    (44/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.109954319 seconds)
    (45/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.145340314 seconds)
    (46/224) benchmarking ("perf_sum", Bool, false)...
    done (took 0.10192726 seconds)
    (47/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.124209871 seconds)
    (48/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.222383884 seconds)
    (49/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.102005573 seconds)
    (50/224) benchmarking ("map", identity, Float64, false)...
    done (took 0.166579356 seconds)
    (51/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.137007861 seconds)
    (52/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.118129725 seconds)
    (53/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.146687268 seconds)
    (54/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.123077786 seconds)
    (55/224) benchmarking ("perf_sum", Float32, true)...
    done (took 0.11314803 seconds)
    (56/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.161103004 seconds)
    (57/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.124677939 seconds)
    (58/224) benchmarking ("map", abs, Bool, true)...
    done (took 0.17406457 seconds)
    (59/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.300497871 seconds)
    (60/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.083162444 seconds)
    (61/224) benchmarking ("perf_sum", Float64, true)...
    done (took 0.124457978 seconds)
    (62/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.153925716 seconds)
    (63/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.098072982 seconds)
    (64/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.140042912 seconds)
    (65/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.148575267 seconds)
    (66/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.153402412 seconds)
    (67/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.140130789 seconds)
    (68/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.132687238 seconds)
    (69/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.098820937 seconds)
    (70/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.122329813 seconds)
    (71/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.083820513 seconds)
    (72/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.105784955 seconds)
    (73/224) benchmarking ("perf_sum", Int8, true)...
    done (took 0.183985347 seconds)
    (74/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.105324654 seconds)
    (75/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.107440257 seconds)
    (76/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.091902078 seconds)
    (77/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.22115684 seconds)
    (78/224) benchmarking ("perf_countequals", "Float32")...
    done (took 0.158565111 seconds)
    (79/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.120177639 seconds)
    (80/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.223010951 seconds)
    (81/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.117501177 seconds)
    (82/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.21211955 seconds)
    (83/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.124438213 seconds)
    (84/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.201725356 seconds)
    (85/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.169453705 seconds)
    (86/224) benchmarking ("map", identity, Float64, true)...
    done (took 0.088612763 seconds)
    (87/224) benchmarking ("perf_countequals", "Int64")...
    done (took 0.137123501 seconds)
    (88/224) benchmarking ("map", abs, Float32, false)...
    done (took 0.08197882 seconds)
    (89/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.106084514 seconds)
    (90/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.090558813 seconds)
    (91/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.120673032 seconds)
    (92/224) benchmarking ("perf_countequals", "Bool")...
    done (took 0.157917765 seconds)
    (93/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.096216973 seconds)
    (94/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.105993721 seconds)
    (95/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.083172108 seconds)
    (96/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.205566669 seconds)
    (97/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.153503923 seconds)
    (98/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.082649689 seconds)
    (99/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.118897424 seconds)
    (100/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.082627063 seconds)
    (101/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.082433548 seconds)
    (102/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.180370396 seconds)
    (103/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.105073507 seconds)
    (104/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.090671963 seconds)
    (105/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.125474705 seconds)
    (106/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.185749187 seconds)
    (107/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.104811742 seconds)
    (108/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.105758315 seconds)
    (109/224) benchmarking ("map", abs, Float64, true)...
    done (took 0.149643531 seconds)
    (110/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.170506794 seconds)
    (111/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.083356794 seconds)
    (112/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.161640486 seconds)
    (113/224) benchmarking ("map", abs, Int64, true)...
    done (took 0.087733181 seconds)
    (114/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.201555312 seconds)
    (115/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.121615853 seconds)
    (116/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.129220107 seconds)
    (117/224) benchmarking ("perf_sum", Int64, true)...
    done (took 0.109711748 seconds)
    (118/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.221011122 seconds)
    (119/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.225965192 seconds)
    (120/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.106920416 seconds)
    (121/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.134516778 seconds)
    (122/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.1261022 seconds)
    (123/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.14008471 seconds)
    (124/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.091751714 seconds)
    (125/224) benchmarking ("map", abs, Bool, false)...
    done (took 0.105382261 seconds)
    (126/224) benchmarking ("map", abs, BigInt, false)...
    done (took 0.142808556 seconds)
    (127/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.218932281 seconds)
    (128/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.207107099 seconds)
    (129/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.213089884 seconds)
    (130/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.123028682 seconds)
    (131/224) benchmarking ("map", abs, Int8, false)...
    done (took 0.142277655 seconds)
    (132/224) benchmarking ("map", identity, Bool, true)...
    done (took 0.169464313 seconds)
    (133/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.123418428 seconds)
    (134/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.134067204 seconds)
    (135/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.124570758 seconds)
    (136/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.123708396 seconds)
    (137/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.100022734 seconds)
    (138/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.103721758 seconds)
    (139/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.109910384 seconds)
    (140/224) benchmarking ("map", abs, BigInt, true)...
    done (took 0.113712483 seconds)
    (141/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.083128985 seconds)
    (142/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.132692046 seconds)
    (143/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.102048594 seconds)
    (144/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.115077352 seconds)
    (145/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.082380472 seconds)
    (146/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.105737127 seconds)
    (147/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.099954148 seconds)
    (148/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.220978588 seconds)
    (149/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.104944483 seconds)
    (150/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.082647158 seconds)
    (151/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.105958783 seconds)
    (152/224) benchmarking ("map", identity, Bool, false)...
    done (took 0.081970883 seconds)
    (153/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.125011364 seconds)
    (154/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.105982683 seconds)
    (155/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.145862486 seconds)
    (156/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.123045045 seconds)
    (157/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.082536519 seconds)
    (158/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.123742186 seconds)
    (159/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.103387168 seconds)
    (160/224) benchmarking ("map", abs, Float64, false)...
    done (took 0.106060912 seconds)
    (161/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.083070052 seconds)
    (162/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.137166385 seconds)
    (163/224) benchmarking ("perf_countequals", "Float64")...
    done (took 0.136638254 seconds)
    (164/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.098113825 seconds)
    (165/224) benchmarking ("map", identity, BigInt, true)...
    done (took 0.111722862 seconds)
    (166/224) benchmarking ("map", identity, Int64, false)...
    done (took 0.082704641 seconds)
    (167/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.106070246 seconds)
    (168/224) benchmarking ("perf_sum", Int64, false)...
    done (took 0.101714706 seconds)
    (169/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.107024346 seconds)
    (170/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.178301145 seconds)
    (171/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.20201523 seconds)
    (172/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.115601252 seconds)
    (173/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.103966697 seconds)
    (174/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.106973104 seconds)
    (175/224) benchmarking ("perf_sum", Float32, false)...
    done (took 0.124718906 seconds)
    (176/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.100677622 seconds)
    (177/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.124452666 seconds)
    (178/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.106475037 seconds)
    (179/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.124211436 seconds)
    (180/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.10748903 seconds)
    (181/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.105717916 seconds)
    (182/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.122657402 seconds)
    (183/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.099788163 seconds)
    (184/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.106680922 seconds)
    (185/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.100213608 seconds)
    (186/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.115089936 seconds)
    (187/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.121200798 seconds)
    (188/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.082021964 seconds)
    (189/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.122735443 seconds)
    (190/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.115741624 seconds)
    (191/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.153324574 seconds)
    (192/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.082824825 seconds)
    (193/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.132362802 seconds)
    (194/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.143622356 seconds)
    (195/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.08405202 seconds)
    (196/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.107264278 seconds)
    (197/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.103193016 seconds)
    (198/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.105659965 seconds)
    (199/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.083116083 seconds)
    (200/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.131035318 seconds)
    (201/224) benchmarking ("map", abs, Int8, true)...
    done (took 0.089549784 seconds)
    (202/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.122227758 seconds)
    (203/224) benchmarking ("map", identity, Int8, false)...
    done (took 0.082421955 seconds)
    (204/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.105425136 seconds)
    (205/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.084335563 seconds)
    (206/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.082616058 seconds)
    (207/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.115410298 seconds)
    (208/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.122861265 seconds)
    (209/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.099383517 seconds)
    (210/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.13807301 seconds)
    (211/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.083367659 seconds)
    (212/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.154262059 seconds)
    (213/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.123075698 seconds)
    (214/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.083286447 seconds)
    (215/224) benchmarking ("perf_sum", Int8, false)...
    done (took 0.126114913 seconds)
    (216/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.083087702 seconds)
    (217/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.127437826 seconds)
    (218/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.084429045 seconds)
    (219/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.107538595 seconds)
    (220/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.096805254 seconds)
    (221/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.124882434 seconds)
    (222/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.083725674 seconds)
    (223/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.123021349 seconds)
    (224/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.105388178 seconds)
  done (took 32.565233069 seconds)
done (took 33.448613785 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.524788216 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.134033229 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.10386615 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.127930523 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.188984309 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.131459494 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.113165666 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.134429008 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.133144072 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.102045047 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.117963149 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.109208926 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.128380943 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.186702117 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.132586294 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.095933597 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.122065552 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.134102664 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.111663344 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.137343229 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.187279673 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.1217753 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.109162784 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.120506384 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.188589793 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.121538544 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.10290351 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.129304899 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.132793479 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.102749659 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.127194503 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.095679773 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.137718981 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.136394482 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094008449 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.125339045 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092239984 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.115585182 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.1257226 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.102259635 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.134007865 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.101101327 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.13150682 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.120180862 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.10272222 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.124447511 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093443532 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.133443474 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.116725943 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.104070036 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.121505236 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.137209835 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.100660179 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.117484065 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.093626032 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.120021092 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.131417627 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093245399 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.134036708 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092908108 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.121625037 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.116246309 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.103697439 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.116940959 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.101246526 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.118431451 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.123487026 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.104417357 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.124323289 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.097034174 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.115906004 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.100082405 seconds)
done (took 10.006898095 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.100163858 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.180860307 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.187276172 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.19156186 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.154775398 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.138101123 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.139370609 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.150203271 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.111409316 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.144989897 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.158839949 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.148856154 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.194483648 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.133393491 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.113726978 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.125492457 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.133488548 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.108087155 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.195539139 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.147012852 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.157814133 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.135751982 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.158053425 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.118841511 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.125572046 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.158812171 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.12770676 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.101345611 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.125016287 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.133889352 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.12081249 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.125232655 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.126623581 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.122442832 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.135919259 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.131831656 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.114487371 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.126006886 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.124433134 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.10133549 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.141731441 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.142888084 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.100136617 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.137197051 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.12623644 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.107092995 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.134226411 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.133406535 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.103169454 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.128847624 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.126503319 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.155821784 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.109535937 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.133896817 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.133659579 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.107615017 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.132988781 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.107846648 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.128410718 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.130973764 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.101588506 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.125254721 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.128189921 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.152629254 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.103577883 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.132832888 seconds)
  done (took 9.712900835 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.12192752 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.161367078 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.135084718 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.135974151 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.108385957 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.114926804 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.090194571 seconds)
  done (took 1.793327586 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.092924438 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.189368069 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.188698075 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.189118044 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.206320783 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.198343478 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.139674697 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.092383995 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.156258428 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.129935012 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.190536235 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.22279795 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.125390335 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.111660292 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.215945104 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.091943069 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.192756318 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.118130794 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.130294173 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.189529877 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.110055075 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.15045711 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.135643128 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.093397108 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.207617068 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.094745939 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.271157128 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.109752893 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.123839426 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.103169587 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.131445115 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.207160803 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.183095736 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.136539217 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.122581738 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.187383565 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.18276182 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.131083757 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.200256646 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.098236512 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.184007286 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.130631433 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.130433091 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.106651848 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.128869124 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.169995232 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.135587734 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.10725894 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.128799995 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.18973285 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.132974498 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.18529322 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.101708893 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.131376324 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.130980954 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.107770626 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.137513479 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.130850584 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.191203368 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.132914989 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.186259983 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.184453962 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.184820373 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.185613361 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.141115637 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.185731439 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.18222478 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.103761535 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.128949259 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.131357508 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.186323005 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.129016096 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.109131352 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.170304714 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.135101059 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.186566891 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.187072578 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.128265872 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.109407915 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.122557965 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.129149785 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.094452547 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.172343093 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.131193596 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.102653752 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.140349987 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.133347732 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.107925953 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.124380915 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.147304194 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.104753508 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.133992483 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.135389039 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.129143166 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.113503217 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.187453382 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.132619079 seconds)
  done (took 15.179009325 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.096984451 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.117974076 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.102459659 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.121129762 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.094692944 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.121428359 seconds)
  done (took 1.600835099 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.129026113 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.133383342 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.142474051 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.108173499 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.19003966 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.218640447 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.19597706 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.131033593 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.124738881 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.144534273 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.192242206 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.196915362 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.216239725 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.111122898 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.194033481 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.136383538 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.195097561 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.131281533 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.142118847 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.103986644 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.14133345 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.134996578 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.103938345 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.184400481 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.136041515 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.134900893 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.134556505 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.117978879 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.140372383 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.131617321 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.110014052 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.135334555 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.131114762 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.130921687 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.197477456 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.102456155 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.128693194 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.140395699 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.11035878 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.137281281 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.195877161 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.128388632 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.140606935 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.138609462 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.107027437 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.128536937 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.140354682 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.108628242 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.219873807 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.114689831 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.140436837 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.133140816 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.110974338 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.140429834 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.127797598 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.132205756 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.113766601 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.221201361 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.109844429 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.129383267 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.133628888 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.111213601 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.13253923 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.137756903 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.135407845 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.114527694 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.129538899 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.133654628 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.104317095 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.134078271 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.140707175 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.109954939 seconds)
  done (took 11.068887044 seconds)
done (took 40.280621701 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.265249177 seconds)
  done (took 2.211378825 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.021578275 seconds)
  done (took 1.971432172 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.990233467 seconds)
  done (took 17.971786585 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.580672396 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.669193196 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.048890334 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.153637691 seconds)
  done (took 3.402106216 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.003275109 seconds)
  done (took 1.970256302 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.339503669 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.292639284 seconds)
  done (took 1.586739859 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.875827209 seconds)
  done (took 1.836157974 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.486036396 seconds)
  done (took 3.448834668 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.398995633 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.202601185 seconds)
  done (took 1.574062203 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.683799131 seconds)
  done (took 1.652155182 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 36.132225284 seconds)
  done (took 37.101613526 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.263798743 seconds)
  done (took 1.241159997 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.31968708 seconds)
  done (took 1.282277028 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.544651275 seconds)
  done (took 4.514010856 seconds)
done (took 82.722431186 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.107922096 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.133884721 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.108863675 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.132907122 seconds)
  done (took 1.444263771 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.119060218 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.133124422 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.136580882 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.107441592 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.143570597 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.108704815 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.132839417 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.142077277 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.106919778 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.13437132 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.131919759 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.106718494 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.135121883 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.1300222 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.105686852 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.136622664 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.112157545 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.13514751 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.133294378 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.109113283 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.132009561 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.1331444 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.111625893 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.132387475 seconds)
  done (took 3.983874385 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.108167518 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.124355342 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.103161727 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.123731689 seconds)
  done (took 1.431732747 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.118020822 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.153151604 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.151462788 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.118437882 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.154461104 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.151258586 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.102124477 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.125984065 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.105215292 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.14245081 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.130034231 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.15717394 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.127292544 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.133736074 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.143677903 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.099818411 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.135150493 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.127501748 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.143104038 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.142540984 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.10121958 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.142467387 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.129397859 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.122210166 seconds)
  done (took 4.130756978 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.220086668 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.119524588 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.157370712 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.187269654 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.158553942 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.104244236 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.159559899 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.137749808 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.138023887 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.108736994 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.135227748 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.195413119 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.134480642 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.111019673 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.134075796 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.138654211 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.112740245 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.135755847 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.136423772 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.118123342 seconds)
  done (took 3.827356024 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.108132204 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.124640167 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.093894814 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.123078072 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.131521646 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.102422074 seconds)
  done (took 1.668337148 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.09418206 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.115916749 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.094342622 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.1172695 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.098739707 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.116639349 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.090879789 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.116647467 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.092269452 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.117975638 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.092299156 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.116108439 seconds)
  done (took 2.244261513 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.326540646 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.097053813 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.127414187 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.120748931 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.102844824 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.122467159 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.139247067 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.095316451 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.265941592 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.122964948 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.114308553 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.203011557 seconds)
  done (took 2.820264321 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236798762 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106914505 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.295628771 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.402699826 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183582693 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.185195189 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.296151713 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18571514 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.235609976 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1288263 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245042245 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173944634 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171507192 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202694177 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129714275 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.209678162 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220002002 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228633882 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165043923 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234451932 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181791705 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.188421048 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.204302144 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167396902 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151869726 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186734744 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.131468874 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.120103574 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217035738 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190999432 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195874087 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164303615 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156057846 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225961595 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.280756486 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201821482 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.340254779 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164857092 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.210816561 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.205273236 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.28957085 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156681153 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24598212 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147051669 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148145022 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206155549 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173168059 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.231506259 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.122550899 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155371884 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208857028 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222969807 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.208872389 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171124507 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.32128752 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17002131 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.163812049 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195409673 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211891793 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.242859831 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187105843 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.107195438 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.22690574 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208254807 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204174097 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.165026211 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.193845421 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139261873 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197633869 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.223564825 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210675396 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212900376 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.212851484 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151610303 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186409753 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188842562 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172836845 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201945181 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183069965 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.131742431 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141562409 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156399836 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139532453 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.20659438 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107233599 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.258955699 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146173692 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.21092923 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22655987 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175249508 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.182972833 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185064242 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185560198 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163640201 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.13344839 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160820426 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.177765299 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150020951 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143767393 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174185006 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161032816 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.142550461 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170159961 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.108304581 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178204377 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.14947041 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186456245 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186793008 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.153127286 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.186443327 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164824867 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.179585968 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191684543 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211497173 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145103644 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12460555 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244788461 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176740099 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.126004736 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.221698384 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.214897189 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.189101572 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157037993 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197555686 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218308426 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157047311 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217262866 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174834214 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151433252 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.169750544 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178636863 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17464426 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.143622469 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142637327 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.174443653 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216536081 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.146812378 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153357295 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197309403 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139986649 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112734805 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159281166 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156392745 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.158038123 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.170011794 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.129699052 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172853841 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178937771 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172371897 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177600559 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160151142 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257784536 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118664741 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.180275726 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164026888 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.130787579 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.206441572 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210590242 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147636713 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206678392 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.191808296 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24260012 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187392893 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142989891 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201776679 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117708095 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.13457362 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194658508 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.183974332 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182218535 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.209557082 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237945969 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.192029817 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.175880682 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167480155 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187794428 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.198838015 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176849498 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.161174642 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.184263196 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194230781 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.132470403 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.110599118 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.141822738 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155875267 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149923453 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117993486 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230555266 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186312158 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.205643516 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.182050949 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155965987 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.208007469 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.141111816 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184814812 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.197622318 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153061008 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.214863277 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207425068 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187049407 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158248692 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191218181 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.134839081 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134515605 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.123891461 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.187875082 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144616576 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154298117 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165384292 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.20758243 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194762365 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166860209 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247818678 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190118618 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.220562143 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.133857056 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.156097641 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215055826 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150793905 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.203478136 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146914889 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.179208385 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.202402588 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176771201 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215919872 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184321799 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189889385 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255006338 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.176806508 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149082933 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13910737 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213097816 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134433507 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.182603562 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161790617 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152695914 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170174506 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.150962397 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113041865 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231526974 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159270412 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206638171 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.175351658 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195063665 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137704044 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164473202 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.180458748 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160424333 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.104046288 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188936228 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238502064 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161380743 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174813659 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195611477 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121326442 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.329473951 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239454678 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20671821 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169253615 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164656443 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181564109 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176668086 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184629385 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.204028459 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165442415 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203186376 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178934673 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.156567817 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124145006 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163471914 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166136756 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.171935477 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.151670927 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.176997075 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.158446923 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209623674 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160241927 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17983383 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187044196 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.163243138 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.143926904 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15582691 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228436413 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178135606 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225536624 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.148901171 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.216026333 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209310954 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107637593 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140293763 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.139719469 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.205380533 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14434168 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152328758 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.225655961 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216667973 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180429073 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187045746 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154410068 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.138512187 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180778733 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166847365 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218586738 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158452924 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.154067503 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215717799 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.170485361 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149370126 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.18179979 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.299186772 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162786655 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197692825 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.105409252 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.315069321 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114671795 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150670625 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17798834 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192874087 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.164650503 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.196670286 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189264734 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131338344 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178955767 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1584084 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.232326677 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230814734 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199122835 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197381181 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.158786797 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176791135 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181631985 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196719951 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158186171 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.169074646 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18047619 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207955301 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.211024753 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.151286049 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183063045 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182809606 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.180338695 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225027704 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120558267 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207081924 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145821485 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187150294 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162307295 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138312627 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178787243 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.200368595 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145553048 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196264536 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179068898 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144441141 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113172809 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177619802 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178921873 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176770933 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.14707671 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203163144 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.138522923 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183920553 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201614904 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115696961 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17853785 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161711138 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145528401 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163990636 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133645125 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152887077 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.18325897 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205728131 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.146798062 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199642553 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195240047 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184282591 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177634358 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160153424 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.68030255 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.114155828 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206555131 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137312996 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241281678 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164342005 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187513317 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.183313434 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138186834 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223810442 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164858442 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.218257167 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215195109 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.183076191 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.122234253 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159506034 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160892391 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.147326716 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16740491 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182366287 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127668626 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.15416603 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.179392291 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162361904 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.161545318 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153567487 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21064881 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163467274 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207465176 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.204230156 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170080983 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188492705 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1974901 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142991607 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.183991921 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193566152 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158164694 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180768284 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.119864633 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.151109268 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202476544 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.13543494 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182586648 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181619534 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180057792 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183175821 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.122743485 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180760335 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163314549 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1817577 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140951272 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.176781055 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178262848 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145250879 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.11483129 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176052229 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178836134 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.178583337 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141532434 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.160677147 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22959478 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.108415995 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153259919 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.300244916 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179890742 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214866698 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.170833718 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148796144 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160901873 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180199074 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.175651609 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181921193 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.115853149 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145052775 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.146682037 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.197011555 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.175009792 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176510018 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19806239 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180194082 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209868329 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.16290195 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.292799185 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127685426 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.177123658 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.151847833 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.145346271 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127694157 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154544618 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178501362 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.209663159 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201336158 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.173058226 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.159811302 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141770432 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.107291618 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145610838 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181219614 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171687277 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179433768 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168566542 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.103050984 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166762753 seconds)
  done (took 87.256815901 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.157349757 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.150023559 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.156541349 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.20986818 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.178988576 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.267943139 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.218390454 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.238197317 seconds)
  done (took 2.645227075 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.135113601 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.119466244 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.152037784 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.136132988 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.134859925 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.462926075 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.143732677 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.107356386 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.203857483 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.170862291 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.105556432 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.710165528 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.130725816 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.131426352 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.12603707 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.133002674 seconds)
  done (took 4.163377137 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.514192609 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.547478086 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.888727017 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.263411264 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.247135231 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.195527986 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.74376189 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.207544816 seconds)
  done (took 12.674281652 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.137633969 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.151839708 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.359963199 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.223769314 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.171050801 seconds)
  done (took 2.121224529 seconds)
done (took 131.375408502 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.11186187 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.155471402 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.109133589 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.156681276 seconds)
  done (took 1.595478634 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.160315059 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.120772458 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.094017373 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.119103809 seconds)
  done (took 1.567263953 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.574026836 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.089899735 seconds)
  done (took 1.767118835 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.140061717 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.153527494 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.155172137 seconds)
  done (took 1.534085767 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.120028475 seconds)
  done (took 1.192638718 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.113704767 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.134195256 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.190097933 seconds)
  done (took 1.515669136 seconds)
done (took 10.250989687 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.133222089 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.439332406 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.420958378 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.117142389 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.729083387 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.412238367 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.053653243 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.169046433 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.203881245 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.096564202 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.147324317 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.674261544 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.041572783 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.380946456 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.993532287 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.467417065 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.707324547 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.099181339 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.133038391 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.098916504 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.027673391 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.121899793 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.09939704 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.126331474 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.67687586 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.429791532 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124547901 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.456893789 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.124884489 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.101709521 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.416123467 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123763143 seconds)
  done (took 17.417060656 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.145657158 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.196043977 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.133559709 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.098096302 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.13014878 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.126104333 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.109804084 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.14295855 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.201944857 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124627863 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.11939437 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.124752213 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.13038351 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.098460307 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.149945165 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.096163214 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.12842404 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.126349829 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.106941905 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.126554556 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.119404277 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.124414594 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.125051147 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.100621841 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.12426698 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.110827989 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.125098983 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.139864566 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.097629567 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.129585414 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.102001164 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.125539795 seconds)
  done (took 5.117810985 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.149753118 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.205137303 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.135632433 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.162328621 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.179857895 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.099358926 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.221902889 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.172389328 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.200829824 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.126706693 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.148639607 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.097737153 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.170041366 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.123510383 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.124147181 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.123946051 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.099997009 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.128248909 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.133376452 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.099863318 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.147717737 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.095499574 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.126827087 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.12792163 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.097741614 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.140338236 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.097099884 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.142109671 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.123738738 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.10330837 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.132645788 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.12403878 seconds)
  done (took 5.448273624 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.112540829 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.140728078 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.121813283 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.151189406 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.133471279 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.110706456 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.139366824 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.10357125 seconds)
  done (took 2.09356346 seconds)
done (took 31.15605855 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.127606588 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.14630043 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.118701065 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.142379168 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.20251032 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.098895322 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.144535181 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.128627987 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.11268098 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.149302855 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.097222513 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.1305409 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.118320413 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.13485426 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.186452916 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.137842229 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.192741191 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.185860143 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.103291949 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.139706049 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.102733921 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.193234347 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.138036369 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.101757055 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.197265772 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.132696813 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.18422033 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.135437173 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.107658478 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.129273325 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.184958063 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.109236875 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.132049396 seconds)
  done (took 5.72197792 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.206009772 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.216185498 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.102875538 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.131270151 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.214534928 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.101812026 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.230642243 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.103701942 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.129579159 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.102119858 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.128757068 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.204749137 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.212432801 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.227164012 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.243921597 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.214176113 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.20158908 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.21392263 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.1984144 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.216598046 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.20323132 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.131622834 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.216254071 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.217329632 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.100870691 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.132399713 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.238970307 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.209595164 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.239372497 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.200553359 seconds)
  done (took 6.58068578 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.11320113 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.144000842 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.125449526 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.202827689 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.172108581 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.140465603 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.110828912 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.152655738 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.153404995 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.098810249 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.136990642 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.136805803 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.147106062 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.136439661 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.104119491 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.148642948 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.154047877 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.100566862 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.134407336 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.120118486 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.146451407 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.145515188 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.113849366 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.137862503 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.098302476 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.138299143 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.131443665 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.11193313 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.135765722 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.107358764 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.13221341 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.130753694 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.102651215 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.137021342 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.103112173 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.145305676 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.156240226 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.107822693 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.14081158 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.165400067 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.107952946 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.133670898 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.149283744 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.149682704 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.129047215 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.138238757 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.114862771 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.136988349 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.097765962 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.149309956 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.140477775 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.100466402 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.151278329 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.097291167 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.126316906 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135528647 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.100525673 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.129430304 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.109309896 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.130745423 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.154330003 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.107275102 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.135193713 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.101742995 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.133742526 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.098128196 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.128246979 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.134261749 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.12411436 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.13301529 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.161072915 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.099303892 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.138747356 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.106483209 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.134057235 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.136621406 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.099613344 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.133728152 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.107775555 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.133897006 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.107485513 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.131516468 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.131089761 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.119434801 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.151419688 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.139891608 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.110999563 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.141087518 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.102693835 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.129231855 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.141805699 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.100632799 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.132083386 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.108723933 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.129450786 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.128946776 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.111440511 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.137494195 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.096684477 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.14759868 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.133313364 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.098216561 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.145168937 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.100298847 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.131115405 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.108872136 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.141668019 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.127488839 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.109164223 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.138952251 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.097770341 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.134232503 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.131060957 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.099272119 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.145796415 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.113420953 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.132643063 seconds)
  done (took 16.045686206 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.312582375 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.315713012 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.210398559 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.411189726 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.126081093 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.232265863 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.281098918 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.234408819 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.12994489 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.176075141 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.193495067 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.274091697 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.09998196 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.162638118 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.310172903 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.385527691 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.162903061 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.178254395 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.176560847 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.12747505 seconds)
  done (took 5.606845356 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.126815729 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.172946054 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.162720207 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.161836159 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.106538268 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.142738668 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.126802691 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.126364322 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.13797041 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.133692081 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.097837304 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.142925416 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.108352159 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.138068062 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.148022886 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.17393702 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.105377589 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.135202265 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.122520758 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.135418859 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.139927922 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.158435317 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.11323618 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.160734224 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.14424175 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.113461391 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.128865186 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.13540052 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.102488436 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.13226843 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.106302161 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.148151952 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.134958277 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.105828825 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.137140571 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.111444319 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.129151441 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.128256891 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.101210406 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.129899889 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.118083575 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.137923386 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.102936925 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.125141297 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.112280991 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.130676298 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.141116813 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.110956027 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.142139585 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.115190911 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.14097444 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.141415539 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.106839025 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.149241207 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.100162626 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.144671037 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.14242658 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.139665791 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.108165895 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.126753582 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.097213869 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.132786134 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.104133076 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.141272859 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.137477575 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.123888175 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.145799551 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.129865662 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.106751211 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.131887551 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.102751196 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.148351876 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.157075685 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.132441703 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.10349116 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.150506219 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.103062359 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.122574685 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.109772145 seconds)
  done (took 11.30977347 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.139816771 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.134624587 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.123070235 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.169932667 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.256611835 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.105996426 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.133657155 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.119220889 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.14280503 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.144025802 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.114112305 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.14686001 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.160361533 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.115237205 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.134068498 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.145477278 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.110309449 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.179867719 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.150098286 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.14044018 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.252610758 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.133636354 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.116173372 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.143825339 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.169263309 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.11475556 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.168810055 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.137766821 seconds)
  done (took 5.231877775 seconds)
done (took 51.586337054 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.286784615 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.408652572 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.193957202 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.188728064 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.228114908 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.212103623 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.193947984 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.391673672 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.881503522 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.192653069 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.190180837 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.192038001 seconds)
done (took 27.67243687 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.322377848 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.777840403 seconds)
    (2/2) benchmarking "String"...
    done (took 1.501075219 seconds)
  done (took 4.399723782 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.18450527 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.184717123 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.434393687 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.199890506 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.191499891 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.204337375 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.195921272 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.186056323 seconds)
  done (took 15.707494479 seconds)
done (took 25.723518418 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.232967681 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.385603042 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.445533231 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.19965155 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.200411123 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.185388265 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.191766108 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.220672225 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.202249971 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.174667251 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.182509784 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.446089517 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.181996834 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.563064781 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.181644895 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.20291815 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.203157717 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.410675093 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.185182207 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.23797939 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.176094992 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.173463121 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.203012157 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.218889109 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.191786326 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.189000822 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.240128957 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.172845451 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.389633046 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.214799611 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.236115563 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.186607405 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.185594144 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.18876604 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.286556241 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.214956153 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.399601325 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.183226598 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.183157931 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.188069994 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.405112551 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.562285442 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.186106667 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.199118953 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.190019849 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.233547422 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.176353706 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.894811634 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.191082222 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.199180861 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.229866064 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.580430142 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.200536777 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.190248333 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.202776327 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.437974679 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.211498473 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.211938629 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.215978284 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.187455983 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.199101879 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.19156975 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.237557364 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.193523793 seconds)
  done (took 142.496997789 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.190207844 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.191678201 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.185029256 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.206495714 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.189594476 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.190322234 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.187637026 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.187414508 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.192358968 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.193594809 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.192086265 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.189142438 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.190096989 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.169799829 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.194581298 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.211473533 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.193923011 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.191697027 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.207917774 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.189124558 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.187765367 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.192751365 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.201707561 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.19014302 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.214907199 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.274520034 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.218133968 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.205490966 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.192627361 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.187066136 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.221891293 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.205225379 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.752143306 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.051748267 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.204362204 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.199568197 seconds)
  done (took 79.654095886 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.189163773 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.19216421 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.191415061 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.218296238 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.190917656 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.722978247 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.723409244 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.965114032 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.597425665 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.440946931 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.413145282 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.190221542 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.282603702 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.202758354 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.188684 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.208419369 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.231371788 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.19552605 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.191843361 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.723348774 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.207663429 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.33217856 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.35770614 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.203966262 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.220120774 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.590818308 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.188804925 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.223953808 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.517097755 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.236382332 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.19066437 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.513577231 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.570669879 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.306590684 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.19162733 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.2234056 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.193348356 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.470707499 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.188402016 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.19378717 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.196971657 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.8064353 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.190043891 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.726395543 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.19467065 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.09777199 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.190534793 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.193161799 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.446437825 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.774763843 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.203995922 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.192831523 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.199579037 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.194663442 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.195694621 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.225574159 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.445477398 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.307688553 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.210357612 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.197176803 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.222729647 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.194065078 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.3856861 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.208603511 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.714624446 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.261964551 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.350401731 seconds)
    (68/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.723018322 seconds)
    (69/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.196161828 seconds)
    (70/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.197258117 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.288842903 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.310518175 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.192751631 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.194277225 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.193890716 seconds)
    (76/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.193492196 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.194823665 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.301879027 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.193185591 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.194230496 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.594125862 seconds)
    (82/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.192664446 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.36356115 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.208941101 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.452633236 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.29168475 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.194482417 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.545768581 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.198171989 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.194797112 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.893211186 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.287407204 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.192769311 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.194420395 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.196540783 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.592051411 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.732092027 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.409921717 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.197524668 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.606917121 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.198570116 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.59895575 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.706290774 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.829432295 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.195137501 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.307388059 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.362324103 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.210792669 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.195808116 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.482493506 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.195834623 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.254128403 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.194284116 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.594199703 seconds)
  done (took 364.268980454 seconds)
done (took 587.531616466 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.93751498 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.888108124 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.019856602 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.91333513 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.881145872 seconds)
  done (took 10.757642527 seconds)
done (took 11.872709633 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.382387771 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.379463573 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.254370247 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.384222934 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.230526778 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.399672436 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.363817825 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.21714275 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.300285779 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.272787942 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.295067142 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.243923422 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.230605731 seconds)
  done (took 18.07110737 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.462667743 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.2065512 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.284890561 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.448023733 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.244300296 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.463768835 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.517665538 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.205988454 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.348340444 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.214276668 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.213378985 seconds)
  done (took 17.729649913 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.470869505 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.205634674 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.284044043 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.437167985 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.244870528 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.478084903 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.513705014 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.205212182 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.356301091 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.213996491 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.214961275 seconds)
  done (took 17.743799686 seconds)
done (took 54.665242754 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.239068473 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.366584071 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.223800742 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.21469285 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.209299216 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.209370765 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.21830915 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.210618024 seconds)
  done (took 11.021055072 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.212519429 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.213368819 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.208114358 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.20963224 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.209781208 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.21142804 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.206890337 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.209675176 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.212801455 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.208491409 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.210887222 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.210535826 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.209446966 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.20737217 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.208402254 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.209137533 seconds)
  done (took 20.480307214 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.211859139 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.207519731 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.210300354 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.209792724 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.208647235 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.20807282 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.208452792 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.209179617 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.210058004 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.209061107 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.21108179 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.210920976 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.209818786 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.210209663 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.209473164 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.211063103 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.210333345 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.209142262 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.212565837 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.209798232 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.209997381 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.212593919 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.208040422 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.211385924 seconds)
  done (took 30.177899776 seconds)
done (took 62.799656583 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.202095391 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.237598832 seconds)
  done (took 5.561005701 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.273225258 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.273557569 seconds)
  done (took 3.671333805 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.212457801 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.211485198 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.20997396 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.210506019 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.211402858 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.207605431 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.210199612 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.210084311 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.212723291 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.212157181 seconds)
  done (took 13.231718402 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.211568588 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.212074272 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.211932505 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.212189106 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.21248657 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.209227276 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.214332842 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.213303833 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.212857629 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.211699918 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.211055848 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.213990899 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.212509643 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.214215997 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.212359926 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.212176958 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.213436823 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.214198611 seconds)
  done (took 22.94882184 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.230909085 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.232331795 seconds)
  done (took 3.585322732 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.354982169 seconds)
    (2/7) benchmarking "second"...
    done (took 1.255726054 seconds)
    (3/7) benchmarking "month"...
    done (took 1.327796391 seconds)
    (4/7) benchmarking "year"...
    done (took 1.318902355 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.253348953 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.235161661 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.253448335 seconds)
  done (took 10.123609531 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.215176619 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.402081571 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.505637031 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.79054048 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.213097282 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.255441827 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.05279904 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.260389556 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.249056966 seconds)
  done (took 14.069860817 seconds)
done (took 74.312992804 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.201517286 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.258449017 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.213196277 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.222595787 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.554394047 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.259464102 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.204959887 seconds)
done (took 16.039583058 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.20339761 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.209757846 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.200415141 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.21351818 seconds)
  done (took 9.952476175 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.194336384 seconds)
    (2/2) benchmarking "read"...
    done (took 1.576677117 seconds)
  done (took 4.895892148 seconds)
done (took 15.975573466 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.212766008 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.214563153 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.214647687 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.216814573 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.214822134 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.211527157 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.21605602 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.215979137 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.21435044 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.216285456 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.215113879 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.212960269 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.21512605 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.215879184 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.21389235 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.216111411 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.218091186 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.218566796 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.216136442 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.218906358 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.216388441 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.215453827 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.215626902 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.212804768 seconds)
  done (took 30.294084235 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.219181963 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.218451573 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.216229959 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.216985508 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.215676478 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.218494485 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.218601805 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.216396607 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.217205476 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.217309345 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.218319854 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.21613186 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.21881784 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.218780417 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.217369286 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.218983682 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.21819866 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.216772496 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.216673401 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.218316886 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.218923741 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.217705956 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.215335155 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.218068248 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.216788611 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.216484974 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.219410169 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.216579677 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.216413476 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.216779816 seconds)
  done (took 37.65409009 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.225934144 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.221826529 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.218982749 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.219269218 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.21884972 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.217250083 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.218720861 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.220113919 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.21910421 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.219344631 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.219561157 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.218318062 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.220310041 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.220528947 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.222127608 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.221085572 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.221614852 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.218630263 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.218024505 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.219654432 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.219546548 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.219911304 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.22201444 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.220810753 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.220402304 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.218460131 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.221581914 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.218149652 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.222078413 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.219654573 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.223077226 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.219754611 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.220287951 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.22083727 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.22104656 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.222394601 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.224715919 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.226338197 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.219506254 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.218358078 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.221296576 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.22137869 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.221500505 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.22172693 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.219580452 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.219280931 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.221503737 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.221407642 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.221174738 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.223044934 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.220425076 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.22145644 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.223148249 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.217941036 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.221837297 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.22351117 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.220503872 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.223336496 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.22111218 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.221030225 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.224392722 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.223774795 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.22203684 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.222433937 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.222675741 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.223151359 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.223068419 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.224316018 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.22501228 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.22301476 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.224246771 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.222910297 seconds)
  done (took 89.056477212 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.223632053 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.224569295 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.224735846 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.224644543 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.222337854 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.225320954 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.220388061 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.220297525 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.221915082 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.225992458 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.223837349 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.224083051 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.222004965 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.22269938 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.221911044 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.222233865 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.224057539 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.223572177 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.224739807 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.223139087 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.224539614 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.223926078 seconds)
  done (took 28.04531593 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.223817182 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.225474275 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.221371811 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.226391437 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.225904715 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.224645018 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.225656258 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.222720369 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.224261525 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.224633781 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.223469564 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.224472546 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.226910234 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.225450476 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.225287962 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.225519465 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.223817658 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.225323878 seconds)
  done (took 23.180777672 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.228412022 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.225362687 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.225696288 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.225427842 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.226506214 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.22570387 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.225660562 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.226460885 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.22653223 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.226116176 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.226995384 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.225818368 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.226686537 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.226651477 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.224534267 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.22535527 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.225357567 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.223835145 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.229160408 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.227488063 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.229390769 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.226422698 seconds)
  done (took 28.114519517 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.230963118 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.224526709 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.226063478 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.228951756 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.227951452 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.227926312 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.225505966 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.228993025 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.22899869 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.228350009 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.227023676 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.22776765 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.231350381 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.228939119 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.225792688 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.227652014 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.228727064 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.228574685 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.22688079 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.231212192 seconds)
  done (took 25.697394255 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.230411648 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.229027122 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.22989069 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.228502415 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.230318568 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.230630099 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.229304054 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.229195855 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.230780758 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.227095224 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.229349649 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.228861723 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.23000628 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.231108524 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.23095805 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.232130788 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.230353439 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.229637519 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.231319357 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.229806483 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.229188297 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.229399719 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.229072108 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.231256946 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.230423666 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.229684925 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.231076751 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.232190831 seconds)
  done (took 35.578215382 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.230822163 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.227670792 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.228642461 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.230463785 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.22909102 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.232478167 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.230359289 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.231032308 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.228947285 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.233666079 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.229972552 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.229954687 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.228211901 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.230525103 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.230437382 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.229727989 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.231744837 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.232095972 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.232900818 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.233526609 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.229327817 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.231455977 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.233811757 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.23041848 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.229936328 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.228992837 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.228420268 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.230541435 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.231442291 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.228532652 seconds)
  done (took 38.054829813 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.279827815 seconds)
    (2/2) benchmarking "in"...
    done (took 1.279578677 seconds)
  done (took 3.698415154 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.23286265 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.233223383 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.23322989 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.231770548 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.233507274 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.233194114 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.233390073 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.234977469 seconds)
  done (took 11.007222549 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.231206251 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.233838231 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.229208802 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.232112765 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.233645402 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.230349563 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.239635422 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.254252831 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.230989208 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.231533976 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.23479006 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.235116355 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.233845689 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.229311395 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.231102973 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.234862387 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.233775889 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.235006528 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.232718508 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.234516295 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.234484781 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.232839977 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.233290431 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.23621582 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.231663222 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.238608441 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.241757482 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.23680376 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.230510861 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.235721011 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.231213274 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.235690604 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.234443177 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.233119868 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.233437649 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.23428217 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.240423083 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.255537027 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.239922016 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.240680614 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.236364078 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.23426738 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.234215494 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.236098773 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.239118035 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.235974907 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.234575916 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.235855986 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.231852533 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.233640117 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.241020815 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.233609534 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.239551311 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.235408105 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.233260368 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.243572367 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.256496547 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.233707223 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.240212037 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.244676848 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.24785721 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.247148689 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.237683292 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.239955161 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.2430154 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.249520392 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.244043958 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.257894117 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.237889732 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.237519624 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.241613522 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.249958967 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.249049858 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.239231816 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.238360019 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.23934776 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.23634336 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.240887492 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.243885706 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.256604364 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.238172809 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.238582268 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.244896392 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.249855447 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.236500219 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.238170905 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.237853932 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.24042079 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.236548843 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.245617309 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.26053152 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.23811146 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.23614395 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.236605136 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.237634649 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.239352787 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.235942938 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.239141549 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.240545773 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.240673167 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.237747634 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.238547016 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.245301593 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.240357317 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.240392379 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.240480107 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.244963596 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.23752556 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.244890793 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.244917046 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.240244378 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.237044596 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.242303545 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.241925652 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.237810365 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.246734158 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.240846623 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.237762403 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.24215846 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.240440634 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.246725817 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.258400045 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.244115343 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.239246161 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.241967279 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.247676591 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.240091911 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.243672503 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.239780555 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.242747524 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.239929582 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.239115867 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.244983204 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.239525156 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.243455643 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.239774965 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.244312998 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.243918517 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.244308801 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.238934716 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.239053638 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.239714242 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.241125294 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.24013613 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.242828979 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.24223377 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.248361875 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.241844767 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.243338445 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.243036439 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.24680898 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.24456911 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.241931703 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.241015317 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.239487633 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.243572662 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.238571759 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.243625163 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.241668157 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.24467105 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.243214906 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.240203906 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.243299913 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.242485188 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.24548027 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.242309244 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.244866695 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.247856258 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.244396588 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.239588179 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.24412558 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.242354677 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.243701186 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.250694243 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.243242567 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.241361964 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.243831861 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.244394072 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.244922293 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.243447092 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.242112641 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.247120334 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.245609626 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.246498097 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.249641485 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.243932768 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.243039054 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.242164041 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.243276999 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.244323535 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.24480831 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.25167382 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.252597802 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.250393549 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.24423803 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.248570187 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.242174892 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.24739055 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.245175385 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.250241191 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.250071713 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.248069592 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.242622209 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.247529965 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.243720471 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.245019595 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.243696936 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.245676786 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.246140796 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.245639696 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.248848674 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.241329161 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.244154853 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.248391715 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.245047941 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.246626749 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.244752748 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.246657833 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.241874325 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.244725019 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.24648816 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.245747811 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.248029643 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.251788372 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.246426048 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.246155935 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.245599024 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.243855864 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.247994397 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.246082282 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.244445933 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.251832972 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.264422709 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.248085428 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.252994906 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.265593542 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.24830228 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.252359735 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.252794061 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.249223251 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.247212386 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.257520385 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.251804382 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.251742284 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.24820553 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.246920107 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.251363555 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.252869881 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.254964647 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.247451667 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.250342024 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.247338809 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.24890162 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.24968967 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.250788771 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.250061965 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.250489646 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.254771728 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.250131505 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.246770267 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.25054867 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.251090116 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.250754476 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.248722604 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.253884743 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.254337552 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.250229291 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.254195846 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.245809161 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.253209554 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.248140795 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.250712162 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.247468374 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.262506758 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.262775866 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.254259757 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.252956487 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.252038829 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.25575912 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.250975785 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.25111064 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.249241587 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.24799363 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.249514354 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.247810923 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.253568757 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.251957407 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.253582286 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.251988194 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.251633232 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.254704332 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.250093972 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.247560864 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.24947455 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.251505953 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.252212597 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.248424916 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.253254394 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.249747208 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.252469417 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.24946838 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.250079945 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.255110556 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.269547621 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.725164329 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.248582969 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.249214794 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.252256805 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.253181114 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.253347976 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.251946372 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.258146648 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.253698573 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.256776352 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.254868493 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.258445548 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.260037332 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.249328494 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.257843559 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.254284123 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.250448666 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.251976602 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.256624202 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.255958481 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.273813221 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.250019101 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.255275591 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.253193809 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.252678751 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.252846583 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.252069317 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.253193306 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.252519708 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.260447309 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.271064488 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.254638072 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.254242064 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.2549954 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.251384271 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.251363726 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.247584517 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.25490388 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.254160233 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.252996821 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.252824949 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.251130241 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.253119603 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.253974892 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.253025514 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.2550819 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.252556475 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.25981019 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.275204447 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.257898767 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.254823377 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.257703173 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.255320072 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.258987889 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.275066222 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.253717308 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.253424629 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.253307277 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.252852827 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.252666248 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.256163826 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.257038187 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.25349467 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.26113796 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.255425703 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.25421496 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.259195205 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.260035786 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.251809542 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.26298583 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.275357557 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.254518543 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.260796906 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.256064951 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.252694484 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.260686583 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.258882819 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.250626312 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.256285567 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.26164958 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.262888932 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.255655325 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.258225053 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.251264297 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.261806756 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.255941371 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.257592814 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.257825976 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.256519106 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.252097371 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.257813848 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.257833019 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.258898134 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.256597344 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.257418887 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.255861959 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.264829771 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.260620865 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.256905919 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.260388828 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.257192085 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.2532751 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.255791856 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.259181711 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.257379777 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.25819171 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.253409423 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.258982036 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.258327058 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.257880259 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.255614445 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.256953933 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.25676326 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.256542709 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.260664142 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.25746104 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.25822975 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.256106214 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.260844583 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.2541563 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.256345352 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.257676879 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.257542164 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.261304639 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.253947162 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.259670304 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.254418982 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.258333865 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.259756349 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.256907151 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.254646319 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.257313692 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.263863237 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.261513109 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.265381276 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.259992779 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.262288377 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.257872087 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.26185996 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.263136974 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.257677316 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.258902917 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.258620126 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.255822463 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.256156331 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.25723784 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.261775868 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.261482124 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.259438338 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.25785324 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.265780631 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.278432066 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.260678356 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.256483323 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.259528956 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.257453317 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.260945589 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.260418487 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.25685859 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.264409711 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.281265663 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.264149568 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.258526961 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.257684641 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.256508617 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.263880062 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.260826723 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.258644033 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.263990433 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.258534464 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.264107847 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.258913584 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.262479061 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.255973477 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.256849009 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.261237336 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.263789842 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.262298503 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.258927421 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.259749548 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.261098629 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.262313504 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.260159192 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.262122455 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.26301779 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.257701309 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.261630289 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.253640254 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.260587558 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.260068413 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.260989046 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.268735571 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.263200896 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.259125935 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.266888884 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.264506334 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.263365717 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.259784809 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.261775798 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.263372775 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.264519216 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.261374054 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.258419138 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.263016531 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.263280667 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.263693502 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.265744192 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.262503222 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.273927624 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.287023776 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.259798348 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.261776067 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.266806625 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.267169143 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.263989579 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.263667313 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.261806317 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.265010604 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.268491916 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.263364487 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.271619488 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.283682839 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.261489113 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.268609881 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.262094005 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.265472324 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.264930776 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.266954902 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.261665369 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.268046312 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.27492028 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.268510494 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.270287099 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.287717513 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.282075577 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.26396973 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.266607363 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.260568952 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.265317191 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.264242809 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.265092981 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.266312508 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.265960446 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.261754087 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.260573103 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.27004138 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.266574617 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.269260665 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.266868812 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.260676138 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.264917239 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.268984252 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.265120727 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.268802245 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.263846477 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.267773908 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.268403507 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.262766424 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.277658936 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.278038455 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.269746182 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.267654112 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.269634677 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.269807012 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.267015649 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.27445521 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.272346908 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.267018165 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.266620372 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.262900422 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.268725434 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.272489312 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.265013358 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.266139428 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.264588811 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.271286485 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.276944755 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.281712062 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.272863115 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.268495299 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.272047632 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.266725137 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.263234163 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.270305702 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.265068504 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.268274019 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.265889215 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.267821098 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.269722002 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.269659038 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.265724711 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.274805899 seconds)
  done (took 748.108735717 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.268877663 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.266712789 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.269151781 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.269830803 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.270566549 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.269747554 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.271101669 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.268511479 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.271035242 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.269741568 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.270508808 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.270418005 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.268559904 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.272422747 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.267550637 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.269227263 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.272712197 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.269827277 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.272181557 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.270886901 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.271748956 seconds)
  done (took 27.845314827 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.271075999 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.27191021 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.269996068 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.267966021 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.271346335 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.270130262 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.271241811 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.270659856 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.269130518 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.272391504 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.271765985 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.270924249 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.271756791 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.27054622 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.270829099 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.273113715 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.272150555 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.27380538 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.271138298 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.274603325 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.274170411 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.27280041 seconds)
  done (took 29.15159086 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.273910187 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.27381662 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.271656827 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.275762402 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.27483962 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.272249689 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.27377349 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.273286123 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.270435352 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.270239024 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.269003486 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.2713932 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.271652216 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.279269625 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.266996863 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.272410888 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.274295023 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.272747782 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.272302335 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.272097394 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.273385002 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.277568533 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.271717648 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.267713242 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.275936811 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.273799877 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.272308214 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.273621708 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.271101404 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.275733746 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.273126398 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.269228248 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.274564297 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.270092423 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.270433002 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.276242115 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.270188151 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.272311402 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.27148028 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.275399348 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.291011051 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.273013063 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.276466833 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.277094875 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.273022106 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.273829907 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.279502506 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.272299993 seconds)
  done (took 62.306903965 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.869908191 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.877869058 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.884573986 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.880031014 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.877941146 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.87915786 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.88374848 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.888260613 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.873095666 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.87820644 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.881231349 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.890468591 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.881856959 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.877289865 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.881540608 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.882362534 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.875269777 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.875807418 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.879613455 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.889922011 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.880700226 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.883887402 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.886302715 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.88154626 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.889987001 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.880764127 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.882621993 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.880664586 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.887222883 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.879233095 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.87689768 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.879481276 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.893725372 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.883990786 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.885675404 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.88234996 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.89455984 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.883256503 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.884448463 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.881901486 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.885621617 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.875829214 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.878469024 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.880938668 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.89269057 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.888649462 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.891806686 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.891543702 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.883587723 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.890855811 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.886245825 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.891377212 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.881770666 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.890272797 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.884605586 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.883628494 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.886066392 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.89291085 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.882294569 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.880615225 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.887423392 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.895895446 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.885392531 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.886641343 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.881621952 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.889207765 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.88376206 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.885419251 seconds)
  done (took 129.285666693 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.280127792 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.278217575 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.27942639 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.277404924 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.275953876 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.276961961 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.278726865 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.278646081 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.277798811 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.280220863 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.282086408 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.280166641 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.278636388 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.281550401 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.278598281 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.283943678 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.280098946 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.281983097 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.279677565 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.27882097 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.281156245 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.280022077 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.281789831 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.279637685 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.279343889 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.281961808 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.278802757 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.279939162 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.279572525 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.281413883 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.282403405 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.278144664 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.281641093 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.281297491 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.277361195 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.281799777 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.282009789 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.281644408 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.28454085 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.282417047 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.280807274 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.2821003 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.284041782 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.28149945 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.278676932 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.283290722 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.281284291 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.280897644 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.281739456 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.280434837 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.279575178 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.281138296 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.280329516 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.281997299 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.28448407 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.281889024 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.284601953 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.283835586 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.280859483 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.282663102 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.281208396 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.284550645 seconds)
  done (took 80.594371318 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.283513649 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.283085955 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.284989893 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.283603049 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.282653871 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.282640357 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.283554138 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.284297486 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.284927116 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.284676062 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.28471741 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.288012985 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.286852517 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.282294113 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.285785658 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.285814736 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.283796855 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.285943887 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.281145676 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.286781932 seconds)
  done (took 26.874374718 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.286605473 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.289625979 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.293258084 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.284450234 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.287054245 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.28385283 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.282750193 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.286457582 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.285566129 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.282928862 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.287566288 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.293076237 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.284810355 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.284656732 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.28758397 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.287401526 seconds)
  done (took 21.77544422 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.287263872 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.285782416 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.286768945 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.285965361 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.285180539 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.286766544 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.285899481 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.283558798 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.286618946 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.286436384 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.287845774 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.288369852 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.286675049 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.286183202 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.288865762 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.288913988 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.287466517 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.288321862 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.286570047 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.288241331 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.28628218 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.287545911 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.286813868 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.286635019 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.287599778 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.28734453 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.286999128 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.286649024 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.286041202 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.289601325 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.286388709 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.288257015 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.28941196 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.291262822 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.287980347 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.28791897 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.287429382 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.287964797 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.286718619 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.287214122 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.28695834 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.288210453 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.288246754 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.285628217 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.287620376 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.28579024 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.289904829 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.287631809 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.289026342 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.288697972 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.28696317 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.287458542 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.286397979 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.287651461 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.290268332 seconds)
  done (took 71.99471437 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.288581179 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.287891348 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.287440355 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.289049878 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.291154089 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.288230025 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.287684104 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.291737773 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.288225482 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.290192969 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.289528002 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.291853117 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.289751264 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.29006951 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.290529328 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.289402823 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.289722258 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.291298528 seconds)
  done (took 24.4031056 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.289886754 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.289633947 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.289461931 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.290467153 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.289403126 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.290755795 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.290850833 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.290304302 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.291464051 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.290232848 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.28903539 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.293206211 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.29175573 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.293094131 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.28966399 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.294013135 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.291937943 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.290458654 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.292089817 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.292150501 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.291988579 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.291553533 seconds)
  done (took 29.595025894 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.286830461 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.286500474 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.28642247 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.304332082 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.300650036 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.286418482 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.287732883 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.287657478 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.30833241 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.350591832 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.343120058 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.301103268 seconds)
  done (took 16.821419287 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291727511 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290765719 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.291539032 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293376825 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293161098 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293155768 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293394161 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29094909 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290822321 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292197147 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295486603 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294654264 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29326873 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292084262 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293663458 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293736584 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293622033 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294810696 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293435775 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296357769 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293504694 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293970053 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294035881 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294150253 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293147059 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291904441 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292639425 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293816932 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29460145 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296802078 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291760795 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295799813 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294534099 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296024322 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294215583 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292890869 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297007609 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293684072 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294034474 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293387092 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.2914711 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294528992 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293717813 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296180098 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295829177 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293146932 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295261143 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295233387 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293755388 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295366354 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294216889 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293000134 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295318285 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29456402 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297125288 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294973399 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295213508 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29683036 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295274896 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294475882 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29586574 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293145955 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293698459 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295471616 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295899343 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296465659 seconds)
  done (took 86.607641746 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296534969 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.294201396 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296879549 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297548717 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29763524 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297004661 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297339424 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296079022 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295468365 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297124435 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297930735 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296620439 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298610678 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295438376 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297755694 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296704235 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296530232 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296911298 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296882056 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296536695 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297098118 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29933395 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299688933 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298958434 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298022669 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298812745 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296662882 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29559413 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300421574 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298437752 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298743955 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298708523 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296167711 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.297317369 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29749542 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300032175 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298405379 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301206668 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299086284 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299525251 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297158484 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299508567 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29907355 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298641867 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301266214 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299517581 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296593462 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297394184 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302026821 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300655317 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298979407 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300487965 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301432398 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298561736 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300748534 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298757588 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297659015 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300005688 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300651907 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302414311 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300966811 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302009295 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301258985 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301580854 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300902196 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300060964 seconds)
  done (took 86.904725815 seconds)
done (took 1793.775144998 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.46299006 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.414409514 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.29848367 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.309915551 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.290949725 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.292828314 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.308388541 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.291954646 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.295936867 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.29650964 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.294646368 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.486710469 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.294218698 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.291583733 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.296193576 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.394024789 seconds)
  done (took 26.532999522 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.325537082 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.302729804 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.412745819 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.314384456 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.326509603 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.490647589 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.358297368 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.30435008 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.471274791 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.319503365 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.304897792 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.320784015 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.301068019 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.305610323 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.317649249 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.49258718 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.550680848 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.307265096 seconds)
  done (took 28.728661571 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.75056773 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.298624548 seconds)
  done (took 5.254079178 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.32020359 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.305552877 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.305185531 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.301855669 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.310597522 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.292123392 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.29967986 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.314825208 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.292653545 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.447937544 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.304115693 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.317663908 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.318077064 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.303576156 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.305727481 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.344042013 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.442813527 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.304198391 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.306669043 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.305439884 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.302789854 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.417584251 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.345838816 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.307898945 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.425487272 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.296350234 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.306097647 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.311047508 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.454723602 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.306047562 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.302351547 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.305266258 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.30743622 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.301483036 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.81083362 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.312962049 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.308419022 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.331213065 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.307641458 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.473058014 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.304958819 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.314175951 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.298908486 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.822449029 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.442563968 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.425975239 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.323605093 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.303162341 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.307862149 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.372961018 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.304711435 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.309010249 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.36455451 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.096239368 seconds)
  done (took 83.879165121 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.353127279 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.29827653 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.479074877 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.325724712 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.293325803 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.299263604 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.315781125 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.584482957 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.313676162 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.298118657 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.585803613 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.872698386 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.319696399 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.355204494 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.162975582 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.371413668 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.298557616 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.312410136 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.297016984 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.297211707 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.853998399 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.312869594 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.296408294 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.41135694 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.3356417 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.818042593 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.295354854 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.312448406 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.316567288 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.296953961 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.837228867 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.319902044 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.372169535 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.296758617 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.572722934 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.687253788 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.651057538 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.321178591 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.298573513 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.302147789 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.301567954 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.812454809 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.675959241 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.302178703 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.302622223 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.817914271 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.298655137 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.313576269 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.310160912 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.552439319 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.303586798 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.302335346 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.317232568 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.316992484 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.303316019 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.402161503 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.394582828 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.831791537 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.301004883 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.299947892 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.352086945 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.303615119 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.301681315 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.302288972 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.321131476 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.672124302 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.523431247 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.307174872 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.673252387 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.831717886 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.318648059 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.885608124 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.318964714 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.320126041 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.487504411 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.301087529 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.305008759 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.840584322 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.32273587 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.298426736 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.657547081 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.308270606 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.592766408 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.31631602 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.303171504 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.871957151 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.313318451 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.319677176 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.303518449 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.299491646 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.319792693 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.320818867 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.580981886 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.340834583 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.304668033 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.303827074 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.320389805 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.301939713 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.300170921 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.311185826 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.888866861 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.321008024 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.305411333 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.308845924 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.307445318 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.307150981 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.304912288 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.306513562 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.57246423 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.306470672 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.331970273 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.306068206 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.300602194 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.302898946 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.449318596 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.311493604 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.618992464 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.304582074 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.311338433 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.309552489 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.304262372 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.350100181 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.302122148 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.304463406 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.177260747 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.583137482 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.319942491 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.317600783 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.307123563 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.331885638 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.304328097 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.303428058 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.368079932 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.308798444 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.097605451 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.324402725 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.322505708 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.30623717 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.312538429 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.307512328 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.312597673 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.305947546 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.609012817 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.588222846 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.52701481 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.316505564 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.31822728 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.083254314 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.330872052 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.488681688 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.327587922 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.305966772 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.558248837 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.526621531 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.309903764 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.304330109 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.306175795 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.562897078 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.306333013 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.635176158 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.873628399 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.322800647 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.315740183 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.118916945 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.00575996 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.312210732 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.315667022 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.598167618 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.321621978 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.309579142 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.307883955 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.308776842 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.323409882 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.324382273 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.306649408 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.308381035 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.310509813 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.351280656 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.501657923 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.327470852 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.309463012 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.831542532 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.325212402 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.306400515 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.316688973 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.309235555 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.308223049 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.387944588 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.311169574 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.341977187 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.314094481 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.313321798 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.846123656 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.307416008 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.313441728 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.502823224 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.01976215 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.326746817 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.312805558 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.329210779 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.225391469 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.854249775 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.344618291 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.632483875 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.313033053 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.347767818 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.311915943 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.420103073 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.881869603 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.308358819 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.330764369 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.982993965 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.327395125 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.798359792 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.310681975 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.314601752 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.934708464 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.328767728 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.317667276 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.317698317 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.315382826 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.610773929 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.312738707 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.348143174 seconds)
  done (took 492.844883179 seconds)
done (took 638.442492159 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.309463907 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.309607728 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.304795659 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.312082254 seconds)
  done (took 10.458380199 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.3283449 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.321043899 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.32318258 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.318979386 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.325604498 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.317221194 seconds)
  done (took 9.156139574 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.314466909 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.308748 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.314432428 seconds)
  done (took 8.157597369 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.522507037 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.331694318 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.642291333 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.340058617 seconds)
  done (took 9.060836705 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.324379299 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.324979757 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.327400344 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.324551749 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.328804741 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.327518049 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.324831628 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.325974893 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.325781663 seconds)
  done (took 13.153340921 seconds)
done (took 51.204684526 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("map", identity, Int8, true)...
    done (took 1.374961249 seconds)
    (2/224) benchmarking ("map", identity, Float32, false)...
    done (took 1.368840338 seconds)
    (3/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.429865689 seconds)
    (4/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.219741575 seconds)
    (5/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.484406155 seconds)
    (6/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.389765396 seconds)
    (7/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.423311564 seconds)
    (8/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.377381415 seconds)
    (9/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.419046784 seconds)
    (10/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.456326325 seconds)
    (11/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.330928226 seconds)
    (12/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.080850564 seconds)
    (13/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.364034337 seconds)
    (14/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.520349521 seconds)
    (15/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.53550384 seconds)
    (16/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.521278646 seconds)
    (17/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.465003539 seconds)
    (18/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.317675113 seconds)
    (19/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.405817174 seconds)
    (20/224) benchmarking ("perf_sum", Float64, false)...
    done (took 1.347966752 seconds)
    (21/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.485802295 seconds)
    (22/224) benchmarking ("map", identity, Float32, true)...
    done (took 1.423924632 seconds)
    (23/224) benchmarking ("map", identity, Int64, true)...
    done (took 1.469324271 seconds)
    (24/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.140553461 seconds)
    (25/224) benchmarking ("map", identity, BigInt, false)...
    done (took 1.410548996 seconds)
    (26/224) benchmarking ("map", abs, Float32, true)...
    done (took 1.424567788 seconds)
    (27/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.104335445 seconds)
    (28/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.466837178 seconds)
    (29/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.435304623 seconds)
    (30/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.382309932 seconds)
    (31/224) benchmarking ("perf_sum", Bool, true)...
    done (took 1.358426647 seconds)
    (32/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.48567858 seconds)
    (33/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.513068103 seconds)
    (34/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.980369646 seconds)
    (35/224) benchmarking ("map", abs, Int64, false)...
    done (took 1.407562371 seconds)
    (36/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.337909029 seconds)
    (37/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.47543755 seconds)
    (38/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.108045262 seconds)
    (39/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.376794076 seconds)
    (40/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.481345843 seconds)
    (41/224) benchmarking ("perf_countequals", "Int8")...
    done (took 1.396381231 seconds)
    (42/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.46182753 seconds)
    (43/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.435775286 seconds)
    (44/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.009700723 seconds)
    (45/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.530879744 seconds)
    (46/224) benchmarking ("perf_sum", Bool, false)...
    done (took 1.353993692 seconds)
    (47/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.344767519 seconds)
    (48/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.067476312 seconds)
    (49/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.35050578 seconds)
    (50/224) benchmarking ("map", identity, Float64, false)...
    done (took 1.399618073 seconds)
    (51/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.378485395 seconds)
    (52/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.334765548 seconds)
    (53/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.46298068 seconds)
    (54/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.428640935 seconds)
    (55/224) benchmarking ("perf_sum", Float32, true)...
    done (took 1.361950237 seconds)
    (56/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.327843048 seconds)
    (57/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.342486227 seconds)
    (58/224) benchmarking ("map", abs, Bool, true)...
    done (took 1.378650637 seconds)
    (59/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.684410017 seconds)
    (60/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.425607141 seconds)
    (61/224) benchmarking ("perf_sum", Float64, true)...
    done (took 1.361706618 seconds)
    (62/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.460795738 seconds)
    (63/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.37501477 seconds)
    (64/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.333460944 seconds)
    (65/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.431174198 seconds)
    (66/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.597715389 seconds)
    (67/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.337958649 seconds)
    (68/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.332053415 seconds)
    (69/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.41278453 seconds)
    (70/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.358526872 seconds)
    (71/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.315123066 seconds)
    (72/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.501116181 seconds)
    (73/224) benchmarking ("perf_sum", Int8, true)...
    done (took 1.366976068 seconds)
    (74/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.32592146 seconds)
    (75/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.034380767 seconds)
    (76/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.375922422 seconds)
    (77/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.325769649 seconds)
    (78/224) benchmarking ("perf_countequals", "Float32")...
    done (took 1.395741882 seconds)
    (79/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.311857816 seconds)
    (80/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.310914174 seconds)
    (81/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.405397135 seconds)
    (82/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.203712716 seconds)
    (83/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.375262157 seconds)
    (84/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.657988695 seconds)
    (85/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.334003195 seconds)
    (86/224) benchmarking ("map", identity, Float64, true)...
    done (took 1.472753554 seconds)
    (87/224) benchmarking ("perf_countequals", "Int64")...
    done (took 1.412898541 seconds)
    (88/224) benchmarking ("map", abs, Float32, false)...
    done (took 1.378931899 seconds)
    (89/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.333721017 seconds)
    (90/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.326334842 seconds)
    (91/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.419462215 seconds)
    (92/224) benchmarking ("perf_countequals", "Bool")...
    done (took 1.397927353 seconds)
    (93/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.32073981 seconds)
    (94/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.465541045 seconds)
    (95/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.116422509 seconds)
    (96/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.100320057 seconds)
    (97/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.333914683 seconds)
    (98/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.483135824 seconds)
    (99/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.535935281 seconds)
    (100/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.9785796 seconds)
    (101/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.562988405 seconds)
    (102/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.536753055 seconds)
    (103/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.471504965 seconds)
    (104/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.442445962 seconds)
    (105/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.348955999 seconds)
    (106/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.369731433 seconds)
    (107/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.537641202 seconds)
    (108/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.334292858 seconds)
    (109/224) benchmarking ("map", abs, Float64, true)...
    done (took 1.473468407 seconds)
    (110/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.494153203 seconds)
    (111/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.309130987 seconds)
    (112/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.401033841 seconds)
    (113/224) benchmarking ("map", abs, Int64, true)...
    done (took 1.480724134 seconds)
    (114/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.483284103 seconds)
    (115/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.416306106 seconds)
    (116/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.337752816 seconds)
    (117/224) benchmarking ("perf_sum", Int64, true)...
    done (took 1.360362181 seconds)
    (118/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.314739536 seconds)
    (119/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.252280017 seconds)
    (120/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.993159508 seconds)
    (121/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.371028279 seconds)
    (122/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.511268303 seconds)
    (123/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.341549737 seconds)
    (124/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.395221059 seconds)
    (125/224) benchmarking ("map", abs, Bool, false)...
    done (took 1.35720548 seconds)
    (126/224) benchmarking ("map", abs, BigInt, false)...
    done (took 2.332955442 seconds)
    (127/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.466014779 seconds)
    (128/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.323784323 seconds)
    (129/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.523550898 seconds)
    (130/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.370521218 seconds)
    (131/224) benchmarking ("map", abs, Int8, false)...
    done (took 1.362223359 seconds)
    (132/224) benchmarking ("map", identity, Bool, true)...
    done (took 1.386919377 seconds)
    (133/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.460247504 seconds)
    (134/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.333899161 seconds)
    (135/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.360019184 seconds)
    (136/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.540544617 seconds)
    (137/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.361910247 seconds)
    (138/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.464828646 seconds)
    (139/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.439050219 seconds)
    (140/224) benchmarking ("map", abs, BigInt, true)...
    done (took 2.32978466 seconds)
    (141/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.456686362 seconds)
    (142/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.429541706 seconds)
    (143/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.51383347 seconds)
    (144/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.426659172 seconds)
    (145/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.14934249 seconds)
    (146/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.445374493 seconds)
    (147/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.439069737 seconds)
    (148/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.007738306 seconds)
    (149/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.423501722 seconds)
    (150/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.473622971 seconds)
    (151/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.696787991 seconds)
    (152/224) benchmarking ("map", identity, Bool, false)...
    done (took 1.363442441 seconds)
    (153/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.374814509 seconds)
    (154/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.404430096 seconds)
    (155/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.345480622 seconds)
    (156/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.348676996 seconds)
    (157/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.530095997 seconds)
    (158/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.449029347 seconds)
    (159/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.370627151 seconds)
    (160/224) benchmarking ("map", abs, Float64, false)...
    done (took 1.410630496 seconds)
    (161/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.311936663 seconds)
    (162/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.458243812 seconds)
    (163/224) benchmarking ("perf_countequals", "Float64")...
    done (took 1.401694256 seconds)
    (164/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.46934889 seconds)
    (165/224) benchmarking ("map", identity, BigInt, true)...
    done (took 1.498047556 seconds)
    (166/224) benchmarking ("map", identity, Int64, false)...
    done (took 1.405336674 seconds)
    (167/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.427730216 seconds)
    (168/224) benchmarking ("perf_sum", Int64, false)...
    done (took 1.378325467 seconds)
    (169/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.317892398 seconds)
    (170/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.053542104 seconds)
    (171/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.088912654 seconds)
    (172/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.452928882 seconds)
    (173/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.632719934 seconds)
    (174/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.537505268 seconds)
    (175/224) benchmarking ("perf_sum", Float32, false)...
    done (took 1.374014295 seconds)
    (176/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.471074462 seconds)
    (177/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.356255867 seconds)
    (178/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.542935887 seconds)
    (179/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.359588486 seconds)
    (180/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.54168505 seconds)
    (181/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.481676039 seconds)
    (182/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.475640519 seconds)
    (183/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.319096314 seconds)
    (184/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.115388779 seconds)
    (185/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.43377103 seconds)
    (186/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.382376131 seconds)
    (187/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.410164812 seconds)
    (188/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.476056935 seconds)
    (189/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.365818929 seconds)
    (190/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.4328935 seconds)
    (191/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.374404762 seconds)
    (192/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.091909199 seconds)
    (193/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.356747575 seconds)
    (194/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.357511132 seconds)
    (195/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.268174714 seconds)
    (196/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.449970842 seconds)
    (197/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.411624209 seconds)
    (198/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.497610938 seconds)
    (199/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.588451617 seconds)
    (200/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.438160294 seconds)
    (201/224) benchmarking ("map", abs, Int8, true)...
    done (took 1.392804836 seconds)
    (202/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.417165791 seconds)
    (203/224) benchmarking ("map", identity, Int8, false)...
    done (took 1.361523322 seconds)
    (204/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.045022912 seconds)
    (205/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.443090968 seconds)
    (206/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.319766869 seconds)
    (207/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.449515154 seconds)
    (208/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.339983786 seconds)
    (209/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.378914801 seconds)
    (210/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.523405745 seconds)
    (211/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.461458617 seconds)
    (212/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.392419916 seconds)
    (213/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.542288299 seconds)
    (214/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.015166306 seconds)
    (215/224) benchmarking ("perf_sum", Int8, false)...
    done (took 1.378378559 seconds)
    (216/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.474986963 seconds)
    (217/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.530690561 seconds)
    (218/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.980716069 seconds)
    (219/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.514095754 seconds)
    (220/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.336927786 seconds)
    (221/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.386871916 seconds)
    (222/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.072286469 seconds)
    (223/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.443519779 seconds)
    (224/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.342289336 seconds)
  done (took 370.557912131 seconds)
done (took 371.779392938 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.383134776 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.519082066 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.336259465 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.339055037 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.380104266 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.342951749 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.37485835 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.343757174 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.346362052 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.346959199 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.339725818 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.341267583 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.34955558 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.375654166 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.450853015 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.345548327 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.336472837 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.343137831 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.386149318 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.403312256 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.380776022 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.380405371 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.358395154 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.337612705 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.384171356 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.384744153 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.346035222 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.33279931 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.342546379 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.386030734 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.338103761 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.339285732 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.395727561 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.392546134 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.38248923 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.34495575 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.381696312 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.520011634 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.381515157 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.375196976 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.348950006 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.395221668 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.34929952 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.353201644 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.39388235 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.355736244 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.385964232 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.46293584 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.340910819 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.324826148 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.380177533 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.406344329 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.349762193 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.331335379 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.330019959 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.456963976 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.344739411 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.387989806 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.346211444 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.384127332 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.453230532 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.385306806 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.403480921 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.386101431 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.349445922 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.354902545 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.345185884 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.407258935 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.347674179 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.387020598 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.387191901 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.352363137 seconds)
done (took 108.095192852 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.472924978 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.340399137 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.489237969 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.347016414 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.509374841 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.48729379 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.343047295 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.344445032 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.345675093 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.169586855 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.344396151 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.34375984 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.340712402 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.345907683 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.475136914 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.347142058 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.343229021 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.056658406 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.344900879 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.489199793 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.337680043 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.37896548 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.345239521 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.161038689 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.340055351 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.339765072 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.484813192 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.347560372 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.051626078 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.337003939 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.339294117 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.052441836 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.492023808 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.365333574 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.356080761 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.357368044 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.510139169 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.360993544 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.474267883 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.474930046 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.488276134 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.385592821 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.337146135 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.342326744 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.349575893 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.347813131 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.34811506 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.3769694 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.34278995 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.34800522 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.061781991 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.358123555 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.348430037 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.348953142 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.346574241 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.376306949 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.347547042 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.349713319 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.488386602 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.347243934 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.47351634 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.166324776 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.173825692 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.349756632 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.343466691 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.351631699 seconds)
  done (took 109.325410763 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.411222209 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.41769641 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.460869739 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.355727875 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.397718072 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.463655472 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.355107701 seconds)
  done (took 11.103697152 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.350347687 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.348349083 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.394593404 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.394754667 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.347930231 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.528991243 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.348396016 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.356348842 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.349870911 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.397660481 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.349047533 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.349409259 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.359119532 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.343522459 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.393422207 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.359179333 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.461540101 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.347860766 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.351995645 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.499162675 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.350842887 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.360037336 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.397838132 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.358796343 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.350808045 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.349680572 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.120219403 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.35194734 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.350962038 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.352692523 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.351261831 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.39986873 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.350240038 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.343084882 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.351422034 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.465933061 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.351620261 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.349883002 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.351913193 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.349485367 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.351088154 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.352337128 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.351074257 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.350722224 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.351308986 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.371747041 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.35269935 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.350570837 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.352922583 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.352449522 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.401324918 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.35195683 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.35220069 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.352047083 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.404394777 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.363138145 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.351671701 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.352114995 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.351934763 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.352244333 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.503330909 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.3970096 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.354662871 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.397874683 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.353311116 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.353261914 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.351570405 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.353316047 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.440131528 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.354081568 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.3996541 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.354026074 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.529492598 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.375062237 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.355453206 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.353822372 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.354837892 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.35430737 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.347526911 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.354463488 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.353328835 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.352063968 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.357071643 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.355624998 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.355353501 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.553954351 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.46361592 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.357508432 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.364601856 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.35797759 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.356374509 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.403944706 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.355491308 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.354875459 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.402223517 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.467234534 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.406112064 seconds)
  done (took 139.313123774 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.362971288 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.365617798 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.355141382 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.378848016 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.352437077 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.353194375 seconds)
  done (took 9.415426348 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.354566057 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.35943319 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.354702614 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.357642807 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.354639166 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.358248132 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.355601101 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.352801791 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.358243577 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.357865145 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.358079241 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.357715638 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.358639783 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.355562539 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.358149292 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.357567182 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.357689235 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.358797137 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.356696941 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.356050456 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.353901089 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.358279726 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.358685571 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.357693466 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.361016794 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.359051621 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.375894502 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.355565318 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.359550989 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.361550883 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.377520691 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.358548417 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.355291691 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.359260398 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.361074806 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.353168856 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.36153836 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.36292476 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.356256107 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.357818628 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.360380142 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.356990123 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.35823213 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.359791091 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.353222596 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.360160563 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.363288135 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.374726863 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.358764096 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.35930594 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.357740683 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.358968426 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.359865187 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.359914591 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.356101334 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.375026071 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.361631341 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.361514692 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.360519198 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.355221344 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.364023465 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.360953647 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.356948754 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.36286042 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.360808312 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.359319005 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.354754521 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.361909714 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.359845451 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.360482175 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.359681289 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.36136526 seconds)
  done (took 100.128915704 seconds)
done (took 370.52242166 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.395953884 seconds)
  done (took 3.647406462 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.450480402 seconds)
  done (took 3.705413778 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.122710615 seconds)
  done (took 23.384263111 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.367593525 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.412482366 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.363507144 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.350443884 seconds)
  done (took 10.746763728 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.648408706 seconds)
  done (took 3.901529988 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.365856678 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.353264566 seconds)
  done (took 5.974514351 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.614670944 seconds)
  done (took 3.867074716 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.900936918 seconds)
  done (took 4.161254206 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.356003225 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.372977029 seconds)
  done (took 5.992395707 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.347926891 seconds)
  done (took 3.602517997 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 38.441351362 seconds)
  done (took 39.697830225 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.361024696 seconds)
  done (took 3.620577234 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.391754853 seconds)
  done (took 3.647421852 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.076001391 seconds)
  done (took 6.330047561 seconds)
done (took 123.530753267 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.353561784 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.349518595 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.346454515 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.349593115 seconds)
  done (took 10.653696307 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.41381148 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.415119612 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.414401444 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.412651168 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.414834269 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.41483014 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.388233688 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.388594518 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.415252578 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.413777113 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.415217632 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.414522662 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.41464982 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.388905381 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.413110643 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.41910407 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.415840394 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.415241458 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.388503818 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.414710112 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.363674811 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.415584231 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.415112815 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.364159191 seconds)
  done (took 35.007361636 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.874997934 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.429202768 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.512320597 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.411661779 seconds)
  done (took 7.484174528 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.441493038 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.440751775 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.454411318 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.490351244 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.505102717 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.454338586 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.386997479 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.387181246 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.372348435 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.444196459 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.494874357 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.439762994 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.515637001 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.3651025 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.569771796 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.364369689 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.365725366 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.441097826 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.493333032 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.504240868 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.365008149 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.442319171 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.443027614 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.441849717 seconds)
  done (took 35.880651154 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.373877388 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.381618304 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.367427679 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.384566363 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.367611793 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.366947609 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.370375804 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.372998276 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.365797815 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.369982706 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.36532331 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.382284574 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.370158065 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.366915269 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.375704026 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.36899544 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.374153591 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.372543597 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.366631441 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.374896142 seconds)
  done (took 28.694557887 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.357291523 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.356545138 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.708259073 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.612521261 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.358483273 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.35588262 seconds)
  done (took 14.00820578 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.435435126 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.601562034 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.362953324 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.736578329 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.822667329 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.362952865 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.362240971 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.629883439 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.958070382 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.929865482 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.424310087 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.437182274 seconds)
  done (took 20.32278007 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.358644053 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.358524967 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.370082368 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.371327574 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.422033009 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.381935761 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.369554475 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.360608211 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.421900524 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.4379744 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.382458637 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.424550069 seconds)
  done (took 21.919102109 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.457512349 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.361776789 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.362811227 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420662456 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364077198 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.204017682 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.417407534 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.118929519 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.38743685 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.638161572 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367572172 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.458823431 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.616791195 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363768795 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.364817185 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.356938448 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.595784873 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.855517533 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362390302 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371218068 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399551315 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.361957653 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.370450548 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.585319829 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.377060035 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.363942944 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.63575322 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.365248334 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.650633098 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.377563145 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375772565 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.369328018 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.642219998 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.043679407 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.480872969 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.582415462 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37869287 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.384543462 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.36376151 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.392977913 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.380776523 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.369129866 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375259228 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367023311 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.367993504 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.367503927 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.152176611 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.392300996 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.366194103 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.366228433 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.627508797 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.46438722 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.369038867 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.367188154 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39069046 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36635583 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.373316133 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.504288021 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.967905981 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380035999 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384007636 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.365391802 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.369328131 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377047228 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.993921049 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.385774311 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.373107174 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.371997218 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365480867 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.369860685 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.387153994 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368156149 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.387891693 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367032392 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.092987025 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.393527927 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37030656 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.925170239 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368162274 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.370152168 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.597827721 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367618237 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367869255 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.366723273 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.367921974 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.099013912 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376408629 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.35722076 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.433368396 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.144688626 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.604928757 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400076981 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397316162 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.590630223 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.354941874 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371181101 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.367159094 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373389071 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384815966 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.136079502 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385880534 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.372414329 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.62490446 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.580093499 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370989298 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.378405625 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.877339041 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388923603 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.385824209 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.386682792 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.588780113 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.978921565 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.399056359 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385049963 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385717793 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.370966781 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.137233473 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372312594 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.470225697 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.378612272 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.646638795 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.185893925 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374681007 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.438454939 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.37578152 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.370876763 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.385062066 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37154572 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.371370384 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.583092022 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396657325 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.380432147 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.372111959 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372741067 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.379594176 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385419128 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.372110577 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.591752827 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374509824 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.650079602 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371200397 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371580401 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365540299 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.589683211 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.371026145 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.735496367 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.636249168 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386874475 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.391349553 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.382548767 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391405979 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.473688953 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394555645 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.388373413 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.628535233 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.378716289 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.381183132 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.389325978 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.375785978 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381275696 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.379143902 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377452092 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.988617543 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371521502 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.377868049 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.265952214 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.391850434 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.442013664 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.381747075 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.597126442 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.388047224 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37586049 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.400050066 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.386995406 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.594296303 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.385057431 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.389004999 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.453595813 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.877793031 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.992672112 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.406644185 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.375073387 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.376845696 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.373842722 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374297249 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374930077 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.375879915 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.595180289 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.398208558 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.378903535 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.998392421 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393607939 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.387328184 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.384699498 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.387490905 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.383203968 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378736956 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.37758002 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387208565 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392520616 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.385965542 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.521567859 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.390005376 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.375643652 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.894205797 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.38332873 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.379776034 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.376197215 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410698247 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.393446827 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.214951471 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.652231091 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.369576395 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.657759194 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.391464423 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.396404463 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.376927191 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379202864 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393813948 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.388109302 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.383918241 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.387310215 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.390765588 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380488127 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.953362806 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.135093166 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.929476599 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.400606237 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.388999399 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.377990328 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.149343416 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394509165 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.378799835 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.624359513 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.16027469 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394838999 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.886242137 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.394510758 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.177426891 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.645452175 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.610101849 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392508645 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.38788081 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.644817859 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.590123863 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414707367 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.392937205 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379380545 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.362306171 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.960136247 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.393858599 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.459014315 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.148003927 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404458067 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.381250453 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.389921515 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.387481349 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.805182028 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.39666846 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37923761 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.374897755 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.412331812 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.259918569 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.399385813 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.383618531 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.025509402 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.406088544 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.887611219 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397379714 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.601748926 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.403503978 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.38621681 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.382525122 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.383452209 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.63733915 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.641224193 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381885578 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.387519921 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.938929722 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.266289965 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.387801033 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378557768 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.154113528 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388244262 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.67886931 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.394577175 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.389505132 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383329369 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.380771946 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379912084 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.380402146 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.386827465 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357957742 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.891919906 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.395807804 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385678355 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396347094 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381577993 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.633696144 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.394760241 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.985230754 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.627930647 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.401477043 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408294039 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.387572071 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396934927 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.372289179 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.382415371 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.383110055 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389627469 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.606810321 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.38810342 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.370891524 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.41678612 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.595914552 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.386115989 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.381713139 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.653102813 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.394788239 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.401347368 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.137605127 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.431469324 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.385054257 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402705408 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.385232561 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.425223457 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.471515431 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.610185272 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.412389124 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.394630506 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.812392868 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402295652 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.401257438 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.400640363 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.478923394 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384789659 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.393273985 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.154274661 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.99238036 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.155018915 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.997319503 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.669275956 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.389094359 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39260358 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3826064 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.543525395 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.384193885 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.658788785 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419674918 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.378021687 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424657958 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384785432 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41582686 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.596460034 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.661979487 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.384964024 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386869182 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385818818 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.387913997 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.396822491 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.597579083 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.899557168 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.967789908 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386734509 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.393723688 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.162081936 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.681148561 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386041923 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.387287999 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384605225 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.407159725 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.403680318 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.394245314 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387368019 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.532164437 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.654848675 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.07712888 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.412701617 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.417860722 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.907507308 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389480039 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.640365259 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.398205721 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.609750398 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.01183108 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.135866944 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.65322934 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.456835964 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.611515175 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.404366533 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.550622685 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.389704723 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.386936807 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.390003239 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386910733 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.38668537 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.397793032 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.006664913 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.667779112 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.391640832 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.387329746 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419739475 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.397548163 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.609940421 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.135924384 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.610729706 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.393290178 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.394048646 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.390155112 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.003765024 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.677031206 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391561578 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.394366932 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.639596891 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.403237349 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.416065069 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.077755628 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.3865768 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.955175641 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.355936566 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410050936 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402394052 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.129100795 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.003874531 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.421897509 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904926312 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.387064383 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391568309 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.667294843 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.398343111 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.404880978 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.668290262 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.394219116 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.400729243 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.615498099 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.013039113 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.222999694 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.411078452 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39174131 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.392915332 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390513116 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.480571851 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391162691 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.388226779 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.833792654 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.411078419 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392217471 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.401715288 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.395228485 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403457013 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.395677562 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394263787 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.396374232 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.406044399 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.399196517 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.425929039 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.520799385 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.973654407 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406107207 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.070191913 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.721961089 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.645381255 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.400083437 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.377332173 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.397093211 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391286536 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391196752 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388207073 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.382930182 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975246386 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.401857637 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.401265988 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.397094176 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.392248131 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.60184166 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.393154556 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.620268721 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40716923 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.411503893 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.378908019 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391885309 seconds)
  done (took 981.468363972 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.402603191 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.400495759 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.421193718 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.486470662 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.413489635 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.52128468 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.425413679 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.425079956 seconds)
  done (took 20.786858584 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.389800525 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.398087841 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.402271196 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.400769346 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.387191302 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.883959495 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.416669867 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.397938458 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.416500773 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.387310378 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.383695836 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.380743578 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.418369449 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.398694011 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.387037284 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.401641845 seconds)
  done (took 33.152644996 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.550131058 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.571890234 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.672798672 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.394080907 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.424008972 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.395449699 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.698979377 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.402591351 seconds)
  done (took 27.398156252 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.400883348 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.403053301 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.404971254 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.405297881 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.401741942 seconds)
  done (took 8.310100481 seconds)
done (took 1246.344026041 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.401580718 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.399958105 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.403801331 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.404697859 seconds)
  done (took 6.902787271 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.384123712 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.381728816 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.390165047 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.391989576 seconds)
  done (took 9.839388663 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.142042658 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.047474641 seconds)
  done (took 5.481915828 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.899571262 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.90831463 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.892078197 seconds)
  done (took 6.991673681 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.688663635 seconds)
  done (took 2.981644663 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.316729971 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.393232106 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.078767442 seconds)
  done (took 8.084274674 seconds)
done (took 41.574084223 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.392660476 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.653354322 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.547577766 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.39216262 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.5480122 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.545548696 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.129458232 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.396087119 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.395645279 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.393260086 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.400318128 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.550222359 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.114942484 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.639914214 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.111340338 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.735518127 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.553647437 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.392969421 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.389144949 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.385186108 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.121234808 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.395302413 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.389248776 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.411666828 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.548911246 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.53890703 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.404605997 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.732244657 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.405720423 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.388871975 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.553481211 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.395425255 seconds)
  done (took 83.245117537 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.393705573 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.387915161 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.404972053 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.405336802 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.390503861 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.391821543 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.405947177 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.405532303 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.394947928 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.391323421 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.391244804 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.391741108 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.390824211 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.389649594 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.391330105 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.390737002 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.390687371 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.391866938 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.406703085 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.388803007 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.411673928 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.39067534 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.406016178 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.410983502 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.389490383 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.411181388 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.409541065 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.407647748 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.417175616 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.391572597 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.393985447 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.406845659 seconds)
  done (took 78.036011453 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.395837675 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.393778374 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.394035957 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.402115084 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.392577012 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.410255002 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.394908754 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.392782804 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.392907995 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.391525476 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.400593511 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.391019308 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.409975398 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.396220943 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.393760991 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.393466698 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.392822126 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.411740281 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.393090653 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.395956863 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.393260201 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.403835499 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.392620393 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.406396312 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.408632679 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.402998336 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.394513736 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.395643881 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.401835209 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.394498173 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.402753863 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.393491402 seconds)
  done (took 78.027363931 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.682793077 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.41015053 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.412069647 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.403553989 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.412886445 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.409066661 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.404792923 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.687902298 seconds)
  done (took 15.11998172 seconds)
done (took 255.721747647 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.404364203 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.942646427 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.444815988 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.408361062 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.429470178 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.430310085 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.640123693 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.443424104 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.640903391 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.425742817 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.420130523 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.417342929 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.257003905 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.560681286 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.280508 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.399252845 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.344700507 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.412087594 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.004035699 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.699614597 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.429268776 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.403924762 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.276296714 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.370006105 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.392381268 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.489437315 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.511134349 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.634220502 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.570195617 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.489282157 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.943093635 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.405214734 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.44001795 seconds)
  done (took 65.65838021 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.407222162 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.535761283 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.413016874 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.413813093 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.536710394 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.430620514 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.406927424 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.413619453 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.410896884 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.412984474 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.411565475 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.415650069 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.414182391 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.460601748 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.541618329 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.426089575 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.408775729 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.531534469 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.408735603 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.406191442 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.461665717 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.4118833 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.413396367 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.463237612 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.414897539 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.413546953 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.533771955 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.433860891 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.415017338 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.531559527 seconds)
  done (took 44.600703119 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.414176627 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.019860342 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.189579167 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.417287961 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.40923286 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.415213561 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.71064442 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.410701339 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.413427474 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.415350118 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.925876911 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.427610937 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.446555981 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.211798508 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.412931822 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.417831798 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.415281336 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.413084459 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.035559434 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.423697181 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.737721294 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.414305574 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.719346359 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.420132235 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.432507634 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.414234625 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.418887158 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.281713633 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.433691848 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.933617747 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.244203768 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.713784312 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.19856754 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.22603073 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.227187083 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.41891453 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.415085265 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.938375985 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.431086636 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.413270172 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.721417392 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.413920029 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.2028682 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.119342561 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.427553612 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.420060431 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.301225411 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.959003835 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.688868269 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.422812341 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.223321864 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.417041094 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.415977247 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.4186384 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.67568629 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.418608572 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.412338528 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.33380078 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.441934197 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.724169935 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.416304884 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.415819672 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.030666804 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.4109505 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.025010748 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.413125716 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.422997938 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.431611184 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.212785345 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.416024668 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.137935446 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.428656443 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.418188075 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.927641901 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.037652864 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.340689888 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.412811212 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.038283987 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.218022952 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.730764649 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.414857082 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.24652232 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.738462879 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.419178583 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.422924991 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.419964363 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.420453183 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.496657423 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.71711967 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.072077614 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.126207453 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.321769719 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.743008047 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.426412458 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.416570198 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.312309883 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.437162175 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.420386685 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.199193612 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.136175691 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.432036874 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.4236133 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.143554804 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.434923738 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.727351182 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.425967746 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.215171233 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.419901625 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.496838683 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.421679815 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.426773927 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.43940273 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.722896281 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.423527969 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.423324936 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.125953328 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.967768451 seconds)
  done (took 199.309934968 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.410913392 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.408439502 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.414877179 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.422820162 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.412880091 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.421561374 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.410937242 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.412269896 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.41659256 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.412990328 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.411547273 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.419731723 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.419001926 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.411817804 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.412380184 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.423764105 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.414964852 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.414454164 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.424935417 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.415061187 seconds)
  done (took 45.62272486 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.422471388 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.016952386 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.991200809 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.424049642 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.422473848 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.421372784 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.480181368 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.442102613 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.424881597 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.742472638 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.601597363 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.440448203 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.423729133 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.424296965 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.972781071 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.415663387 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.739936381 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.004155325 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.420989819 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.008738496 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.411729844 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.425608425 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.418113683 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.009023806 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.752342689 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.719575494 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.477950427 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.024707166 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.436892982 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.423511192 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.007668111 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.419206362 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.421244552 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.009805909 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.437148955 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.437318825 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.424702113 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.482273557 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.497112875 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.756165798 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.41418175 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.726951328 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.437770646 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.60341929 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.429369968 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.415953202 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.022758611 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.441726034 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.417331572 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.426152742 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.428249543 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.979713228 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.439661382 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.981099646 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.442188794 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.425739663 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.017646511 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.975348395 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.989891352 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.602436738 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.436235685 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.722288606 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.428339485 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.02140889 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.436736759 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.42859736 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.427095899 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.604256579 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.043951331 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.725687938 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.741684939 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.738715174 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.423797573 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.490657581 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.439455473 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.417914464 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.488777413 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.829233642 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.750314714 seconds)
  done (took 130.758609272 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.712234574 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.536181662 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.855723271 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.066248945 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.418813018 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.561830774 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.539720657 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.692649227 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.428085338 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.509145255 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.133836426 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.542654169 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.231062181 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.517426645 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.549929228 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.569735177 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.869815991 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.441427212 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.137239118 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.107271586 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.427814752 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.532376741 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.976585296 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.641916769 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.417354828 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.061884429 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.437152371 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.160065613 seconds)
  done (took 55.391728659 seconds)
done (took 542.638551045 seconds)
SAVING RESULT...
DONE!
