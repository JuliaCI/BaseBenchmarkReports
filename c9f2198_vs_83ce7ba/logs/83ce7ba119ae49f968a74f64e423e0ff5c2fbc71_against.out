cset: moving following pidspec: 9459
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 2.017451284 seconds)
loading group "string"... done (took 0.615450502 seconds)
loading group "linalg"... done (took 9.900620455 seconds)
loading group "parallel"... done (took 0.184215325 seconds)
loading group "find"... done (took 1.470260161 seconds)
loading group "tuple"... done (took 2.328971832 seconds)
loading group "dates"... done (took 1.533660668 seconds)
loading group "micro"... done (took 0.242245064 seconds)
loading group "io"... done (took 0.597877012 seconds)
loading group "scalar"... done (took 48.719742476 seconds)
loading group "sparse"... done (took 14.943165703 seconds)
loading group "broadcast"... done (took 1.315201293 seconds)
loading group "union"... done (took 13.815977748 seconds)
loading group "simd"... done (took 2.962421996 seconds)
loading group "random"... done (took 11.44568776 seconds)
loading group "problem"... done (took 1833.489032015 seconds)
loading group "array"... done (took 27.828813129 seconds)
loading group "misc"... done (took 1.214778758 seconds)
loading group "sort"... done (took 4.027217432 seconds)
loading group "collection"... done (took 20.429500059 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.809721022 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.159541878 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.230937176 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.398580549 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.269792433 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.168968235 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.188849809 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.599807792 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.065355199 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.284291702 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.166805866 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.633564542 seconds)
done (took 6.734306508 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.297084444 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.403858746 seconds)
    (2/2) benchmarking "String"...
    done (took 0.194916554 seconds)
  done (took 1.263022584 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.087637947 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.199763664 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.128622667 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.128427405 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.127832004 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.131020263 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.110974712 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.128669035 seconds)
  done (took 1.623262261 seconds)
done (took 3.944416168 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.583594647 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.887632454 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.599410813 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.18507351 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.22056336 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.19638144 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.343549759 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.181945754 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.133527683 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.124519759 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.221584155 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.37966128 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.519968448 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.025863037 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.119650564 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.136574073 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.123174663 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.708339611 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.09244631 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.151811009 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.61457279 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.129921384 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.131470004 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.155857505 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.214624793 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.132230704 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.189972117 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.115246484 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.684691309 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.120786045 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.256577372 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.106574744 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.190532169 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.270081846 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.111003972 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.120883797 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.682966763 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.196886418 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.130101555 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.13031121 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.674715753 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.09184561 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.258863252 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.12074583 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.127871584 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.215717996 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.136933252 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.106792691 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.099985093 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.117584183 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.183203374 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.48973105 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.119425134 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.205431808 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.105854402 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.727070246 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.10928017 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.170510384 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.164532917 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.124348897 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.107388607 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.112139281 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.188930482 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.125177986 seconds)
  done (took 21.274413886 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.173310825 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.181762907 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.10874899 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.172517119 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.157178258 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.091783607 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.113989143 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.107154776 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.144527375 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.25696508 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.155805442 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.18646069 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.105702219 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.099720322 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.178524837 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.267835112 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.119141328 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.137588649 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.115936039 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.103425337 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.15950258 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.124086468 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.123565742 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.126523341 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.187224885 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.220141881 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.135792173 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.137325598 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.113182171 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.133714676 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.154505869 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.163744654 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.105045073 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.113638742 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.204882479 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.13263391 seconds)
  done (took 6.001650407 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.2407719 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.130380386 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.256561819 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.194586265 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.163486171 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.19815297 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.172218122 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.311045635 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.274243747 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.19891119 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.145293457 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.125677481 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.092787007 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.111319943 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.107713045 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.733056585 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.197905519 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.167755632 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.166890476 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.121073504 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.112187802 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.407634374 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.116892628 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.11271318 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100102691 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.108385576 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.239921674 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099085877 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.408734606 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.112903864 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.126982906 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.148515402 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.226780527 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.148135662 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.157872204 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100551133 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.11415686 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.255598994 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.104865788 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.109046169 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.144141695 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.146529563 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.131500478 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.116488485 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.126032546 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.266830524 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.112786125 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.119461032 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.16952208 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.216042854 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.188621474 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.115362379 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.38744096 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.132226069 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.121012578 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.112721055 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.320175334 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.156953596 seconds)
    (59/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.175792861 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.114076917 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.092719995 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.119566966 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.108751981 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.449067584 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.126755377 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.8854534 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.111473126 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.18226841 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11759314 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.122424043 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.117818189 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.116832816 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.115845315 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.113660532 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.10949115 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.095516406 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.111258275 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.098692212 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.138253502 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.116919412 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.111374272 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.164516562 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.133758109 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.133726434 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.139982095 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.100686605 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.112267477 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.142339345 seconds)
    (89/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.096069019 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.112491244 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.114779192 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.191882656 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.121027795 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.11857293 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130572351 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.141492558 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.113657521 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.228761884 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.11142393 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.143352384 seconds)
    (101/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.114531885 seconds)
    (102/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12645151 seconds)
    (103/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.138295934 seconds)
    (104/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.114032684 seconds)
    (105/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.117875627 seconds)
    (106/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.115264921 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.092936723 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.113474371 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.162447046 seconds)
    (110/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.114267015 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.1111334 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.099129976 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.113223644 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.128513393 seconds)
  done (took 26.418564617 seconds)
done (took 54.363296541 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.557017521 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.13947909 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.13977884 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.140162979 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.138635279 seconds)
  done (took 1.87296395 seconds)
done (took 2.602075449 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.401370031 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.203859661 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.135994747 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.201829815 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.120305155 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.229532145 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.189714895 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.133986229 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.241297257 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.098934567 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.222169732 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.114306759 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.105040221 seconds)
  done (took 3.158622455 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.112725054 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.142717971 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.116476142 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11290981 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.111659086 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.113531069 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.130268617 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.158839095 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.127724928 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.105962305 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.112255982 seconds)
  done (took 2.075973418 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.109338121 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.136572209 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.099225815 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.129160463 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.112245752 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110791489 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.128628951 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.139235632 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109879524 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.12552914 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.112344016 seconds)
  done (took 2.04335806 seconds)
done (took 8.001284107 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.248692745 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 9.688067598 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.167434906 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.237555264 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.416254647 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.273147094 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.66081122 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.204687864 seconds)
  done (took 13.824396575 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.149560625 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.159843409 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.101915904 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.119048181 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.117471036 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.100594668 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.117927602 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.100997167 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.119642744 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.116934588 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.101304683 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.11755474 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.1173175 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.100340114 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.11718147 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.116493346 seconds)
  done (took 2.676295027 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.155574921 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.155855666 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.107533885 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.132368326 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.123126415 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.123340786 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.108364401 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.124056744 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.120490809 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.106871664 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.130190697 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.128243619 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.126783185 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.104633982 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.126494292 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.129614129 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.120287299 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.109835429 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.126094281 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.1259443 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.129025171 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.106785982 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.128303431 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.129291587 seconds)
  done (took 3.811997244 seconds)
done (took 21.044052191 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.195151349 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.114129139 seconds)
  done (took 1.050881182 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.165857879 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.170941026 seconds)
  done (took 1.08250552 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.144379952 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.098067837 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.161769673 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.138515516 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.117253537 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.116179038 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.156644979 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.100824698 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.117154714 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.117808744 seconds)
  done (took 2.018461861 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.103196167 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.121484863 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.129608437 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.167398355 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.130624332 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.104492088 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.124121076 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.120051514 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.10712794 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.119339031 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.127402448 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.142418945 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.125423079 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.145089479 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.106096415 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.127023132 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.131642143 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.247454425 seconds)
  done (took 3.128886745 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.098389634 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.118352248 seconds)
  done (took 0.970139633 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.10443143 seconds)
    (2/7) benchmarking "second"...
    done (took 0.116843355 seconds)
    (3/7) benchmarking "month"...
    done (took 0.12041324 seconds)
    (4/7) benchmarking "year"...
    done (took 0.105277496 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.117397422 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.116357735 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.101716555 seconds)
  done (took 1.535462601 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.574758681 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.295392239 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.407606654 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.140791451 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.161705274 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.404046367 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.164937218 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.136770449 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.134640822 seconds)
  done (took 3.236120577 seconds)
done (took 13.771551804 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.105392399 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.265158707 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.618536907 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.138621156 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.118162346 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.160904945 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.351868949 seconds)
done (took 2.519364254 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.392456279 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.179698863 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.091731222 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.115886681 seconds)
  done (took 1.532441391 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.092726288 seconds)
    (2/2) benchmarking "read"...
    done (took 0.12471555 seconds)
  done (took 0.979499333 seconds)
done (took 3.281393961 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098328693 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.112808221 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.097039622 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.114519298 seconds)
    (5/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.151571373 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.096005288 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.116989307 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.116297718 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.097533757 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.115608779 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.097191172 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.114565357 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112877872 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098390805 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.113827225 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097863649 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.114059328 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.09703824 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.115206442 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.114171682 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097523153 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.114134537 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.097140993 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.114257285 seconds)
  done (took 3.414066447 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.121757623 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.121236718 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.122682626 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.123319442 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.107196359 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.122105863 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.123057681 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.10125381 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.12317975 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.118073285 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.122799681 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.106508461 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.117326754 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.12465075 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101649556 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.124235428 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.12394514 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.11784224 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101799692 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.123779834 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.122867481 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101962318 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.125516125 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.1242075 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.123957856 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106725709 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.117570063 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.119002992 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.106245288 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.124688723 seconds)
  done (took 4.288080468 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.105241786 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.111680137 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.099762921 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.125897157 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.112158646 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.099793749 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.1126287 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.09679034 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.119306018 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.115847894 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.101986385 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.11647376 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.095529062 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.119415038 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.119923037 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.10290599 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.127121054 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.112418156 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.096797947 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.117790104 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.101749197 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.113159469 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.115820411 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.099739208 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.115903184 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.095664408 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.117611323 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.09883514 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.118475258 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.115642335 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.102542782 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.119892563 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.098500746 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.126866883 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.120260471 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.098466811 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.124529456 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.11315838 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.101580926 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.113289603 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.095369096 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.1168477 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.113225071 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.106825623 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.116918138 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.100180633 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.114939611 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.120713111 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.10042924 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.121289896 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.096468101 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.114281475 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.120476936 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.101727699 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.121732008 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.112473435 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.100673134 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.113227301 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.101287959 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.117520045 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.112749505 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.097852496 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.122217244 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.101008843 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.134710113 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.123761205 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.095880193 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.119688122 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.118965452 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.105443267 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.120247612 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.127164434 seconds)
  done (took 8.780335773 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.113140612 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.13038908 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.120056469 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.102339405 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.119396003 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.101232162 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.12737958 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119041343 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102194622 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.128975498 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118758254 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.101160433 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.124606136 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.120739921 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101279614 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.119850094 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.129704999 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100929065 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.118522295 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.119715276 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101261049 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.127037786 seconds)
  done (took 3.325385063 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.286040954 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.106451116 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.173129539 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.138689216 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.142098866 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.137692046 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.124292903 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.123985432 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10684774 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.130677406 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.131454435 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106227402 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.142122608 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.132880382 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.130642969 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.131808101 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107453163 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.133301332 seconds)
  done (took 3.265156551 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.117881328 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.122129127 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.148211336 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.104655002 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.122620294 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.123435509 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.130243921 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.120301041 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.123429709 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.122332449 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.132220255 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103797764 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.122491955 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.120820287 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104511118 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.123295603 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.104104378 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.12206542 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.13580437 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.13208888 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.131539151 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.11351961 seconds)
  done (took 3.467313653 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.124041288 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.122814486 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.16132265 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.128691149 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.10362273 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.120840204 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.129684716 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.103603676 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.130398119 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.122510081 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.104891447 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.120220258 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.132509504 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.104342555 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.130805023 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.124181801 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.102560131 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.123300274 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.122573392 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.102226892 seconds)
  done (took 3.201907897 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.198239978 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.136822702 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.119636695 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.151125341 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.139156228 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.13781022 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.152171562 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.120256596 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.137174064 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.156727376 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.138725285 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.119353954 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.153430656 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.14733878 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.138978426 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.154572896 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.152739474 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.153788282 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.119412717 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.138936665 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.156384768 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.139092833 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.155316437 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.120747428 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.139398095 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.13981443 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.138521211 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.130270139 seconds)
  done (took 4.77658804 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100417776 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.119315684 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.102227586 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.120979282 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.101720758 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.122124986 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.12052103 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.102324586 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.120864985 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.101953594 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.120119809 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.119438529 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.103678525 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.120426119 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.102036439 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.12083477 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100807179 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.121748739 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.121193657 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102803689 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.120434494 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10156158 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.120665094 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.119828556 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103229481 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.119629976 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.102846948 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.120647281 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101763374 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.121580572 seconds)
  done (took 4.171708278 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.112743625 seconds)
    (2/2) benchmarking "in"...
    done (took 0.149158729 seconds)
  done (took 1.058558363 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.109550019 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.140346412 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.120980941 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.104004856 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.133256378 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.123408017 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.115054373 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.134513996 seconds)
  done (took 1.777124663 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.169761832 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.175036105 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.109700922 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.138824867 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.174866375 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.165808409 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.17194795 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.13018185 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.12622664 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.100727918 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.170999672 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.119845966 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.129713089 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.105434161 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.128164759 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.13475465 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.104325996 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.133608976 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.131565213 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.106048551 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.129202297 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.136401522 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.111132064 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.134936806 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.121947739 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.11124982 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.134033764 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.137235563 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.123773911 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.111500197 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.126664373 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.123021809 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.108416221 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.1304911 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.104457244 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.194034938 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118555738 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.126470752 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.129200449 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.110973114 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.13537431 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.124484065 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.112344596 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.126647045 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.132941452 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.110850574 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.131465078 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.12475053 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.100818139 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.124591735 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.124079861 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103520366 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.123655687 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.128911374 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.110239498 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.138116826 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.127000288 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.106469479 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.126579857 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.124477133 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.109055054 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.125720911 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.131054136 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.108339313 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.132279383 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.129569687 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110547651 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.127008545 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.125723372 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.106011922 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.129994212 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.146152991 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.113083549 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.131276772 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.131220972 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.104976567 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.126710098 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.132071699 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108958669 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.132661844 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.129912192 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.113075443 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.133874067 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.125295368 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.104734636 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.13304924 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.127328389 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.107874582 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.12231777 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.140159651 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.106989808 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.126045165 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.121756744 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.108549047 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.12536457 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.1286604 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.103050381 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.131233098 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.102407671 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.131983937 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.132288377 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.1092812 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.134577989 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.131731153 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.130886498 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.110336936 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.169763467 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.128183862 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.125402345 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.107581748 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.132340067 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.102540203 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.134182507 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.123953849 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107345928 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.12515756 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.130865159 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.111337916 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.127786067 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.131772409 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.113478419 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.132715361 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.127370058 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.103851033 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.127182032 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.129356941 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.125622579 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.133569583 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.127439639 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.106197831 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.128169814 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.130209739 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.109961822 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.128351987 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.131566893 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108629613 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.124810741 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.106778678 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.132339454 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.13238683 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.105878137 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.13024239 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.132565007 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.130398723 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.108614046 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.132858939 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.124374102 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.103293179 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.132850449 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.104781772 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.126443683 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.137537068 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.106108193 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.12965842 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.126944764 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.117296964 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.128045433 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.133898181 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.110098196 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.133567991 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.13405883 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.102772509 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.129029233 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.129126985 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.113675357 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.12878472 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.126511848 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.104876249 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.134711389 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.103582023 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.132173805 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.123468006 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.107834741 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.133873576 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.128298759 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.109850551 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.127032929 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.145241674 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.121642185 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.134554693 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.132518761 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.111004494 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.132223323 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.131511553 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.111813163 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.135730682 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.133783571 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.109500008 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.131094776 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.133567154 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.107913814 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.133048869 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.130632548 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113116908 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.124004076 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.128334667 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.102757765 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.132954765 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.133922546 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.111899049 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.13400445 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.108556946 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.131670275 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.139314356 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.128113355 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.111107214 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.124678119 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.111187501 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.1391543 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.133940313 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.114757451 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.135325622 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.13028762 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.107680187 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.138933918 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.130586407 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.111998759 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.130737295 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.124447573 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.103573169 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.134269484 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.131189414 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.107056262 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.126946482 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.114194835 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.136560927 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.130907802 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.104000373 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.134783593 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.139074371 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.106727752 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.132933368 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.129193788 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.132324191 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.122267684 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.125159986 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.128482083 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.114313046 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.134101236 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.105769191 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.134118166 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.132558644 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.113894272 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.13278262 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.130488115 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.109019431 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.137169775 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.129423865 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.104469362 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.129787703 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.110102087 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.126093589 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.130050517 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.113108355 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.131836404 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.128691687 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11806819 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.138316333 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.135973726 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111379228 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.135197955 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.137786792 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.115253572 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.131539084 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.13643722 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.107327436 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.126170416 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.130182103 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.104297413 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.130214418 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.128844989 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.113290086 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.140729824 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.133073893 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.111078042 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.137269823 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.131108476 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.114785924 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.146248432 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.128416327 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.105031484 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131614982 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.134153439 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.108960686 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.131018631 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.130765038 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.115491124 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.134947573 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.136812112 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.109229352 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.13003979 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.13512654 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.109143817 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.136734099 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.135648743 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.114322341 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.129587044 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.133619821 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.106078342 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.133564122 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.120745171 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.109322876 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.132823989 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.131873834 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.110108825 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.13275922 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.128479364 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.103944949 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.131264542 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.135670703 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.10978658 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.135921069 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.132501292 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.111564486 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.131387031 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.106746535 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.136095124 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.133425234 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.116003022 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.127955263 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.125616431 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.103724025 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.136345055 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.13256225 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.111904808 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.125855853 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.129430992 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.115000236 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.131937159 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.105954386 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.142341923 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.136899087 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.112175822 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.136256793 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.120773159 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.105432752 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.134929611 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.123397912 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.105483297 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.125721949 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.121801789 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111952815 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.129931336 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.13005536 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.109061209 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.126400277 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.125010138 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.113764513 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.130431538 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.110739505 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.132046331 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.135931698 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.105383939 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.134584172 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.13333773 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.110574332 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.134177586 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.133145028 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.110778299 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.130839099 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.13258093 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.107179993 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.129134137 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.101098638 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.125907574 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.132073717 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.102306278 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.130218697 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.131542826 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.104649041 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.127340782 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.128996269 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.103757026 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.132485061 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.129308704 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.107598744 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.137527911 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.125836222 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.108893557 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.131071733 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.129154563 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.104497438 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.132950771 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108598041 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.134116351 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.132026794 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.110081064 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.129258117 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.130437932 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.108959689 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.131508918 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.131612469 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.111432827 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.125005872 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.136255489 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.116767863 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.131004351 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.131813444 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.110595536 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.130552345 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.133505982 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.114939703 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.130446264 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.139380519 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.11311736 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.132749196 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.127666305 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.110234762 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.130421786 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.134242967 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.107223429 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.139193649 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.128338065 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.11890909 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.134080854 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.136938449 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.110867112 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.129754155 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.11430025 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.137817943 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.133828036 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.114250757 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.133133373 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.124563065 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.103175214 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.126829469 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.125306786 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.120210622 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.135795357 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.12837166 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110294617 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.131169644 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.130365454 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.113942105 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.124110722 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.105986697 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.130140776 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.135079139 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.128629787 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.106865531 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.134653258 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.108620314 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.133055946 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.130619356 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.125858572 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.110729051 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.137314192 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.129649954 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.107533629 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.131139832 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.113075266 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.129401919 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.125554497 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.103572858 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.138462426 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.13360867 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.134570958 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.109539956 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.133088067 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.129588593 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.110447667 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.138088348 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.107325001 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.131513704 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.127905759 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.110921824 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.136779583 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.122779626 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.108739431 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.142783503 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.134247071 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.130642194 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.107524595 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.128146381 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.113398755 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.134582898 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.130176993 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.105523739 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.128125959 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.131295516 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.105186281 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.134724269 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.14351274 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.112904144 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.133626084 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.134383112 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.112533541 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.133904673 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.109251665 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.131116294 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.139063135 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.110053263 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.143165638 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.12920163 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.105318546 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.134861351 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.135807775 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.110979438 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.132834106 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.106049916 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.128136362 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.123821951 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.109294982 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.135428137 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.130660887 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.111235885 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.130963781 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.129806592 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.110658256 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.142305891 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.126033133 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.109907033 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.139269771 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.134194767 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.112490756 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.132838339 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.134562232 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.112593358 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.130629349 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.133984951 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.10824513 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.128941151 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.135196747 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.114311009 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.142194782 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.129531327 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.102060249 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.131124338 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.127197978 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.104778472 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.135293979 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.134407144 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.113836283 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.132762909 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.126581706 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.115105558 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.136562054 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.132173085 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.108384552 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.130314618 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.133479897 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.10728015 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.130202277 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.127470395 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.11668614 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.135872501 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.132950208 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.114333971 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.124578312 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.140747073 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.11617287 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.139225711 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.129204843 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.103889915 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.124497297 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.110866011 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.137144306 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.13315352 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.111791804 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.134210808 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.130472917 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.113759626 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.134134026 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.128325491 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.116288564 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.135188026 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.106465997 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.133673822 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.130807176 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.112802156 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.129374692 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.134927999 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.116626288 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.139156559 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.142771027 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.114307619 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.132209582 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.128955232 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.11416651 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.131148467 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.132104127 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.113302473 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.130213413 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.125276494 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.114039764 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.139173664 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.136542923 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.119118561 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.142835023 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.133805971 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.115441491 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.141450515 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.135135929 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.110136373 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.136889307 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.107504254 seconds)
  done (took 75.148570389 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.187620149 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119650079 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.134487474 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.129917865 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.161698001 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113485385 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.135073359 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.136323887 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.115496835 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.151150155 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.133160437 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111941267 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.160132571 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.167395496 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.16265077 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.147113377 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.134792891 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.138421764 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.111821566 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.13990931 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.157759222 seconds)
  done (took 3.821720889 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.133421536 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.15014277 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.149287427 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.154373707 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.140374215 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.146972522 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.148185238 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.149612204 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.151471503 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.122626935 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.152301903 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.14708429 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.142111595 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.143524756 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.143011987 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.122216937 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.156619683 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.140965826 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.148425659 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.148206814 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.146112047 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.14979921 seconds)
  done (took 4.056312808 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.118019583 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.133754724 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.114931694 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.130302062 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.134988913 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.109150314 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.139085949 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.130947689 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.119512305 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.134845103 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.109678517 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.135196189 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.141794617 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.110797642 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.13405697 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.13032319 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.119025372 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.13371205 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.135267483 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.110398845 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.152531656 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.129609708 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.112322558 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.133519586 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.148146357 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.114926605 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.136409493 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.11435649 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.127509952 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.134698123 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.110476251 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.135333661 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.13336154 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.107724277 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.129747233 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.112274609 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.133554894 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.130427906 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.110824515 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.134084886 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.131581983 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.114424224 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.139793327 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.132926028 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.109914932 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.132977389 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.133785302 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.108965494 seconds)
  done (took 6.943688823 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.183009672 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.191347975 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.146662139 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.182114967 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.158493086 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.152827678 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.115326981 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.158768522 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.141695397 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.145747727 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.165208356 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.157831749 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.142960256 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.130447258 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.140787005 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.143109311 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.143495524 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.115018417 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.148785061 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.144193328 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.151517001 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.12021761 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.159178864 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.157488725 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.142861246 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.138739053 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.137004053 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.120276685 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.155813409 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.153275189 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.149377239 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.145158578 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.159471317 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.144354822 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.116252871 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.141814483 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.158956885 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.140832869 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.120325628 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.143071888 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.144401891 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.142006816 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.12212314 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.160220789 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.139391559 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.143802378 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.138979469 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.113735308 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.156654695 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.146007017 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.156244321 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.158542417 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.144812346 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.1221027 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.143620856 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.158099118 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.140778816 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.135909896 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.122788739 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.159009507 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.145152032 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.1413328 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.161929218 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.123850155 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.14797644 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.160568917 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.143325746 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.14085608 seconds)
  done (took 10.91347548 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.145737604 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.142696246 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.157369352 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.157909496 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.141949084 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.14311932 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.121002127 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.141974462 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.141744538 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.15090399 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121916694 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.254995755 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.139013246 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.14972125 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.121571335 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.143061198 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.142777494 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.142419441 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.121256885 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.142490761 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.144557873 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.158959324 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.144971294 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.157860904 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.159123887 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.117022205 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.143158929 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.143430204 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.157990048 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.141960982 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.15856572 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.120947004 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.142750912 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.157949433 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.162490272 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.144030255 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.112664475 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.143105171 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.14306579 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.142058344 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.118497772 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.156750406 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.142577076 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.139120177 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.143071222 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.124195642 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.159910133 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.161593884 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.150514242 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.15475837 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.144656521 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.160971895 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.141388873 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.120247356 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.156850747 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.167061418 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.157873266 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.158889273 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.144132514 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.158197689 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.159305516 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.169156317 seconds)
  done (took 9.999393845 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.110792061 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.130942289 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.111789618 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.133327053 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.109549262 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.133012215 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.1304049 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.111067336 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.133465743 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.112970107 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.138094493 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.131942919 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109814258 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.132053993 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.111530092 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.134628625 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.111773575 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.136122869 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.136394511 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.113472132 seconds)
  done (took 3.366230408 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.124323074 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.158705574 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.137572974 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.147397142 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.116328094 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.148555637 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.139368171 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116973561 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.137709355 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.139543012 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.151816132 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.129756117 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.140174916 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.147521957 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.151273184 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.147030014 seconds)
  done (took 3.132769363 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.138248896 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.158644735 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.217281345 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.120010823 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.144929948 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.14707341 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.118625409 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.147106942 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.119060045 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.149816018 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.147790786 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.147257441 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.118702003 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.143297484 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.118017548 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.142330039 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.136715729 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.120511315 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.138843231 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.193698361 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.14630287 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.144507846 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.12099 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.147015691 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.146701353 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.149920247 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.128261179 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.146353126 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.144253101 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.121752912 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.151278907 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.15096707 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.120993042 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.154935755 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.142506075 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.123477382 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.149353427 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.145951011 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.123208623 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.142870641 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.142382308 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.119828323 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.142692454 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.14413346 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.11907669 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.149495142 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.142091387 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.127577853 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.150020866 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.145055181 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.120596636 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.151286872 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.144543729 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.148978719 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.126461033 seconds)
  done (took 8.641234961 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.128668437 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.14186607 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.152913357 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.112278772 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.139946845 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.141376399 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.11654997 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.142170886 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.145535321 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.117100693 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.151602962 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.142287231 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.118209842 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.139173356 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.141080324 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.117305584 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.13385739 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.139133506 seconds)
  done (took 3.32833802 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.12105881 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.13864689 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.119972713 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.13908236 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.140815264 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.115014458 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.137380599 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.140020317 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117658201 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.146574151 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.14343542 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.116833482 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.136928306 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.115960289 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.139324208 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.140284144 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.117266429 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.139377051 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.13934847 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.115984735 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.144783019 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.117515468 seconds)
  done (took 3.788600672 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.127707593 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.220655135 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.124353559 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.229626228 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.115187721 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.136337558 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.151079768 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.114219742 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.156673973 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.134699939 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.135083552 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.115655548 seconds)
  done (took 2.67389946 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.143397376 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.179836063 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.139688131 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138150495 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131396405 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.145699874 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.145458481 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.145397922 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.158129412 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.163574697 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12232269 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.158884409 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.158231045 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.157903769 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.151496109 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.153303298 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.143411076 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121776707 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13984441 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.170036384 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.14643042 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.159418289 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.148182433 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1267134 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.148280095 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.160808772 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.162367569 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.168656755 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.147378821 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.161200952 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.156419744 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124405847 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.156635812 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.164225014 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140763483 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.158496018 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.147116569 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.17213062 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.155227181 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.161963422 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.116664454 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.15323288 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.161783861 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.156059607 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.158119015 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127611495 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.155075476 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.146947865 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.146161483 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.177610156 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.155817065 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.161939594 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.15298294 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.159722593 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.158776178 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.17907888 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.164629517 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.16047456 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.151626845 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.163769244 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.160265369 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.152576695 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.163994919 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.167059668 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129494848 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.163328673 seconds)
  done (took 10.998125863 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.188845553 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.121393411 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.149111923 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.167979285 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.162485733 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.148514527 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123841962 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.146781057 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.148215648 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.143460917 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.201185932 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.147386388 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.162517057 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.161817928 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124056789 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.146689864 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.147713419 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.163461775 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117648506 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.202893416 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124479969 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.162128923 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.161204991 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.161218771 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.164459236 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.153456412 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.14837228 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.147098219 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.14748673 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124133976 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.156379586 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.146811341 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.162812393 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.142381448 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.161445737 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123961201 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.147122249 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.158007178 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.149269866 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136459898 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.162921743 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.195155393 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127817503 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.147856104 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.165214107 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.148597022 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.151665651 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124548555 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.153199231 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.144662732 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.168096606 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.168289079 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.167119454 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.163610864 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124006212 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.148418254 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.14818103 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.149727493 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124470066 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.154091187 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.162702274 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.147895313 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.179106352 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.147852007 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.149276604 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.161829487 seconds)
  done (took 10.966201824 seconds)
done (took 200.065583371 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.182019706 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.204413089 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.179235998 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.198791686 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.109856958 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.169960015 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.143332042 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.178973017 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.135132819 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.135077503 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.110000367 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.140245718 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.199692792 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.110263588 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.134915247 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.114173716 seconds)
  done (took 3.367020915 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.235434433 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.329685994 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.158541894 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.140216692 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.118657447 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.138626552 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.138259558 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.118257069 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.137272324 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.151378884 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.11317665 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.138434402 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.148781818 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.13686105 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.115562682 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.137457568 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.148734084 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.113918781 seconds)
  done (took 3.65217848 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.137957745 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.192635201 seconds)
  done (took 1.266968684 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.150462214 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.246885755 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.324959099 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.201225729 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.17221938 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.163937741 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.200179153 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.156239453 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.230450949 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.161494379 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.161188054 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.142086298 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.171270591 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.15062016 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.1305182 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.143992091 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.173049419 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.155136045 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.128444707 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.144525109 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.165661369 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.119463037 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.151217816 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.153712929 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.221279619 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.162107601 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.144798278 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.142964777 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.121946475 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.150589418 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.38837265 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.161874057 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.159933164 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.211360041 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.149712922 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.228092457 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.12780357 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.141744454 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.150299165 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.118043043 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.147570648 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.149039222 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.162613929 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.141666054 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.124706995 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.156184222 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.145384514 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.120291091 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.153264853 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.154732461 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.152248016 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.150973563 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.205149622 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.154336163 seconds)
  done (took 9.927946305 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.930853622 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.184602577 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.11767566 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.086266055 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.173360496 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.130605361 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.937283364 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.165940152 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.285213124 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.952388585 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.132647647 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.155484679 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.291831064 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.323242006 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.212655862 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.424052789 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.769472097 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.155136639 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.171456379 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.193054148 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.149250098 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.173285285 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.162766281 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.47138461 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.142777447 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.114048254 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.1594894 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.152202229 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.227572692 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.11479275 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.14534401 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.25238553 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.312730065 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.260314319 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.142858359 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.114993035 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.138866338 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.23702179 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.327122008 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.277699267 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.214645681 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.135851628 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.115538255 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.156549 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.162866391 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.134964295 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.210028213 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.24425383 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.24523013 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.122955004 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.154977005 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.152635553 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.152903181 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.207238402 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.137845106 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.402785139 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.404078701 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.140168938 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.150630532 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.162285073 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.325986296 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.139319999 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.289262808 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.169643739 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.273396598 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.114351455 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.867037361 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.213654968 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.139203868 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.150418083 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.125559392 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.147668126 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.153678325 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.205890524 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.421040404 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.157641514 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.145084528 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114115382 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.280255762 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.140542756 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.139986604 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.212845501 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.144961395 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.150381642 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.133974742 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.157527612 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.2424065 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.296573213 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.157323992 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.151184991 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.147873456 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.154877258 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.119968565 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.282917874 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.281934551 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.228870367 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.262009341 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.156284988 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.233989787 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.212689724 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.153798221 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.241275645 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.126302362 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.16129275 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.155336473 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.27968017 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.182020235 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.141059276 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.146382564 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.150961393 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.190642814 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.124618573 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.152705492 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.243219375 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.513695908 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.237104221 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.139095936 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.122010906 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.154473084 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.210852713 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.149802492 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.320935365 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.152818483 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.240144625 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.126209567 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.14103354 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.151839311 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.213163378 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.158300518 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.153456315 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.157762484 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.15228337 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.302199253 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.281791502 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.158547377 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.298144479 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.225228869 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.152206412 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.245674532 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.151925392 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.217677112 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.154841322 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.156310252 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120514957 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.863059142 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.13258555 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.150822418 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.148006834 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.232289295 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.140956557 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.11835608 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.141787334 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.136286808 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.864285346 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.119440025 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.139511539 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.118107371 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.153997253 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.154567321 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.150758458 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.146317656 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.212483827 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.297265287 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.156033374 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.151980009 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.141248504 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.211125805 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.1450867 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.116366013 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.142611032 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.141355593 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.130276131 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.148296484 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.142988861 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.222219905 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.230384375 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.288296682 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.610871197 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.142156057 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.116643308 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.318234391 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.116824614 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.398003644 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128673799 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.315849836 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.219181411 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.14161677 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.405886083 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.244849216 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.235334632 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.11942248 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.246532651 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.139481347 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.128641979 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.238444935 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.143284279 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.13039345 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.231687336 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.161282165 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.160321967 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.226178405 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.116194803 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.303490061 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.138110932 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.221042571 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.145183816 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.155786152 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.382650225 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.141098446 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.141772759 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.23421145 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.147140609 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.117063488 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.755350356 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.14193925 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.155759128 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.13030953 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.315434574 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.215663817 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.154589899 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.152295765 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.156661003 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.213891751 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.285133187 seconds)
  done (took 54.521316476 seconds)
done (took 73.662084365 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.363823738 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.320151381 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.372240445 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.268288298 seconds)
  done (took 2.381989973 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.265077421 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.191528179 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.249776384 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.115074163 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.261043826 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.140279986 seconds)
  done (took 2.199248447 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.5865224 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.488270898 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.417018786 seconds)
  done (took 2.469227366 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.297006214 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.303754433 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.402669961 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.536766355 seconds)
  done (took 2.658486297 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.317925463 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.167319723 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.134182706 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.215220694 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.290865453 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.314030268 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.188785232 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.242737694 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.169603874 seconds)
  done (took 3.070620282 seconds)
done (took 13.762093043 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.328051721 seconds)
    (2/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.231360401 seconds)
    (3/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.312928877 seconds)
    (4/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.286317241 seconds)
    (5/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.208080894 seconds)
    (6/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.353980493 seconds)
    (7/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.313873513 seconds)
    (8/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.19600293 seconds)
    (9/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.32176076 seconds)
    (10/224) benchmarking ("map", abs, BigInt, true)...
    done (took 0.316518542 seconds)
    (11/224) benchmarking ("perf_sum", Float64, false)...
    done (took 0.166812257 seconds)
    (12/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.129243254 seconds)
    (13/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.337897941 seconds)
    (14/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.2794556 seconds)
    (15/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.279116115 seconds)
    (16/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.188565705 seconds)
    (17/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.133393019 seconds)
    (18/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.228439917 seconds)
    (19/224) benchmarking ("map", identity, Int8, false)...
    done (took 0.298232578 seconds)
    (20/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.156011095 seconds)
    (21/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.170664665 seconds)
    (22/224) benchmarking ("map", identity, Bool, false)...
    done (took 0.297087957 seconds)
    (23/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.165911203 seconds)
    (24/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.13147146 seconds)
    (25/224) benchmarking ("perf_sum", Bool, true)...
    done (took 0.165661105 seconds)
    (26/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.293898168 seconds)
    (27/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.152114334 seconds)
    (28/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.256925481 seconds)
    (29/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.176795073 seconds)
    (30/224) benchmarking ("map", identity, Float32, true)...
    done (took 0.200715994 seconds)
    (31/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.167048361 seconds)
    (32/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.186749343 seconds)
    (33/224) benchmarking ("perf_countequals", "Int8")...
    done (took 0.185989549 seconds)
    (34/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.148884912 seconds)
    (35/224) benchmarking ("perf_sum", Int8, false)...
    done (took 0.211897652 seconds)
    (36/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.166915822 seconds)
    (37/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.216077431 seconds)
    (38/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.164897016 seconds)
    (39/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.22399154 seconds)
    (40/224) benchmarking ("perf_sum", Bool, false)...
    done (took 0.154992179 seconds)
    (41/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.181628445 seconds)
    (42/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.281421165 seconds)
    (43/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.135797952 seconds)
    (44/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.129971966 seconds)
    (45/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.246041048 seconds)
    (46/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.181517379 seconds)
    (47/224) benchmarking ("map", identity, Int8, true)...
    done (took 0.157548444 seconds)
    (48/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.244052754 seconds)
    (49/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.186583666 seconds)
    (50/224) benchmarking ("perf_sum", Float32, false)...
    done (took 0.136682607 seconds)
    (51/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.170149347 seconds)
    (52/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.289203998 seconds)
    (53/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.242739297 seconds)
    (54/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.234204742 seconds)
    (55/224) benchmarking ("map", abs, BigInt, false)...
    done (took 0.137862133 seconds)
    (56/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.145565854 seconds)
    (57/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.215169074 seconds)
    (58/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.231489013 seconds)
    (59/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.195933042 seconds)
    (60/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.162101201 seconds)
    (61/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.126955361 seconds)
    (62/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.141722658 seconds)
    (63/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.180053742 seconds)
    (64/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.227341544 seconds)
    (65/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.162740747 seconds)
    (66/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.17275014 seconds)
    (67/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.14906134 seconds)
    (68/224) benchmarking ("map", abs, Bool, true)...
    done (took 0.17372807 seconds)
    (69/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.239981803 seconds)
    (70/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.156242829 seconds)
    (71/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.135661558 seconds)
    (72/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.13098695 seconds)
    (73/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.136322588 seconds)
    (74/224) benchmarking ("map", abs, Float32, true)...
    done (took 0.198627249 seconds)
    (75/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.111614405 seconds)
    (76/224) benchmarking ("perf_countequals", "Float32")...
    done (took 0.166501652 seconds)
    (77/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.114465145 seconds)
    (78/224) benchmarking ("map", identity, Int64, false)...
    done (took 0.236368209 seconds)
    (79/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.134642698 seconds)
    (80/224) benchmarking ("map", abs, Float64, false)...
    done (took 0.192129037 seconds)
    (81/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.215114044 seconds)
    (82/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.242365476 seconds)
    (83/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.226762335 seconds)
    (84/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.150972606 seconds)
    (85/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.110769414 seconds)
    (86/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.153998196 seconds)
    (87/224) benchmarking ("perf_countequals", "Int64")...
    done (took 0.165619733 seconds)
    (88/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.153624821 seconds)
    (89/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.112818861 seconds)
    (90/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.151733761 seconds)
    (91/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.298806361 seconds)
    (92/224) benchmarking ("perf_countequals", "Bool")...
    done (took 0.167382898 seconds)
    (93/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.240440289 seconds)
    (94/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.113349036 seconds)
    (95/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.23201431 seconds)
    (96/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.153578542 seconds)
    (97/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.132305788 seconds)
    (98/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.250208395 seconds)
    (99/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.156016029 seconds)
    (100/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.238287299 seconds)
    (101/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.145511526 seconds)
    (102/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.130355762 seconds)
    (103/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.137764452 seconds)
    (104/224) benchmarking ("perf_sum", Int8, true)...
    done (took 0.131046959 seconds)
    (105/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.15882987 seconds)
    (106/224) benchmarking ("perf_sum", Int64, true)...
    done (took 0.164924082 seconds)
    (107/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.11263634 seconds)
    (108/224) benchmarking ("map", abs, Int64, false)...
    done (took 0.191381263 seconds)
    (109/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.109745516 seconds)
    (110/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.138153529 seconds)
    (111/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.228515379 seconds)
    (112/224) benchmarking ("perf_sum", Float64, true)...
    done (took 0.158913692 seconds)
    (113/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.113344359 seconds)
    (114/224) benchmarking ("map", identity, BigInt, true)...
    done (took 0.199456475 seconds)
    (115/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.198112299 seconds)
    (116/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.130387969 seconds)
    (117/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.153178683 seconds)
    (118/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.137843974 seconds)
    (119/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.142515936 seconds)
    (120/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.153429481 seconds)
    (121/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.109733978 seconds)
    (122/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.152516095 seconds)
    (123/224) benchmarking ("map", identity, Float64, false)...
    done (took 0.192311232 seconds)
    (124/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.180523461 seconds)
    (125/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.131186404 seconds)
    (126/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.180830548 seconds)
    (127/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.13732038 seconds)
    (128/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.110871622 seconds)
    (129/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.155288148 seconds)
    (130/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.124611966 seconds)
    (131/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.189203177 seconds)
    (132/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.145224414 seconds)
    (133/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.150955468 seconds)
    (134/224) benchmarking ("map", abs, Float32, false)...
    done (took 0.135401872 seconds)
    (135/224) benchmarking ("map", identity, Int64, true)...
    done (took 0.115959539 seconds)
    (136/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.136648428 seconds)
    (137/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.112178566 seconds)
    (138/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.199799975 seconds)
    (139/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.145149311 seconds)
    (140/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.126631145 seconds)
    (141/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.159327369 seconds)
    (142/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.137838938 seconds)
    (143/224) benchmarking ("perf_sum", Float32, true)...
    done (took 0.127521587 seconds)
    (144/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.148865719 seconds)
    (145/224) benchmarking ("map", identity, Float64, true)...
    done (took 0.115159733 seconds)
    (146/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.153024278 seconds)
    (147/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.170792584 seconds)
    (148/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.136478825 seconds)
    (149/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.208917772 seconds)
    (150/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.185766675 seconds)
    (151/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.170953514 seconds)
    (152/224) benchmarking ("perf_countequals", "Float64")...
    done (took 0.142260502 seconds)
    (153/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.153631062 seconds)
    (154/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.108794543 seconds)
    (155/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.159701235 seconds)
    (156/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.249800072 seconds)
    (157/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.151664277 seconds)
    (158/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.111505332 seconds)
    (159/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.139165008 seconds)
    (160/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.166868461 seconds)
    (161/224) benchmarking ("map", identity, Float32, false)...
    done (took 0.116318382 seconds)
    (162/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.145387288 seconds)
    (163/224) benchmarking ("perf_sum", Int64, false)...
    done (took 0.134194128 seconds)
    (164/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.15219457 seconds)
    (165/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.112614423 seconds)
    (166/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.140033171 seconds)
    (167/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.160608706 seconds)
    (168/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.124729442 seconds)
    (169/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.222528867 seconds)
    (170/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.19931115 seconds)
    (171/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.157243354 seconds)
    (172/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.127619812 seconds)
    (173/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.138498944 seconds)
    (174/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.114087686 seconds)
    (175/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.151687261 seconds)
    (176/224) benchmarking ("map", abs, Int64, true)...
    done (took 0.119900246 seconds)
    (177/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.159194046 seconds)
    (178/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.139580653 seconds)
    (179/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.203735397 seconds)
    (180/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.153919267 seconds)
    (181/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.155762617 seconds)
    (182/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.230476228 seconds)
    (183/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.113734046 seconds)
    (184/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.137630028 seconds)
    (185/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.120870454 seconds)
    (186/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.14524329 seconds)
    (187/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.128660868 seconds)
    (188/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.138293767 seconds)
    (189/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.154438006 seconds)
    (190/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.147656014 seconds)
    (191/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.16286609 seconds)
    (192/224) benchmarking ("map", abs, Int8, true)...
    done (took 0.200627453 seconds)
    (193/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.115059685 seconds)
    (194/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.155022804 seconds)
    (195/224) benchmarking ("map", identity, BigInt, false)...
    done (took 0.110294515 seconds)
    (196/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.140890948 seconds)
    (197/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.159668527 seconds)
    (198/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.126395036 seconds)
    (199/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.157218721 seconds)
    (200/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.163075929 seconds)
    (201/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.11320165 seconds)
    (202/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.137350137 seconds)
    (203/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.111528566 seconds)
    (204/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.135911683 seconds)
    (205/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.135125745 seconds)
    (206/224) benchmarking ("map", identity, Bool, true)...
    done (took 0.142104482 seconds)
    (207/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.12704036 seconds)
    (208/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.167412713 seconds)
    (209/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.136422338 seconds)
    (210/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.111621831 seconds)
    (211/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.145958903 seconds)
    (212/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.120532663 seconds)
    (213/224) benchmarking ("map", abs, Bool, false)...
    done (took 0.137893099 seconds)
    (214/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.12671833 seconds)
    (215/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.138477234 seconds)
    (216/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.156645307 seconds)
    (217/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.13001094 seconds)
    (218/224) benchmarking ("map", abs, Int8, false)...
    done (took 0.138054858 seconds)
    (219/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.122259922 seconds)
    (220/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.155282125 seconds)
    (221/224) benchmarking ("map", abs, Float64, true)...
    done (took 0.143358615 seconds)
    (222/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.110356857 seconds)
    (223/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.138956722 seconds)
    (224/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.127326125 seconds)
  done (took 39.325433252 seconds)
done (took 40.315459763 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.546652459 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.162159192 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.129438997 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.158286186 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.214261993 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.160477269 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.16584198 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.133187349 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.163747887 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.158197803 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.119963147 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.16292663 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.15977949 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.216408037 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.16103438 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.128996379 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.15342709 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.164320638 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.137286671 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.168863346 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.213079054 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.15248795 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.163394398 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.122933209 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.214697727 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.150612167 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.159928067 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.129784884 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.16558652 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.156900262 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.161250941 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.128309869 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.172618338 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.167043378 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.123394418 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.157967835 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.148624204 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.120430435 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.161001299 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.131505706 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.165434163 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.159088276 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.160594772 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.13071475 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.161278324 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.156098136 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.119862088 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.163221708 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.146511394 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.131467484 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.150291814 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.167829467 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.127905166 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.148424401 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.147168286 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.123489719 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.162205525 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.147211224 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.141998032 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.151540146 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.151006113 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.122033805 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.1615331 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.120837316 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.155929316 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.151102701 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.129469254 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.159265722 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.154726446 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.123074655 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.15275229 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.161274273 seconds)
done (took 12.417380626 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.12752401 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.211750747 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.244850221 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.225238225 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.187781906 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.170042853 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.14617414 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.181449345 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.167244927 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.174809608 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.188375175 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.151755418 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.250962419 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.137576147 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.169981806 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.160706021 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.164914747 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.140551108 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.252070278 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.152154378 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.187348809 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.16697033 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.190276289 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.173459279 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.128177206 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.180206114 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.165035411 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.156998884 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.127905226 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.174162164 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.176574982 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.156909838 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.129496153 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.178014273 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.168189967 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.162900598 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.144195853 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.158201408 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.15500801 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.132407172 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.171185985 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.174415345 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.155461105 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.168243575 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.130431663 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.165409023 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.164578431 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.138189058 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.160991565 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.159397251 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.16238613 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.161353301 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.165381687 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.164213652 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.166256735 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.135157613 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.169925362 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.169403649 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.161834909 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.140319628 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.160368527 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.159339411 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.13601157 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.185868757 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.159801311 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.166083056 seconds)
  done (took 12.011421347 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.151302203 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.197018549 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.171401375 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.169836826 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.163662461 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.117777119 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.147366388 seconds)
  done (took 2.175308244 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.120766544 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.219382467 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.218364335 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.246753907 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.213522964 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.226661313 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.173446439 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.148396757 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.162650238 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.161228345 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.217319915 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.280303301 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.130214717 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.169824718 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.219516669 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.150344107 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.224875677 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.149580784 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.162206407 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.223626137 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.166360218 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.152824906 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.169297198 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.150549811 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.21394208 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.154783009 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.27930488 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.17333665 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.126911771 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.160371521 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.167220081 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.260551124 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.21450512 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.168683172 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.154693672 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.218005115 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.213910733 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.166544723 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.232939252 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.158081445 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.214834695 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.133573844 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.162055288 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.16316927 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.159996964 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.20068661 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.141574066 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.167098529 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.16163903 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.22371737 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.164015106 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.219056438 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.132150032 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.16393694 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.164971052 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.166593017 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.143386306 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.162821455 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.219576018 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.167141347 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.215138345 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.214655972 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.217667351 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.243841878 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.146711435 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.246101611 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.214214818 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.135359523 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.164378818 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.167246483 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.220179758 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.162033728 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.137807939 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.200366027 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.165203642 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.214975425 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.220240952 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.159020291 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.169146134 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.125387452 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.162166976 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.156960755 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.208835985 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.138387216 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.163703147 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.176263443 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.166755157 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.138786194 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.15633126 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.178645961 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.161343664 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.13553026 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.167112837 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.162115197 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.167358505 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.218790757 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.163782604 seconds)
  done (took 18.579443094 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.12436498 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.151861984 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.129369166 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.154281634 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.151704611 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.122899094 seconds)
  done (took 1.913273664 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.156353369 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.169177502 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.177050157 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.16669198 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.223482318 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.224854417 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.223306797 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.167232036 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.182361513 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.175942938 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.224369932 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.226378959 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.220172999 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.171242273 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.224337689 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.167859554 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.224917224 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.163292289 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.176551811 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.131866669 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.17190187 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.16733057 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.160150001 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.218819572 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.168976825 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.138228309 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.164785027 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.17306009 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.171920382 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.137479831 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.166137542 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.167449789 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.161246679 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.13582898 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.254597813 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.133134391 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.161654901 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.172506005 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.171553949 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.14222124 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.255662092 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.146378308 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.18042303 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.171187269 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.163760631 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.159077618 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.144656697 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.163904657 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.224625943 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.172646273 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.170232515 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.165242409 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.165878497 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.143486938 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.159168452 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.163223501 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.170432121 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.227784981 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.168008315 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.131502355 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.166022382 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.168227452 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.163407161 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.141270459 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.168770442 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.170758199 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.161496115 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.164584116 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.131616735 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.168797491 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.171601079 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.136963965 seconds)
  done (took 13.584070482 seconds)
done (took 49.310148968 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.158519152 seconds)
  done (took 2.239447996 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.021671573 seconds)
  done (took 2.105396462 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 19.297349263 seconds)
  done (took 20.415114288 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.62452286 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.708385506 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.041517503 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.20649155 seconds)
  done (took 3.661917924 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.062442459 seconds)
  done (took 2.163871437 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.389611889 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.289931244 seconds)
  done (took 1.769386762 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.952995586 seconds)
  done (took 2.052153206 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.533172363 seconds)
  done (took 3.627067151 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.419783104 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.230731027 seconds)
  done (took 1.755314434 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.722445685 seconds)
  done (took 1.823922264 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 36.852001904 seconds)
  done (took 37.952984253 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.278836797 seconds)
  done (took 1.392640905 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.348286479 seconds)
  done (took 1.450496557 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.97040281 seconds)
  done (took 5.075146776 seconds)
done (took 88.582836605 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.134761572 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.165904383 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.164510371 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.135201802 seconds)
  done (took 1.699497426 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.143130636 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.167677081 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.171617778 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.139237313 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.172874332 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.168802712 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.136961581 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.172054571 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.162912602 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.168489566 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.139631276 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.16510732 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.169138064 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.134025033 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.161552862 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.167997586 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.139316255 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.165667713 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.165482122 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.164013688 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.137187465 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.165467216 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.166736824 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.136575262 seconds)
  done (took 4.892797527 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.135411192 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.156821647 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.131263525 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.157220734 seconds)
  done (took 1.695935115 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.143173889 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.181432975 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.180212229 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.170099227 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.151829361 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.1790756 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.160085363 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.129757344 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.161739097 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.171633975 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.133011989 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.184213559 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.180829985 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.166323833 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.144037363 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.158012175 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.166650791 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.153699203 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.173712356 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.173368112 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.130449717 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.172473948 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.162052617 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.176834272 seconds)
  done (took 5.020093126 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.247908068 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.147572215 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.189157983 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.218233874 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.19105441 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.16328332 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.19364372 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.141442161 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.171298341 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.16720617 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.168164755 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.228116351 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.137515941 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.170904357 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.16990475 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.171076302 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.141895625 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.167692233 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.17006244 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.176670336 seconds)
  done (took 4.647516353 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.136213522 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.157362129 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.12297145 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.157946171 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.164192214 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.130167701 seconds)
  done (took 1.985901327 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.123997574 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.150030939 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.13945288 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.151673967 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.126549179 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.151652969 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.149263067 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.125670255 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.150916055 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.120863894 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.150847932 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.149735921 seconds)
  done (took 2.815271048 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.346516425 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.126422448 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.16260369 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.155511782 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.162617745 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.124310553 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.174111184 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.155246714 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.268304121 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.15967775 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.174045459 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.235503926 seconds)
  done (took 3.363937531 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264792454 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165782016 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.296450314 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.440336638 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207708261 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.216800423 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.355016533 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.220010835 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.242975034 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.187438592 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24824689 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204183186 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201445168 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230380812 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187427294 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.214323215 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224986518 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.287036249 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199233653 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.26385977 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21397337 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.218625062 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.262907051 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.199216109 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153885302 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236389533 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.135683135 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173222058 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224115538 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220417192 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.258266287 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196681753 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.187232753 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259494079 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.306087748 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23568491 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.369630177 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180177671 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.246397362 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.263829351 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.319814164 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162111839 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.281256817 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20340358 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.178092308 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234010884 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207593375 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.233636327 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.181478491 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.187950196 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244422005 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229456492 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.270965393 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.186850388 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.359116026 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195659707 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.196734308 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230297608 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.275113933 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.246003413 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217526507 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.167721393 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.234897054 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234645702 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26421105 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.194962746 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.224536877 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.173203865 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229260063 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.249835612 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239033989 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.252876464 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.238737371 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182044544 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215440803 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.220721083 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203714476 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229420332 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211613356 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.167378014 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198842356 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183812557 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172412992 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.203572842 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168974233 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.288399751 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150865737 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.268540886 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257569471 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.208214083 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.212945473 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215804972 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217773736 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.196699135 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.167041697 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195229483 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.213897708 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206898477 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17829087 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.207908076 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193242586 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.175402558 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20232295 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.137269817 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209663774 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.184960303 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218800825 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214924978 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.179215466 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.215514246 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.198759967 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.210310398 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223076686 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238673913 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179806212 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179914049 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247179425 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20696233 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.186742292 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.228572329 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.274249998 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.217003649 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184834138 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223771342 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249265465 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.190584759 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243242106 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192197481 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181789839 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.205998951 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209904881 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.209293697 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.205065792 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176193901 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.204594396 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.249589505 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.17413462 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.183734837 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226790989 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.174882825 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144958752 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193291219 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184417054 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.189674247 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.201982339 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.190355249 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205143935 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210185124 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.203594373 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211814067 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191045558 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252973907 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17961263 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.210283239 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.197366 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.165701537 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.238601853 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238755381 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176529652 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239797159 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.223801975 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.278875656 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214009476 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177977644 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.235468046 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179761354 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.13519407 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250704714 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.214068897 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.215560704 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.238896979 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.275172386 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.22594419 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.204926693 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198133869 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222968816 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.228165486 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20891539 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.194857134 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.212439026 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.25330121 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.137683953 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.173140874 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.176354796 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157331829 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179201618 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179758714 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236021366 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247685259 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.239869667 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.212220577 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188840744 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.236174387 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.175387797 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217397859 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.226443973 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186684546 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.243190445 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.266409267 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220049736 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.191956772 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22668633 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.167814308 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140470796 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.185245103 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.222274546 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181399674 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.181160935 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193121278 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.238811246 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229607996 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198368459 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.285953572 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222933233 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.247502367 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.169477612 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.215287294 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223890271 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207032202 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.243922293 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181259631 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.212951503 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.231751566 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197719712 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24922597 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215367341 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219538894 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.288745641 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.206751267 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177916338 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.198366606 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220877032 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18955341 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.217741636 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.195063786 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151268695 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203027564 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.18720305 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.175491377 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235447724 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19276727 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.269294367 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.20860768 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2383287 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172482718 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192997332 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.210735481 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192839569 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.133844823 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.253067531 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245742356 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19973961 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210062245 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22793697 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177227984 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.370744128 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.276574947 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241358373 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.186254355 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195163649 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.212527771 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.211155808 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217752179 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.235951123 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193766066 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236465094 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.209159763 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.196046454 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183770737 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.197986356 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.200447786 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.204637767 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.152907642 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.238233312 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.159687483 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.276023509 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193652442 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.208333312 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216769497 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.166243924 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.207807802 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189800364 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.288484122 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210164199 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234675803 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.207828739 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.222672487 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243388512 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172339809 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174213691 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.144921097 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.266493062 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148395346 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210769107 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.263029845 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.253064697 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211244284 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220930325 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.18845967 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.173619821 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.212447682 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200853832 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249982492 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191591885 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.188263158 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.279543877 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.16949635 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179023245 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.215235234 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.364529436 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164777413 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259049582 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.136287683 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.328854096 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171225542 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18028095 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.211504157 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225164768 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.199283472 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.238092829 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219034457 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195203833 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.212126689 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18669999 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.240063398 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.291873002 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228728885 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232028712 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.194906701 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.210916001 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216844763 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231842076 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191914499 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.196320324 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213321372 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.236336587 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.275909514 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.152072737 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246537423 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215799723 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.211573676 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232207954 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181722386 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243353543 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180528829 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221320113 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189859628 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.174679621 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209840732 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.233095517 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182910216 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231355809 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210080577 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180035309 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144093972 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203440399 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210478104 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195311061 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.178637128 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234132649 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.177070802 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215110008 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23401524 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179426672 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.209310231 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.196401533 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.182006817 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192777918 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162476589 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18515448 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.224536564 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239712409 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.184391019 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231010394 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2590487 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220734671 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214104105 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.19539986 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.683375705 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.17859264 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236845548 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.196328413 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.279652288 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167555425 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.254232852 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.214299959 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199178648 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2246315 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201381575 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.274850005 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22190581 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.21528751 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179388067 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194777239 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1954574 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.151535327 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.202485443 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215294806 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191652854 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.189448928 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.211200905 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195769743 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.197124828 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.187286157 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.240403434 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.197369587 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.242031861 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.239238689 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.189976283 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221437887 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.264396646 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147045134 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.216494866 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26053844 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160236632 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205334554 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.184598597 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.186726734 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232432868 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.171590695 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214824551 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213106806 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.215018879 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21684091 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.187571202 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213864468 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193038828 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212770011 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14406477 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.211613862 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.210677625 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.184101083 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.179724814 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.208294899 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213526848 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.209919316 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.179505453 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.197599693 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.265087015 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.139692594 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182990687 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.337925133 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20880259 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.285342744 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.208890661 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152587321 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195584275 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210576056 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.208414521 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212743964 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.179972979 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182376054 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.184118369 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.235208611 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.210560853 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.207758078 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235783713 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215166461 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246725764 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.198391682 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.320521228 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187144323 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.20794534 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.150417346 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.18246066 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192183085 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186105005 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197153936 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.244241853 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234016892 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.206168516 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.197534876 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.18073215 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.141793699 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182604561 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.215935514 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208182678 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211199685 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197545248 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.168850504 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197550783 seconds)
  done (took 103.699464361 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.201066109 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.18917222 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.193299218 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.2423949 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.214698103 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.305758974 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.252914409 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.274361593 seconds)
  done (took 3.100218715 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.171372276 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.151895571 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.190835898 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.170050417 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.171649914 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.490106375 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.184073233 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.170052347 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.234314443 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.183136945 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.168050807 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.736822168 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.167598698 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.166882875 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.161266274 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.138940801 seconds)
  done (took 4.879459288 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.761748951 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.623998799 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.428783225 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.312937097 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.290562979 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.208115589 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.872416435 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.217250967 seconds)
  done (took 13.950319695 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.169877482 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.188795751 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.391946134 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.258451954 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.207775525 seconds)
  done (took 2.455221909 seconds)
done (took 155.307242384 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.142028517 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.191564804 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.17671747 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.159759007 seconds)
  done (took 1.891080376 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.19010026 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.158741664 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.126948993 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.158843257 seconds)
  done (took 1.875992452 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.585781961 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.12610814 seconds)
  done (took 1.982922837 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.175941152 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.196982987 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.194863312 seconds)
  done (took 1.815298585 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.149616915 seconds)
  done (took 1.386095996 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.138649319 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.171160402 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.231581777 seconds)
  done (took 1.785848643 seconds)
done (took 11.979698942 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.164243547 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.476883732 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.459596259 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.182435863 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.740416955 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.45239452 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.094241582 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.203373001 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.238135785 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.16350061 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.18341763 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.715895662 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.082599005 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.416952238 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.029772096 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.411630958 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.746131537 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.137951166 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.170560975 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.163500801 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.035922966 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.162268601 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.163136817 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.134249193 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.742443129 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.436605225 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.164290969 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.425533477 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.160664602 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.136846037 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.45290564 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.131102686 seconds)
  done (took 18.606654548 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.177126086 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.2289212 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.174660507 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.165632565 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.135682501 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.165290051 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.174113485 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.145444831 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.272454098 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.131565161 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.185459699 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.16327763 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.137326417 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.164375053 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.188113484 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.13061447 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.167082517 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.168726414 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.145211049 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.166509078 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.185573277 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.137755148 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.166279528 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.164897336 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.131877277 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.178050217 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.131073864 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.17809472 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.163896092 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.167582443 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.140898493 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.164487427 seconds)
  done (took 6.54740413 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.181892525 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.240465689 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.173549356 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.199640759 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.219205572 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.164649159 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.256552537 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.206780099 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.24057731 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.162709578 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.154151472 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.164479889 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.204607138 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.131971153 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.188041851 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.163230618 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.135761921 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.165920408 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.17176721 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.133527867 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.185542551 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.161861387 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.134590784 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.166364159 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.163080454 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.150407304 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.163994783 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.17875839 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.130998537 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.170074728 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.17030161 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.132183643 seconds)
  done (took 6.815848441 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.144352559 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.178608614 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.186304389 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.158748442 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.175581836 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.176252499 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.150863463 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.172165141 seconds)
  done (took 2.601211811 seconds)
done (took 35.812706899 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.159724997 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.185396071 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.183355757 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.14693888 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.238238524 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.174945693 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.148764319 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.169234606 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.180609267 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.155327274 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.16574126 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.138632392 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.185868161 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.176467286 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.22644941 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.145918071 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.260538023 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.226480811 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.139778252 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.179875242 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.139184079 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.265522025 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.143719227 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.173314583 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.236276164 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.168834574 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.222243216 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.145172831 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.176570575 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.135291537 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.22489947 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.177720152 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.174836708 seconds)
  done (took 7.213304548 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.244921655 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.259149297 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.139421389 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.172951517 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.252944071 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.172664843 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.243174457 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.169052834 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.138412104 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.171014558 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.138313655 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.239841743 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.283216427 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.265975858 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.285999718 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.254004436 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.240241762 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.254177873 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.239175838 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.257092234 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.242681286 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.178208419 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.254444212 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.255567847 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.173127573 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.142659561 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.30904166 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.255816056 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.277834672 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.239185634 seconds)
  done (took 8.009763343 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.147544239 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.183045745 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.190344754 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.206659764 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.210828629 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.181323054 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.179161008 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.157627052 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.194560199 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.16624027 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.143672051 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.204118583 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.184929208 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.14333023 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.172187102 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.185111758 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.191271501 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.136520902 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.173406358 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.15294863 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.185318186 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.186032642 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.181814152 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.14563133 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.16690827 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.178698987 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.143812778 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.180244395 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.141154691 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.179324524 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.174399457 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.140186585 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.173245634 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.177609618 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.144335968 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.180708309 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.194723843 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.176243043 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.151650031 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.205035046 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.180427254 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.143155106 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.189035527 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.215770501 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.13606697 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.180369143 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.183295054 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.148196035 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.168849794 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.190536385 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.150605189 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.169930758 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.191317713 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.167147666 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.134989534 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.175339009 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.135540261 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.170272026 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.176921069 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.140291767 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.197690636 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.175449227 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.147499444 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.171320033 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.172631244 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.134136812 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.16900484 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.172922996 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.161408353 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.173461727 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.199308335 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.137623158 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.179368296 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.175566454 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.139584244 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.177787769 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.133826513 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.17527771 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.175795039 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.140514273 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.178933172 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.171985951 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.140341226 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.188166499 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.190743534 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.179744674 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.145055599 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.184489642 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.172483238 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.136769393 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.181981543 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.137416262 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.172756789 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.178165742 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.135466549 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.172790733 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.180814586 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.147289876 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.166466688 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.18590442 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.143818629 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.168201394 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.187053841 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.138217415 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.174387158 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.178321578 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.147531277 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.168860836 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.14304193 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.180478687 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.168624612 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.142511303 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.173152377 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.167670212 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.153686199 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.179308609 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.172406172 seconds)
  done (took 20.981063763 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.345373616 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.357383076 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.285768354 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.417100958 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.195099087 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.242421775 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.317257812 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.305058931 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.135812249 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.214603495 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.268846981 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.280761439 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.172677186 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.205168906 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.324264213 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.459812432 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.204015634 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.217049451 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.216522632 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.194952903 seconds)
  done (took 6.642105443 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.161006374 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.212936944 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.201776325 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.203831572 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.178419509 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.151511432 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.169791419 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.195686589 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.180017731 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.145677076 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.168934852 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.186221355 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.146757439 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.179963947 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.189065724 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.186481639 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.176527624 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.175880467 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.193376657 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.146573094 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.184703406 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.200112657 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.182034687 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.196992622 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.15200881 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.183911985 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.167274623 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.142932835 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.173698625 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.142813946 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.175547547 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.192478999 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.175346112 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.142441849 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.179725666 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.182999694 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.14395852 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.170994509 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.137824077 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.174467087 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.190911115 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.148498964 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.173684958 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.135146931 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.183918942 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.172371828 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.151213299 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.180907746 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.183592578 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.15244719 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.180805944 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.18170804 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.144104994 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.191058173 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.173025829 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.152870826 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.184006097 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.183691048 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.178766225 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.13921964 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.168320242 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.14269667 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.174019092 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.182062753 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.152527628 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.195935108 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.186427165 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.171577484 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.14624238 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.174536862 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.173348819 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.156482136 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.199401597 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.178742227 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.139423553 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.193364293 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.174411781 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.12880438 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.181512393 seconds)
  done (took 14.848721426 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.169750033 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.177351617 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.192161889 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.175730603 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.191297766 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.178095622 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.144970081 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.193112156 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.184169458 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.151570505 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.18562979 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.184761589 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.162386452 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.18550982 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.175672787 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.152045501 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.183081685 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.21653635 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.191565679 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.20573136 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.155251245 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.177862569 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.150554981 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.184871065 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.210696689 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.186271718 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.205425215 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.148224091 seconds)
  done (took 6.325416648 seconds)
done (took 65.273398856 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.425820426 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.612558518 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.383829116 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.379748779 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.395994619 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.40733817 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.375596109 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.570291241 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.237666925 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.364269793 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.379370891 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.375570487 seconds)
done (took 30.215605846 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.429408826 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 2.044185886 seconds)
    (2/2) benchmarking "String"...
    done (took 1.694121054 seconds)
  done (took 5.040540963 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.371959916 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.372078069 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.619245976 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.371392831 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.394265258 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.396008805 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.388376189 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.377303513 seconds)
  done (took 17.21019992 seconds)
done (took 28.346588666 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.465124223 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.664332124 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.621910093 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.392352074 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.393214127 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.371931762 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.366922318 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.420376734 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.373242995 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.376465448 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.374643954 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.685264161 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.367639135 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.77878514 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.380451396 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.382045685 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.39248339 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.681242309 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.37461998 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.428434456 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.365322447 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.387580645 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.376261059 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.395570982 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.396425195 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.385560601 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.426963804 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.373796397 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.651182237 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.378950164 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.426356237 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.373560317 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.445815555 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.375164929 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.495692596 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.402371357 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.662524658 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.394064105 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.367732633 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.375449561 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.643990281 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.821584082 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.392091129 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.373944023 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.382942039 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.407610524 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.373625357 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 2.180243218 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.39144966 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.372515791 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.386845315 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.785893698 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.382967047 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.382760765 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.388209375 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.681482045 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.385990417 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.44515543 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.404975471 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.378137676 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.38714621 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.37662832 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.473417302 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.381110322 seconds)
  done (took 155.623398915 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.377400922 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.377620721 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.376917839 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.440827605 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.381117711 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.376927486 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.377669166 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.377712496 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.376372535 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.404252553 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.378100802 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.380289494 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.380475163 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.343274556 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.38215079 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.39064209 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.37851289 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.378746243 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.384257689 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.377799749 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.396442711 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.381391665 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.397913092 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.377929169 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.427555378 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.494574977 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.414203332 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.396664457 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.387953884 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.378545234 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.384090887 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.428301574 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.062346228 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.242430455 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.387396113 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.420413433 seconds)
  done (took 86.93167014 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.377619934 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.378547919 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.378842468 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.413889386 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.379169593 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.017347851 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.023133423 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.167481706 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.833941313 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.954182744 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.703186312 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.379192054 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.478621559 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.396115591 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.383163152 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.396753694 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.427201733 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.38431378 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.380663191 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.019850332 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.395487187 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.551597149 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.5909419 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.400159543 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.417111927 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.788158516 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.380571725 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.417353151 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.725434367 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.437465823 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.380811228 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.815036071 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.863831191 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.498015985 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.383684814 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.417761988 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.381140665 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.669769851 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.382007134 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.382528397 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.386366689 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.144940334 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.385189928 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.023253445 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.386556412 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.398817011 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.382064834 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.382826839 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.705805445 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.196937829 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.404998396 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.382297391 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.38510716 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.381927789 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.383017466 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.419194966 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.927694434 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.507253919 seconds)
    (59/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.403595445 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.383343081 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.387377495 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.420774936 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.385809358 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.838437969 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.403591742 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.923502883 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.441509079 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.498770756 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.023687321 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.386971067 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.484484639 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.507843706 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.383993213 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.383838471 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.385275446 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.383796175 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.498882512 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.384790349 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.859419771 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.572038298 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.404347959 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.980912169 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.488115994 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.385230355 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.843861095 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.388590359 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.385112642 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.196984013 seconds)
    (89/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.384989719 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.485740361 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.384396355 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.383912249 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.385596411 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.859541635 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.027533763 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.709772057 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.389534185 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.08595941 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.388706669 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.867270977 seconds)
    (101/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 2.006901043 seconds)
    (102/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.107847397 seconds)
    (103/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.386002337 seconds)
    (104/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.502372483 seconds)
    (105/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.574240887 seconds)
    (106/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.406528452 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.386793947 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.386306766 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.945718803 seconds)
    (110/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.390253622 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.386781225 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.387359079 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.4475606 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.788439413 seconds)
  done (took 390.513631987 seconds)
done (took 634.362298962 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.124001345 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.075575257 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.215403564 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.114511775 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.065194852 seconds)
  done (took 11.899198613 seconds)
done (took 13.204835227 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.595523133 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.596953243 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.459969268 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.599285146 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.428977834 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.620388779 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.580533616 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.410979758 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.499995019 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.48447199 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.500923469 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.450184266 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.431290874 seconds)
  done (took 20.964157384 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.673871434 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.393420197 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.47665706 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.67066476 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.433332161 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.693660196 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.706385718 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.394456007 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.530951373 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.405680688 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.407042781 seconds)
  done (took 20.091405644 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.676648942 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.39555216 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.479782058 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.67015996 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.435420838 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.715956927 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.743601528 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.396234189 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.544783397 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.407107391 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.406604011 seconds)
  done (took 20.179223613 seconds)
done (took 62.540743375 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.439537376 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.56598046 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.425713723 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.407598229 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.403271651 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.403635898 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.409407198 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.402953557 seconds)
  done (took 12.766678531 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.401671685 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.400285561 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.40230698 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.402846465 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.403333005 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.400274507 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.40227652 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.402717132 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.402458284 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.402484067 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.401951785 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.402743636 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.4026416 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.401493559 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.400220718 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.4024325 seconds)
  done (took 23.740317119 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.405794893 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.40218941 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.40154964 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.401964077 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.402294452 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.402873636 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.40472681 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.402547733 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.404522659 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.402425154 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.403393293 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.402830963 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.403289328 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.403092938 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.403199668 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.403893853 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.402423225 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.404778805 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.408761725 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.405688966 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.404094661 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.403654429 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.404442484 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.403572344 seconds)
  done (took 34.999681817 seconds)
done (took 72.814431445 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.39588565 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.403646124 seconds)
  done (took 6.108690979 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.465509882 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.463887116 seconds)
  done (took 4.241103631 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.405605377 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.405853227 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.405465889 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.405441007 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.404790269 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.403923166 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.405231524 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.405316026 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.404501281 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.406377593 seconds)
  done (took 15.363530551 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.40435895 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.404428124 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.406094405 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.405969659 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.405074356 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.403480265 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.405504152 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.406013809 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.40585902 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.404330759 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.404636095 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.405369867 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.404314003 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.405046128 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.406438584 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.404423978 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.405663531 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.406167843 seconds)
  done (took 26.605558583 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.418896979 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.428287987 seconds)
  done (took 4.158550089 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.546328424 seconds)
    (2/7) benchmarking "second"...
    done (took 1.447313535 seconds)
    (3/7) benchmarking "month"...
    done (took 1.523269737 seconds)
    (4/7) benchmarking "year"...
    done (took 1.514165999 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.446600416 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.428552488 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.449236217 seconds)
  done (took 11.66718136 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.408543762 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.604780301 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.711481458 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.954006466 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.407680723 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.453989234 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.286255358 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.452963707 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.462116145 seconds)
  done (took 16.052686761 seconds)
done (took 85.508460252 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.395591634 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.42422768 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.41518953 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.418043927 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.747412244 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.450770095 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.399836348 seconds)
done (took 17.56444709 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.395619139 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.399582441 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.389975087 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.404876722 seconds)
  done (took 10.904437004 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.412721519 seconds)
    (2/2) benchmarking "read"...
    done (took 1.753004186 seconds)
  done (took 5.478660424 seconds)
done (took 17.698503105 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.409610757 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.407768581 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.407372232 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.409215406 seconds)
    (5/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.408469235 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.408427623 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.40650934 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.409700262 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.407169503 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.407714204 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.408758126 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.408309601 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.408204469 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.409312538 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.406978206 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.406814777 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.409350111 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.408703722 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.410053313 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.408134335 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.407370154 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.407505597 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.407499071 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.408019032 seconds)
  done (took 35.111448233 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.411106259 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.408794381 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.410226937 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.408219042 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.408615776 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.409761717 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.410635295 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.410859159 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.409930389 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.410205738 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.408974709 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.407693251 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.410814044 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.410799295 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.40875242 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.411321554 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.409956829 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.409205705 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.410326015 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.409366924 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.409474195 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.411756671 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.410326387 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.409559014 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.411119155 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.411954518 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.409176118 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.410513888 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.412189312 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.4115877 seconds)
  done (took 43.618009965 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.41569017 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.417169061 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.412006773 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.41387973 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.410484364 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.411631696 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.412174758 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.411496464 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.412194503 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.412262738 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.413128208 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.412248588 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.41175272 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.413914947 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.413530834 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.414614555 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.417501094 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.414944251 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.415757441 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.417855419 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.417085622 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.41500917 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.417212965 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.416015191 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.414903543 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.411960438 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.41174336 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.412042148 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.412208106 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.412119679 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.413026709 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.413427991 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.413548189 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.414388836 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.413868885 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.412375362 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.416695528 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.418767383 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.413102505 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.411663222 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.413172835 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.413692074 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.41472382 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.414034797 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.412945577 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.414455191 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.414790283 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.415387613 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.414242172 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.414309163 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.41408967 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.413471012 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.414752968 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.414206566 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.415964572 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.414124497 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.414538574 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.414462468 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.415559783 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.414812933 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.414283697 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.416142196 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.414238212 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.416006067 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.416609446 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.415335593 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.414223239 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.415735002 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.41490244 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.414994619 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.415812858 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.415904646 seconds)
  done (took 103.147356068 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.417342489 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.416274813 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.415594628 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.41337495 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.416429566 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.414597398 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.415668397 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.415134179 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.415283766 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.417695058 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.415672882 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.41709472 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.416838665 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.417545359 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.416461936 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.415683912 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.417951844 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.418439688 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.416841482 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.419052548 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.417165682 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.417884759 seconds)
  done (took 32.484575338 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.419235973 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.418166759 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.417100179 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.420113887 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.418929728 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.417901983 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.418510583 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.418434747 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.416844809 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.416519673 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.417176152 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.418336255 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.419250707 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.418228248 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.418073098 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.421367931 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.418315443 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.419633487 seconds)
  done (took 26.853560503 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.418381995 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.418703249 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.418886964 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.420913203 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.419357432 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.418343709 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.419624365 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.419815981 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.419778966 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.419551647 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.420173259 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.418283325 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.420804251 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.417780461 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.418722679 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.420013907 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.419089336 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.420821559 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.420325132 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.418929122 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.418643322 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.420535215 seconds)
  done (took 32.550512882 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.422129824 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.418907578 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.422261131 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.420446633 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.41860491 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.420017286 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.419251346 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.420839602 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.422389523 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.420682084 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.421057044 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.421162026 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.421341957 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.421596278 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.421631867 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.422905539 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.421941582 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.421302678 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.420415402 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.420893138 seconds)
  done (took 29.744279905 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.423011431 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.422413735 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.422181716 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.422809794 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.423252784 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.422831059 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.42485822 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.423036198 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.423839735 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.421756385 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.422355966 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.42228088 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.423878833 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.424004906 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.424749654 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.423815005 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.423810062 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.423209941 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.422661505 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.423863261 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.424586084 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.423323229 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.423143855 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.42210647 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.424897059 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.423933299 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.423937602 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.423503554 seconds)
  done (took 41.180414378 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.423677616 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.422870204 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.423998878 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.425446903 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.424572011 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.423895842 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.425000069 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.423661994 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.423886955 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.423891269 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.422920434 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.424138884 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.424094185 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.425649421 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.424131012 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.425244256 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.424203507 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.42518144 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.423946925 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.426048616 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.426335975 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.425619943 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.425548484 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.424830632 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.425481811 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.426149669 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.427234245 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.424152126 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.42625999 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.425095988 seconds)
  done (took 44.071158326 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.47279829 seconds)
    (2/2) benchmarking "in"...
    done (took 1.472125796 seconds)
  done (took 4.273773878 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.425418954 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.424640084 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.427813821 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.426029949 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.425277989 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.425733513 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.426466379 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.426373697 seconds)
  done (took 12.73633448 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.423709862 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.426581967 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.425087082 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.42624995 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.427304133 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.423397478 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.431185803 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.452988936 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.422967837 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.425369313 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.428843897 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.428968371 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.426543325 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.425571927 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.424461494 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.427851569 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.431556331 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.427642328 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.426778156 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.429056471 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.428153722 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.42690939 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.428662697 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.4323381 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.426060555 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.433886671 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.431446529 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.432095743 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.425029021 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.429695702 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.427480383 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.429236871 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.428616625 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.429346157 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.42936831 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.429740539 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.435690549 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.452463994 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.431887644 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.433604347 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.431581557 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.428412945 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.426174189 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.430144378 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.428218738 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.431060564 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.429026546 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.429831549 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.425108153 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.428523705 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.434533516 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.425940477 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.430594678 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.429580573 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.430823807 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.436778928 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.459208391 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.430076234 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.433679265 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.435686695 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.443266104 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.441875193 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.430855511 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.435969907 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.433724647 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.438885171 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.435876479 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.458334566 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.433137574 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.430584887 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.435320363 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.445254465 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.442359826 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.434903071 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.432398031 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.431090911 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.428044885 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.432481917 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.434582224 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.457917709 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.435001769 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.432822759 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.434249731 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.439726064 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.429574125 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.433977759 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.430896707 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.432699084 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.430169523 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.438078304 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.461056863 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.432760923 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.428819443 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.430151338 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.429621442 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.433688706 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.428165543 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.430393439 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.435555293 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.431989669 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.43255873 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.43217215 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.437649357 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.435295341 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.434513305 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.43584538 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.437607067 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.429556568 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.436986182 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.438200761 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.43403376 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.432157202 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.434513396 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.435986863 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.432760049 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.43615698 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.436676907 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.432445086 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.436449941 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.435188516 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.438099435 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.445772996 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.438315366 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.436195473 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.435133128 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.444692222 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.435133275 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.433813115 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.439995809 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.436171468 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.4363443 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.432728297 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.43971987 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.432696284 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.438552618 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.43244831 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.438356101 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.435940906 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.435436948 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.434169921 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.435241321 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.434503905 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.434685487 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.436611902 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.438210957 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.435026885 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.442972003 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.436465016 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.434522988 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.43751374 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.439255558 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.437591745 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.432350313 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.438052671 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.433055139 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.4374211 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.433909187 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.436829565 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.438665762 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.437120771 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.435964494 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.432345945 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.436802404 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.437244045 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.437454946 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.436478652 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.43844323 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.437962187 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.438320851 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.432692627 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.439271713 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.433612875 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.43730801 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.443146617 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.438674274 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.438112606 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.437439898 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.440058449 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.439635721 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.438829413 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.437110624 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.440586024 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.441205374 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.442558153 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.442269722 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.440342205 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.440110422 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.434909268 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.436250918 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.441182702 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.436652601 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.446500584 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.448934542 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.45072844 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.439015197 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.444212933 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.437490667 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.443169283 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.440935587 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.443258338 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.441471234 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.439778382 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.436378461 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.442638324 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.438288117 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.441517894 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.436127896 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.442920718 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.441744926 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.439565254 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.442835099 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.438894451 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.440190983 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.442712561 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.440319537 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.442260681 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.437693051 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.443157284 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.436238493 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.438610437 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.444460813 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.441890298 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.446664869 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.446398628 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.440672203 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.443389943 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.440923884 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.438048673 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.443202454 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.440947698 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.442151843 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.447541087 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.464305604 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.439511883 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.447710242 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.46557081 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.438618244 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.444315181 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.446618094 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.441980711 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.44118805 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.448657558 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.445342306 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.445674222 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.444108359 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.438840781 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.446225202 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.445433063 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.447677283 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.437189644 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.444667702 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.44015927 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.444976186 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.439730806 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.443140735 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.441652587 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.444993249 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.449138559 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.444263013 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.441647423 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.44626577 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.444550851 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.444945587 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.444970078 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.450221059 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.446666619 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.445918294 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.443582064 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.445080938 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.448983864 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.441159441 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.445816011 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.44177414 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.454635327 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.458758688 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.449887986 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.44710641 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.449943759 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.447775778 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.448164531 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.445398643 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.441669369 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.444773945 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.443942166 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.443288175 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.44647511 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.442593666 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.44750488 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.444369156 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.445988544 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.449473971 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.448772584 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.442869614 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.447671882 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.446686635 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.448764065 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.443008916 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.447324078 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.443432176 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.44587386 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.444887786 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.442964716 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.452030138 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.470632463 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.445637711 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.4451522 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.445187541 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.443971937 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.446020112 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.449453748 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.448929346 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.453702093 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.446405109 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.451755303 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.445322512 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.452636795 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.452687252 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.450342273 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.452158032 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.449138283 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.444517293 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.446634575 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.448741903 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.452946482 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.475441784 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.446482242 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.452544769 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.448761509 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.449665424 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.449105076 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.449253296 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.449765038 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.448994159 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.45519287 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.474882326 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.448590255 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.450322359 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.450950358 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.44887641 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.450892 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.446517467 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.451854707 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.452965239 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.447233211 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.449359808 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.447414708 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.451756339 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.449941041 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.452252736 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.453911684 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.44980599 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.45455961 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.475121477 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.454764768 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.45216498 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.454955162 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.453549347 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.454266692 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.47774386 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.448390531 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.454844002 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.452121953 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.450162672 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.44936749 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.449392518 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.452844793 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.446973798 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.456164953 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.450087129 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.449910579 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.449356362 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.453051663 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.447413415 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.454540898 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.462852544 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.449127682 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.45574278 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.45276409 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.448418578 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.454576538 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.452100653 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.448406717 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.450325599 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.455370822 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.458943111 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.447761537 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.452484785 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.448605825 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.452643934 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.453356173 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.453871659 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.451978217 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.454449808 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.448141197 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.455215565 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.454023761 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.455830994 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.448854466 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.453740299 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.450841579 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.46008863 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.459513713 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.450995847 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.456178814 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.456961766 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.450921576 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.451450306 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.455194705 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.451921833 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.455473654 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.452480842 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.457789265 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.455650496 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.455493594 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.454431653 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.457130151 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.451769463 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.452450396 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.456918651 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.457417018 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.455986573 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.453539428 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.456489442 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.452708279 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.451835323 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.45587886 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.452112379 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.45732008 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.452835772 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.455704061 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.453527152 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.45786741 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.456316633 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.456495181 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.451430163 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.452682278 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.460170782 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.45859036 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.459931544 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.460050722 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.459607203 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.453602601 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.456904267 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.459819418 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.453604582 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.454152324 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.458435991 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.454657359 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.453369186 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.456675609 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.457855288 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.46116996 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.458146033 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.454719819 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.463397834 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.484010993 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.459959283 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.454652582 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.456760064 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.455818602 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.459817123 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.457509924 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.453522587 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.463214159 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.484353959 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.458190259 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.456660224 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.457214577 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.455789273 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.460873178 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.460496997 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.456180151 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.460712862 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.457034436 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.460543626 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.460702066 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.458824879 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.453873336 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.45669255 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.459390148 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.460625085 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.459028586 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.458248356 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.458612569 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.458444313 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.460825313 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.460515559 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.459239883 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.461750175 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.455647038 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.460965905 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.456924948 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.459931145 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.457793772 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.456572608 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.463328683 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.460138919 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.457907394 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.463633508 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.466434515 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.460630518 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.455647598 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.458627513 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.461448443 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.464313414 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.461719342 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.456586505 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.458120007 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.46330143 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.460782477 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.461942474 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.45962727 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.47256235 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.488701178 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.458096505 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.458168644 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.462665664 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.463850924 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.463300715 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.461176297 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.459374018 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.461565109 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.467465287 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.463698202 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.465976493 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.486973725 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.459544277 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.466040589 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.460314597 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.46319171 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.462932908 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.466751383 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.462247734 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.462447401 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.473169036 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.466924432 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.465619619 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.478834116 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.488811632 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.462489827 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.463698536 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.459939926 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.464082449 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.459954888 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.465149429 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.465134635 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.46410478 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.463667299 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.461458634 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.466675805 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.463561963 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.468246274 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.465324179 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.4606141 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.462526522 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.960029437 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.465254218 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.466113231 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.464441445 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.463852408 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.463354354 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.461179302 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.474152431 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.478661756 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.466408392 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.463913765 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.464907257 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.465885843 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.465305748 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.468839332 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.470386079 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.464117736 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.464731213 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.463278357 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.467842237 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.467414568 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.460707855 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.462239469 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.460751601 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.468027404 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.474446817 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.479016788 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.467525722 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.46527239 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.466014996 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.466953487 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.463410485 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.467672981 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.46734986 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.464291061 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.464623805 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.469295454 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.469724677 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.467443963 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.464612402 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.472500592 seconds)
  done (took 864.945221904 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.466951489 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.466568984 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.468414816 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.468004401 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.468036874 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.466087661 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.468020144 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.467962269 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.466808462 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.46630852 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.467175988 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.467328791 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.469357984 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.468365154 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.468634599 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.468476754 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.468441435 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.470026134 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.468524735 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.470504803 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.468775295 seconds)
  done (took 32.193673469 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.469222171 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.469233969 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.468910427 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.468300262 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.469311033 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.468424314 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.468778309 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.469111208 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.468565583 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.470358551 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.469537487 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.470963846 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.469164323 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.469205931 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.469134382 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.469744627 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.469264798 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.469743017 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.467810578 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.470348617 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.469220274 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.469634291 seconds)
  done (took 33.690898489 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.467868783 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.470307947 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.466125336 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.471873986 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.470892926 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.469253198 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.468923493 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.470321547 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.469287641 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.46727306 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.465752211 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.46890132 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.472886103 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.476591222 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.467700036 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.47290917 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.468487831 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.470670379 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.469841353 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.470324506 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.473890517 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.474307484 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.471395045 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.465430629 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.472895143 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.472084886 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.47148619 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.470136346 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.467894445 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.474553135 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.472560887 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.469572409 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.472008464 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.469711567 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.470406052 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.475654677 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.472587215 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.473863841 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.472010493 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.475686084 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.485470418 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.471211255 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.47634662 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.477509548 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.473231518 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.472603863 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.479077871 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.47405221 seconds)
  done (took 72.013825872 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 2.12252071 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 2.15529339 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 2.16057586 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 2.159195734 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 2.154680363 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 2.16035148 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 2.168901422 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 2.159536036 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 2.16014472 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 2.158996425 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 2.157869402 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 2.159206601 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 2.15765244 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 2.160082134 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 2.159691683 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 2.176848877 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 2.160837824 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 2.157607447 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 2.157172028 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 2.159433597 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 2.161149315 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 2.157100275 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 2.161115188 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 2.158405469 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 2.17748424 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 2.161978854 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 2.161947773 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 2.163550548 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 2.165890813 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 2.166174975 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 2.161906721 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 2.164387327 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 2.168604149 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 2.177509701 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 2.161693387 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 2.158591665 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 2.158864432 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 2.165943297 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 2.163178546 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 2.165374408 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 2.158545949 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 2.161093022 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 2.176018089 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 2.164253943 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 2.162587829 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 2.160676572 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 2.161954452 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 2.173678236 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 2.163266017 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 2.164639741 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 2.168430481 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 2.184202218 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 2.171726537 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 2.163462699 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 2.161949937 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 2.170033601 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 2.169569618 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 2.168720253 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 2.167286017 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 2.167135324 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 2.188403627 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 2.168872046 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 2.169854024 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 2.161344551 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 2.169017654 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 2.172131742 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 2.165488934 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 2.165247689 seconds)
  done (took 148.521151662 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.477948756 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.47862406 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.478491491 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.478894315 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.478390534 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.479567038 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.479139799 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.478636706 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.479999603 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.479228246 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.478915607 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.479486183 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.477495445 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.478376311 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.478088861 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.480344603 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.478634233 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.47955536 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.480177175 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.481169911 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.479780743 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.480348088 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.477770979 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.479765934 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.481589685 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.479664254 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.480468915 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.48053151 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.480615233 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.480329037 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.48129887 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.479136602 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.478562183 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.478928343 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.480970897 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.480500575 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.480027649 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.481396287 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.480359914 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.480293007 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.481142885 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.481125162 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.480996494 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.480846785 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.480390505 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.481255091 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.481244736 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.481121514 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.480843597 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.480196933 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.481231283 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.48139525 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.481660901 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.481199285 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.481189596 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.484110228 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.481943942 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.481207332 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.480690622 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.482202322 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.482460302 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.482413273 seconds)
  done (took 93.153878423 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.4825493 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.482460696 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.48104534 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.481113656 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.480655079 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.482554668 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.481427397 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.482351112 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.483753361 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.481947067 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.483605496 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.482460468 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.484002578 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.483731591 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.481882988 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.48339397 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.483196687 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.482471019 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.482384824 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.483954731 seconds)
  done (took 31.028971614 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.483819561 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.483962752 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.483966951 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.483163959 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.485136623 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.484116216 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.482831147 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.484042727 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.48493324 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.483994394 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.483391916 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.484761146 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.484583772 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.483974641 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.485133053 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.484516958 seconds)
  done (took 25.125815821 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.485032704 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.48503346 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.48430322 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.484951805 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.484462077 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.485719389 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.486438124 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.486354051 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.484421599 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.485246384 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.485476753 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.485166886 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.486057604 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.485050622 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.484354616 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.485059824 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.485577343 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.484875705 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.484802714 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.48444997 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.486911745 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.484592677 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.486018271 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.486447596 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.486344213 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.486555046 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.486947654 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.48682278 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.48544435 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.486524787 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.485551568 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.486654442 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.487019944 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.486910524 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.486475455 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.487363794 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.486848666 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.485675088 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.488001469 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.487575365 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.487803039 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.485415597 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.4884102 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.488516728 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.488330175 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.487109009 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.487935284 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.489542653 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.486549945 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.487763016 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.488579793 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.486996986 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.487745012 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.488166243 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.488012395 seconds)
  done (took 83.132827566 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.490490837 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.490053102 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.487117665 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.486931574 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.488582134 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.488160346 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.487638577 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.491326819 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.488724551 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.48756623 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.489088508 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.490751637 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.488742816 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.488934296 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.489182901 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.489969063 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.490409128 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.489000151 seconds)
  done (took 28.187489851 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.490042302 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.489579969 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.489732518 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.490016442 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.489310742 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.490241187 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.489737482 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.490245681 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.48993595 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.491236575 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.489638585 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.490777551 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.491239687 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.490438183 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.491996866 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.491404951 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.489930178 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.490554432 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.490286185 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.490312407 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.492548538 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.49161142 seconds)
  done (took 34.17669875 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.486361936 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.484614619 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.485625134 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.50120268 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.499574088 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.485955675 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.485046731 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.486599468 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.503931792 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.543515496 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.542015939 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.501161207 seconds)
  done (took 19.391978762 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.493219849 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.492024439 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.491308722 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.49125 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.49282428 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.49267688 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.491765175 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.490226056 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.491610464 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.490905507 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.490732639 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.492779311 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.49348562 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.494096059 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.492755511 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.493339703 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.493496095 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.493482133 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.493835698 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.494235572 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.493516648 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.493386753 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.494194167 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.494126098 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.493132159 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.495127235 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.493834912 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.493918377 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.494222094 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.493597678 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.493859591 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.49398949 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.495515852 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.496023252 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.496066515 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.494774499 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.493465915 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.495455055 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.494697544 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.493865383 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.493492103 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.494145315 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.494858578 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.494773749 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.495173019 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.495041042 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.494986988 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.494789011 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.494259681 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.495549382 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.495861057 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.494469166 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.495897602 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.495178966 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.494842302 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.495727339 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.496509409 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.494395333 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.496297058 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.496742474 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.495111184 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.495106588 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.495578 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.497087513 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.495564849 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.495722805 seconds)
  done (took 100.004352733 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.495853909 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.495921655 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.497418885 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.495565393 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.496025076 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.496706965 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.498559792 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.496356593 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.496511467 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.497101995 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.497566274 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.496818546 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.496950481 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.496725196 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.497642462 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.497926226 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.496608015 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.498976625 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.49749313 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.498179151 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.499177898 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.498171213 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.498090496 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.498027236 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.497448498 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.498151868 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.498321788 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.499082583 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.497557908 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.4985453 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.498630302 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.497235051 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.499814802 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.498192054 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.499506711 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.499085446 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.498072447 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.498432628 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.498572646 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.498869996 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.499154657 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.498522493 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.499804512 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.498311149 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.498770385 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.500705381 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.499192637 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.49865563 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.498669596 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.499476953 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.50014971 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.499523675 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.499932769 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.501351113 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.50066708 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.500731386 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.498872651 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.499729361 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.500778995 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.499370383 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.500444292 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.501123451 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.501377836 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.500461745 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.500914649 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.50065082 seconds)
  done (took 100.303795728 seconds)
done (took 2072.957111729 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.660606251 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.615339593 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.494539426 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.506861566 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.495480708 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.491076811 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.507516871 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.494936222 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.49330419 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.495955181 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.496427794 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.683998191 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.489544479 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.495888158 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.496085572 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.591935032 seconds)
  done (took 29.905431572 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.530648692 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.503474155 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.637277423 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.526704958 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.529936442 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.722856315 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.566540724 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.501613364 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.708874991 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.528702731 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.491412296 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.528139964 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.501617151 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.494888772 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.524189637 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.722940135 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.788601265 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.494375732 seconds)
  done (took 32.699130982 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.047780958 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.53334502 seconds)
  done (took 5.97775204 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.526291872 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.500949931 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.503317706 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.500131763 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.492241868 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.492135749 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.500045446 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.500393119 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.521944339 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.654684231 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.506610947 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.515593461 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.527754636 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.502612934 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.506567093 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.55023063 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.686768426 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.508363235 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.505756289 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.508257209 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.500679434 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.61407961 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.553279519 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.507480486 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.652456073 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.509135955 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.508838737 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.51003892 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.643297858 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.506765605 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.501247753 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.501612804 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.505667191 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.498760337 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.024987606 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.518420121 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.553383776 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.511320252 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.506657289 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.67232904 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.505562053 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.51001625 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.505237824 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.020678716 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.65664125 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.642267804 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.533448648 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.504382805 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.507333406 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.577407422 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.504595101 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.505661389 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.568412547 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.375122671 seconds)
  done (took 95.137723353 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.512911621 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.496047491 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.680741855 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.523813668 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.496956237 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.519505823 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.498032317 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.845326605 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.539069766 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.49722778 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.817327177 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.141633738 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.522655613 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.555109658 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.359537014 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.570833766 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.496896615 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.520321648 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.50021878 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.498795967 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.095254185 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.49976235 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.519783635 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.641774836 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.542809754 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.076915793 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.525319201 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.522788101 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.526808022 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.498977901 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.098114737 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.53704183 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.56374039 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.501620962 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.801729523 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.950776882 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.917191198 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.512107252 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.520305261 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.504106655 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.519006731 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.070203777 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.935324906 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.505851171 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.501934407 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.083079862 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.503565592 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.503031564 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.511498776 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.75894437 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.499467377 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.503089721 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.52036014 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.522864172 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.499868115 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.622263902 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.604934978 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.093289738 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.506451901 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.503346219 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.556323264 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.504337377 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.511675225 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.506660452 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.524112295 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.925409299 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.646653833 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.51039218 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.923305255 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.085770434 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.522292305 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.158429003 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.52621111 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.5146198 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.717947229 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.518459924 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.501990226 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.10519363 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.512486076 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.504064853 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.916972294 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.51066896 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.824376324 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.539336673 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.504047736 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.113107069 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.508467187 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.507261512 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.50419488 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.5020843 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.503054892 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.528067763 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.812768286 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.545384653 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.503526164 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.503353806 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.532456756 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.518411122 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.503090134 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.507566516 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.156194672 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.528683509 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.503759361 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.504262278 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.505330929 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.527861156 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.506749257 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.504024015 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.780302169 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.505408657 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.530623926 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.504845108 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.505010759 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.509671182 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.648650536 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.511474655 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.88745866 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.513233134 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.505048918 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.532108753 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.51445491 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.515161762 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.507189263 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.509163665 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.44419015 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.823207949 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.53009485 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.505230191 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.505486551 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.526545723 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.506275411 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.506699676 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.549429333 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.508875401 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.365422175 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.552980559 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.529556954 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.507370585 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.516832465 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.507614733 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.536021638 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.508156323 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.816809148 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.815673079 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.657939821 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.518316857 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.506444652 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.356263911 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.562401459 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.692245655 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.533019581 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.50798395 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.765978331 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.737662135 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.50843595 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.507362052 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.50998208 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.792409537 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.508517235 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.832401238 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.135404298 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.533258289 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.518995856 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.375065935 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.252686309 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.514134381 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.513006654 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.830796184 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.534351329 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.507716208 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.508805334 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.508623373 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.531766281 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.535593527 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.509479537 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.509212041 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.509814004 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.578607863 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.705767253 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.533275834 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.521317227 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.094807166 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.544616855 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.510453733 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.534359888 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.512396195 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.509607236 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.591621217 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.514971137 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.539144044 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.513859168 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.512518292 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.158539396 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.5162875 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.513203049 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.708186671 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.289445897 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.537915304 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.513229241 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.53774275 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.42791657 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.156521124 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.572855107 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.897699192 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.526663517 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.555723198 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.510976326 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.541778008 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.122915778 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.519123299 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.534287272 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.247515615 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.539006887 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.019107534 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.513116185 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.513421281 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.200013207 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.538525689 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.516542192 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.512631509 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.527236461 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.818740247 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.513905968 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.555316345 seconds)
  done (took 540.779982944 seconds)
done (took 705.89577613 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.5127949 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.516055602 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.510079623 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.514922311 seconds)
  done (took 11.469666706 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.52601231 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.517105415 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.523437555 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.517423911 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.524743441 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.519025072 seconds)
  done (took 10.543295701 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.511526361 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.517812084 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.516884547 seconds)
  done (took 8.960568512 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.76208577 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.54019994 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.903103883 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.549002807 seconds)
  done (took 10.17121921 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.525834267 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.525948373 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.525265141 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.526757983 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.528865942 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.529806924 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.527248018 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.527386444 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.528884801 seconds)
  done (took 15.161953806 seconds)
done (took 57.723239782 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.63361574 seconds)
    (2/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.580511519 seconds)
    (3/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.288859893 seconds)
    (4/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.674836333 seconds)
    (5/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.770625559 seconds)
    (6/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.324513113 seconds)
    (7/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.346976734 seconds)
    (8/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.602495868 seconds)
    (9/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.514351742 seconds)
    (10/224) benchmarking ("map", abs, BigInt, true)...
    done (took 2.50778901 seconds)
    (11/224) benchmarking ("perf_sum", Float64, false)...
    done (took 1.569277143 seconds)
    (12/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.547447394 seconds)
    (13/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.507552684 seconds)
    (14/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.747914351 seconds)
    (15/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.641823988 seconds)
    (16/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.514100699 seconds)
    (17/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.369097933 seconds)
    (18/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.58980801 seconds)
    (19/224) benchmarking ("map", identity, Int8, false)...
    done (took 1.553688398 seconds)
    (20/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.57128832 seconds)
    (21/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.751059346 seconds)
    (22/224) benchmarking ("map", identity, Bool, false)...
    done (took 1.557536232 seconds)
    (23/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.58604695 seconds)
    (24/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.545114605 seconds)
    (25/224) benchmarking ("perf_sum", Bool, true)...
    done (took 1.555929336 seconds)
    (26/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.213414481 seconds)
    (27/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.518232032 seconds)
    (28/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.762332037 seconds)
    (29/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.522896182 seconds)
    (30/224) benchmarking ("map", identity, Float32, true)...
    done (took 1.6456339 seconds)
    (31/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.536541335 seconds)
    (32/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.516994341 seconds)
    (33/224) benchmarking ("perf_countequals", "Int8")...
    done (took 1.602797023 seconds)
    (34/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.751100587 seconds)
    (35/224) benchmarking ("perf_sum", Int8, false)...
    done (took 1.5508961 seconds)
    (36/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.534585352 seconds)
    (37/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.67745512 seconds)
    (38/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.555712771 seconds)
    (39/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.900893241 seconds)
    (40/224) benchmarking ("perf_sum", Bool, false)...
    done (took 1.554602378 seconds)
    (41/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.675408623 seconds)
    (42/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.522339969 seconds)
    (43/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.511205779 seconds)
    (44/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.604407875 seconds)
    (45/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.183910902 seconds)
    (46/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.66831484 seconds)
    (47/224) benchmarking ("map", identity, Int8, true)...
    done (took 1.581010997 seconds)
    (48/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.513873137 seconds)
    (49/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.573985758 seconds)
    (50/224) benchmarking ("perf_sum", Float32, false)...
    done (took 1.554717307 seconds)
    (51/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.537389761 seconds)
    (52/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.499745655 seconds)
    (53/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.198737582 seconds)
    (54/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.464179678 seconds)
    (55/224) benchmarking ("map", abs, BigInt, false)...
    done (took 2.557191202 seconds)
    (56/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.523455106 seconds)
    (57/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.771852011 seconds)
    (58/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.248911651 seconds)
    (59/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.529105829 seconds)
    (60/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.607211814 seconds)
    (61/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.552060671 seconds)
    (62/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.519763638 seconds)
    (63/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.610512517 seconds)
    (64/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.681441548 seconds)
    (65/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.647545556 seconds)
    (66/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.561386692 seconds)
    (67/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.643908277 seconds)
    (68/224) benchmarking ("map", abs, Bool, true)...
    done (took 1.584196886 seconds)
    (69/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.635114762 seconds)
    (70/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.673833317 seconds)
    (71/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.74037734 seconds)
    (72/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.58199138 seconds)
    (73/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.601823958 seconds)
    (74/224) benchmarking ("map", abs, Float32, true)...
    done (took 1.647548997 seconds)
    (75/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.700411625 seconds)
    (76/224) benchmarking ("perf_countequals", "Float32")...
    done (took 1.598995104 seconds)
    (77/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.554372423 seconds)
    (78/224) benchmarking ("map", identity, Int64, false)...
    done (took 1.616939232 seconds)
    (79/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.66610489 seconds)
    (80/224) benchmarking ("map", abs, Float64, false)...
    done (took 1.615932932 seconds)
    (81/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.625103788 seconds)
    (82/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.63654252 seconds)
    (83/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.324021646 seconds)
    (84/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.735860782 seconds)
    (85/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.719388516 seconds)
    (86/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.543575602 seconds)
    (87/224) benchmarking ("perf_countequals", "Int64")...
    done (took 1.607069176 seconds)
    (88/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.520496822 seconds)
    (89/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.340953492 seconds)
    (90/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.65975671 seconds)
    (91/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.933701686 seconds)
    (92/224) benchmarking ("perf_countequals", "Bool")...
    done (took 1.62015332 seconds)
    (93/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.512988698 seconds)
    (94/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.673730075 seconds)
    (95/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.698401518 seconds)
    (96/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.643436468 seconds)
    (97/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.563490222 seconds)
    (98/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.220903007 seconds)
    (99/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.574624153 seconds)
    (100/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.752820567 seconds)
    (101/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.669013134 seconds)
    (102/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.554562077 seconds)
    (103/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.517210811 seconds)
    (104/224) benchmarking ("perf_sum", Int8, true)...
    done (took 1.560825186 seconds)
    (105/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.553241382 seconds)
    (106/224) benchmarking ("perf_sum", Int64, true)...
    done (took 1.557698203 seconds)
    (107/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.315263634 seconds)
    (108/224) benchmarking ("map", abs, Int64, false)...
    done (took 1.644183256 seconds)
    (109/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.517567617 seconds)
    (110/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.665044924 seconds)
    (111/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.382360828 seconds)
    (112/224) benchmarking ("perf_sum", Float64, true)...
    done (took 1.562388888 seconds)
    (113/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.755016347 seconds)
    (114/224) benchmarking ("map", identity, BigInt, true)...
    done (took 1.737598095 seconds)
    (115/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.664667411 seconds)
    (116/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.559034153 seconds)
    (117/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.618117757 seconds)
    (118/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.224355263 seconds)
    (119/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.772776241 seconds)
    (120/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.551365751 seconds)
    (121/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.659037326 seconds)
    (122/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.696833694 seconds)
    (123/224) benchmarking ("map", identity, Float64, false)...
    done (took 1.619819387 seconds)
    (124/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.591551554 seconds)
    (125/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.559433376 seconds)
    (126/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.641569722 seconds)
    (127/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.379409382 seconds)
    (128/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.944399384 seconds)
    (129/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.585162673 seconds)
    (130/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.786148001 seconds)
    (131/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.526230347 seconds)
    (132/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.7320834 seconds)
    (133/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.535112505 seconds)
    (134/224) benchmarking ("map", abs, Float32, false)...
    done (took 1.615430989 seconds)
    (135/224) benchmarking ("map", identity, Int64, true)...
    done (took 1.709292824 seconds)
    (136/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.812110694 seconds)
    (137/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.699749742 seconds)
    (138/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.5726303 seconds)
    (139/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.64173308 seconds)
    (140/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.706711394 seconds)
    (141/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.5577258 seconds)
    (142/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.300052116 seconds)
    (143/224) benchmarking ("perf_sum", Float32, true)...
    done (took 1.565152885 seconds)
    (144/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.700092054 seconds)
    (145/224) benchmarking ("map", identity, Float64, true)...
    done (took 1.712342941 seconds)
    (146/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.551582778 seconds)
    (147/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.54998254 seconds)
    (148/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.762211095 seconds)
    (149/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.849286602 seconds)
    (150/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.601408023 seconds)
    (151/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.659644049 seconds)
    (152/224) benchmarking ("perf_countequals", "Float64")...
    done (took 1.603319248 seconds)
    (153/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.605412834 seconds)
    (154/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.195054115 seconds)
    (155/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.788026736 seconds)
    (156/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.518283274 seconds)
    (157/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.534144484 seconds)
    (158/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.237138089 seconds)
    (159/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.666008368 seconds)
    (160/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.527110226 seconds)
    (161/224) benchmarking ("map", identity, Float32, false)...
    done (took 1.612644503 seconds)
    (162/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.528885932 seconds)
    (163/224) benchmarking ("perf_sum", Int64, false)...
    done (took 1.563117134 seconds)
    (164/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.615040168 seconds)
    (165/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.518243527 seconds)
    (166/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.546886545 seconds)
    (167/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.886915862 seconds)
    (168/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.650777005 seconds)
    (169/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.467930064 seconds)
    (170/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.602116304 seconds)
    (171/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.688301605 seconds)
    (172/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.639988318 seconds)
    (173/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.699856313 seconds)
    (174/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.723777496 seconds)
    (175/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.635628714 seconds)
    (176/224) benchmarking ("map", abs, Int64, true)...
    done (took 1.715528017 seconds)
    (177/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.65360093 seconds)
    (178/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.643774285 seconds)
    (179/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.676474045 seconds)
    (180/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.771347822 seconds)
    (181/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.633332197 seconds)
    (182/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.633679367 seconds)
    (183/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.752215252 seconds)
    (184/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.295089031 seconds)
    (185/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.588976968 seconds)
    (186/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.730039404 seconds)
    (187/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.571167973 seconds)
    (188/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.607146042 seconds)
    (189/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.64809189 seconds)
    (190/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.635719984 seconds)
    (191/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.685807982 seconds)
    (192/224) benchmarking ("map", abs, Int8, true)...
    done (took 1.624668652 seconds)
    (193/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.540718721 seconds)
    (194/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.566821572 seconds)
    (195/224) benchmarking ("map", identity, BigInt, false)...
    done (took 1.638609356 seconds)
    (196/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.667859979 seconds)
    (197/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.638600953 seconds)
    (198/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.654981127 seconds)
    (199/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.74573299 seconds)
    (200/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.654350196 seconds)
    (201/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.763681848 seconds)
    (202/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.518845351 seconds)
    (203/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.543190403 seconds)
    (204/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.323266997 seconds)
    (205/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.785133781 seconds)
    (206/224) benchmarking ("map", identity, Bool, true)...
    done (took 1.600083349 seconds)
    (207/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.559526098 seconds)
    (208/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.718041737 seconds)
    (209/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.206790737 seconds)
    (210/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.332660187 seconds)
    (211/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.668508719 seconds)
    (212/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.610089499 seconds)
    (213/224) benchmarking ("map", abs, Bool, false)...
    done (took 1.569105311 seconds)
    (214/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.665728328 seconds)
    (215/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.778552477 seconds)
    (216/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.582536957 seconds)
    (217/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.742370916 seconds)
    (218/224) benchmarking ("map", abs, Int8, false)...
    done (took 1.57081154 seconds)
    (219/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.582260484 seconds)
    (220/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.572544792 seconds)
    (221/224) benchmarking ("map", abs, Float64, true)...
    done (took 1.717388015 seconds)
    (222/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.712421211 seconds)
    (223/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.699504849 seconds)
    (224/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.711832435 seconds)
  done (took 418.577163481 seconds)
done (took 419.99532086 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.586816328 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.72142991 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.53946204 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.538910233 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.584966596 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.535164559 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.583869085 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.549075055 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.549664399 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.549635672 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.533259405 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.550361826 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.553827443 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.57924712 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.652443901 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.551804654 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.540325658 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.545872387 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.588742029 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.606680013 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.585601579 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.585364985 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.561041749 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.541419994 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.588806602 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.589734055 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.546853518 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.549922998 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.547884828 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.589400897 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.542332243 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.548165053 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.597790357 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.596374296 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.586368473 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.546745598 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.586198244 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.723893705 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.583510366 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.582611884 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.550917881 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.600341166 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.554304987 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.553374704 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.596208122 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.561165203 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.589542335 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.664888933 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.541041862 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.53305121 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.612676686 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.609387753 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.552800237 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.532684903 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.535781243 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.666630461 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.54812131 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.590557655 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.550396254 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.586955189 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.657420903 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.5920681 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.611097346 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.590120693 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.550246967 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.556473058 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.549099063 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.609281762 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.548436144 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.586963694 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.586824705 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.552888474 seconds)
done (took 122.981158992 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.67270123 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.539938073 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.685197457 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.546922658 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.716893593 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.700346911 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.549243653 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.547946085 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.547730168 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.369755245 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.548054319 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.547034206 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.54116626 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.548988359 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.679154989 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.549329657 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.548079534 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.262278693 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.548818417 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.689143415 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.540891634 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.547980369 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.548858803 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.364244074 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.543639405 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.539363652 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.688159184 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.549633786 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.256349504 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.53879098 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.542118995 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.257250283 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.690728581 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.568916611 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.558756015 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.559584104 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.716776373 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.57127468 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.676001456 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.676190873 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.686811183 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.587487159 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.538561031 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.543974253 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.551186714 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.54950822 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.551742688 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.580267362 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.543515277 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.551148439 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.261815766 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.559034814 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.55107751 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.550107622 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.551053654 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.580951861 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.552939934 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.551782458 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.69534262 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.55255822 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.679449622 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.365948059 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.374843632 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.552872456 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.542701356 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.553241788 seconds)
  done (took 122.870893687 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.614303348 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.62383616 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.66991343 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.57021769 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.599443377 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.676750748 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.570322212 seconds)
  done (took 12.764456113 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.552494796 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.553039503 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.597180629 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.598046044 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.552301181 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.705540099 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.552763902 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.560447123 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.553450564 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.60175762 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.55309547 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.552918035 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.560626012 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.546226741 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.595756895 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.560002051 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.665761264 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.548149657 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.552138437 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.701588088 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.554362581 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.562594947 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.600340234 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.561334994 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.554066417 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.556837735 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.323037821 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.555220185 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.554805465 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.553596586 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.554720342 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.603176417 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.554418087 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.548460737 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.554756934 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.66665138 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.555068877 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.555431031 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.555304115 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.549993151 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.554316716 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.555954164 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.555187562 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.553894149 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.554754485 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.574213551 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.554182082 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.554718871 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.55509254 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.55518282 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.601527662 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.556912567 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.555158912 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.555761408 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.608564591 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.563959081 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.55505371 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.554865106 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.555978631 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.556212249 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.703561842 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.598753971 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.556543672 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.599387868 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.558412391 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.556066323 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.557042104 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.557149115 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.645448977 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.556646745 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.600574683 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.557079966 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.735178213 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.577149577 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.55839583 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.556418799 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.555878386 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.557943386 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.549857116 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.557921597 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.557793393 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.554115922 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.559201254 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.558029967 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.558384657 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.711774919 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.663296405 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.559162837 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.567479012 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.560817333 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.560482779 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.607431294 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.559400434 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.557841251 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.605937342 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.670289975 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.60809148 seconds)
  done (took 159.128409052 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.567287757 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.569361924 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.559164939 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.582951865 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.576438336 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.555193783 seconds)
  done (took 10.855016373 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.558967851 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.562713433 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.559127921 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.559202695 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.559036327 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.560134929 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.560800589 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.556035882 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.563645797 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.565818872 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.561573286 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.563226547 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.56396158 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.56266192 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.561604258 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.56095912 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.5625462 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.562698444 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.561738257 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.561110373 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.555065824 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.561427274 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.561811127 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.560300151 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.564755251 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.562273644 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.578789471 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.562155274 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.562179055 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.564485249 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.587719018 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.563481796 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.561583864 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.563677588 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.567318684 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.561837921 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.568147688 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.56387304 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.565508187 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.563072697 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.564935203 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.564748583 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.56555433 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.564254619 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.562725555 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.56393266 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.56825137 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.580604152 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.564294511 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.566104768 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.566183106 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.56395897 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.563058982 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.567281508 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.563639434 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.584717859 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.569346095 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.566196657 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.564644115 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.562356996 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.568074594 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.564086643 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.563564164 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.569855716 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.566082596 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.566515677 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.563193217 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.569679245 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.565221913 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.566532563 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.567421569 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.566013911 seconds)
  done (took 115.109541441 seconds)
done (took 422.164068948 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.470233268 seconds)
  done (took 4.921404431 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.733038065 seconds)
  done (took 4.185474771 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 25.687228508 seconds)
  done (took 27.148967433 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.667203959 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.670342985 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.589012951 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.559909821 seconds)
  done (took 11.938496693 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.001698564 seconds)
  done (took 4.455815505 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.560403047 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.560201795 seconds)
  done (took 6.574792188 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 3.005898312 seconds)
  done (took 4.456099855 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.149570515 seconds)
  done (took 4.607475936 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.57634359 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.574579121 seconds)
  done (took 6.611253274 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.555007192 seconds)
  done (took 4.00723391 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 39.720112302 seconds)
  done (took 41.173724972 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.570277789 seconds)
  done (took 4.024980735 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.582335262 seconds)
  done (took 4.035520721 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.915204056 seconds)
  done (took 7.366781896 seconds)
done (took 136.961022893 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.555267688 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.559070067 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.560235332 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.559046174 seconds)
  done (took 11.68712104 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.621000799 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.618738122 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.619579634 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.620287418 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.618785435 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.620476402 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.609949627 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.59276528 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.619146525 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.617830545 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.62444089 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.617475011 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.618866308 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.59079106 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.617145838 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.620821922 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.620926981 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.620638219 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.594131624 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.618919406 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.567772184 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.620996942 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.618694118 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.569631228 seconds)
  done (took 40.134545513 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.05790326 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.634661448 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.717966362 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.61639257 seconds)
  done (took 8.479563522 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.645270761 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.646414303 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.675567781 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.700140606 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.710803194 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.659175888 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.594932997 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.588290262 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.576202141 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.646700226 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.703599643 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.6387225 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.729429542 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.568957885 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.776918483 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.568325108 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.570166443 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.647268099 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.69771176 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.713298012 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.570681368 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.64918949 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.648693538 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.637893503 seconds)
  done (took 41.019107824 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.577036726 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.582872598 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.56980745 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.585179369 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.571886522 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.572571353 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.573453374 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.577597714 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.568925618 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.569488658 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.572868582 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.586342104 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.574241539 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.571145488 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.578473502 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.572874813 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.577800951 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.575810895 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.573630368 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.577812967 seconds)
  done (took 32.966018806 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.560198504 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.560259897 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.911145322 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.816723305 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.559585465 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.558532577 seconds)
  done (took 15.422435523 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.654773746 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.839124752 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.566956442 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.016339689 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.10688311 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.572491504 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.567842068 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.862492825 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.277383514 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.257478093 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.642944198 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.649120361 seconds)
  done (took 23.472995392 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.578342009 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.564148283 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.571432518 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.581363537 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.63324416 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.593070448 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.575087933 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.560803078 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.634310998 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.658205471 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.59073477 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.636093181 seconds)
  done (took 24.634269977 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.665294531 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.56593352 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.564286966 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.614465168 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.565090238 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.411493769 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.571359332 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.352151631 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.597686321 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.844350566 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.577767606 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.666834311 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.823828256 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.584659277 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.570741138 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.55214937 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.800075473 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.142739027 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.569175818 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.567387798 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.624512321 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.581124092 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.58576471 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.826482035 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.593289943 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.566866602 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.929649007 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.567723792 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.916174525 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.582481778 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.577714011 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.56778779 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.843989766 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.308368408 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.690223578 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.822358614 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.590514712 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.569122179 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.603175702 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.574970977 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.614189861 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.570973842 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.580605538 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.568602203 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.568699179 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.568221506 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383874328 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.599476309 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.567097929 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.568408295 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.886762908 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.671545834 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.576601474 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.570327381 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.594840485 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.569079792 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.575310065 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.706867196 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.19080188 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.586015476 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.571895668 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.574674743 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.568502535 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.570448362 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.306033253 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.601143869 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.577114382 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.576225326 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.570044229 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.570206409 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.61060919 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.570158353 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.597348218 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.570939752 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382699526 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.602488037 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.571362657 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.208678439 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.573875449 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.60057959 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.803446258 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.570028468 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.570507804 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.570280198 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.57229317 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.412928593 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.581490843 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.558946308 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.617134344 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.382930564 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.854983715 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.618592018 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.603437205 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.796219976 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.55807559 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.572877487 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.577293456 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.574383501 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.593504251 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.358386415 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.594127031 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.579874654 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.831578541 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.78475522 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.587783944 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.564322834 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.125418193 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.596282651 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.617489747 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.58514322 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.834131331 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.287950432 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.61512756 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.582997557 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.59038437 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.571942892 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.451899664 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.574135599 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.704163842 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.590254187 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.888885725 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.51440764 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.575663957 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.64398867 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.578074377 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.57425777 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.574512714 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.577356245 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.57600665 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.828118684 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.621154423 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.590939611 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.575199477 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.575634842 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.574749903 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.584686506 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.577967681 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.799851181 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.575652457 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.859552691 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.575561402 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.574932671 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.57634661 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.79895545 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.575525804 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.915136376 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.839869747 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.576093361 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.602131902 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.590757247 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.596410948 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.680103905 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.598062399 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.59375265 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.837829639 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.583578194 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.583130273 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.575905014 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.579021953 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.582618333 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.58661204 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.580012658 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.291760199 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.581373627 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.584337706 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.467178856 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.595660094 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.64453545 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.585482658 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.837758722 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.615153836 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.581886541 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.585607553 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.578798651 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.808806079 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.589876339 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.577832298 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.658364091 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.130267219 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.291340208 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.622603544 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.580414704 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.57959768 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.581464881 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.579569051 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.577770595 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.578923765 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.840472721 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.620082805 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.587705758 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.275206526 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.607365415 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.578236569 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.588319039 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.590489102 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.58741395 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.578636878 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.583855294 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.585572054 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.602289133 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.595320808 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.724776186 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.596519648 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.578958788 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.099455295 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.586645799 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.581775143 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.581846893 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.614180451 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.580690406 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.460997276 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.867202435 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.59224541 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.903901166 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.600780954 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.604231133 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.582635632 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.587339287 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.602914742 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.588086571 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.612939923 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.592860533 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.580825809 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.583602204 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.220245913 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.445119229 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.230603595 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.606347582 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.61970909 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.587561623 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.379021925 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.606398571 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.582723314 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.865306852 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.40792846 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.606534407 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.138125062 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.619787632 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.51902126 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.90952429 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.817142805 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.583326426 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.62154272 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.908593551 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.797847046 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.617693967 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.598486942 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.588998542 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.570872008 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.216201384 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.60641627 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.667193534 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38021224 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.608453343 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.586980202 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.650449833 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.596970488 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.087381357 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.613077488 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.585069373 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.601681405 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.588464778 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.474197568 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.614013071 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.585600449 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.302439736 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.618571246 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.143255851 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.610475926 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.848602284 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.625112258 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.590082644 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.599312578 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.60389023 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.846315632 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.909429353 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.589230243 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.595271299 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.23719958 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.485779417 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.594906626 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.588097903 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.47899351 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.588456504 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.940793732 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.601038833 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.604830387 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.594235879 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.586043889 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.587344469 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.586519831 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.591788107 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.563920083 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.172583077 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.59635496 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.598968413 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.603181186 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.592798496 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.84453922 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.604727338 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.281236087 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.84164298 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.589132823 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.634149226 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.593696209 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.597875524 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.577134207 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.589543686 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.588971216 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.646899093 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.813061303 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.604725712 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.580282414 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.589274364 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.800102335 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.589741936 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.593104256 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.883852472 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.616132231 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.589486562 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421034628 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.643159708 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.595854056 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.591225701 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.608225382 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.632262622 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.683373573 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.855094182 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.628421225 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.601283421 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.089089755 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.617955314 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.613635673 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.607195504 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.691327318 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.589989311 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.605890086 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.371229079 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.286302997 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.450345118 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.287193932 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.939229109 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.592773364 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.600670714 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.590681213 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.754553966 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.59165501 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.869297322 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.59253825 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.58703441 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.615296629 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.609901622 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.607970576 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.808426741 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.869959189 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.592727199 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.597095028 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.599171551 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.593736066 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.604767017 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.805511638 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.183329466 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.248664737 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.597811132 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.606123883 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.395425834 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.893955453 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.595187469 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.593278284 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.595029705 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.598135309 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.610802102 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.608548828 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.603769512 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.739986865 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.915764533 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.338785482 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.628271726 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.623967905 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.113458747 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.594453186 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.850864887 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.593207327 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.888616209 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.318880787 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.450225611 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.862440227 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.664779411 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.860898048 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.621083943 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.757597157 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.597087719 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.599482068 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.595249109 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.595476814 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.596722284 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.605195568 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.305367004 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.890902993 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.60212859 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.596329282 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.629655192 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.604625294 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.820159767 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.476159184 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.82522033 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.606285832 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.600853091 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.596105455 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.304256165 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.952685095 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.603766684 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.604910598 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.888032009 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.6250684 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.623741447 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.286363924 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.596324716 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.24234219 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.569713558 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.618486687 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.607233847 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.449712247 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.307902704 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.625202728 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.21214009 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.599695613 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.605829392 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.877829453 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.60533601 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.613997735 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.880010209 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.60409414 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.6158537 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.87101817 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.326887438 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.576695037 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.607479949 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.598652369 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.603687657 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.597001835 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.659803928 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.59645822 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.600038752 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.114727333 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.626643089 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.598232079 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.614775 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.60410001 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.606463141 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.603004417 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.598468411 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.607017272 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.60032815 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.618832198 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.643647204 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.740021337 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.239606141 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.623545595 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.27572126 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.930049852 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.855825772 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.619390839 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.590419329 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.605465061 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.600356117 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.599440835 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.598474581 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.613494439 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.261026258 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.601113678 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.615775971 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.606972452 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.600090892 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.81299806 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.600219432 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.870062379 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.629090607 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.624262318 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.587120298 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.601424253 seconds)
  done (took 1087.173257325 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.66509878 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.637753741 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.616163923 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.624574613 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.663749074 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.690812042 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.622172267 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.621557092 seconds)
  done (took 22.632866551 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.597756495 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.632482423 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.614666851 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.612090291 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.615983558 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.159364632 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.630854257 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.60582989 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.622172575 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.601426464 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.605565226 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.596535067 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.612712849 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.617323877 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.602359453 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.608244627 seconds)
  done (took 36.836485019 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.16501833 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.958878611 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.68314534 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.667514944 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.624060415 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.613881346 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 3.101627962 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.618142135 seconds)
  done (took 30.921895243 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.609700196 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.610332179 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.60983395 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.610095158 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.609453886 seconds)
  done (took 9.540506096 seconds)
done (took 1386.377048887 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.609389064 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.610298244 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.610956684 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.610591113 seconds)
  done (took 7.931959494 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.591400158 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.591832993 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.594031173 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.606528078 seconds)
  done (took 10.875072764 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.499258035 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.394711759 seconds)
  done (took 6.385833357 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.166737356 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.176167711 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.175302777 seconds)
  done (took 8.009973507 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.905276251 seconds)
  done (took 3.396977031 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.574707928 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.604897128 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.361472148 seconds)
  done (took 9.032589688 seconds)
done (took 47.124031886 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.614034673 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.855943063 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.757910695 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.613854589 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.784513769 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.757782026 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.366871125 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.599079663 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.600867395 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.621298943 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.616496536 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.785238301 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.349490267 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.854030573 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.349808929 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.85402378 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.763914605 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.600706545 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.619324219 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.599844033 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.369273059 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.602451891 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.606718058 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.603858607 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.767656421 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.748372797 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.606759644 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.854233273 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.600502313 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.62734218 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.754640799 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.601168259 seconds)
  done (took 90.201129448 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.601965148 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.601488534 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.604342534 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.621951868 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.602233014 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.601998812 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.63725569 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.619000601 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.60109131 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.622641801 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.625580058 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.602326068 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.623944375 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.601503594 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.603833719 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.625164522 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.60654022 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.60434825 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.604151038 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.607943567 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.622913895 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.603225052 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.626945017 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.625959339 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.629336854 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.604388905 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.637279796 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.603539126 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.625680165 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.604266779 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.609168934 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.630834151 seconds)
  done (took 85.139828786 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.603851201 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.625659884 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.60893152 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.647068272 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.607756765 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.632207863 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.629536157 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.615182225 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.607925785 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.610039529 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.636952834 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.607395113 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.610417068 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.606212534 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.628603576 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.604893958 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.631698346 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.610242358 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.60972364 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.610696471 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.609674119 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.607690612 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.605325407 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.605379699 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.61681852 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.625406649 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.604838662 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.606655674 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.612065675 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.608610568 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.637277274 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.635049821 seconds)
  done (took 85.216992335 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.892505054 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.616710398 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.620386481 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.611726896 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.622862206 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.619388457 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.613461487 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.899231912 seconds)
  done (took 16.994043171 seconds)
done (took 279.046578834 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.629555611 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.204874285 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.660868414 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.612358151 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.635149422 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.638730477 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.867290028 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.660594496 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.870526122 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.643775179 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.632832939 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.619507218 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.59742402 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.778657773 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.55654228 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.650585739 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.613513547 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.62796614 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.292529754 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.934963193 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.638929594 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.608791979 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.552321191 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.643643562 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.60016802 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.730710642 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.732890325 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.86152331 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.793266631 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.707072292 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.238468532 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.646050656 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.615217781 seconds)
  done (took 73.597622114 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.614629845 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.745506593 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.619310356 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.621238264 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.750309265 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.644576256 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.615557494 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.620883983 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.621025084 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.622095039 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.62321215 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.623698208 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.621985033 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.671695102 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.748485659 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.639908319 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.615835688 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.741085146 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.615369885 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.615298114 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.6708678 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.622260136 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.624401336 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.675859134 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.622159189 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.623447971 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.743579624 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.64871326 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.623560405 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.742908605 seconds)
  done (took 51.090789415 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.623802368 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.337382595 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.529266127 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.628934983 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.618536417 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.622532267 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.98763715 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.62866137 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.623983211 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.622450222 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.211826462 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.652274637 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.658351635 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.558250359 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.626762719 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.625613109 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.624646032 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.621280422 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.329035091 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.629750317 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.006747556 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.626139345 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.981835019 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.630209378 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.646985452 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.621750391 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.625936002 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.536068225 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.645827904 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.201324909 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.648120339 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.984268213 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.480097118 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.544959231 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.628145332 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.632566471 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.626096618 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.207667786 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.644627043 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.621851171 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.98440164 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.622346731 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.51846195 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.363348817 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.64511622 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.626926811 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.562767428 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.225713539 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.952239977 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.629852982 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.547695101 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.626079878 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.62835365 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.623458641 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.931779646 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.627272963 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.622788469 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.610698345 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.653684768 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.985282218 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.628102892 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.624486121 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.322969146 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.62470316 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.321523861 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.625492152 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.631847205 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.648444288 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.520381319 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.626822834 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.395447845 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.652765203 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.629208071 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.207426862 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.341887163 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.629001253 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.627077689 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.324367163 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.512947575 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.008076077 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.629032654 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.514727873 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.016474353 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.628393137 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.631489368 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.632284225 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.63053366 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.708177142 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.986374 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.321394799 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.384800951 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.647141471 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.014329486 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.633666333 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.624705397 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.618190011 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.657871219 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.62931945 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.535622483 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.39081427 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.654318153 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.633945863 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.406512178 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.656053609 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.990489139 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.630187803 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.55192066 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.631022198 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.709422553 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.631787409 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.634986925 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.65570613 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.992306577 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.630849657 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.631129287 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.373780414 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.258250589 seconds)
  done (took 228.208893492 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.62113467 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.643258859 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.642213345 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.621190364 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.621448779 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.628046892 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.621742083 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.621952454 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.627950572 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.623382644 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.622200087 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.630046091 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.628701459 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.620919653 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.621775498 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.62242262 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.622210051 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.650189442 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.622547313 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.622269567 seconds)
  done (took 50.047151022 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.632973641 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.328302699 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.335735975 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.638311846 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.63428075 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.629638464 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.698930704 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.65553258 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.632952511 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.004216934 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.851249545 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.662106326 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.633510094 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.633981097 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.315690751 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.629496907 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.017967757 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.365592459 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.639391635 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.362478612 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.628813502 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.633244194 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.62953994 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.359567794 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.038151291 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.999711581 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.706216531 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.371631143 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.662567586 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.635527113 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.355016572 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.639819536 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.631940695 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.332490576 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.659316455 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.651654289 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.636705172 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.704497384 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.725731758 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.030133661 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.423587148 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.023421253 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.648360482 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.826664256 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.638572761 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.626284957 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.341951629 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.660643676 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.626366926 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.638722282 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.642129322 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.330020793 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.659956878 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.329322568 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.663899646 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.637057645 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.338490233 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.330429173 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.349882776 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.855713947 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.654502043 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.00339608 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.642295883 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.344307414 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.661462991 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.639369864 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.639123464 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.855098371 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.360699143 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.999011951 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.011281018 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.010638664 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.640450581 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.712414422 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.662225846 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.088123732 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.711606207 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.076444464 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.014368546 seconds)
  done (took 150.168590514 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.957724056 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.77157976 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.120202533 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.317608894 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.632856228 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.78470174 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.765990756 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.931626164 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.652077346 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.714746264 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.424104938 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.768412641 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.503195258 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.740302794 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.780729485 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.801950391 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.127291644 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.640515669 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.405416257 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.410358518 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.639106817 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.778964616 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.225394883 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.880096024 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.634127124 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.311020807 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.672853218 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.422871437 seconds)
  done (took 62.332470272 seconds)
done (took 616.943870141 seconds)
SAVING RESULT...
DONE!
