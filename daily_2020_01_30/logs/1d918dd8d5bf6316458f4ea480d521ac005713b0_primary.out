cset: moving following pidspec: 22525
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.313909435 seconds)
loading group "string"... done (took 0.672713757 seconds)
loading group "linalg"... done (took 7.465822477 seconds)
loading group "parallel"... done (took 0.165306371 seconds)
loading group "find"... done (took 1.166405059 seconds)
loading group "tuple"... done (took 1.833055562 seconds)
loading group "dates"... done (took 1.279466757 seconds)
loading group "micro"... done (took 0.228541705 seconds)
loading group "io"... done (took 1.054011134 seconds)
loading group "scalar"... done (took 39.251381439 seconds)
loading group "sparse"... done (took 12.283659541 seconds)
loading group "broadcast"... done (took 0.984559257 seconds)
loading group "union"... done (took 12.631428267 seconds)
loading group "simd"... done (took 4.657405104 seconds)
loading group "random"... done (took 9.375288874 seconds)
loading group "problem"... done (took 1.864604046 seconds)
loading group "array"... done (took 21.292536317 seconds)
loading group "misc"... done (took 1.668208665 seconds)
loading group "sort"... done (took 3.383648192 seconds)
loading group "collection"... done (took 18.187380189 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.533280804 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.130933008 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.124962663 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.124718704 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.153403536 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.120713253 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.133457421 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.091041388 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.876260675 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.154973497 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.123094185 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.445244553 seconds)
done (took 5.395411497 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.180674114 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.089154123 seconds)
    (2/2) benchmarking "String"...
    done (took 0.087917412 seconds)
  done (took 1.372494333 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.069312685 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.130089969 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.070888558 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.07083054 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.070895954 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.070187275 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.0698168 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.070280116 seconds)
  done (took 1.748595166 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.079070742 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.072814083 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.070298952 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.072893702 seconds)
  done (took 1.49155232 seconds)
done (took 6.071114439 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.809970923 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.217160201 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.196653693 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.426488992 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.136925498 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.165492025 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.637030604 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.327534823 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.194576178 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.084274375 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.113895775 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.343206127 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.11326347 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.639494634 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.078553477 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.094844425 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.144782043 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.45054797 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.071224013 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.086547134 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.092593667 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.132531573 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.091110329 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.078079763 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.150004069 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.071653977 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.141423788 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.084005096 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.07040194 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.21923329 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.17623619 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.685099202 seconds)
  done (took 10.562027407 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.102126185 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.10097032 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.073017909 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.126118721 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.101421875 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.073901553 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.074671286 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.071070618 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.090496495 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.131300984 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.092901885 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.106334507 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.069200641 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.07340971 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.089446278 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.208913869 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.08496453 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.08578929 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.075044465 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.079350367 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.108616518 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.082361397 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.080836291 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.080821191 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.132749511 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.184635576 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.103387714 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.101009026 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.070666448 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.083345613 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.119130435 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.128595661 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.071807536 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.070384334 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.128128891 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.098843089 seconds)
  done (took 4.791065768 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.045219627 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.118981913 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.14987141 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.094327639 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.140901974 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.068944481 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.114033288 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.069430288 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085579636 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.216748691 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.482932787 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.068963905 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.617181324 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115208307 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.108495711 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071604524 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.075368214 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.071363059 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.548208231 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.100326646 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.112811453 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.08681704 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.074379841 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.072752202 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.360269377 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072059149 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.068177536 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072519187 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.060894947 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.130638782 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072021594 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.984231425 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.134703938 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.071174588 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104807228 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.166215956 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.227872946 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.149506727 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07321355 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.069069998 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.160015191 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.068383243 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.074304961 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.070348557 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.088946714 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.107527242 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.119569379 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.072221725 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.070992221 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.168966013 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.069393009 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.084150006 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.660048705 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.155335119 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.08083184 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.068433604 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.26326079 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.094141229 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074073591 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.06881466 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.193907082 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.136930768 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.072399865 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.071636569 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07240967 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.073800792 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.370099603 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.072633221 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.008026982 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.074667633 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.081732176 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073772612 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073601346 seconds)
    (73/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.068137656 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07728603 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.077003208 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.093105827 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.070068369 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.079219248 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.069978283 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.069678931 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.070946192 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.087175714 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.400193356 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.07082621 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.071689844 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.068428851 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.094439239 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100618072 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.071757618 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.068824296 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103322922 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072274728 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.070556778 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.112177024 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070077341 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.188872059 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.073932285 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.117489215 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.07024381 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.109127195 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.071697017 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.099562846 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.073726993 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103366583 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.084325132 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072152401 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.444279056 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.069062057 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.069693744 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.072987932 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.069552772 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.071103845 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.070640348 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.083841676 seconds)
  done (took 22.011814109 seconds)
done (took 39.605655028 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.261959874 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.077353308 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.081706844 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.080191422 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.077772424 seconds)
  done (took 1.868484144 seconds)
done (took 3.134045774 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.128137804 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.104261552 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068801689 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.102061334 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.068139838 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.106526107 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.10603887 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081115394 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105407773 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.068156649 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.101998377 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.068418266 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.068762827 seconds)
  done (took 2.467122582 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09115855 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.089665068 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.073577869 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.088342991 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.067941881 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.088097394 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.086340278 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.093998685 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.085759314 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076988767 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067667241 seconds)
  done (took 2.1691457 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.089832707 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.09027848 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.074571478 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.086444092 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.067114982 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08686768 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.086411326 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.091514484 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.086612166 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.079124363 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067465108 seconds)
  done (took 2.160591166 seconds)
done (took 8.050453811 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.084536337 seconds)
  done (took 1.329604664 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.607895555 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.149210341 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.086362055 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.116139272 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.19891974 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.12278172 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.279082247 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.091830966 seconds)
  done (took 9.088307826 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.093758972 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.07356134 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.087523309 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.073990406 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.073014556 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.076401901 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.075371972 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.072809093 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.074928982 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.076591605 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.075597579 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.074212953 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.07290104 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.076227877 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.073147249 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.074897288 seconds)
  done (took 2.553394416 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.096734291 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.096341841 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.077730399 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.078729006 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.07629524 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.075544913 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.077850071 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.077359993 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.074528649 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.076591522 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.078030829 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.078144638 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.075606211 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.068275395 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.077844857 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.079466453 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.074890384 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.077961854 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.078141322 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.07905747 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.078709373 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.068395483 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.075383537 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.07779631 seconds)
  done (took 3.242391243 seconds)
done (took 17.46890232 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.111777075 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071232936 seconds)
  done (took 1.438780398 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.08823781 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.087986144 seconds)
  done (took 1.44020033 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.087652413 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.069772765 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.093403997 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.081622634 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.069758112 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.069258933 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.092264524 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.070267649 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.069742661 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.069550566 seconds)
  done (took 2.037026945 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.07544573 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.081420999 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.073889456 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.08504142 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.076878959 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.067774787 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.076473123 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.071598661 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.080773141 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.066557094 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.075866856 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.087752842 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.074556012 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.088765857 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.075819526 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.072808342 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.074287186 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.071255547 seconds)
  done (took 2.643627321 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.071545779 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.070841645 seconds)
  done (took 1.41273593 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.072705409 seconds)
    (2/7) benchmarking "second"...
    done (took 0.067875897 seconds)
    (3/7) benchmarking "month"...
    done (took 0.070760597 seconds)
    (4/7) benchmarking "year"...
    done (took 0.069561621 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.066924292 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.065999802 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.06701164 seconds)
  done (took 1.746168486 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.394536276 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.120124671 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.325246169 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.075457793 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.086484865 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.269554388 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.069763052 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.074820579 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.075492711 seconds)
  done (took 2.802790084 seconds)
done (took 14.795013722 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.088168409 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.091231207 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.101117765 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.390647289 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.095618675 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.070384788 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.117334675 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.194275252 seconds)
done (took 2.43127399 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.220472011 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.727966461 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.446525669 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.219333894 seconds)
  done (took 2.666907567 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.361139923 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.09324081 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.063211777 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.070894202 seconds)
  done (took 1.872819403 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.071799231 seconds)
    (2/2) benchmarking "read"...
    done (took 0.073735485 seconds)
  done (took 1.425018772 seconds)
done (took 7.46492013 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.071913141 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.070594406 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.092164098 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.068010083 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.069493748 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.067582311 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.067481365 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.068056414 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.069789353 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.069813476 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.066993874 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.07060915 seconds)
    (13/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.06962629 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.069531498 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070399022 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067145783 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067016037 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06946887 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.066918724 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066880899 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067009086 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069833509 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.067498142 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.067018476 seconds)
  done (took 2.986018777 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.090526138 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.069979861 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.075318934 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.075254426 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.072883558 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.075034308 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.074266199 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.070243117 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.074841032 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.072607298 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07322441 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.073536412 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.071617042 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.07320901 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07205989 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.073299905 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.074871887 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069796063 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071584007 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.072663428 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.074610883 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069570617 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.073178469 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.0744307 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.072933269 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072666985 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.072282223 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.069465693 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074734195 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.072570911 seconds)
  done (took 3.494241689 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.074968613 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.067792407 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.067707501 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.075351852 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.067209656 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.068962686 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.066881026 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.067540871 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.068330505 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.066807857 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.06817621 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.066924232 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.067404342 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.067683254 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.068010979 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.070671467 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.08302443 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.067158381 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.066917011 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.067205629 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.071226947 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.067016757 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.06688688 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.066372749 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.067107158 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.066653732 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.180529827 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.067366326 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.067748954 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.066671784 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.070333006 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.070860239 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.066617882 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.074104776 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.070846833 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.067189651 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.071050169 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.066587896 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.068247011 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.067042215 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.067204201 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.066870103 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.066631652 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.074440787 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.066903706 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.068453752 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.067184285 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.068477153 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.067908527 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.069644209 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.066468327 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.066795971 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.069152901 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.068248428 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.071885065 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.066617852 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.067551088 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.066906729 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.067612688 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.067017388 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.066756832 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.06720134 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.069446133 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.06812649 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.082679513 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.0744801 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.067679633 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.068720666 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.06835539 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.070268838 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.068704419 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.081400831 seconds)
  done (took 6.370333946 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.095370794 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.09096005 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069926865 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068980163 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065055769 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.068322901 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073186365 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067073835 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068938244 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085854967 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067511375 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069150153 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068748119 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.071124265 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068146388 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068602314 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075574065 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06534054 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.067491106 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071863457 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067726719 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073220228 seconds)
  done (took 2.88955827 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.161033455 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073712941 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.110605934 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.079000962 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.073307841 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.079249289 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.073441428 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073141655 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07344711 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07114811 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071782295 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073882383 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.074171649 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0712636 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071279026 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071048586 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073571268 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070850533 seconds)
  done (took 2.741013716 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.082346604 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.069309416 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.091082253 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.069760591 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.069850371 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.07245272 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074554405 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077578092 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.071985178 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.069742003 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.078178932 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072426267 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.071866937 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069258597 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071995825 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.06963288 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.072593599 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0696959 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077943634 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073984529 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.074160258 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07757609 seconds)
  done (took 2.923833899 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08438873 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070902314 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.085116077 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.071740914 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.065515878 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06790024 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.073943362 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.069693458 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.073345518 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.072139996 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06913347 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.068152478 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.071909551 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069146486 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.072552864 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069814972 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071877917 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069185186 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071467399 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.065023085 seconds)
  done (took 2.731452649 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091872122 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072193556 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07196834 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079534034 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071632937 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071723099 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078606156 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071383792 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072355854 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.092731345 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071293865 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071369052 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079157799 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076538186 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071861373 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078535408 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078639963 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078534238 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071779085 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071593702 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.093199947 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071779823 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079444027 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071246738 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071491272 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071545987 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071120586 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.075914797 seconds)
  done (took 3.42815984 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074211062 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070295992 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.067767187 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.067726618 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.067535578 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.066851177 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066840781 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.067015203 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.069857433 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06723169 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.06938942 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.069770786 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.070413297 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.069461001 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070067243 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.069903661 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069727782 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.067109954 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067298187 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067695346 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.069780129 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069514057 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.069644137 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06801098 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067104008 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.069293414 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067121158 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067180809 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069494519 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066881672 seconds)
  done (took 3.362803923 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.080814194 seconds)
    (2/2) benchmarking "in"...
    done (took 0.077443728 seconds)
  done (took 1.462497651 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.06805846 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083810968 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.067595073 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.074530749 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073623564 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.07034766 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.078005253 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072871805 seconds)
  done (took 1.886476083 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.089214042 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.0818013 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.071234225 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.084077903 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.081223339 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.088315504 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.140408329 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.070260995 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.076971852 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.06783496 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.086385376 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.069169232 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.076612398 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070818244 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.076606963 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.076432855 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.068279721 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.076519199 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.072442896 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.068797696 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071892079 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079410255 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072892797 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.065343807 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.071693666 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.093046634 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.081218939 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.070147919 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073260529 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.077481096 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.076644256 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.064351769 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.070956304 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.070879074 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.068719925 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.080646752 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085156962 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073703019 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.079824182 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071279107 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.079824961 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.065038492 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.074862448 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.076921273 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08100127 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.071601264 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.071077818 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.06499224 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.068377595 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.073308611 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.065190513 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070521864 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.06467671 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077790663 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.074049102 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081116152 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.069461847 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.071835512 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.072953885 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.073929652 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.078115372 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.072504317 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073121693 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.069984235 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.08040872 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.075391356 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078831105 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.065119874 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.064025978 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.068099473 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.080301996 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.095148585 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.076896812 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.070958149 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071218807 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.068079734 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073739921 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071050584 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076051256 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.077172278 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.070494767 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.075796147 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07801676 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070863196 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.072860281 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.078139324 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.069811812 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.073512671 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.068209874 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08697435 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.06947273 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.068184465 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.067840846 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.081704836 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.074441001 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.070219394 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.068399798 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077723451 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.064286371 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.070344606 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071763299 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071189268 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.080344996 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.074513701 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.075228996 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.078647614 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.07781207 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070169331 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.072666544 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.067077362 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070174789 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.069367844 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.077074619 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.063250548 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07229478 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.196778679 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.071984751 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.079643889 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.068762406 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.071331797 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.0788552 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.076929159 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.069788194 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.067251715 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.073843118 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.071009744 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073188228 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.078687149 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.069190606 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.065787552 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.065642544 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.074572729 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.070056391 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.074273879 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.075389184 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074031104 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.064972688 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.068975053 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.075252427 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.08033728 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.070983966 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.071340185 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.077844852 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.07305787 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.070154981 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.077592886 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.073450043 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.070136085 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.076440511 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.072252016 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.065192517 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.073958182 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.073873757 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.069373855 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.074451188 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073651826 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.072942592 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.071786735 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068762562 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.078016954 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.072013422 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.069944723 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071866981 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.069199582 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.081902324 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.073137347 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.065697218 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.067224133 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.078879216 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.068515912 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.069906767 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.069666505 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.073112279 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.071298156 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.06958666 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.069896116 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.07270967 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.081438201 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.074532472 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071362469 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.075619576 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.082954865 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.07083742 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.073039979 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.070022164 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07210072 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.070807883 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.079370714 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.077080239 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.075668283 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.073171686 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.067025745 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076000044 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07845655 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.069732881 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.068445756 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.069387335 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.074213246 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.076692073 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.074361771 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.071646387 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068849617 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071512261 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073513271 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.073563271 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.070245186 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.070301694 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.076648472 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.069579776 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.077243572 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071435671 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.081545614 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07400464 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.065724449 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.073443651 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068837689 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.076787334 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.065050557 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.0682432 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.069778699 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.071112144 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.069855227 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.07372608 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.064248777 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077268145 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.078676516 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.070154748 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.068603942 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.069080455 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076748978 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.071328524 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073358669 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.072758835 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.075303156 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.210937413 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.071333221 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.075229164 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.082686067 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.071327351 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.065085233 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.07730844 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.069352177 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.070632046 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.070362126 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.068712029 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074685875 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.078993971 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.078113676 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.06478949 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.074185332 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.069084851 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.070334502 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.065920383 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.075675676 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.075387077 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.072307133 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078311292 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071736636 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.071318578 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074952633 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.071027444 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.071795839 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.072263558 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074572269 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.071758564 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.073386371 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.070573934 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.074138596 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.069916278 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.068527703 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.072513358 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.070830728 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.071541925 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076039572 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.070632812 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07127711 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.074081548 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.070656656 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071844935 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.071899457 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.069690689 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073533776 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071790005 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.071518176 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.072685525 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.065645446 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078470699 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.070107878 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.079163319 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.071724752 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.068184051 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.077880028 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.07228785 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.076155815 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.071419102 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.071364549 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.07242024 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.069835414 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.073603961 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077963844 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.06833434 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.081911274 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077911682 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072159583 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.074072363 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.071585234 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.072207355 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.069478195 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.072058665 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.071539125 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.071452357 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.070219865 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.075448195 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.073211553 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.070811391 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.073798589 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.071540765 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.072110435 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.071865394 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.06496095 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.069986982 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.069855671 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.072484795 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.080382703 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.071196423 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.069983505 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.069474074 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071736368 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.069484069 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.067114727 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.077861104 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.078762045 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.071394846 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078130889 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.070311698 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.071819311 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081977896 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.064249694 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.068938506 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.068288841 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.06803507 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07751807 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.070690368 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.079808344 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.070688641 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.069197173 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.068004 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.071192112 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.068399384 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.063827128 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.067446849 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073069569 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.069969022 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069129508 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.069668617 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.071905719 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.203675506 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.080704504 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.071096326 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.072168011 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.070982899 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.06891046 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.070478212 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.070059319 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.073906753 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.071838696 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.06888667 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.068114152 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.071165682 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.072624485 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.073415372 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.070447824 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.072601598 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.078033971 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070479319 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.074192475 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.073792228 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.065346218 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.074876237 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.071434809 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.070862889 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.070394091 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.074565148 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07397844 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071750945 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.080236272 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.071273946 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071672459 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070850479 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.068427612 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.070887682 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.070110239 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.070434551 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.070544535 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.072335991 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078973515 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.068585179 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.074112709 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.07123017 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.071487958 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.077818567 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.071828777 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.074237816 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.077422086 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.071994973 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.072934423 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.078942883 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.075984615 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074676881 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070580121 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.072866098 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076913274 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.070139387 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.076947509 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.07076892 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.072529879 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.072376105 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.069579837 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070531019 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.070541663 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070060629 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.076834969 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.070656789 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.069528922 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.06935019 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.068634069 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.071754889 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073763813 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078561465 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.073589258 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073255357 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.065227572 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.068615461 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071417318 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.068523795 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.072515683 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.073063598 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07627982 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.073068954 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.070968124 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.070230185 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.079844423 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076599433 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.074327051 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.069063645 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.074346922 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.071680833 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.072988949 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.071802749 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.070948751 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.071867452 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.074700877 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.072286155 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.071553296 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07815574 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.074410497 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071466444 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.073117765 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.071759871 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.070981622 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.065493413 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.070311742 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.0725143 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075159651 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.072656891 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070278058 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081714978 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.067953122 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.07031303 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073100953 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06906929 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.074863753 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.06494336 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.072367956 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071077841 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069937383 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.064603508 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.068772216 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.067053486 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.071809053 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.0682994 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.064169817 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079832207 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.078727615 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.072433472 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068304582 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068064579 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.064264946 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.064556285 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.068561819 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070159976 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.071144318 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.079465021 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.068489975 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.06923279 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.064870615 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069663745 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072293619 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.072748005 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.066755312 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.064062821 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.068351806 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.072546173 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.075845139 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068098481 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.069371196 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073329049 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.071584386 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.06728428 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072051221 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.066137099 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.072547945 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081710703 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.069385741 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070002959 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.075296486 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077230462 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.069482436 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.064405907 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.069363903 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.072597038 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.070283508 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.069796263 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.070662017 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.084174185 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07249919 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.068044462 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.068248558 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.072088164 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.068548339 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077523692 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07024286 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.07069076 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.073864619 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070878286 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.076982207 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072093182 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076748986 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.072022239 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.071964888 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.068487952 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070055844 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.067541543 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.068835682 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.070716439 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.069671951 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.07335345 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.075346888 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.068803905 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.07849428 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.076985294 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.07136284 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.065114773 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067963589 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.068460039 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.06356662 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.069025274 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.066850898 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.066466187 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.067737098 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.067651138 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.070742536 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073500925 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.069217481 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.068334902 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.068491536 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062757179 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.070825724 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070850902 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070406457 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.064879055 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.068109651 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.068416032 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.072441034 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070495709 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.066121487 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.069889837 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.070735985 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06914687 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.063288469 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.075064861 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06743109 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.070831652 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.067590196 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068889264 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.068713432 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072452091 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07178837 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069417313 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.070314948 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.071693127 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069887082 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.065918519 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.066071496 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.073140934 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.066249577 seconds)
  done (took 44.838642412 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.117418013 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070450535 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068450178 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069174527 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080004571 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069508008 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069039766 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069415351 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.069711639 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071728021 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067862294 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.068245401 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076498877 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.083619157 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078840062 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072426719 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06785152 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069469211 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067496863 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068766978 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076924095 seconds)
  done (took 3.099276086 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.082861226 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.086977366 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.082655577 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.089469812 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07640971 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.076584634 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.080910889 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075770637 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.083940712 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07818427 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.08382579 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075902999 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.077902157 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.077634755 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077925377 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07583022 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.086776289 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.0768453 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.07510343 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080262326 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075815253 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.080328579 seconds)
  done (took 3.160692026 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.076053721 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.072101996 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.073424088 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.065917655 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.071231793 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.066389561 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.074666705 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.069167454 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.074181274 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.070071581 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.069823804 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.069855343 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.072871723 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.066176885 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.070645153 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.068451049 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.112637923 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.07447128 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.070397628 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.071741259 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.065883519 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.072379642 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.065795536 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.066638612 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.069694904 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.07427431 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.071455271 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.068763882 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.070574631 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.069879065 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.07122253 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.068862978 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.072477369 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.071110624 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.069951199 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.070088286 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.070461649 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.07060268 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.066186258 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.069022031 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.071424051 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.066452573 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.072183266 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.072405327 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.069085022 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.068443224 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.072954615 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.070593243 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.065296225 seconds)
  done (took 4.890735712 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.087864887 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.115126834 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.072520129 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.094529787 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.084049047 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.076869289 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.074251708 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.095425944 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.068055529 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.068655828 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.085616633 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.083322848 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.069658989 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.074900007 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.077053444 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069884139 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.07068868 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.069834506 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.073607155 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.069434528 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.074328194 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.076764773 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.084470167 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.082810598 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.074179772 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.070135119 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.069050244 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.074530234 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.081968862 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.073923385 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.074946171 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.075820311 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.085100727 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.075852075 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069443643 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.072374365 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.086208753 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.070431154 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.07287097 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.068338876 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.07282575 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.073968801 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.077342146 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.086224867 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.070444791 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.075297542 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069790718 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.068002869 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.082624404 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.072835916 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.0786817 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.084337157 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.074030314 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.069991642 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.074623344 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.085688804 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.069942296 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.068990415 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.073060612 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.082520057 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.067756999 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.073842489 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.083206462 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.072679831 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.078419619 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.083963956 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.075364973 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.073906604 seconds)
  done (took 6.766772584 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.082924953 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.100910162 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087855799 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.087593744 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07952392 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.08106522 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.079686522 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.07969535 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079557661 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.084666656 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080418331 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.121650276 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.075730167 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.081950245 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080791679 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.079981302 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.07995224 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080057047 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.080343163 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080143803 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.080393021 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.087353905 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.081102575 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.087259858 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.084089728 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.075660379 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.080280548 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.080389337 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.087903565 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.088981873 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.084402996 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.080150374 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.07985015 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.088749998 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.084198046 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.079350557 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069819926 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079670951 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.080990754 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.079799288 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.07573073 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.087479656 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.080483123 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.075393901 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079828189 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.080412368 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.087502187 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.084609918 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.081979 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.084618046 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.080629195 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088163118 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080539961 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080336878 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.088050868 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.090197285 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.08720692 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.088398444 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080108625 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.086961894 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.087016439 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.089750509 seconds)
  done (took 6.597725994 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090238461 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07896101 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.085709107 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.065666458 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.069011676 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.075806108 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068552089 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.068870507 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.078408486 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.077829192 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080634842 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.075686128 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078619687 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08015651 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.075759678 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079473112 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.075794393 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.075633124 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.078942405 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.076401598 seconds)
  done (took 2.964319642 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.080740381 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.0878424 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.07188649 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.075913319 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.073249653 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.075394382 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.072460494 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074111831 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071012948 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073781431 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.080031733 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.080472282 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071740679 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.076331635 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.08025489 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.075911597 seconds)
  done (took 2.642025024 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.091149432 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.077118134 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.084734018 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.071021086 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.070840677 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.066495995 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.069550051 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.065897828 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.066371211 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.083017509 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.070101594 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.081720415 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.070197386 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.069352343 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.066847892 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.075840672 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.066364371 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.067536451 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.069943564 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.082488762 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.07388196 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.068348324 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.073543696 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.070115968 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.072817186 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.074853854 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.068756158 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.07035014 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.067004182 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.070099987 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.07387513 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.073674272 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.067849092 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.067764081 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.069580251 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.067181394 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.069891654 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.069907481 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.075223843 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.070114027 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.068284515 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.071712814 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.070156979 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.071127603 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.065996311 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.070370486 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.065974989 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.072058989 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.067316224 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.072064528 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.069733959 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.072419475 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.070426271 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.077052072 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.072959421 seconds)
  done (took 5.359223619 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086684778 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.073876095 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.066101755 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.068657533 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.073341333 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.071634177 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.073994984 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070802457 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071745639 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.068384459 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.07167306 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.07283075 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072102422 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.073885331 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071214894 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073678995 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.065708247 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071128217 seconds)
  done (took 2.730564964 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.078774836 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071009151 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.078002387 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069955674 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.069936569 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072784223 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065803936 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.068961218 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069060808 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069842206 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069910148 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.072254387 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070744567 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.072616861 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.069621203 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070605349 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.072679093 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068984504 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.070067824 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065723427 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.072201695 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068549157 seconds)
  done (took 2.984285835 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.100998399 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.087468925 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.146642116 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.082764966 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.089614661 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.07572811 seconds)
  done (took 2.011568457 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098674636 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104650883 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071753302 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07441538 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080352319 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074449441 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073606029 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073899151 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081996471 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079324255 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074192134 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082593837 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08231172 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081925271 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080139292 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07986529 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074379018 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074033019 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07090566 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087905559 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073864027 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082437113 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074012895 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073608935 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073787703 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081538377 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082032227 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079473114 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074125583 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082279276 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07964745 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074202422 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082848478 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079775986 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073388919 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082224497 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074280112 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087575531 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079782436 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081394512 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.073182976 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080421323 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082335509 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078368879 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08257989 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073957527 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078828173 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073892107 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074299064 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089705916 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080115772 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081460033 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080342596 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082724288 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082715794 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090495684 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079866042 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082073689 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07983664 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080260831 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08188453 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080413691 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082522149 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080051721 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080267539 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082217383 seconds)
  done (took 6.702550753 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111201663 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071621421 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074038508 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079407036 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081876635 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073916166 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074465404 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073956024 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07425441 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071394026 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113174904 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074460896 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081899569 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081464915 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074322865 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074183655 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074297366 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081469482 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070662279 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089998988 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074246114 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081310566 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081817921 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08105794 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080099143 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080148522 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074678035 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073986888 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073761184 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07388431 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078399938 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074361145 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081159324 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070556396 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081608282 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074091231 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073790278 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078498718 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0740843 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079870797 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081374043 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088210318 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073964798 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074175968 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079845089 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073917606 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074506081 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070794283 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073928849 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070860952 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080117995 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079427752 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079850351 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081302464 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074074958 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073852418 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074489473 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074269244 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0740664 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07966928 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081572699 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074228499 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089839718 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073965588 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074034062 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081626187 seconds)
  done (took 6.602183936 seconds)
done (took 136.90409249 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.194825181 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.172341451 seconds)
  done (took 1.792333321 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.076060587 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.104549967 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.081601879 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.133125108 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.070524605 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.104123059 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.103421379 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.081956387 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.070719825 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.070708179 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.070031051 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.072804102 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.134749544 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.070143232 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.070863265 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.072554671 seconds)
  done (took 2.827210261 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.107154654 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.16980107 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.1085322 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.069294296 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.10547491 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.077304898 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.068987266 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.079141482 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.074803736 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.069802923 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.077065963 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.074551148 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.069136617 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.074321454 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.074935 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.076536969 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.068896279 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.076476828 seconds)
  done (took 2.963504562 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.106134987 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.095244347 seconds)
  done (took 1.644913207 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.168476952 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.13889631 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.211316208 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.364532024 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.168306609 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.159085146 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.151010796 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.147763965 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.124751822 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.143953355 seconds)
  done (took 3.216826892 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.106322845 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.160301585 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.277012973 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.123904053 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.077261315 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.097523485 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.125622216 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.083171269 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.084432911 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.084292473 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.084398835 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.081472674 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.105196916 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.076776996 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.078022159 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.080373327 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.108162447 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.077062357 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.07871423 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.079537012 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.105491379 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.069514496 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.077166416 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.07734974 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.081096375 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.081477139 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.069995634 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.069714041 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.08016676 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.079049206 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.080355941 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.096805668 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.081063921 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.10976295 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.075000903 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.111182234 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.081460289 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.077710309 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.079547445 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.077442014 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.082267395 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.082419845 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.077285008 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.080640297 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.07047183 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.080603927 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.070170254 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.070637175 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.081554599 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.071815822 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.082607536 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.080509264 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.110355265 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.071310397 seconds)
  done (took 6.313911902 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.110467964 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.110585967 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075370026 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.11827517 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10784729 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076077287 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.107220507 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.100922545 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.109248176 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07446746 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072819835 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.07468965 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.086137709 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.086867996 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.120102125 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.111926714 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.077545545 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.075216767 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.111046803 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.109602103 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072428309 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102764313 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.095954443 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.108355828 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.071446096 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.074328665 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.072425532 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073962053 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.080248271 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.081816784 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073537467 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.084762871 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.088370674 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.082045142 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071170292 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.07267952 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072641007 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.083051169 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083024213 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.082600846 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.081355216 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072448879 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072128496 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.073888989 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.074645645 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072692128 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.083067255 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.084683682 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.082956688 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073791059 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.075069836 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.075395245 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.075374008 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.084978011 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.082052487 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.084884951 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.083854548 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.07306308 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072877691 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.077101332 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.084770692 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.083317617 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083458535 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073912412 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.083323353 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072678461 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084630863 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.08800147 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.073083785 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074290413 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.073215954 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073582929 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.073507618 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.081604046 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.082195919 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.074110027 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.074246052 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072664621 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.084574975 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082548369 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073389318 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.081026738 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.07202698 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.072934222 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.074614969 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.074307251 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.081629756 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.083953061 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.074193773 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.072754226 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.074338061 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073015403 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.071379691 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.080689438 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.083979196 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.082934737 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.082817009 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073763871 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.083272603 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.082473338 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074104849 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.083276487 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.072305872 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073963611 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.206313114 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.083543626 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.08230256 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.085301122 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.074229247 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.073738974 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.082587022 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085518893 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.073974719 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.082297888 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.084315705 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.083030354 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.07223996 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.085951834 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073200692 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.082994939 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074418583 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08419635 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073909731 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.083205019 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.072940642 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.072713083 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.0730547 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.083450864 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.075482335 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072864992 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073727796 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073982367 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.084579824 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.086268268 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074282846 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082970692 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.082813856 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.076622168 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.082923698 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073484016 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.084571952 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074409368 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073581224 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071687053 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.0854786 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072746169 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.072680484 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073601544 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.084045066 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072625257 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085068917 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.082054896 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073967405 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.085173449 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.084274336 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.081799622 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.084536302 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075633391 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.073098751 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072026233 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.072869352 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.082407578 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.083602095 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074852112 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.071868283 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.081545647 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.083510832 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.070884172 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.081952566 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.082423402 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.082685985 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.072858111 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.073963587 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.084042379 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.084799971 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.081823339 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.082152759 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.082562083 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072908816 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.081605227 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082506321 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072552556 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.088837675 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07309657 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.086930727 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.082931738 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.080377281 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.082947739 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.084313299 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.084016162 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.084860715 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.087157891 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.07200024 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.072843894 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.083271187 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072768276 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073335409 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.082569734 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.074229492 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.073812764 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.087146051 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.0726284 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.083617608 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.072158761 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.083018035 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.071427633 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073840737 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08695434 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072248234 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.207087502 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.084353542 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.07463601 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.082128481 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.085873029 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.082633172 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072326358 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.075759552 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.084915485 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.083264265 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.072523255 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072912656 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074338928 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.083272135 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.082547928 seconds)
  done (took 19.731844039 seconds)
done (took 39.942338116 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.216155832 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.161201761 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.180420744 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.123360081 seconds)
  done (took 2.227722445 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.122930556 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.105584775 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.097278456 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.069094596 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.103763482 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.069348083 seconds)
  done (took 2.049905355 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.321277344 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.216877078 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.193719856 seconds)
  done (took 2.206108013 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.206832814 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.196148145 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.437989176 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.273982116 seconds)
  done (took 2.709431953 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.150003152 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.093083745 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.071648384 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.088957626 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.137822699 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.165476935 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.10523559 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.130034094 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.082995078 seconds)
  done (took 2.561487253 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.153824531 seconds)
done (took 13.384420997 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.20910074 seconds)
    (2/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.117316457 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.132115366 seconds)
    (4/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.248861638 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.10524863 seconds)
    (6/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.11533289 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.076430427 seconds)
    (8/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.213902938 seconds)
    (9/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.218809927 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.083071089 seconds)
    (11/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.078827665 seconds)
    (12/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.247695317 seconds)
    (13/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.139639942 seconds)
    (14/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.078430712 seconds)
    (15/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.210549601 seconds)
    (16/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.207403677 seconds)
    (17/309) benchmarking ("sort", Float32, false)...
    done (took 0.139515418 seconds)
    (18/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.115237805 seconds)
    (19/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.225637381 seconds)
    (20/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.085623972 seconds)
    (21/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.109465047 seconds)
    (22/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.238525 seconds)
    (23/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.182652323 seconds)
    (24/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.081200919 seconds)
    (25/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.076140619 seconds)
    (26/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.183244457 seconds)
    (27/309) benchmarking ("sort", Int8, false)...
    done (took 0.158026866 seconds)
    (28/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.098162406 seconds)
    (29/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.07531374 seconds)
    (30/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.082086366 seconds)
    (31/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.079571126 seconds)
    (32/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.151546263 seconds)
    (33/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.078202404 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.106001768 seconds)
    (35/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.171301746 seconds)
    (36/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.183689391 seconds)
    (37/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.076904435 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.095923615 seconds)
    (39/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.19201272 seconds)
    (40/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.24064909 seconds)
    (41/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.055811622 seconds)
    (42/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.078286775 seconds)
    (43/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.077788337 seconds)
    (44/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.07776658 seconds)
    (45/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.094166821 seconds)
    (46/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.182123019 seconds)
    (47/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.21497523 seconds)
    (48/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.133043315 seconds)
    (49/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.078306319 seconds)
    (50/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.215151826 seconds)
    (51/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.086816809 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.095493491 seconds)
    (53/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.072264108 seconds)
    (54/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.079055255 seconds)
    (55/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.104449293 seconds)
    (56/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.081816054 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.069782112 seconds)
    (58/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.09426435 seconds)
    (59/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.077366789 seconds)
    (60/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.071306921 seconds)
    (61/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.202449274 seconds)
    (62/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.169789775 seconds)
    (63/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.077977509 seconds)
    (64/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.211330855 seconds)
    (65/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.171968835 seconds)
    (66/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.08082366 seconds)
    (67/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.203072615 seconds)
    (68/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.088667845 seconds)
    (69/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.113944865 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.097784897 seconds)
    (71/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.067720721 seconds)
    (72/309) benchmarking ("sort", Int64, false)...
    done (took 0.069952008 seconds)
    (73/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.072680699 seconds)
    (74/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.079638404 seconds)
    (75/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.070578301 seconds)
    (76/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.099451118 seconds)
    (77/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.055534532 seconds)
    (78/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.077482551 seconds)
    (79/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.205612512 seconds)
    (80/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.05645406 seconds)
    (81/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.109479636 seconds)
    (82/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.305075734 seconds)
    (83/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.122141891 seconds)
    (84/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.080012728 seconds)
    (85/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.105580908 seconds)
    (86/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.055224784 seconds)
    (87/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.281336441 seconds)
    (88/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.189139382 seconds)
    (89/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.080860265 seconds)
    (90/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.078802976 seconds)
    (91/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.075543895 seconds)
    (92/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.070845075 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.098246629 seconds)
    (94/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.078102349 seconds)
    (95/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.083125651 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.120575277 seconds)
    (97/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.078684228 seconds)
    (98/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.147064925 seconds)
    (99/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.084623074 seconds)
    (100/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.081186712 seconds)
    (101/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.096869626 seconds)
    (102/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.078861009 seconds)
    (103/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.077541208 seconds)
    (104/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.054803437 seconds)
    (105/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.074860413 seconds)
    (106/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.155445118 seconds)
    (107/309) benchmarking ("sort", Bool, false)...
    done (took 0.142782221 seconds)
    (108/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.077711184 seconds)
    (109/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.158206204 seconds)
    (110/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.076777262 seconds)
    (111/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.092283249 seconds)
    (112/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.069753668 seconds)
    (113/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.07649291 seconds)
    (114/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.076413914 seconds)
    (115/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.161474731 seconds)
    (116/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.092194192 seconds)
    (117/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.119377313 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.130071484 seconds)
    (119/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.055404408 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.09492222 seconds)
    (121/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.126924504 seconds)
    (122/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.073980418 seconds)
    (123/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.076972214 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.112739021 seconds)
    (125/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.068192542 seconds)
    (126/309) benchmarking ("sort", BigInt, false)...
    done (took 0.197108333 seconds)
    (127/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.081154681 seconds)
    (128/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.075899751 seconds)
    (129/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.09389958 seconds)
    (130/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.069794847 seconds)
    (131/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.073253167 seconds)
    (132/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.077859352 seconds)
    (133/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.054315977 seconds)
    (134/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.085223822 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.096150969 seconds)
    (136/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.054352826 seconds)
    (137/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.076048709 seconds)
    (138/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.110444243 seconds)
    (139/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.054030453 seconds)
    (140/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.148196871 seconds)
    (141/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.122526646 seconds)
    (142/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.067063135 seconds)
    (143/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.147386045 seconds)
    (144/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.066855257 seconds)
    (145/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.078724036 seconds)
    (146/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.071684128 seconds)
    (147/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.123404637 seconds)
    (148/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.078066809 seconds)
    (149/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.054372632 seconds)
    (150/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.069288085 seconds)
    (151/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.075452851 seconds)
    (152/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.211601885 seconds)
    (153/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.083001618 seconds)
    (154/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.069187905 seconds)
    (155/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.078794496 seconds)
    (156/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.150679007 seconds)
    (157/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.09647797 seconds)
    (158/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.072169213 seconds)
    (159/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.070796236 seconds)
    (160/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.075264917 seconds)
    (161/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.070075189 seconds)
    (162/309) benchmarking ("sort", Float64, false)...
    done (took 0.136072336 seconds)
    (163/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.200824228 seconds)
    (164/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.056015034 seconds)
    (165/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.094922389 seconds)
    (166/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.054402543 seconds)
    (167/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.123766716 seconds)
    (168/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.10305645 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.069580369 seconds)
    (170/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.144401919 seconds)
    (171/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.119547713 seconds)
    (172/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.054165778 seconds)
    (173/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.071889929 seconds)
    (174/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.077697792 seconds)
    (175/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.075935082 seconds)
    (176/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.193888215 seconds)
    (177/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.078795103 seconds)
    (178/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.161884601 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.095047109 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.069351035 seconds)
    (181/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.170840413 seconds)
    (182/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.054138608 seconds)
    (183/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.055746577 seconds)
    (184/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.168397732 seconds)
    (185/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.055722193 seconds)
    (186/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.080921873 seconds)
    (187/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.054886031 seconds)
    (188/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.067990709 seconds)
    (189/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.054910983 seconds)
    (190/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.098849718 seconds)
    (191/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.270110948 seconds)
    (192/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.057346383 seconds)
    (193/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.163503183 seconds)
    (194/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.077664496 seconds)
    (195/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.117113566 seconds)
    (196/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.083794608 seconds)
    (197/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.069813252 seconds)
    (198/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.108513851 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.070095288 seconds)
    (200/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.077075378 seconds)
    (201/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.054744825 seconds)
    (202/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.081718309 seconds)
    (203/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.079628849 seconds)
    (204/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.077063222 seconds)
    (205/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.146301549 seconds)
    (206/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.077305005 seconds)
    (207/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.054776539 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.070164346 seconds)
    (209/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.056884349 seconds)
    (210/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.078157209 seconds)
    (211/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.055558509 seconds)
    (212/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.071106032 seconds)
    (213/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.054442692 seconds)
    (214/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.055658685 seconds)
    (215/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.068135029 seconds)
    (216/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.07561075 seconds)
    (217/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.056505214 seconds)
    (218/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.078328043 seconds)
    (219/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.058062187 seconds)
    (220/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.095391588 seconds)
    (221/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.067959144 seconds)
    (222/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.116433342 seconds)
    (223/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.070154858 seconds)
    (224/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.055020644 seconds)
    (225/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.146278038 seconds)
    (226/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.077305774 seconds)
    (227/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.154511138 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.069584689 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.070161496 seconds)
    (230/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.093206897 seconds)
    (231/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.067470487 seconds)
    (232/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.055313404 seconds)
    (233/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.070855893 seconds)
    (234/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.05518218 seconds)
    (235/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.077885592 seconds)
    (236/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.075981769 seconds)
    (237/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.09471327 seconds)
    (238/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.118000733 seconds)
    (239/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.069865373 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.148473781 seconds)
    (241/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.057732164 seconds)
    (242/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.055419025 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.136863434 seconds)
    (244/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.05384671 seconds)
    (245/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.054632231 seconds)
    (246/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.054679408 seconds)
    (247/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.069833646 seconds)
    (248/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.05556113 seconds)
    (249/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.065319459 seconds)
    (250/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.076864891 seconds)
    (251/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.106658981 seconds)
    (252/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.075338364 seconds)
    (253/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.055181759 seconds)
    (254/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.054761181 seconds)
    (255/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.06678296 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.069902262 seconds)
    (257/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.068914795 seconds)
    (258/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.078416568 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.094570251 seconds)
    (260/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.055441486 seconds)
    (261/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.05477672 seconds)
    (262/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.071903253 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.131148005 seconds)
    (264/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.067667165 seconds)
    (265/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.091863054 seconds)
    (266/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.070222366 seconds)
    (267/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.05548281 seconds)
    (268/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.054031329 seconds)
    (269/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.056039479 seconds)
    (270/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.054473142 seconds)
    (271/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.071038418 seconds)
    (272/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.077921476 seconds)
    (273/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.072850343 seconds)
    (274/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.077663696 seconds)
    (275/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.069092521 seconds)
    (276/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.06843647 seconds)
    (277/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.16117338 seconds)
    (278/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.094693296 seconds)
    (279/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.191181471 seconds)
    (280/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.054349425 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.140367593 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.067817578 seconds)
    (283/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.163052473 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.069503753 seconds)
    (285/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.095098934 seconds)
    (286/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.076675786 seconds)
    (287/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.054756565 seconds)
    (288/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.076191009 seconds)
    (289/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.068866466 seconds)
    (290/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.054575269 seconds)
    (291/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.054326694 seconds)
    (292/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.068969345 seconds)
    (293/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.092031556 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.075554143 seconds)
    (295/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.068596805 seconds)
    (296/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.069435712 seconds)
    (297/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.066924298 seconds)
    (298/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.084193435 seconds)
    (299/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.185555697 seconds)
    (300/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.147566474 seconds)
    (301/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.075495371 seconds)
    (302/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.054796416 seconds)
    (303/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.076874384 seconds)
    (304/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.084738805 seconds)
    (305/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.070111386 seconds)
    (306/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.071355052 seconds)
    (307/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.072097276 seconds)
    (308/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.054486458 seconds)
    (309/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.070035895 seconds)
  done (took 32.636095992 seconds)
done (took 34.125600697 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.093891243 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096364766 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.07963449 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.098258341 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.084809006 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.080234976 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.077737854 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.082760822 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.083837479 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.085347276 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.081863889 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.058387131 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.079187262 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.078693557 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.079459304 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09509022 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.082920531 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.077549952 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.077562294 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.068425037 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.078272824 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.069662268 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.071107873 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.057684173 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.083192472 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.076093176 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.076393522 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.07845653 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.069550729 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.069747056 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.073802016 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.077649312 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.06912064 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.083004112 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.076572502 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.077177778 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.079436902 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.081152464 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.071064874 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.069608332 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.078838002 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.069309336 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.077361004 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.077871252 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.076366778 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.075466607 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.077070008 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.081179411 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095415369 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.07124337 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.079528485 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.080370024 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.079777241 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.077176925 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.073750751 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.0772797 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.075016346 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095635476 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.078643025 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07111601 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.078151193 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.078991028 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.075300598 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.077057877 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.076819724 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.07950489 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.079932804 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.075240148 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.079157222 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.076773757 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.069364934 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.077591494 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.073052737 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.069387174 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.080882236 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.082110883 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.068217213 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.075674665 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.077208363 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.074720739 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.068700056 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071269693 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.073440211 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.076175325 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071161437 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.057623544 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.073531611 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.076585109 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.068516537 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.07815059 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.076428317 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.076748894 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.071596525 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.080396796 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.068647505 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.074990438 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.069256536 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.069589218 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.070926196 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.073752622 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.06868121 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.07115537 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.079216778 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.070547989 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.076056448 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.082732595 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.069130062 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.076093995 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.068347956 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.068922976 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.08375105 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.079508213 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.06930253 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071122569 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.068156555 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.076721198 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.06810124 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.068757956 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.06912465 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.068695711 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.075404772 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.068925253 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071188962 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.076440389 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.08284706 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.068764649 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.073118134 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071151676 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.069179831 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.075087871 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.068985362 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.205866084 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.071829477 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.066643455 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071535794 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.070175256 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.077772968 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072261551 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.077804509 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.070895287 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.079255104 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.075311518 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.076203554 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.075026623 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.06794662 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.062757049 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072174141 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071749304 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.070933957 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.069634821 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.071157375 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.069242392 seconds)
done (took 13.183734485 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.073401082 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.146685263 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.100627113 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.10034872 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.089537368 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.070955971 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.08077515 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.103822474 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.072173731 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.105523981 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.092206156 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.090500973 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.118903999 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.068925236 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.069622659 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.073674864 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.071695824 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.085294042 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.103779711 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.091030942 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.119488579 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.070057609 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.09746065 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.094285193 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.092642459 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.108139979 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.070534307 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.073664465 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.073376401 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.097333457 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.092822212 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.074048188 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.070368433 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.103014693 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.098415748 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.08786634 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.070590586 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.087611128 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.070398739 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.069475905 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.071042025 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.103325307 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.084537056 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.084862194 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.073787735 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.080653625 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.071220494 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.087484831 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.09449321 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.083340762 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.090420768 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.105743982 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.072593933 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.088328825 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.068914704 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.090639906 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.080841363 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.072506134 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.07069282 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.07813584 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.070513058 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.074054199 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.085445972 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.084858801 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.074408711 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.089232481 seconds)
  done (took 7.200724418 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.091799945 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.097367198 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.087769656 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.08886688 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.069112621 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.070561699 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.07122994 seconds)
  done (took 2.152680417 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.073687105 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.094463419 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.094660063 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.094280737 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.086460232 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.092445066 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080406671 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.070266443 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.093219176 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.072025872 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.09246164 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.105278199 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.073873416 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.077754015 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.094772405 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.069888831 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.095728098 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.071020821 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.073716872 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.095059069 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073864615 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.101375199 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.074562894 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.070391672 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.085186204 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.070338123 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119618212 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07536666 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.0723189 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.073538183 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068558727 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.112594013 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.084605959 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.078568291 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.07118449 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.085840227 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.085642496 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06946567 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.087767671 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.0795909 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.085422397 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.070952115 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.071699124 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068406455 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.074927445 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.08142903 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.071693922 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.071327072 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.073882557 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.0917337 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.071262894 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.084269388 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.073866126 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.076692744 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.072110343 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.077681736 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.081454982 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.071153788 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.09189075 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.072597747 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088237547 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087738065 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.084779718 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.088403123 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073115772 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.084781644 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.084796797 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.073463446 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072889812 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.074732488 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087500648 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.06885406 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.072202624 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.081506726 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072614333 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.094603675 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.094319548 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072522476 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.085426748 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.070982773 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.07123805 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.07044921 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.094811064 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076180705 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070389977 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.075231906 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073546456 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.068764491 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.069672587 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.075095711 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.068314931 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.072698269 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.073257975 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.073910705 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073994725 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.088076926 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.073497654 seconds)
  done (took 9.321925809 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.075989413 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.072941556 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.0738656 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.072052909 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.071711552 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.071856551 seconds)
  done (took 2.037064732 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.10180393 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.073210934 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.085249313 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.075837002 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.110076711 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.091123624 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.092172212 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.081873632 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.088124528 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.083170191 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.091469492 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.092337306 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.096475853 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.076414162 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.091134062 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.075881055 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.091649949 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.078312201 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.082199317 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076641664 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.090087682 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.076081715 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076498906 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.085387242 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.080157544 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.075845683 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.082378738 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.082685124 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.082208961 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.082320269 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.075809312 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.079788763 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.07443145 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.082212271 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.091327038 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.074826482 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.075815704 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.081164655 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.075529327 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.080106136 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.092442461 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076200781 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.078206024 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.080865843 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.081692787 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.074864549 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.081203985 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.082957595 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.090937011 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.080950207 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.080956351 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.075042889 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.079730647 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.081460044 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.074721715 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.082390337 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.080601348 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.091754505 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.076360911 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.074397572 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.073005241 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.079940553 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.08168753 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.080231144 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.08468897 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.080724058 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.074126299 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076244414 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07648128 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.075351475 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.081635743 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.072680084 seconds)
  done (took 7.472504486 seconds)
done (took 29.746107286 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.543155815 seconds)
  done (took 2.106497025 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.622774254 seconds)
  done (took 2.209939283 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.541669082 seconds)
  done (took 8.127009798 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.409671001 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.531589063 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.73730606 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.13743518 seconds)
  done (took 3.441893394 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.71358393 seconds)
  done (took 2.31004055 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.22384259 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.208868314 seconds)
  done (took 2.034873117 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.385122776 seconds)
  done (took 1.971114649 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.155778755 seconds)
  done (took 2.744996822 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.265357827 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.179845763 seconds)
  done (took 2.037831206 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.497927745 seconds)
  done (took 2.090090377 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.918626794 seconds)
  done (took 6.508167236 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.221739717 seconds)
  done (took 1.852688067 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.243945816 seconds)
  done (took 1.835630615 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.747369754 seconds)
  done (took 3.337372104 seconds)
done (took 44.203150747 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.085922585 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.084953241 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.084428675 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.083243672 seconds)
  done (took 1.915224123 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.082903138 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.077237941 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.080286576 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.076364249 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.08034309 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.077370437 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.078056052 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.078977194 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.076348232 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.0768721 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.076225721 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.076578408 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.078827874 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.078398487 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.075536274 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.07861957 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.07978112 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.076472665 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.079902983 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.076462932 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.074329051 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.078907523 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.078929887 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.07560207 seconds)
  done (took 3.463601882 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.085733599 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.077951986 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.079006256 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.075462352 seconds)
  done (took 1.922496411 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.084886259 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.096059734 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.093631485 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.081873436 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.096730923 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.090346616 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.073558111 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.072852756 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.074538343 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.081747424 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.072134466 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.100649375 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.092389088 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.081488325 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.08405369 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.069504747 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.072471109 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.091954049 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.08315029 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.08257506 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.074973642 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.082238967 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.071966739 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.092673068 seconds)
  done (took 3.597308442 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.093626705 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.109853905 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.084761167 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.093281876 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.096259518 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.068887633 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.091821204 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.095679356 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.132524192 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.069672606 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.074749737 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.069115486 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.077025869 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.069176728 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.085134975 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.112366073 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.115817715 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.073284544 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.10142798 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.069213935 seconds)
  done (took 3.393526626 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.0793771 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.073219722 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.070319279 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.07300074 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.081511502 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.076701093 seconds)
  done (took 2.065438114 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.074764558 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.071768217 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.071167317 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.071111096 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.076337237 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.072165178 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.070249276 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.072280726 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.071403762 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.071169131 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.070853805 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.069357947 seconds)
  done (took 2.466916017 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.211908988 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.07211234 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.072171185 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.070527468 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.074000038 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.070325301 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.085236214 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.071190701 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.096548691 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.070140531 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.070454322 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.072109928 seconds)
  done (took 2.644553414 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213848161 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080343949 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245549444 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15694094 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115961432 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119845355 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11712072 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117546653 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.147109976 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105060866 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172749438 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172326849 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112428461 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142736035 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093890082 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.103088908 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158560602 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169459147 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110395683 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17099812 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149872912 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130474442 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157346447 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106287841 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110736373 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126087161 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.075134327 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08438936 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175330835 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138352833 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149348644 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115736222 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096612356 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181556067 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176230051 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145227472 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153006044 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088827618 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.105610781 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.138580294 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205903116 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093472643 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168039252 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.253129898 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.085700418 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137589533 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12371744 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.124035749 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.109775335 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094471076 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149747945 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189031463 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.141771967 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.0916348 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127947476 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117699023 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.120179298 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11742292 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187529302 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168026592 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132597205 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.075727817 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113731358 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157870754 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137491632 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.111494422 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.129198475 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095459107 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138989958 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15922346 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126588326 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148135721 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.121754694 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09323828 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122142762 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14567677 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131934067 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166103454 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128245282 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.076861625 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127476781 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105769907 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08459312 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.152878237 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078979191 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180778883 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103970978 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.111287697 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130248401 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113546474 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112951003 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163344992 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148260143 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107206684 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.211830038 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110699278 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.125727825 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150051902 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09144298 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11319868 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12181345 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.08142929 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141501686 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.080160437 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127356782 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.079306673 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129626047 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133064344 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.082047149 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126042224 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10889135 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.103633126 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137635279 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164042862 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091623206 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086490367 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174974641 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125698153 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.107696163 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14897878 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16022975 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.103352459 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104321574 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154716185 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183889567 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093036307 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167545669 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110029658 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.088129875 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.091953189 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126685755 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115686966 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.128042095 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085547661 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.122098161 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173956695 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.079016986 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099903758 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137704254 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082047026 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084695593 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109019818 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108449872 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.099586739 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.103338013 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.10599595 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139910346 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127212227 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109404697 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127344059 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.248318607 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177473763 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092726029 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.10640018 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108534397 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.073234974 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.140383805 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161086676 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08429842 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168896997 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.127073449 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120463462 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123673411 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087990285 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14422697 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.0836941 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.074542623 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149714606 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113602834 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115092471 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.155096398 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119882901 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.129040617 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.125172696 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136617759 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134713465 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.133729319 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109473163 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.091905653 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115534717 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131275625 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.077112764 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.094372772 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.083642902 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108351701 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099975298 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087184964 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144986357 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12762729 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114086319 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114859379 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100621039 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151635172 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.079830027 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132591085 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.12256099 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100145244 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.156563357 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155925317 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136206164 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102880435 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141622451 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.074220911 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077544785 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.09162053 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.272451375 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087370342 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.088475786 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120485989 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151932987 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134121582 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141467457 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128528187 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125091794 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161072246 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.073452002 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.123956091 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150930448 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125573388 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.109306714 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094801687 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.103157892 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146697495 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112042052 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187047901 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117290767 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126499512 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156413139 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.105712207 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083840666 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106480171 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139117483 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107786402 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148450727 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103267484 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092447783 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112828473 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.078323456 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10261183 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130067649 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122207905 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137588937 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.119510318 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137100523 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081493183 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119300748 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125698552 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125753927 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.067994069 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124097851 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165843878 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.0987501 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121155261 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1569508 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083184293 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.139476327 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178506499 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.295791275 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.091072134 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112500217 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12527827 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133824284 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124278883 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145427777 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110779327 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141898046 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113264071 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.090474863 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092290628 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102046012 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1102165 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.099351543 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.110190242 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.11832816 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.100136977 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135214422 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109181008 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113810753 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121810482 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.104160552 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.095967341 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101664384 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182509094 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123005433 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17507072 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.103701946 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.148815232 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166646342 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078721807 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083085075 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.08169916 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144978126 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08808809 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134091963 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.112231681 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124434451 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127634027 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146293573 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099403485 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.073052854 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114419124 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13710581 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129075076 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102245172 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.107578324 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168210287 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.10348136 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083172559 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117094889 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119946631 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106495368 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175152491 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.065206215 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109677513 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079812266 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.229593139 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133926591 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158395986 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.083826047 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.107739455 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12241842 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11713245 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13275734 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104966352 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112509983 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131839159 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155676397 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132864264 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.09376951 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116537792 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132123918 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160737072 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109334671 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.101058887 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176399971 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156010875 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.164497497 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.091922995 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116903145 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117908751 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111667021 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141071318 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087403553 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167354154 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086447534 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140672194 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107317238 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092489021 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133720803 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.112786496 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091984552 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152236311 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12149968 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08661943 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080978659 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122569399 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124050309 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110626342 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.079462341 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143007999 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.076769599 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134885626 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163479073 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084369193 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108455753 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098926644 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082766723 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.256269027 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10762115 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091787389 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.103483805 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177030793 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.090310344 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155180561 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138459875 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116821023 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138989765 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106964112 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.644101095 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.082345395 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156195273 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120120919 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178806519 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104430536 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121715604 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113166885 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125542296 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151058505 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107429924 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.190619302 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136803369 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.120727832 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08384428 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105763729 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108213007 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.090980761 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111109936 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11633242 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119106881 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.096609233 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.119477378 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127842643 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.085591439 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100175778 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160450381 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119925945 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148020729 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144805744 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090474344 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121308221 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141473812 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084177911 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.124315497 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155560479 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109752672 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104214633 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.08420952 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.104356431 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.309245803 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.077919778 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166368671 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124587424 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114932606 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117139975 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.117525734 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13498409 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110662729 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124924517 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096497815 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.113895675 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118779334 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085542732 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.081109457 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110996381 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115067726 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.101361358 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100716071 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.10262714 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156238281 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.07621959 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102170657 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11914293 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147750858 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180546846 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.092162989 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087075165 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122436363 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11930501 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.116520532 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123661212 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.083080711 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085366482 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.083297393 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.081992502 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.113561136 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116981796 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118424948 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113792029 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167050447 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.087439793 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.241847863 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099388664 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108571048 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.073610244 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.081844016 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099929407 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101935208 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111032039 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114971115 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163413945 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.099027785 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.093568474 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094674459 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.078359193 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087358818 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132577065 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113410071 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121466523 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251819516 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.066986183 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11243968 seconds)
  done (took 61.175681107 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.11432257 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.086044878 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.100749258 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.147962347 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.126866716 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.205667556 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.157322533 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.193298548 seconds)
  done (took 2.837239542 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.074347055 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.099097585 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.108009685 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.08713555 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.071301851 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.072122595 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.235748792 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.085683473 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.070636519 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.100849858 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.081462406 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.072374111 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.438097619 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.069713592 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.071138038 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.065078659 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.071067958 seconds)
  done (took 3.571203139 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.404362526 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.613096413 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.35739742 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.075657618 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.487022548 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.091611809 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.145047564 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.134709203 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.076314703 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.529555238 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.40802167 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.127597468 seconds)
  done (took 18.158876085 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.082521382 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.073031588 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.088246568 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.087322258 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.076522921 seconds)
  done (took 2.114097277 seconds)
done (took 110.950014359 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.089073153 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.615716145 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.056759849 seconds)
  done (took 2.412123411 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.089924797 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.088570702 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.089557769 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.087233003 seconds)
  done (took 2.07165112 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.082182152 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.080683371 seconds)
  done (took 1.869616002 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.240529499 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.172001966 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.100961778 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.08961558 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.083925231 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.083534707 seconds)
  done (took 1.972907632 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.078300805 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.080679811 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.076601187 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.080479124 seconds)
  done (took 2.025943163 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.083668009 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.055908841 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.058312824 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.061870671 seconds)
  done (took 1.970677293 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.093968067 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.083988793 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.082527122 seconds)
  done (took 1.972822315 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.109642084 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.090981404 seconds)
  done (took 1.91291698 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.089560634 seconds)
  done (took 1.808377086 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.103569918 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.104969994 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.137262058 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.115697139 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.14498992 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.113867882 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.088562221 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.089143292 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.080121373 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.089862613 seconds)
  done (took 2.784248414 seconds)
done (took 23.114504214 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.086136841 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.378694495 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.363381202 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.09480112 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.67310867 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.360367884 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.983727592 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.096890343 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.119591915 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070845955 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088266862 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.652759009 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.974754128 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.332755419 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.962833811 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.333811019 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.653832622 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.07153296 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072034238 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071008823 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.967035703 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070923381 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071351234 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072058903 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.651457822 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.376792879 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072761018 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.331947509 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072201984 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073587073 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.358678111 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072265693 seconds)
  done (took 16.330787801 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.077134064 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125101245 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077123848 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089467895 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.073823986 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073557652 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.074623309 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.072420177 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.12563224 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071288704 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089696112 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.07125615 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.091873672 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072202823 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091777327 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071630444 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072454201 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072469952 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.07204375 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071968154 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.091069949 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070913244 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072478411 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.0719797 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.07210027 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084071864 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072156847 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.072704499 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072110068 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073730161 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075443142 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072240192 seconds)
  done (took 4.262458389 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.123627327 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.129056089 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077939863 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.108407417 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.116091896 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073451833 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.148847476 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097795408 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.131447164 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071946339 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089347958 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.072026691 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.106742045 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072693162 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.092338351 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071828081 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.073041833 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.07261986 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071702051 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072002518 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.091685002 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071919948 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.07208594 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072705193 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071801936 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.085821013 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072208236 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.072157748 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071940033 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074270499 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075284625 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072019754 seconds)
  done (took 4.502519277 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.078352203 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.079470303 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.087295977 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.087848686 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.073902674 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.075394094 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.076750969 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.073880318 seconds)
  done (took 2.363396072 seconds)
done (took 29.183320983 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.086399256 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.072988384 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.077254092 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.086744873 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.077634055 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.082630752 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.071076884 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.079748651 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.076408388 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.077098518 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.079238472 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.070991103 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.075054508 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.070964815 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.077540107 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.071243841 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.08394335 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.076195913 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.082991983 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.083134254 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.073719218 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.076652192 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.078620055 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.082600083 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.082836865 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.08255018 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.081028171 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.076682315 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.072956536 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.074092074 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.080989287 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.087765665 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.071842781 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.083342652 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.071157818 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.071283064 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.075206335 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.071038854 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.083041406 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.080122091 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.073036723 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.080041015 seconds)
  done (took 4.976379134 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.094359976 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.096713338 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.089247025 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.066012221 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.070065983 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.069745895 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.093661008 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.063661963 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.062836967 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.092557362 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.059301587 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.06284152 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.06695522 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.057329145 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.064311319 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.060155232 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.065662849 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.058893327 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.063884336 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.063323957 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.093580918 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.057108273 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.081577545 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.067322498 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.059629896 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.065632743 seconds)
  done (took 3.588579397 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.081089405 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.090129339 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.095203682 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136016722 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.110153364 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.082775993 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.082972247 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.099603796 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.093258987 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.071124601 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.074854886 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.097519924 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.093995974 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.089506485 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.071750336 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.090491707 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.087790441 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.07323962 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.077100611 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.099129956 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.090792538 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.090415158 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.09996503 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.087507323 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.070498126 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.074070024 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.074680099 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.08512595 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.075900861 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.080891158 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.074995602 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.075344766 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.0741137 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.083327695 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.074686908 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.073572088 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.099185224 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081089741 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.083019709 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.071957172 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.079935291 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.07199804 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.096890199 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.131743045 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.070760865 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.077591833 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.07488566 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.081101733 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.070856409 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.092218593 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.08259665 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.072009322 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.07459532 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.070105779 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.071289131 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084671634 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.073949572 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.07346349 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.081105033 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.077532952 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.096906418 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.076625532 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.088138657 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.07082029 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.07925739 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.070790075 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.072268119 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.069945392 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.099882344 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.072965112 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.116394789 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.072308763 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.072342592 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.080695855 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.079684843 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.077386313 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.07215372 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.087363201 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.08339432 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.07557311 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.080462639 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.075074342 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.074446242 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.096259266 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.073833682 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.073160317 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.073272504 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.078305223 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.074777935 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.07320652 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085809343 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.071043753 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.074344322 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.090069971 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.071246218 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.072837694 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.077856233 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.075923727 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.071051278 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082559372 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.076763936 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.072669604 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.082082935 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.071942001 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.074304036 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.084944086 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.078351128 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.070435107 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.075742187 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.077241823 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.072763999 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.072909484 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.074227018 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.073162671 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.080892707 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.078346861 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.076532979 seconds)
  done (took 11.226029561 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.173037404 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.163382155 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.074030801 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.154792351 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.080144139 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.083443173 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.157187913 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.099331495 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.071909463 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.072813867 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.072993376 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.114777191 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.11075849 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.120870593 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.083004157 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.071981575 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.089600425 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.11948831 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.158925165 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.152951602 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.089096094 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.080880844 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.073268577 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.073115505 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.074289504 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.083094127 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.08952709 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.083675338 seconds)
  done (took 4.638724807 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.086700145 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.110499058 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.079013291 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.095987589 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.095411813 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.07199313 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.074067545 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.07420457 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.085798693 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.082603923 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.071712568 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.077207954 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.079517723 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.075131366 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.072484848 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.079213753 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.078954752 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.073720324 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.075111901 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.077976613 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.083036004 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.096763988 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.07593016 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.071016334 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.077252464 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.070807164 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.067416356 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.088677415 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.071882573 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.100283657 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.069721097 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.07755304 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.087574611 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.073486475 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.071496002 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.071829543 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.0717579 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.072145426 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.073580662 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.070104152 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.071126328 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.061275661 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.071171231 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.083085431 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.078619773 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.059757476 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.077093889 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.07721472 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.077577704 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.068991124 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.07476009 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.074909694 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.074659729 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.079341299 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.075846441 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.077244451 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.072966856 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.078082136 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.081029817 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.071196465 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.068942651 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.069963458 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.076573005 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.069163472 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.081047286 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.076814349 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.070514182 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.071965473 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.073801523 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.078942131 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.0715395 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.076225738 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.069446705 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.07358027 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.076321734 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.073712288 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.073237352 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.070627701 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.071768589 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.071960292 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.058553568 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.071324164 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.056950683 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.074704654 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.069523545 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.07001704 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.071973237 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.076369307 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.083836655 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.073219603 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.077989257 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.072899768 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.070345941 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.074710132 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.063859554 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.074071452 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.08302177 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.086054271 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.071410003 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.069676056 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.08509152 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.076452111 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.070704679 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.059420389 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075942293 seconds)
  done (took 9.689073973 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.097414358 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.073863071 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.087816872 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.095557289 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.092709342 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.079262001 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.081808381 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.073549374 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.088161435 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.078027008 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.081528659 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.071712041 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.082669435 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.081497167 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.073878952 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.08211471 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.075742193 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.089822812 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.08722544 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.07168917 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.080367604 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.085065049 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.094965916 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.086517964 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.085421173 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.086874417 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.09531318 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.082038471 seconds)
  done (took 4.113992603 seconds)
done (took 39.958097955 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.821176869 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.068415785 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.819686971 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.17442594 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.899444941 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.996180784 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.8983394 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.816216267 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.043976076 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.850588953 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.115044417 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.052739283 seconds)
done (took 66.307096581 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.873594657 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.955481113 seconds)
    (2/2) benchmarking "String"...
    done (took 2.05553929 seconds)
  done (took 5.760983412 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.039990056 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.383347789 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.06592264 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.816850208 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.822037693 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.12950581 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.628398699 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.329702301 seconds)
  done (took 30.929312218 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.006619569 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.033611726 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.530251297 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.557978859 seconds)
  done (took 15.934118253 seconds)
done (took 64.374538766 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.817836032 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.868186841 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.862146365 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.801793979 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.879456393 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.828181118 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.954379693 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 8.052555019 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.815730289 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.805188752 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.818706929 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.25441456 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.821405071 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.957832242 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.817691429 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.821236372 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.872457018 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.268317388 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.977383299 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.830916274 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.83284751 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.831067271 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.819868971 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.822875983 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.848010205 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.816828275 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.225820129 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.828565939 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.630188412 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.820550283 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.864928365 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.15748769 seconds)
  done (took 206.375558487 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.819366165 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.812656974 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.891099236 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.861275901 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.294974486 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.00241412 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.920709403 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.345181124 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.820322136 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.841507756 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.992751461 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.818109113 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.035943338 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.801160428 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.861922589 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.831014623 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.007929836 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.030401832 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.862393401 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.956611428 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.843985508 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.811408508 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.788664177 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.964155291 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.852310848 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.817695921 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.828716384 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.826593827 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.012386097 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.980451549 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.863036262 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.835729845 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.026024395 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.68947675 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.844001709 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.847343377 seconds)
  done (took 171.393419366 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.203384818 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.820341169 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.819907663 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.819561424 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.82146601 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.825824565 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.818654006 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.940754257 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.943943103 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.416084246 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.407619107 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.819041318 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.873340026 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.60688307 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.817579083 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.888608805 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.829213143 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.818377462 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.838934064 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.84937747 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.818707112 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.822237987 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.944411957 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.832994418 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.022452176 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.829324701 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.820176694 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.825806155 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.1895322 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.82024263 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.826423338 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.065363093 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.819563769 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.821488102 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.664732016 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.46125312 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.899500052 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.822245028 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.829910845 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.823875057 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.040495872 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.821367564 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.822927687 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.822115962 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.827162539 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.960044569 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.823535674 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.945308526 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.821375663 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.295684696 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.81878597 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.823048204 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.631957735 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.41740541 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.823102985 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.82085 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.82734829 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.821213903 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.823625186 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.826521653 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.481216934 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.894920877 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.824630031 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.826205638 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.830248946 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.825053335 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.837796824 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.821357835 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.100243655 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.882794643 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.048329312 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.945936381 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.825426681 seconds)
    (73/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.824450908 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.893031384 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.915873213 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.82143468 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.824237706 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.82262032 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.826431572 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.905491502 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.82282802 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.949343399 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.829949672 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.82701496 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.876000745 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.89706498 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.822534466 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.667038733 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.825380986 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.825011741 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.082675014 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.887476229 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.823095098 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.82310784 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.824986056 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.94925359 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.943884717 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.535222793 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.823888702 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.432972821 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.825420406 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.965040982 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.822955381 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.971813012 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.825895835 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.90638784 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.825764057 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.828128276 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.82320928 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.855825187 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.825614531 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.885021992 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.819991046 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.196432872 seconds)
  done (took 407.339863474 seconds)
done (took 789.117904309 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.494592779 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.459140943 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.559011671 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.475386926 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.451208136 seconds)
  done (took 14.19478043 seconds)
done (took 15.951651092 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.91503241 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.918781857 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.848047612 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.918405561 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.846009333 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.914031102 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.89830893 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.847934591 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.885956295 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.848000877 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.889885038 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.849045348 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.835980209 seconds)
  done (took 26.172744652 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.06714296 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.064493083 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.895438918 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.067470417 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.876280383 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.062315647 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.988550081 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.982943837 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.98393306 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.841557454 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.838879532 seconds)
  done (took 23.426299532 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.06613186 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.080390155 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.902616235 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.066476634 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.87485938 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.066773613 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.989248693 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.982937478 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.980077782 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.845778143 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.838332169 seconds)
  done (took 23.453465738 seconds)
done (took 74.809936837 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.834836866 seconds)
  done (took 3.590518953 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.863917939 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.03562409 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.845285815 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.840716694 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.836900491 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.838030757 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.841226114 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.839800834 seconds)
  done (took 16.700894124 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.834729925 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.833920185 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.834469457 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.832471039 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.83178351 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.837520137 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.835837502 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.834424802 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.835088652 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.835905467 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.834849513 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.83304122 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.834321457 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.836044508 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.832243633 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.835657362 seconds)
  done (took 31.112311646 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.835045016 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.833403197 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.830687989 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.832619142 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.831556185 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.834891263 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.833992362 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.831057991 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.833550654 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.833615656 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.834900922 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.834261344 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.832202165 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.833981612 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.833547551 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.833707194 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.833584454 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.834646429 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.837942074 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.83589581 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.834485443 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.833910349 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.83299765 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.832612147 seconds)
  done (took 45.773077456 seconds)
done (took 98.934049918 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.572982124 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.471825207 seconds)
  done (took 9.803927273 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.840201027 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.836823994 seconds)
  done (took 5.491200595 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.83994257 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.839946296 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.839230519 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.837523132 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.836991941 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.83709071 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.834824537 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.836703421 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.839377015 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.837803454 seconds)
  done (took 20.140102441 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.838461417 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.838020795 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.834254145 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.836602925 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.836434495 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.836693652 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.84065583 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.836383288 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.836684301 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.833405515 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.836817858 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.83623688 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.837445987 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.835875029 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.837983765 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.835047458 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.834506615 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.831892839 seconds)
  done (took 34.813535688 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.838922921 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.838793578 seconds)
  done (took 5.438491953 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.834837036 seconds)
    (2/7) benchmarking "second"...
    done (took 1.83574439 seconds)
    (3/7) benchmarking "month"...
    done (took 1.834745368 seconds)
    (4/7) benchmarking "year"...
    done (took 1.836131313 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.836383402 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.835144438 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.835024532 seconds)
  done (took 14.609479454 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.837204287 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.991185179 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.063895392 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.500769784 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.839748388 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.839424405 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.803852592 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.842063929 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.845646937 seconds)
  done (took 20.32560735 seconds)
done (took 112.380875624 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.619740775 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.83055354 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.048168941 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.881283563 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.889829959 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.128245194 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.849331946 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.139886682 seconds)
done (took 43.14932817 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.839145693 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 4.099751644 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 4.308170203 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.850424735 seconds)
  done (took 17.02241364 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.810013574 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.365236154 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.860787207 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.487131159 seconds)
  done (took 20.316769222 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.200585563 seconds)
    (2/2) benchmarking "read"...
    done (took 2.174582307 seconds)
  done (took 6.134936314 seconds)
done (took 52.077803181 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.830407074 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.830497281 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.827773763 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.827794759 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.828648951 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.827429365 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.82617946 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.827317297 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.828415792 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.831202008 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.828332191 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.829206076 seconds)
    (13/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.829356516 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.829260129 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.83028314 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.82796927 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.82761871 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.828712486 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.82604561 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.82748901 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.828610766 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.830226886 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.827509072 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.828580195 seconds)
  done (took 45.639337031 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.831229756 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.829168051 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.830134126 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.832423011 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.828348614 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.829901997 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.831403157 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.825736941 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.830380122 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.830413621 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.828367159 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.827567902 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.830845206 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.830876918 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.830605263 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.827570648 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.829543245 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.828624078 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.83089804 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.827656092 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.830944247 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.827515942 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.830409267 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.831362452 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.82837324 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.829685415 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.832130108 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.829520923 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.832515018 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.83103416 seconds)
  done (took 56.651331644 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.837441103 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.839761837 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.831740462 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.831616167 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.830970149 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.833635118 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.831503635 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.832848935 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.832274396 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.831401587 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.83286846 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.83226424 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.8329957 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.833294085 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.833743433 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.834218195 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.835343554 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.833347596 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.8336487 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.834386257 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.835223333 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.834212133 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.833553765 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.832067122 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.831099304 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.832724221 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.83339384 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.832876989 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.833203024 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.834239324 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.832733471 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.83384593 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.83247782 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.835642952 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.833689993 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.835250464 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.838975307 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.844392494 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.833950321 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.833376134 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.834995799 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.834539112 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.834278204 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.83443656 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.83368348 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.834310196 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.835453164 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.833395117 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.833671663 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.835094518 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.835187733 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.834591315 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.834853363 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.834797601 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.835051614 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.833360901 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.834371101 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.834882063 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.83427373 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.833782847 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.834861119 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.835464534 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.836085159 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.834799327 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.836853078 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.836664273 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.833600884 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.835359518 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.836068081 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.835756937 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.83713786 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.835781253 seconds)
  done (took 133.832551569 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.838339423 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.833075014 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.833104329 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.834356904 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.832584612 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.836064408 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.833721404 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.835817889 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.833007374 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.835618237 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.837062905 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.833690236 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.835428219 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.838114936 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.837624759 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.832086664 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.835413735 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.835674227 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.837390062 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.836066249 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.838439688 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.835418693 seconds)
  done (took 42.140435786 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.837622328 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.83687756 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.834225479 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.838087936 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.832831569 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.835509655 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.839183741 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.836289821 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.83957533 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.834256657 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.833446541 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.839028972 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.836275471 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.8341326 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.835716708 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.837149592 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.836377442 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.835928091 seconds)
  done (took 34.813980307 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.836393713 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.834420832 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.838151446 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.83564408 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.835839813 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.837087251 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.835698545 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.837860158 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.838283884 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.836368571 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.839366329 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.839188103 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.841538342 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.836518762 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.838239574 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.837609479 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.838999687 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.836730889 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.838216518 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.835699644 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.836951047 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.838269913 seconds)
  done (took 42.18503937 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.838995782 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.83904012 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.835181493 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.836496224 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.836254071 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.83893228 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.838274369 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.836342015 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.839056605 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.837718842 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.838879112 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.839613282 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.83705339 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.836586355 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.83671785 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.836670991 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.839851842 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.837113808 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.839413616 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.837399104 seconds)
  done (took 38.519217869 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.841538437 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.840844094 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.8406293 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.841072527 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.842568908 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.8410825 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.840982924 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.841319718 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.842001281 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.841975711 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.840598807 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.842624538 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.841692924 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.841077606 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.839897632 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.841747008 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.843043028 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.844085421 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.843051737 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.841630756 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.842678902 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.841437526 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.844094048 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.84307806 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.842740854 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.843091132 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.841041297 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.842383974 seconds)
  done (took 53.337915438 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.842277842 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.842633894 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.839191601 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.838146308 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.837348649 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.840661618 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.841387015 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.839816357 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.842212106 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.837686758 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.841433368 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.8424361 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.841140962 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.843029559 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.840813859 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.84279003 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.840506539 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.841038858 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.839551553 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.839650136 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.842362685 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.842764412 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.840908881 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.839912485 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.839235836 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.841955023 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.839748882 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.839588385 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.843572151 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.839749229 seconds)
  done (took 56.990311761 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.860599684 seconds)
    (2/2) benchmarking "in"...
    done (took 1.860818243 seconds)
  done (took 5.490547278 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.841320214 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.84211671 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.842714525 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.840045998 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.840508039 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.844346261 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.84416411 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.840939993 seconds)
  done (took 16.501118872 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.847442334 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.844378619 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.844088729 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.845024779 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.845111338 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.844496579 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.85115093 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.846735926 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.844710568 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.84736476 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.851247113 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.852616164 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.8467039 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.846493961 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.844823084 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.844427663 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.846071131 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.845083117 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.844488458 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.84524709 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.846101237 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.847423863 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.846979725 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.842214225 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.847027241 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.855261393 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.84983563 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.845301017 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.843758486 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.850423177 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.845149523 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.842393941 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.846837198 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.846820719 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.84483927 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.846843959 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.852589607 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.845669432 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.852413448 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.847507744 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.845870987 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.843591833 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.846454978 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.847078972 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.848188585 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.848044479 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.84798739 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.843198975 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.846542045 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.849880524 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.851306211 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.845213136 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.842832765 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.848485514 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.851781429 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.855214299 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.847462847 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.848406137 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.855936748 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.859217319 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.861356399 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.856060173 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.847052159 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.847009868 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.858282167 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.874191579 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.853272085 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.844876675 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.84456354 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.846987992 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.853467297 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.860802122 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.857479076 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.848057987 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.847601003 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.846812378 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.8476746 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.847371893 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.854821402 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.849973938 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.84649711 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.847979921 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.857306671 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.872865027 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.845996117 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.847529245 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.848603298 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.852105355 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.850181367 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.859659452 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.849446938 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.850868837 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.849814546 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.849560033 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.850402358 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.850236898 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.847030284 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.849722419 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.845594317 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.849906318 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.8479012 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.852559926 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.861138486 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.84986082 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.850900422 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.855862337 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.85070184 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.848684954 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.854962974 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.849317434 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.850501766 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.852087685 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.85807747 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.847549523 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.854370558 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.861764473 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.851759854 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.853495947 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.852091676 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.850944225 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.860306697 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.879857144 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.851392725 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.852334739 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.855965043 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.864929356 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.851180718 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.854322472 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.851192759 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.848119863 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.847442894 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.854167773 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.852019659 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.851863265 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.850858 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.85326132 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.849643536 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.852528697 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.852205142 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.853002632 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.854756926 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.851762179 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.853788467 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.856619959 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.851723273 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.853846177 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.85740626 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.854380339 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.852002851 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.854407751 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.850912064 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.852357273 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.851936453 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.853731833 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.853000792 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.853252429 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.85240801 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.852343033 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.853404717 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.851999276 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.852199319 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.853309614 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.855672311 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.852955185 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.857352919 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.85347256 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.850159682 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.852779295 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.852619464 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.853159069 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.854668217 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.852466455 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.856094597 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.864850659 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.854344706 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.854124024 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.857401553 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.854063055 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.855098306 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.855383304 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.859431922 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.863027752 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.853618313 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.859465805 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.855244226 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.855731108 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.855230346 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.854677265 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.854262475 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.853384425 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.857983844 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.862059965 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.867656578 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.863178337 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.854168488 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.85805906 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.855346427 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.858420371 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.857454531 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.853839446 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.855417853 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.85550565 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.853965117 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.855502963 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.855293311 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.854851725 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.853911373 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.854836068 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.855101493 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.855349594 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.854794115 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.856128948 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.856987018 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.850935347 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.85523095 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.855342446 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.854742524 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.853737517 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.856010632 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.855366475 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.854614635 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.855445664 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.863217811 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.852573676 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.856065604 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.855916998 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.855504684 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.854008173 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.854975628 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.858325744 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.85828465 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.863400788 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.859789488 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.856724737 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.862916329 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.8561683 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.859123106 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.863710446 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.858898146 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.857275506 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.862227781 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.867829402 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.855956757 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.856512655 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.857329956 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.856353603 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.854685033 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.863820887 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.854618637 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.857707042 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.858230648 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.857870891 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.85310938 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.857992021 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.859016266 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.857806321 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.859900066 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.857703055 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.857419318 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.858697729 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.85995002 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.858499472 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.857833651 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.861714311 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.868534391 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.864060269 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.858461665 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.861017427 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.860596086 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.861962393 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.859302706 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.860458285 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.857949756 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.871416754 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.869120913 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.865368106 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.860549515 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.860083228 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.865865621 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.860031181 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.866514547 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.860011837 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.860485137 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.859712632 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.859934433 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.856509709 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.859612684 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.859511218 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.860737775 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.861420765 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.863665607 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.857883798 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.858911115 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.859891991 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.86263336 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.859518532 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.859122029 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.860085001 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.863515381 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.8612422 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.857672147 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.859028829 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.865764215 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.860828378 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.861279998 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.860325128 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.858520914 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.859602109 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.863543451 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.859882524 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.863885826 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.871695625 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.863359587 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.871237486 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.86287764 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.869702661 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.861788408 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.86366985 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.87071703 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.856833073 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.859340506 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.860661867 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.860994184 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.867750836 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.862732609 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.864432587 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.866185936 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.863191556 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.860083716 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.860597188 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.861724624 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.86093661 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.862998893 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.870920087 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.862191961 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.865892408 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.863118976 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.85825413 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.862902823 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.860948015 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.860038272 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.865333378 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.861275289 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.861904728 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.862010233 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.865872186 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.862862688 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.861741091 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.862280567 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.860288765 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.861584096 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.868474813 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.864294537 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.867999422 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.863442431 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.866518636 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.863743039 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.869858232 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.863153165 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.863856376 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.863504297 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.862614098 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.863645278 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.863354646 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.863639934 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.863109342 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.864759536 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.868118322 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.864080574 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.866206143 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.863714142 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.866796558 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.866030999 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.873027616 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.891453226 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.866570155 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.869180398 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.860607368 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.865733583 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.86923674 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.863559635 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.862505884 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.866593497 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.874697655 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.873366022 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.863896207 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.864110244 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.864629692 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.866146098 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.867054993 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.86545671 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.864405587 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.864582291 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.865526496 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.865500494 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.869818729 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.865375087 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.865641138 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.864813229 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.866585867 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.874502724 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.868523095 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.865576442 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.866760163 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.864224521 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.867196962 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.866454618 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.865782265 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.869373191 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.866590698 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.867896669 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.875047293 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.872834612 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.86674893 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.864662522 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.865698279 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.868028635 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.866438852 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.866893132 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.866875353 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.867021128 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.869200306 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.867826958 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.867016115 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.865033592 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.865071657 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.865757169 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.867027237 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.868407896 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.873892422 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.86536125 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.863247198 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.865314697 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.866000461 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.863667979 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.866602951 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.874392127 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.869914151 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.881317016 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.878099291 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.872270805 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.869468825 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.870738621 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.879454235 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.866983906 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.869737381 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.870154256 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.867601022 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.868560845 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.871888022 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.86953195 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.874176009 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.868503509 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.867966037 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.877469053 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.87001476 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.867816311 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.871496757 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.873446362 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.869260315 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.865399805 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.868031088 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.867462672 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.874591521 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.868226799 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.870600294 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.871380638 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.868745623 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.87119869 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.874358043 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.869009713 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.870566886 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.866372871 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.869401914 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.869563009 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.870124197 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.868271639 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.869325232 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.869636988 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.872305972 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.877858262 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.866478806 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.871044709 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.871279298 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.870042051 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.871465214 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.869960834 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.868995695 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.868087514 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.871907372 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.870315527 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.870727587 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.873529713 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.871487329 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.870692307 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.871396129 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.871231141 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.874229254 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.883607741 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.881215404 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.869412363 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.871437013 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.872640418 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.876066695 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.870831809 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.871883177 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.873671903 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.872246975 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.869916427 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.871572237 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.871839198 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.876083823 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.890868744 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.871983261 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.872842745 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.873188545 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.8750077 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.8704286 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.870344767 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.872024148 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.876024236 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.875859707 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.882057671 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.873856069 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.880202225 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.87417903 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.874977365 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.880065662 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.874627547 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.885411043 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.875190829 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.874157755 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.872771092 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.878881863 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.891744955 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.874358704 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.883406087 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.907315559 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.873901372 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.87449258 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.872936344 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.871686091 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.873900282 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.874670528 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.875277008 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.873040072 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.874294451 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.875025654 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.873675124 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.880398843 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.875448958 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.872760491 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.871857314 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.873878191 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.874601705 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.871870421 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.881853613 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.881227206 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.881349249 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.881550267 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.879383957 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.881111484 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.893344619 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.893784014 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.881801961 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.882939936 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.87673715 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.883843537 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.88362512 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.891429153 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.890558708 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.880378302 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.880999025 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.880877765 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.881966814 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.877587619 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.881778558 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.881058584 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.880532539 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.877941274 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.893869451 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.891954158 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.883665609 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.881612048 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.883815613 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.883231605 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.881412682 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.882252126 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.883200037 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.88434448 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.884745165 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.885547142 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.882234875 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.88316577 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.884956513 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.890785231 seconds)
  done (took 1111.849812555 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.879238264 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.87815098 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.880038066 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.880698013 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.879945464 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.87927463 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.880827205 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.879209408 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.879843004 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.879715465 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.880129766 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.879090809 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.879887155 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.879289559 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.879429886 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.880594313 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.880711533 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.881230796 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.880302653 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.880243913 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.88038239 seconds)
  done (took 41.283665382 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.885252676 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.879754725 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.883378177 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.881848962 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.879353803 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.883437358 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.881367803 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.884587453 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.883456516 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.880778976 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.882694891 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.882869268 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.878260809 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.87999792 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.880099988 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.883831131 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.882048819 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.88265533 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.883208865 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.880401528 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.882806189 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.880810006 seconds)
  done (took 43.209464285 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.884231165 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.885551781 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.882357167 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.880018076 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.883850984 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.879608066 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.883054894 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.883523597 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.883135812 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.884882142 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.882919079 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.886128227 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.892111913 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.890213146 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.886095143 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.88270017 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.028716912 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.884252729 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.885203551 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.88508384 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.879748433 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.888628151 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.881092523 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.883155 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.883538911 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.8830198 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.88421756 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.884671829 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.885202439 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.88614832 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.89061078 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.884969246 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.884508562 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.888635288 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.884221261 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.886715629 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.889558852 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.886285324 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.881576884 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.884468532 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.897830757 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.911540918 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.887091668 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.891588282 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.884481545 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.884696416 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.887822446 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.895842962 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.882468969 seconds)
  done (took 94.365393817 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.885641566 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.885461371 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.885182225 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.887464423 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.885494082 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.886090268 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.887683102 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.88630734 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.884413965 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.884773075 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.889130901 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.883897853 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.883958705 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.887253475 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.887951036 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.883930982 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.88420355 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.886103512 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.884364161 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.883721437 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.883620822 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.887106557 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.887362526 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.887101939 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.888975113 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.884140679 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.884897887 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.887303374 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.887037679 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.883686196 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.887441058 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.888608119 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.890736463 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.886934314 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.884046414 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.888193956 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.889937807 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.887038168 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.890549243 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.883748756 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.889209126 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.888998192 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.887330168 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.889504611 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.884408559 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.887050441 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.885796315 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.884538047 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.885641007 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.887448274 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.89038919 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.886199349 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.887682689 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.884416729 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.888174066 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.889720773 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.88713631 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.887178953 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.890502388 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.885850779 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.886290726 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.888311417 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.886398585 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.890710436 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.891049446 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.885912817 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.885392994 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.890281727 seconds)
  done (took 130.114171737 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.891347899 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.890703369 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.891717156 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.890677644 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.8927782 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.890847434 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.891306905 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.892007781 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.890922869 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.889524234 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.892841526 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.890627427 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.890706296 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.890609572 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.890415147 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.892564629 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.891278438 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.892554444 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.892635463 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.890919545 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.890053632 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.891722842 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.893206149 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.890546589 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.891041054 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.891206568 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.891255823 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.891552878 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.891784315 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.891136873 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.891223884 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.892320739 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.892450003 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.89157314 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.893198826 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.892111072 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.891817595 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.894563027 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.892127086 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.890049098 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.893832219 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.8925054 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.893317124 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.893741464 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.894656392 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.893154075 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.893160942 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.891662409 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.894348343 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.891950414 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.895608328 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.895618387 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.893466364 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.894580186 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.894273995 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.892035301 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.891412666 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.891762735 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.89085753 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.894550774 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.891725289 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.890014215 seconds)
  done (took 119.124858091 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.892764888 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.891678102 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.888938004 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.888381823 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.890605488 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.888444552 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.8927913 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.896234403 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.891976362 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.888738109 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.891520593 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.888714151 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.892771573 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.890008552 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.890071438 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.889450344 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.885924401 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.889983617 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.886730374 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.884895015 seconds)
  done (took 39.615813163 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.884480534 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.890210876 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.890114086 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.883816219 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.887114033 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.886005437 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.885774439 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.891095186 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.886040033 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.887821476 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.888317627 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.889393039 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.885517966 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.886789253 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.888442759 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.884322064 seconds)
  done (took 32.007414241 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.882660491 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.889590192 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.887118313 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.887432432 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.883256268 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.884962734 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.889255188 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.884598777 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.882983156 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.885531981 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.886923358 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.887477209 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.887721417 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.886620198 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.886132196 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.891397636 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.886389538 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.886526929 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.890357716 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.888963028 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.884424806 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.883760636 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.889202146 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.885913503 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.886189507 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.887872811 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.886854085 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.885330844 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.885582717 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.888570943 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.883991395 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.887540129 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.887643234 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.884884524 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.890430806 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.884204216 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.888081956 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.887605694 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.887805889 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.886766724 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.886345003 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.885496725 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.887039665 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.891164473 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.88396031 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.887654224 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.886038088 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.886914515 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.888661465 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.885540476 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.886469084 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.888804684 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.885271464 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.887346439 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.88763055 seconds)
  done (took 105.585744374 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.887409038 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.88865721 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.885878062 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.890506355 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.889257649 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.885611118 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.889881229 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.883802169 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.887041171 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.889529053 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.88707823 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.889457333 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.889627901 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.890322863 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.886745442 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.889294001 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.887253608 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.883950065 seconds)
  done (took 35.790793923 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.885255066 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.885847548 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.888325322 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.884381362 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.885418278 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.889423309 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.885915336 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.887013576 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.88768128 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.887993694 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.891404718 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.880581337 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.880788247 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.879930996 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.880520254 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.879814598 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.886560999 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.880352757 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.880344608 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.877360271 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.881478595 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.885497779 seconds)
  done (took 43.261034443 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.880845413 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.879749629 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.89622101 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.909466187 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.902627468 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.920812614 seconds)
  done (took 13.194186299 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.876568475 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.878183117 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.881142813 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.879053403 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.880387717 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.875548045 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.875513079 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.878440546 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.880943231 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.8781474 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.879159141 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.879125944 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.881518111 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.881152195 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.880107207 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.880110446 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.880039598 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.879872876 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.880847132 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.878676532 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.878363136 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.880025355 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.876925745 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.875803002 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.873191241 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.877554867 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.879653916 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.875722164 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.874416653 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.879273989 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.878363269 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.87387567 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.879409836 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.875284505 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.879542715 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.877262578 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.875919265 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.87937977 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.875821112 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.875332071 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.876850047 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.879793312 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.878481986 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.876443666 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.879709262 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.8743752 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.874553093 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.872386169 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.872461626 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.877187783 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.878874301 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.872338706 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.873667671 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.876978186 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.875948942 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.87855798 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.872063779 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.872377395 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.876064873 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.87048879 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.873280387 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.875630244 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.871030143 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.873525952 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.875523865 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.872144953 seconds)
  done (took 125.682495949 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.872651552 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.870068866 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.871282788 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.873457555 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.877528911 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.870262362 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.869927174 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.870315436 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.870005802 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.87157257 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.872965125 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.874131728 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.867735573 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.868642704 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.867588391 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.867912579 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.870521578 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.867337199 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.869300987 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.873090725 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.871509923 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.868794182 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.866452577 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.868158597 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.869990888 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.873150639 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.867787813 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.86929801 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.871669062 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.869457999 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.869795912 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.871454409 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.870162052 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.86701138 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.86829251 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.866028154 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.866051216 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.865948398 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.866235015 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.8692965 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.868310753 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.874472437 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.869517603 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.867877572 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.868787631 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.868436143 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.868193039 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.868010777 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.867686059 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.86865079 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.8678362 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.867773759 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.871121641 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.869652756 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.868360592 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.867722311 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.867604169 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.869009925 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.8656393 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.87094391 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.868535154 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.868790851 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.868852855 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.866642112 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.8679777 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.864985538 seconds)
  done (took 125.177729891 seconds)
done (took 2588.118540835 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.945687555 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.847717196 seconds)
  done (took 15.587062887 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.029423625 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.980517096 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.864917668 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.881842784 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.868756306 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.891600747 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.889558085 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.866596487 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.866749194 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.867197069 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.868742615 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.055043634 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.923303926 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.865858676 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.865362681 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.961677238 seconds)
  done (took 52.341786947 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.866802072 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.873075305 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.880180217 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.872568288 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.871727326 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.884725165 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.905065334 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.874503988 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.911352829 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.882017896 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.948361838 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.882726116 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.869973386 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.926716713 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.880348173 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.881134463 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.965337142 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.946770656 seconds)
  done (took 35.915727502 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.94756105 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.874790294 seconds)
  done (took 10.622655375 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.878232279 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.894546376 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.878872942 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.885266479 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.879628976 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.890068436 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.894058125 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.901060848 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.875160814 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.884761082 seconds)
  done (took 70.655008827 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.872212094 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.869798593 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.866894176 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.868568825 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.859772964 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.861705868 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.863682005 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.86335419 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.542631585 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.898746611 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.874025796 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.875177925 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.864408705 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.869367116 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.865154799 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.89142338 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.962207662 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.863862681 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.862987473 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.87188506 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.864747592 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.919068275 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.875620192 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.865903227 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.897442431 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.542364947 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.872018102 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.872776943 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.961034989 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.86291442 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.866615614 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.870441099 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.869668213 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.252928486 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.176173422 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.86542974 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.881068711 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.873961142 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.867519118 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.965085901 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.868137039 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.875698558 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.514777271 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.159481774 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.954369483 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.904045861 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.175145666 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.882376368 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.870570162 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.892113143 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.869657755 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.869157854 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.885769057 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.348427449 seconds)
  done (took 132.053313188 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.861951121 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.21846882 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.032671655 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.862440502 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.152227632 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.074340841 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.863071195 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.911810395 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.862344052 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.093561303 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.116889108 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.975343301 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.862123337 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.865029141 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.858822992 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.859985409 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.027883066 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.939452563 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.862421515 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.862422249 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.894903869 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.11031591 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.988295922 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.862292654 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.897211002 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.07861145 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.985834357 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.971168451 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.653002332 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.859611639 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.929002926 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.861882317 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.862440614 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.859226791 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.024602571 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.962786932 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.95062026 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.862786675 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.8625461 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.86015187 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.627459062 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.06721675 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.958488101 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.006104831 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.01320504 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.073840298 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.65248124 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.862817039 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.614362871 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.03125045 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.100861776 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.099519312 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.99026761 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.864780399 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.231330338 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.865178373 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.863133214 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.11498674 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.016238015 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.970413349 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.862485012 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.862216727 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.863169682 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.165353943 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.866387047 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.962577708 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.865748524 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.862703486 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.969756515 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.969871376 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.00474135 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.084739067 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.895161327 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.593588805 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.078568829 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.115996338 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.93811704 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.116306811 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.865034082 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.863630726 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.949587441 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.716125551 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.124457297 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.16033855 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.121059981 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.902276147 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.599833551 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.865467719 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.097119501 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.088815482 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.117294278 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.018279135 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.106847562 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.201132219 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.86559284 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.864096675 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.090751194 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.00254323 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.869789603 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.230465357 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.099824698 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.440674954 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.888219898 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.176874277 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.003657691 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.869181918 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.514840998 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.86843866 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.090703829 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.911454942 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.866403372 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.867126921 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.090652139 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.846316907 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.867983846 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.544197771 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.931591333 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.867511699 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.106143486 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.870706884 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.131114081 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.86734686 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.111758477 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.455378921 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.900550787 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.048323204 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.016671444 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.872265189 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.117728442 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.11445016 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.986476643 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.093393382 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.517457915 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.870484815 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.1716508 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.872316162 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.869623551 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.041421676 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.868618305 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.015783358 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.870163559 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.15762525 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.895154025 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.107205476 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.872738057 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.12549551 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.908047573 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.920582985 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.870608696 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.00029859 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.875003323 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.809384518 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.035004631 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.875740646 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.867463636 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.463308217 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.8709666 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.020038426 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.108221604 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.890462255 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.944360779 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.542472213 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.869364728 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.954579228 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.894991802 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.324152924 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.869569614 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.124648772 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.87243223 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.872131102 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.869532176 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.170461844 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.054538991 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.872450207 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.874693545 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.778146173 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.870487313 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.870221547 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.051761679 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.217713466 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.867805733 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.076175286 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.870694386 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.002111767 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.873854925 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.953181166 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.227926458 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.869618085 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.871567011 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.870631424 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.871677414 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.871362657 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.085205945 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.898775402 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.413297943 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.010013302 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.141107114 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.190829498 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.127260978 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.916368789 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.87305248 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.128580753 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.872583682 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.9349007 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.871917478 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.894091477 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.107444951 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.871549406 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.13390395 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.151357129 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.771661236 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.923168237 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.870062619 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.871319081 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.869587527 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.022301134 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.960707193 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.868595662 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.872104409 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.987828104 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.996891074 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.086229463 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.871791513 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.073481703 seconds)
  done (took 902.128474497 seconds)
done (took 1221.092818539 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.871598643 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.871086715 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.857356328 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.877394615 seconds)
  done (took 29.277335865 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.885309753 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.880035632 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.884323026 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.88181889 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.884924341 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.880192596 seconds)
  done (took 13.101283154 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.965898856 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.870395312 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.874396572 seconds)
  done (took 21.514739987 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.946946025 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.262580441 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.984883243 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.304239966 seconds)
  done (took 10.303735957 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.883102628 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.882239124 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.882426135 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.886611701 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.883753996 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.887447619 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.886182868 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.886009577 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.885339899 seconds)
  done (took 18.768768266 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.330003667 seconds)
done (took 99.094889631 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.885299238 seconds)
    (2/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.779145472 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.199386827 seconds)
    (4/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.856326866 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.268317883 seconds)
    (6/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.88972242 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.003280844 seconds)
    (8/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.037267153 seconds)
    (9/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.780626621 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.916825091 seconds)
    (11/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.899854169 seconds)
    (12/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.187405273 seconds)
    (13/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.977088605 seconds)
    (14/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.988059631 seconds)
    (15/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.251957721 seconds)
    (16/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.056274367 seconds)
    (17/309) benchmarking ("sort", Float32, false)...
    done (took 5.582592261 seconds)
    (18/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.895267122 seconds)
    (19/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.850021837 seconds)
    (20/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.010814585 seconds)
    (21/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.968512946 seconds)
    (22/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.860159926 seconds)
    (23/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.32801377 seconds)
    (24/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.87769407 seconds)
    (25/309) benchmarking ("perf_sum", Bool, true)...
    done (took 3.044780019 seconds)
    (26/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.026530003 seconds)
    (27/309) benchmarking ("sort", Int8, false)...
    done (took 4.827713032 seconds)
    (28/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.051448715 seconds)
    (29/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.964869554 seconds)
    (30/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.029321492 seconds)
    (31/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.872163464 seconds)
    (32/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.295416343 seconds)
    (33/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.978604083 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.116575726 seconds)
    (35/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.94604814 seconds)
    (36/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.005455327 seconds)
    (37/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.896120478 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.149114326 seconds)
    (39/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.876446957 seconds)
    (40/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.13400201 seconds)
    (41/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.860213822 seconds)
    (42/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.651322258 seconds)
    (43/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.031954217 seconds)
    (44/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.12492463 seconds)
    (45/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.775693208 seconds)
    (46/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.877909562 seconds)
    (47/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.222528159 seconds)
    (48/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.950304237 seconds)
    (49/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.956623047 seconds)
    (50/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.856087095 seconds)
    (51/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.99223595 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.303748673 seconds)
    (53/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.936111571 seconds)
    (54/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.858369234 seconds)
    (55/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.676075302 seconds)
    (56/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.897434304 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.2532961 seconds)
    (58/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.004236144 seconds)
    (59/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.214936327 seconds)
    (60/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.180435172 seconds)
    (61/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.389538294 seconds)
    (62/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.97170489 seconds)
    (63/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.904776146 seconds)
    (64/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.284354654 seconds)
    (65/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.318058941 seconds)
    (66/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.964378368 seconds)
    (67/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.212933563 seconds)
    (68/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.695938491 seconds)
    (69/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.807276633 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.517074685 seconds)
    (71/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.162614169 seconds)
    (72/309) benchmarking ("sort", Int64, false)...
    done (took 5.564597371 seconds)
    (73/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.937549333 seconds)
    (74/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.960205173 seconds)
    (75/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.987920834 seconds)
    (76/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.873904304 seconds)
    (77/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.420531662 seconds)
    (78/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.898786113 seconds)
    (79/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.857350028 seconds)
    (80/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 7.523244497 seconds)
    (81/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.298461292 seconds)
    (82/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.160714138 seconds)
    (83/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.040190245 seconds)
    (84/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.902337149 seconds)
    (85/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.948289116 seconds)
    (86/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.227296981 seconds)
    (87/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.888017827 seconds)
    (88/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.046804226 seconds)
    (89/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.875636002 seconds)
    (90/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.989106889 seconds)
    (91/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.898316615 seconds)
    (92/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.87499074 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.645281754 seconds)
    (94/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.091833325 seconds)
    (95/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.978223024 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.95022383 seconds)
    (97/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.886992499 seconds)
    (98/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.875156413 seconds)
    (99/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.449631916 seconds)
    (100/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.061734413 seconds)
    (101/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.878314239 seconds)
    (102/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.057861477 seconds)
    (103/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.20410663 seconds)
    (104/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.184100945 seconds)
    (105/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.962062674 seconds)
    (106/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.876625202 seconds)
    (107/309) benchmarking ("sort", Bool, false)...
    done (took 2.103993164 seconds)
    (108/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.90096734 seconds)
    (109/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.921207125 seconds)
    (110/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.131057855 seconds)
    (111/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.80394832 seconds)
    (112/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.132264375 seconds)
    (113/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.097164623 seconds)
    (114/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.127729855 seconds)
    (115/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.978167113 seconds)
    (116/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.895179231 seconds)
    (117/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.11903517 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.861933962 seconds)
    (119/309) benchmarking ("map", identity, Float64, false)...
    done (took 3.191043302 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.879539289 seconds)
    (121/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.884502047 seconds)
    (122/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.959505022 seconds)
    (123/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.976331363 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.877974608 seconds)
    (125/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.974302541 seconds)
    (126/309) benchmarking ("sort", BigInt, false)...
    done (took 6.879177823 seconds)
    (127/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.877875779 seconds)
    (128/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.106512809 seconds)
    (129/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.013335398 seconds)
    (130/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.110438147 seconds)
    (131/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.941707255 seconds)
    (132/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.899937276 seconds)
    (133/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.221936679 seconds)
    (134/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.388042922 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.277874221 seconds)
    (136/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.117212384 seconds)
    (137/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.984293995 seconds)
    (138/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.100068985 seconds)
    (139/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.246353862 seconds)
    (140/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.891578344 seconds)
    (141/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.9589996 seconds)
    (142/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.861359309 seconds)
    (143/309) benchmarking ("map", identity, Int64, false)...
    done (took 3.226632727 seconds)
    (144/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.112211722 seconds)
    (145/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.960877287 seconds)
    (146/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.031452617 seconds)
    (147/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.049939146 seconds)
    (148/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.895685622 seconds)
    (149/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.176210936 seconds)
    (150/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.879607025 seconds)
    (151/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.448209488 seconds)
    (152/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.862003942 seconds)
    (153/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.680224802 seconds)
    (154/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.117413208 seconds)
    (155/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.925993565 seconds)
    (156/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.165269851 seconds)
    (157/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.561449349 seconds)
    (158/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.962719977 seconds)
    (159/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.985457351 seconds)
    (160/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.247955469 seconds)
    (161/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.879874142 seconds)
    (162/309) benchmarking ("sort", Float64, false)...
    done (took 5.716416748 seconds)
    (163/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.297396028 seconds)
    (164/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.294286597 seconds)
    (165/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.522790335 seconds)
    (166/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.195900418 seconds)
    (167/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.864614153 seconds)
    (168/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.076407213 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 3.110757465 seconds)
    (170/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.876722106 seconds)
    (171/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.128853421 seconds)
    (172/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.020723307 seconds)
    (173/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.980835336 seconds)
    (174/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.900165516 seconds)
    (175/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.972492597 seconds)
    (176/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.875867707 seconds)
    (177/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.906300801 seconds)
    (178/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.053787548 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.700819965 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.269081105 seconds)
    (181/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.030756836 seconds)
    (182/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.179669998 seconds)
    (183/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.84845968 seconds)
    (184/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.069672333 seconds)
    (185/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.862864017 seconds)
    (186/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.965575754 seconds)
    (187/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 4.380677864 seconds)
    (188/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.946979687 seconds)
    (189/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.00557405 seconds)
    (190/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.007644582 seconds)
    (191/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.875295705 seconds)
    (192/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.463120766 seconds)
    (193/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.117408885 seconds)
    (194/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.910479615 seconds)
    (195/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.057920957 seconds)
    (196/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.434364049 seconds)
    (197/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.172330689 seconds)
    (198/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.957126951 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.222364627 seconds)
    (200/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.282279711 seconds)
    (201/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.521788001 seconds)
    (202/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.892853006 seconds)
    (203/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.699937511 seconds)
    (204/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.081414951 seconds)
    (205/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.890080562 seconds)
    (206/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.91413019 seconds)
    (207/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.177692791 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.521857463 seconds)
    (209/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.86955847 seconds)
    (210/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.966614479 seconds)
    (211/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 7.883143255 seconds)
    (212/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.939716652 seconds)
    (213/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.268250685 seconds)
    (214/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.337717916 seconds)
    (215/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.011631237 seconds)
    (216/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.907345 seconds)
    (217/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.211057953 seconds)
    (218/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 2.007096055 seconds)
    (219/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.21719378 seconds)
    (220/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 2.081185382 seconds)
    (221/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.926039536 seconds)
    (222/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.328108369 seconds)
    (223/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.587225787 seconds)
    (224/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.795857191 seconds)
    (225/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.754884938 seconds)
    (226/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.917889164 seconds)
    (227/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.88803745 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.281885698 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.18957534 seconds)
    (230/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.834509902 seconds)
    (231/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.093345867 seconds)
    (232/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.221312944 seconds)
    (233/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.891185594 seconds)
    (234/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.157944165 seconds)
    (235/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.918064521 seconds)
    (236/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.36548047 seconds)
    (237/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.996521833 seconds)
    (238/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.037154257 seconds)
    (239/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.89459759 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.074700565 seconds)
    (241/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.875616197 seconds)
    (242/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.674039277 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.987072263 seconds)
    (244/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.0206457 seconds)
    (245/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.460988531 seconds)
    (246/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.186086107 seconds)
    (247/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.997560429 seconds)
    (248/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.991574676 seconds)
    (249/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.347232302 seconds)
    (250/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.924857736 seconds)
    (251/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.965848097 seconds)
    (252/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.110158176 seconds)
    (253/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.214570318 seconds)
    (254/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.545937754 seconds)
    (255/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.439654361 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.217793703 seconds)
    (257/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.120343634 seconds)
    (258/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.233378142 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.713079976 seconds)
    (260/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.874567438 seconds)
    (261/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.105138612 seconds)
    (262/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 7.014346549 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 2.160267931 seconds)
    (264/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.14834217 seconds)
    (265/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.8611436 seconds)
    (266/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.894164236 seconds)
    (267/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 8.036540127 seconds)
    (268/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.928786972 seconds)
    (269/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.344138988 seconds)
    (270/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.967968044 seconds)
    (271/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.001595611 seconds)
    (272/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.962347125 seconds)
    (273/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 2.929478883 seconds)
    (274/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.021211452 seconds)
    (275/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.01942263 seconds)
    (276/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.977586622 seconds)
    (277/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.132598444 seconds)
    (278/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.929274341 seconds)
    (279/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.897026771 seconds)
    (280/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.000463333 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.019460788 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.061147061 seconds)
    (283/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.998653036 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.226258287 seconds)
    (285/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.120536774 seconds)
    (286/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.526402534 seconds)
    (287/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.984938062 seconds)
    (288/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.986283784 seconds)
    (289/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.279203016 seconds)
    (290/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.241737452 seconds)
    (291/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.987211477 seconds)
    (292/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.19023671 seconds)
    (293/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.868999161 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.938176354 seconds)
    (295/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.035746517 seconds)
    (296/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.892125963 seconds)
    (297/309) benchmarking ("map", identity, Int8, true)...
    done (took 3.87345864 seconds)
    (298/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.829568119 seconds)
    (299/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.896278835 seconds)
    (300/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.891047137 seconds)
    (301/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.91597424 seconds)
    (302/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.089295389 seconds)
    (303/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.922934036 seconds)
    (304/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.742091015 seconds)
    (305/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.897886329 seconds)
    (306/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.046148813 seconds)
    (307/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.959936901 seconds)
    (308/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.156895656 seconds)
    (309/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.958664002 seconds)
  done (took 1010.268805515 seconds)
done (took 1012.131519624 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 2.090929196 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.917701098 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.903962493 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.927658086 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.016694146 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.933906003 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.913943042 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.905460175 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.95124297 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.956475517 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.906690862 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.928494294 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.90639739 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.905778435 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.903037259 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.923230831 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.221440006 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.93375866 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.919088538 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.910525727 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.92445706 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.904564428 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.952393386 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.93001507 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.904802982 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.909995712 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.905910358 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.920572912 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.016351311 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.907272247 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.903745436 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.916774224 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.22273427 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.928840653 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.898317225 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.922917983 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.916031367 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.913481856 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.906345351 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.936279624 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.318738377 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.945684903 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.904066551 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.903080744 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.905555524 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.908865983 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.906157266 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.90846529 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.918511255 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.917416405 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.308961692 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.960425758 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.906049028 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.905994403 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.913710432 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.904372301 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.912175705 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.920725571 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.926549202 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.920621966 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.213305073 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.945100063 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.905253364 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.918414933 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.911485653 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.34589547 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.941222631 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.909328004 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.316102916 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.946962021 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.348303886 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.954514855 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.909593908 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.920482479 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.935631853 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.221713627 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.929684847 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.905493033 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.913836807 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.903273041 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.915751075 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.91843936 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.910112547 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.904990519 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.918990295 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.933824865 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.918015916 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.907011681 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.91379037 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.9237643 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.911899914 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.917348081 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.909272818 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.898753948 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.92025938 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.906038436 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.907622197 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.910122901 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.910931149 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.914539104 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.311046589 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.96225589 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.905335584 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.907756102 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.906986324 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.920729318 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.311901312 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.946535639 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.930244519 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.951314041 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.90794579 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.213382989 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.941565631 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.921383211 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.920016792 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.9109688 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.902273217 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.214925995 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.336672861 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.959863138 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.908019205 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.908568575 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.927951334 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.910543965 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.907054855 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.225970863 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.93630343 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.925046643 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.029983354 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.919067386 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.937592508 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.905616271 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.91220329 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.935970899 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.922201046 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.940260079 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.912257685 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.922947297 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.925914391 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.903930433 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.919616192 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.917027128 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.910031254 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.912863653 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.90223668 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.935782528 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.923541422 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.920292959 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.929152381 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.028753849 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.90767683 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.217752973 seconds)
done (took 300.589210011 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.978094168 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.89697476 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.004923821 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.908468098 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.988934567 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.991493763 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.905216899 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.903977953 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.903799271 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.279951742 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.905828181 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.902685819 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.900846452 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.904081482 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.989723929 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.907287304 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.905540103 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.247507409 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.907618899 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.981862172 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.901526595 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.905840122 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.907633864 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.279265234 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.901025666 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.903099842 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.984020644 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.912033323 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.248354246 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.912956792 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.908317665 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.24104842 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.998521475 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.924119578 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.918605569 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.914723913 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.992996581 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.912984307 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.989196033 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.989173658 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.006620103 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.948482729 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.914656492 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.903199911 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.909923111 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.910328 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.905687315 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.940717575 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.90580264 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.907098027 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.254839599 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.920081567 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.908451924 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.909352169 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.909408286 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.944062106 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.908873336 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.90979645 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.998921836 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.912319187 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.974767023 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.285193756 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.285005879 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.91148799 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.909692439 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.906859459 seconds)
  done (took 186.891656929 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.98105961 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.983363495 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.974661978 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.91362279 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.958004633 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.977445108 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.917470143 seconds)
  done (took 15.533139868 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.915685234 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.910566066 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.963123546 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.965946696 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.909560082 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.060736557 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.911428562 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.920650556 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.913110805 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.963711096 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.914583235 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.909335915 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.91731021 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.912540267 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.960124665 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.921226616 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.033617241 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.911626641 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.912801972 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.061634514 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.908585949 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.921008959 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.982577849 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.924207775 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.916472284 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.918388728 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.508364677 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.912712036 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.909283114 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.909696533 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.911468728 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.956262409 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.910683787 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.90790388 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.908638142 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.027099919 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.915926768 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.910517564 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.912194061 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.913543206 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.912863014 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.916880914 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.911111102 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.908517169 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.914931746 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.937338555 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.912719214 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.911786359 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.913902164 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.911773932 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.964990711 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.913826566 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.914048138 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.911798491 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.971734306 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.921042992 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.91792051 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.911927296 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.914617089 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.914717192 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.067520416 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.9636105 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.918046863 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.963408152 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.914142872 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.915303495 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.913466522 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.920110576 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.010205225 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.91932857 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.964167949 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.912439039 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.074382899 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.93774432 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.91586632 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.916303615 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.915966208 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.921490013 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.909572038 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.919209001 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.913690297 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.916077378 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.923361509 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.914062494 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.915092398 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.032258269 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.023024517 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.912690477 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.927121507 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.921729563 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.921084158 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.969826533 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.91584298 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.91236809 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.974730735 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.034660077 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.990798146 seconds)
  done (took 210.22965883 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.923523172 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.927767114 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.916686487 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.941291336 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.919881621 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.919456396 seconds)
  done (took 13.387892164 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.92276619 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.923942737 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.917667856 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.917874374 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.923672188 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.923388687 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.923163457 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.921298745 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.924132054 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.925998512 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.924539659 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.924922363 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.924804366 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.923376942 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.918713154 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.919795289 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.925863996 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.919226052 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.921528476 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.921695321 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.071836614 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.928459305 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.923621417 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.923532848 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.930523173 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.917300628 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.930413501 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.919628249 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.918002209 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.933561915 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.926486061 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.922606956 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.923897533 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.928257513 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.923771287 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.924177864 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.921397294 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.929807291 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.921254507 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.927400533 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.921588649 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.920801464 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.928151498 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.923355796 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.918596163 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.924152698 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.92601726 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.934755415 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.921357625 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.923405503 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.918785515 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.919732272 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.928999802 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.923670296 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.921847905 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.92512408 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.930825269 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.917589134 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.92059378 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.923966313 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.91926749 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.924812932 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.918697967 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.933355092 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.924713007 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.925411353 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.924432783 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.929241394 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.927852024 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.920998949 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.923925389 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.917479006 seconds)
  done (took 141.499954521 seconds)
done (took 569.385293821 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.104081741 seconds)
  done (took 8.947836702 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.023364408 seconds)
  done (took 8.908905318 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.401344751 seconds)
  done (took 10.243713321 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.937478118 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.947594757 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.920740495 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.917947367 seconds)
  done (took 29.588933765 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.071124366 seconds)
  done (took 8.911006581 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.933359954 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.912740233 seconds)
  done (took 15.718516525 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.995606958 seconds)
  done (took 8.836531709 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.025147149 seconds)
  done (took 8.885611284 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.919570696 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.939923811 seconds)
  done (took 15.713008886 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.894130194 seconds)
  done (took 8.731202683 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.649778223 seconds)
  done (took 11.578526081 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.928911086 seconds)
  done (took 8.875093168 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.971920642 seconds)
  done (took 8.809367906 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.039076888 seconds)
  done (took 8.876033272 seconds)
done (took 164.464216197 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.912319693 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.907914932 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.911719247 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.909483136 seconds)
  done (took 29.477230245 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.954729757 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.952774698 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.954429037 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.96447497 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.956551598 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.952527609 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.947830423 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.945942201 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.962532829 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.955956002 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.954323999 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.95774798 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.956656465 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.944618243 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.955767068 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.954266764 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.965456041 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.954019988 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.945284321 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.956095105 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.918461992 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.96316196 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.954698147 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.920044747 seconds)
  done (took 48.687045299 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.116774272 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.989925766 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.073551327 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.973817969 seconds)
  done (took 9.99273548 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.97207344 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.973928867 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.987891587 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.02757167 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.04850912 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.981042485 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.94616849 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.941568872 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.930398947 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.975542479 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.048869542 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.968686902 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.059343936 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.918857466 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.107356442 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.91872827 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.921251145 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.970463278 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.023015691 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.034303408 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.920407409 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.971385668 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.97963101 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.971802953 seconds)
  done (took 49.437294346 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.921563404 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.926563026 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.925878529 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.922607379 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.919629627 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.919096501 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.925602002 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.922310576 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.940367059 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.920500623 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.919457153 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.92134935 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.918454861 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.922277175 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.923399407 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.934543723 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.934994317 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.919636829 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.924375486 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.928899451 seconds)
  done (took 40.331070066 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.912084138 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.771233688 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.269556378 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.172315128 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.917095257 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.91335184 seconds)
  done (took 31.797027717 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.9342858 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.929339779 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.925517342 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.979868955 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.057390013 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.926782175 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.921956036 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.93471923 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.972577877 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.987980614 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.943193894 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.951583249 seconds)
  done (took 25.310558902 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.919562556 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.927695647 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.915456264 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.942429775 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.933219735 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.929621931 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.930386939 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.91727622 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.933050874 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.941695871 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.932700814 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.933660246 seconds)
  done (took 45.006873859 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.006710989 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.807450202 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.007919229 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.638006378 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.45500407 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.126107414 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.441755558 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.265131329 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.920123948 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.19248835 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.008708301 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.17506127 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.175468213 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.920834534 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.007020038 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.382081077 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.221499531 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.151561339 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.941608879 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.711164781 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.044550635 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.447357435 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.673688151 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.053197318 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.127549911 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.053750309 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.183923833 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.882643684 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.058776411 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.958621308 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.929443622 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.918760611 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.195178319 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.305672111 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.034448525 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930767615 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.583583969 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.633731998 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.903042166 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.66764449 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.872808898 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.062195362 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.928332474 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.923748925 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.855245912 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.445677159 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.262965293 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.927786031 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.623615435 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.921343518 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.930750735 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.013871337 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.924827679 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.739709917 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.878655245 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.198100838 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.918723769 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926225874 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.492644204 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.048559773 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.561119185 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.853419935 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.016301571 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.646503028 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.409005539 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.073079645 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.92485411 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.924757585 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.856446834 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.640218134 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.053815493 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.069910897 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.940716643 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.574396823 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.239385001 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.053957624 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.009883857 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.21886615 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.717871139 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.854438644 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.153058557 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.875881064 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.856241443 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.778191867 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.856811995 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.195206214 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.957462787 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.560811557 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.961752407 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.264737411 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.934140485 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.945186017 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.931694121 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.146867283 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.804736401 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.925791347 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.748131356 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.216913386 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.943259725 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.271072283 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.857989552 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.923543767 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.177724554 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.136495574 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.052112653 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.489568026 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.096766652 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.921550945 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.009005758 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.735357154 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.037220497 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.214291966 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.982346218 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.044834939 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.059669454 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.889472871 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.232845495 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.951472221 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.095159044 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.967293127 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.200088658 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.250110327 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.175215475 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.010555198 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.931630611 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.925769596 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.682560086 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.555194755 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.150404922 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.927650836 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.309339744 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.03968148 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.927370368 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.85926797 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.58353145 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.98938943 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.042799728 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.150133099 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.766810932 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.304256014 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.861370508 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.072793829 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.036198553 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.146335146 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.598224357 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.010865494 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.189314852 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.308239239 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.137608554 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.03808423 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944080633 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.018896428 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.94882476 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.230556277 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.285857642 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.932749174 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.930206361 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.688496057 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.008636417 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.930939405 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.93439566 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.72882107 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.215889094 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.953743368 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.9296877 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.817824081 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.943254373 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.993901752 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.933390529 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.939739777 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.43167357 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.683504218 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.936683102 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.597176963 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.167635296 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.939652303 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.654613227 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.128193537 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.013263158 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.218227944 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.990579078 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.862326143 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.632674803 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.63275002 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.933969549 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.867343356 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.934247945 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.939071553 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.942708609 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.128525892 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.224390462 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.971343346 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.723310416 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.054818896 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.940722837 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.937560407 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.929677314 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.420679528 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.071797281 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.447354887 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.040817843 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.067536343 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.942871562 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.866739191 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.932903564 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.934913264 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.931637629 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.88481524 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.986890889 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.734580715 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403113968 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.18965086 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.585958126 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.947700733 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.757980057 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.068358663 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.951363908 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.772219684 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.895126347 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.024879676 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.983714692 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.942778069 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.657997184 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.709381854 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.500198659 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.256048545 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.251974403 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.394210827 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.29745066 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.254694928 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.272495296 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.170200166 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.460738354 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.991415122 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.279007669 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.876477342 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.021920957 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.60346289 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.29792752 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.944575415 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.158039842 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.341345412 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.849946027 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.102376518 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.142945775 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.966126667 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.850885167 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.95832066 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.132567247 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.088762348 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.791722823 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.170054209 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.274922757 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.780984401 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.046407573 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.931334583 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.63783696 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.01714439 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.645248505 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.293938789 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.46498637 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.001194569 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.441935053 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.930955589 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.378217106 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.297398802 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.267579882 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.02472545 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.870173027 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.94448659 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.945886922 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.933427764 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.915536635 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.853928695 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.217854103 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.94521501 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.173051292 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.209429502 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.200041575 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.839764831 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.939675748 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.934740632 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.239904042 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.608026128 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.173294101 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.253733816 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.50382526 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.944026405 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.870729073 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.872121016 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.638403114 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.937702826 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.913025844 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.16107666 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.046166479 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.888927686 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.30533545 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.246764986 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.189172545 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.948569453 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.221204744 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.217140999 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.674615695 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.963236818 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.036031997 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.786924964 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.644677847 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.156473283 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.170540149 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.741973058 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.16368493 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.00154569 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.905801667 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.932464262 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.1507811 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.159539748 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.013273034 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.197072288 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.655545238 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.949509293 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.308523318 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.997582948 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.016666829 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.16428583 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.032609425 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948001449 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.018622036 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.948210626 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.949466198 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.947635441 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.988173619 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.041138436 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.080093283 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.948676915 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.03101378 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.080578355 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.520883843 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.94427462 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.2298221 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.322059296 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.278384922 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.998816319 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.937573866 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.94372979 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.871564067 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.074330526 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.386742744 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.211948352 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.071390694 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.081039869 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.963616721 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.797515054 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.2093211 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.246973793 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.214349669 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.835548193 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.938995509 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.046123583 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.165555938 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.949074882 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.149784409 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.173762574 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.264151254 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.412655693 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.064436056 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.381717477 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.212755166 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.307575076 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.941994717 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.532284053 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.94538934 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.693461342 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.980835726 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.074412268 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.241534779 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.94969373 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.334750195 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.961143107 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.140298168 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.457043731 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.745802743 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.311030541 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.946467267 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.002812825 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.227975079 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.350888619 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.258304876 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.007506957 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.950641263 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.642984668 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.078383955 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.896985948 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.209900096 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.941524851 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.157373577 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.652659049 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.952365499 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.238094999 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.256324082 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.938809665 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.928898086 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.006446491 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.950448268 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.167344363 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.218232627 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.194676276 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.95001842 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.942417229 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.758581705 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.234717972 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.005591346 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.87667396 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.941590338 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.040698511 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.196641702 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.96331737 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.460759167 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.645358594 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.24651167 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.859998499 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.964757928 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.329905855 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.39615649 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.292485407 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.486380603 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.178244629 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.504790569 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.784649423 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.313941891 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.946367071 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.339237353 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.317895326 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.950626202 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.428859591 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.052247374 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.231961287 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.264572798 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.958312057 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.71166271 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.996183827 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.166855087 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.546778933 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.883836279 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.948712132 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.005100808 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.942824676 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.074212558 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.951056482 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.951864532 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.81269393 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.781707557 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.435180154 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.946942123 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.937601601 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.775815221 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.501508259 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.047634343 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.107198843 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.949196337 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.658373307 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.239327517 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.199807535 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.44500075 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 7.010428578 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.955621284 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.945819733 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.874527805 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.143141422 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.142280878 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.25022507 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.27955899 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.051082505 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.950093187 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.161793918 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.156014059 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.984625029 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.111579837 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.312307727 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.05405159 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.86438873 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.66574036 seconds)
  done (took 1719.061198272 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.961890962 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.95608794 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.955986662 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.994104923 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.963825458 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.958070553 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.9518157 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.036108469 seconds)
  done (took 57.648445863 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.945233171 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.164564621 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.954798422 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.948233983 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.974647166 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.949080178 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.15823642 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.953632363 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.965405175 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.957953244 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.947463124 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.958315569 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.30669479 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.969601019 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.947149772 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.95245309 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.952125382 seconds)
  done (took 75.88537142 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.950320871 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.119856576 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.987866886 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.972734336 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.898150532 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.947393358 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.913898953 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.971316619 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.951142305 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.184551792 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.28206562 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.951949522 seconds)
  done (took 91.005773127 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.962828997 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.95385126 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.95392443 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.954339192 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.954255154 seconds)
  done (took 11.660147888 seconds)
done (took 2237.151491267 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.199421892 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.18754146 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.19292735 seconds)
  done (took 6.253676372 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.103753348 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.148629932 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.266350768 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.289787693 seconds)
  done (took 10.689794817 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.241311398 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.337906203 seconds)
  done (took 6.456265803 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.281181634 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.966654602 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.368469058 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.950485377 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.949751029 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.952972089 seconds)
  done (took 22.735267998 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.955608411 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.958721977 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.956188743 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.962091562 seconds)
  done (took 9.710878584 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.934166558 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.666178874 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.938179993 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.953948842 seconds)
  done (took 21.370160858 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.70816544 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.353727192 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.702140558 seconds)
  done (took 9.6429374 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.534074742 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.875298438 seconds)
  done (took 9.286386832 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.206335794 seconds)
  done (took 4.08616524 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.984968969 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.225857232 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.502865531 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.516080786 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.584232337 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.771737618 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.252280273 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.183486829 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.405875796 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.414799399 seconds)
  done (took 25.721271523 seconds)
done (took 141.642318893 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.366051367 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.967745461 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.155875969 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.305161371 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.177272996 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.156047696 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.1697671 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.297236251 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.828708649 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.824897535 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.306826204 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.176104338 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.129265487 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.962430287 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.130745541 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.967315693 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.181577548 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.384009695 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.02136098 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.205837365 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.174532122 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.958384398 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.149544294 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.966640922 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.174171116 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.103513554 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.49975041 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.962296849 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.168585281 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.510801648 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.105142748 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.361864076 seconds)
  done (took 170.728964573 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.954126537 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.954708887 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.96279199 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.953277596 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.303266691 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.967469319 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.950489334 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.9521888 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.037092351 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.02993413 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.979311652 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.34641826 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.985437852 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.951434881 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.991434756 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.952729268 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.237670989 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.99142246 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.994470106 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.99693648 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.998763497 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.192378085 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.984928863 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.229761012 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.197810175 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.984803348 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.95157504 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.987140776 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.991670618 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.990568461 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.994231728 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.953994021 seconds)
  done (took 210.833389325 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.95613103 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.961291209 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.965741035 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.95543227 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.962565247 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.978436554 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.954326054 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.953370265 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.453004514 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.455886851 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.963081117 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.957011604 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.961309492 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.9559317 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.959530568 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.955637167 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.964813411 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.965557546 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.969361234 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.969497175 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.97361705 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.60541858 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.973670239 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.588614096 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.971430526 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.972859898 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.956416205 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.974907076 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.979543373 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.973642983 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.978446267 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.956933999 seconds)
  done (took 223.046879797 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.147560287 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.95969083 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.960110658 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.868835306 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.960476533 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.958222802 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.950511459 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.142029071 seconds)
  done (took 19.854634452 seconds)
done (took 626.348224537 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.418180482 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.255863188 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.127773805 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.983003991 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.244847615 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.010608567 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.976726691 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.044707321 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.714085812 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.047968209 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.653131916 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.995021639 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.745475701 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.997791391 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.096708402 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.032646401 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.565284389 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.651885591 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.148232415 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.051009692 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.146545442 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.935664611 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.053044228 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.738894642 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.75959059 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.972899981 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.139357212 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.560558258 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.981988681 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.135670702 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.730077252 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.353767967 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.983545448 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.968605749 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.027170692 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.00371082 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.306877373 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.981303365 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.093761059 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.738683928 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.059056013 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.576802314 seconds)
  done (took 106.888363534 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.943072412 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.939630337 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.936479165 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.938627974 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.939905608 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.936769127 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.939033166 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.937989247 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.941639754 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.936006063 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.936711433 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.939484714 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.936159823 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.938341946 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.937036284 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.937332162 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.938881492 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.93983409 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.936308013 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.936618272 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.938703066 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.940066695 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.953263011 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.940731446 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.938658165 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.93814934 seconds)
  done (took 52.296026145 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.951893841 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.102612934 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.193587935 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.969653957 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.950021319 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.95413211 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.968218501 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.956173064 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.953095634 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.950578412 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.062461931 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.95659668 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.974254535 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.195332546 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.966494912 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.949788856 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.949240456 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.948614749 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.110588237 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.967034819 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.970925371 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.956063423 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.968717467 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.96273808 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.951101876 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.95063885 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.954019459 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.423707927 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.957754261 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.05735988 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.994039315 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.971266428 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.393523619 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.195963283 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.002127471 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.955193306 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.951249168 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.059945428 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.953907058 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.948472644 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.971616539 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.954937933 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.185372269 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.443439303 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.965176495 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.948965403 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.436043851 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.068107267 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.989858057 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.963178391 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.188556122 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.970810557 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.953194139 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.954638366 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.988282251 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.954888802 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.945485166 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.296859877 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.95806567 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.965726767 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.950326161 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.945508524 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.107934344 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.953338109 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.099648169 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.95123319 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.948933784 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.940967973 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.181984275 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.961969023 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.434376977 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.953970155 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.940778122 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.047780082 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.097895994 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.447340303 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.95157799 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.10585259 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.398729324 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.959588953 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.94405946 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.397745931 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.963872362 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.948401029 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.937334361 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.939647278 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.936913995 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.980016221 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.955671062 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.362094664 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.434678143 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.303323259 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.960885848 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.950562348 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.934912764 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.282414442 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.942059412 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.934782585 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.167250512 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.439271187 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.944601783 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.940318818 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.418794823 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.944340507 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.949963358 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.937858054 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.169383792 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.947143151 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.973398963 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.930276756 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.937565376 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.929979099 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.951226184 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.93426111 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.930448559 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.407014038 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.05691839 seconds)
  done (took 240.986680089 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.922894852 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 7.476024895 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.919984579 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.920716515 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.923309984 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.923462502 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.917693862 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.9187999 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.924011099 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.91552107 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.916432909 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.917096767 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.916986859 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.977615293 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.968247485 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.944586264 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.546796737 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.931965973 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.932919956 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.937211881 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.709186411 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.937315579 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.935392464 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.931813793 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.933727336 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.93817155 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.017067513 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.937034864 seconds)
  done (took 169.947650077 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.941903759 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.112685659 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.956587647 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.978406619 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.944925113 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.939817019 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.961916167 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.960623073 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.945935004 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.93709379 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.940004419 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.004106264 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.949690914 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.081971958 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.971321722 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.968674663 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.044125493 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.948178888 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.941283593 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.939408922 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.971595199 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.931087218 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.002200417 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.065387268 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.958765465 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.0581179 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.941749792 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.942661074 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.940923128 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.062075338 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.960455755 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.002651359 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.967977939 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.958786094 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.063515193 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.059342392 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.043505412 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.96682754 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.946155367 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.937429633 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.942059852 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.927582586 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.056316123 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.956901434 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.941752909 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.050241009 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.955240249 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.93904877 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.945358822 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.939249576 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.955107263 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.958529294 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.007989796 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.069975159 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.973087632 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.963584864 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.96339717 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.226391865 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.952968497 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.041488764 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.935177175 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.062003937 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.962360053 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.929855986 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.941476307 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.944994012 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.968806836 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.967203996 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.040168033 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.944669484 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.040538644 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.974609729 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.944960656 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.940559439 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.942465524 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.063585574 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.055436563 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.97394412 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.974037202 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.971006552 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.937049391 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.939064876 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.926151119 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.957843409 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.941803958 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.060834968 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.052999551 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.942819462 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.939350859 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.941265928 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.942689108 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.963105391 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.061925994 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.971056512 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.035010752 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.007881418 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.010124853 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.946472289 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.948679583 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.93951812 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.004569034 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.947266104 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.945163172 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.271008178 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.004762343 seconds)
  done (took 210.095386999 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.383241274 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.983847258 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.992614753 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.266490059 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.358383138 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.761532038 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.978588322 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.982040467 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.006736196 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.174211068 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.050976786 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.002757889 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.965360394 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.961461362 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.982693989 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.001237857 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.991302715 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.309076254 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.106778356 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.060305881 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.957425312 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.2723126 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.30166698 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.368140407 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.014382504 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.321692009 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.652604207 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.119629432 seconds)
  done (took 63.193993402 seconds)
done (took 845.282198191 seconds)
SAVING RESULT...
DONE!
