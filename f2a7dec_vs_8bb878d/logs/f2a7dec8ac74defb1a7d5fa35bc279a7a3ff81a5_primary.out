cset: moving following pidspec: 27043
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.658505949 seconds)
loading group "string"... done (took 0.500988112 seconds)
loading group "linalg"... done (took 9.565597276 seconds)
loading group "parallel"... done (took 0.17501592 seconds)
loading group "find"... done (took 5.165199315 seconds)
loading group "tuple"... done (took 2.18100656 seconds)
loading group "dates"... done (took 1.437564313 seconds)
loading group "micro"... done (took 0.198905488 seconds)
loading group "io"... done (took 0.545086833 seconds)
loading group "scalar"... done (took 58.648969156 seconds)
loading group "sparse"... done (took 14.002883954 seconds)
loading group "broadcast"... done (took 1.729909892 seconds)
loading group "union"... done (took 10.624224099 seconds)
loading group "simd"... done (took 3.563216765 seconds)
loading group "random"... done (took 13.211983489 seconds)
loading group "problem"... done (took 2.200079037 seconds)
loading group "array"... done (took 24.540140293 seconds)
loading group "misc"... done (took 1.163680407 seconds)
loading group "sort"... done (took 3.72885532 seconds)
loading group "collection"... done (took 22.133682108 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.618101067 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.128499792 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.204977144 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.22593457 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.217199954 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.165750253 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.159365023 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.23564315 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.589223218 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.209548845 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.137136876 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.440204891 seconds)
done (took 6.110042214 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.25328592 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.242905995 seconds)
    (2/2) benchmarking "String"...
    done (took 0.170610471 seconds)
  done (took 1.131833841 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.076006375 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.157932879 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.111210719 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.093698149 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094102035 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.110176204 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094134852 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.111410591 seconds)
  done (took 1.495739543 seconds)
done (took 3.678941102 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.49872412 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.83900496 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.511374684 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.144269416 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.309056995 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.289575136 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.264680839 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.196694519 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.090431805 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.088738135 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.173364058 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.378750611 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.393496394 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.927148161 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.089127413 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.093628507 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.133327837 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.741313435 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.081224792 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.111060723 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.510226179 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.190393478 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.099274286 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.122740445 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.185880247 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.133061312 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.159817532 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.111714422 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.662901811 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.135889877 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.179992462 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.097848478 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.156949652 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.166664526 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.196390044 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.108692674 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.667388697 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.202439445 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.097123212 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.101003474 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.679439042 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.119999842 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.183660164 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.10399186 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.088151391 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.177599222 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.103377923 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.093385905 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.094160381 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.08554807 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.161913956 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.464484509 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.109369256 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.169701286 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.092600549 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.684683453 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.099373629 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.271491439 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.126014662 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.093562719 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.09091967 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.086725165 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.156694549 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.094093869 seconds)
  done (took 19.828928665 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.145785264 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.16396536 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.078071457 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.156537515 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.125756221 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.080124792 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.100864782 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.079261658 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.108744908 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.196389909 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.122813792 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.16775918 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.076307303 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.107650523 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.129024171 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.246814127 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.10803886 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.120933272 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.090999168 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.09039889 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.138511133 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.098864962 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.091823766 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.108148724 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.155701785 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.207546687 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.124526071 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.123863791 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.093350983 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.096416786 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142714269 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.146667699 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.096460688 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.089481742 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.171814624 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.126819395 seconds)
  done (took 5.244987449 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.203793891 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.125071683 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.228052413 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.199145392 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.133918273 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.183905492 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.153467555 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.276800974 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.194045753 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.181123507 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115005445 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.112453768 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079814419 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.081215524 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.077687697 seconds)
    (16/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.167129278 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.455287258 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.19314546 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.170463066 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.145324801 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11598373 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.081599511 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101929931 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.086779872 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.112532515 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.122592926 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.320878967 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.187261223 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.112442817 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.136899656 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.084540414 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.099619785 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135402726 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.198658018 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.138704269 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.122964395 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.112020667 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.087584887 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.22416305 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.102577535 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.095735812 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.116134323 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131257589 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.116737358 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.108308646 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.110721814 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.220857055 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.086728731 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.129270076 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.047767018 seconds)
    (51/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.102881903 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.197105038 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.12537052 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.084479307 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.291592182 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.126842602 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101169898 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.109625022 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.801814079 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.132231689 seconds)
    (61/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.0826552 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.080755328 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.097278416 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096405966 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.078000423 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.448143396 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.107731903 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.661581002 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.081682947 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.156127367 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096954499 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.120521242 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088708149 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100657464 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.10984998 seconds)
    (76/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.08301936 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.104834604 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.079108866 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.085684576 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.096091278 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.090777771 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.113656744 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102173064 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.079675636 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.147990046 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.11376648 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.107820959 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.124518475 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.092468832 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.086441679 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130020169 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081999372 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.106101659 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.146264555 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.11740374 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.114830389 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116112081 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.143649644 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.089698291 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.241299182 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.099107042 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.123385079 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099346622 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112667385 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.115945861 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080906783 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083701036 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.095710346 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.08082208 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.147730444 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.103413185 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.080745568 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.087938678 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.109789636 seconds)
  done (took 28.915098867 seconds)
done (took 54.708581642 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.405452388 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.083388284 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.083773232 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.102495548 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.083303852 seconds)
  done (took 1.54941016 seconds)
done (took 2.316735869 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.323298801 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.199451438 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.103596573 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.190217854 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.087041199 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.194742856 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.183025819 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.100776739 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.2054528 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.085360346 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.187108041 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087891278 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.104531363 seconds)
  done (took 2.847809096 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.102565496 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.10625279 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.101754202 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.121577631 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085427011 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100756162 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.11847724 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106891224 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100505614 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.113049665 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.085575914 seconds)
  done (took 1.908910592 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.099863467 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.102774786 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.092055865 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.116263326 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085452884 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099027271 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.115170479 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105652867 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.099469038 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.114867305 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.085885124 seconds)
  done (took 1.889307008 seconds)
done (took 7.415227675 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.171338806 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.804433458 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.174014785 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.216840092 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.347004964 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.248281079 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.603074787 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.156246377 seconds)
  done (took 15.641337676 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.169489538 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.110229459 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.090964921 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.090013017 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.095417716 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.1136949 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.096729853 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.093395063 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.111814507 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.094812579 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.090961453 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.108109291 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.097324495 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.09054868 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.090949714 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.11164538 seconds)
  done (took 2.492490639 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.144042587 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.123110289 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.117919987 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.099743074 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.094967978 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.118275251 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.101432686 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.117001414 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.094948398 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.095765368 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.102026282 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.116291367 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.096733651 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.094053669 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.115467913 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.117380329 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.094394389 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.11470057 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.116039896 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.115139995 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.099519239 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095785028 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.116252083 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.097932442 seconds)
  done (took 3.457594634 seconds)
done (took 22.366964798 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.149870046 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.101546616 seconds)
  done (took 1.028495031 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.141527303 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.156922473 seconds)
  done (took 1.077750511 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.111598622 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.089780516 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.136331919 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.103987102 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.090388567 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.107168167 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.11765914 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.107605295 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.090518546 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.090831934 seconds)
  done (took 1.82944551 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.095020842 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.094772509 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.123064089 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.135406319 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.100196636 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.111125033 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.213354648 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.09299141 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.1146779 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.090950253 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.09585485 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.125771932 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.095030751 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.126640774 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.095989943 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.095755687 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.116961073 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.09439808 seconds)
  done (took 2.802198254 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.090769511 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.092624774 seconds)
  done (took 0.969295248 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.093435079 seconds)
    (2/7) benchmarking "second"...
    done (took 0.090052413 seconds)
    (3/7) benchmarking "month"...
    done (took 0.092296566 seconds)
    (4/7) benchmarking "year"...
    done (took 0.109413651 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.090572441 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.088714921 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.107104737 seconds)
  done (took 1.45817965 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.498430736 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.266801414 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.362313191 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.108983801 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.151711395 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.35834292 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.153044582 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.103972375 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.123872125 seconds)
  done (took 2.948523805 seconds)
done (took 12.89738802 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.09087636 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.220223676 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.608810136 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.112190462 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.089718806 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.145992384 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.305653221 seconds)
done (took 2.365537517 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.346685766 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.14198212 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.083819708 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.090592784 seconds)
  done (took 1.449970785 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.081396869 seconds)
    (2/2) benchmarking "read"...
    done (took 0.098425263 seconds)
  done (took 0.973618474 seconds)
done (took 3.21775395 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088657032 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.088271868 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.087993469 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.105654317 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.08848799 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.088050006 seconds)
    (7/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.13824229 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.088333162 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.087784141 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.086782657 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.108247613 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.087980456 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.087667976 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107877388 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08822727 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087086776 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087404032 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.107354985 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088444623 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087947204 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105318426 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.088879709 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.088281904 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.087081916 seconds)
  done (took 3.082080467 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.111450902 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.091046534 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.110444021 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.093197348 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.092504398 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.109404447 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.093673029 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.090127381 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.110011888 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.090451623 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093175114 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.092419339 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.108461853 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.093702448 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091043688 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.111469719 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.093248308 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090061441 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107597181 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.094500261 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.092325673 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108273162 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.095151439 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093105671 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.110913534 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093889851 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.091478553 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.108299998 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.095431976 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.09344986 seconds)
  done (took 3.745414271 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.097844522 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.085195982 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.088284024 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.114207349 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.086520623 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.08846531 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.103839274 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.091015428 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.090620754 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.087988556 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.108313441 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.089897534 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.087662636 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.10827966 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.090583653 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.092199821 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.097689179 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.107868616 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.089544629 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.090169999 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.109463886 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.089526501 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.088873936 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.087326027 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.108356057 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.086506271 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.089287319 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.106925895 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.09053672 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.088261842 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.091485233 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.109816606 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.089428464 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.099390639 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.109609094 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.089849924 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.095089809 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.103002257 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.091725091 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.086891329 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.085328547 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.107237883 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.089899443 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.095288669 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.108367776 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.089515783 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.088298229 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.090047481 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.106980457 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.092825866 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.086978742 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.107147677 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.093920765 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.090377717 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.109107638 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.087210594 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.089424724 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.08594291 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.108311594 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.090900366 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.08707671 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.085494671 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.11132063 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.091417144 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.103721646 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.115198022 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.089499152 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.090083642 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.107544232 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.095368731 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.091587666 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.118747424 seconds)
  done (took 7.696488295 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.102333433 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.099044432 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.089688625 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.109811608 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090127641 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.089349105 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.111843264 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089977894 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090040543 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.114341122 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090670593 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.090675251 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090406494 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108350231 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090937755 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.090930741 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.114813144 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.091264013 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.092560486 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.108153973 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091817668 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.096431816 seconds)
  done (took 2.945503987 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.239701492 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097545456 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.139345726 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.121720442 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.10887657 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.12157796 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.094936963 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.096104287 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111172677 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100188286 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10023018 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111854731 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.110224763 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098505186 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.117068464 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.100561888 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112064394 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.100681887 seconds)
  done (took 2.886722018 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.103957713 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.091897901 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.129249626 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.092122222 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.091232605 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.093788689 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.116090045 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.112072432 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.090898179 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.111048138 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.098519856 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091303094 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.110227777 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09295145 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092166723 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.110177405 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.092787776 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091075513 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115427378 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099119786 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.096956724 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.117254478 seconds)
  done (took 3.047570483 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.105285977 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.09130673 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.126153158 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.09575922 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.090954334 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.090930374 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.117763782 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.091123397 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.10016514 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.111232221 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091123451 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.090823489 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.126229076 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.093229961 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.096519125 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.109711166 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.09379031 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.092457266 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109330541 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.092231462 seconds)
  done (took 2.81951564 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.169007743 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.123918649 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.10777133 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115088696 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.125572416 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.109814488 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114454763 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.12649856 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107395527 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.134148684 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.107936119 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106707229 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.132964785 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113737135 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.10780561 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.134749956 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.116169684 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.134880788 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109358467 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.107558836 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.137413994 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106811047 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.132272868 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.107701657 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.10753937 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.125041677 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10910355 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.111773968 seconds)
  done (took 4.151363435 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091267793 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.090675415 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.090450566 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.109128662 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.091526393 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.090342496 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.089030189 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.10946918 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091244561 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.09012986 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.110238812 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.091806535 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.08984246 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.09062724 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.108422771 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.091555827 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090338038 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.107812849 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090915769 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090495911 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.090048955 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109264092 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.090856604 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.089882928 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089169571 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.109845117 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090779 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.09021911 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108393959 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.091643939 seconds)
  done (took 3.677391984 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.104110726 seconds)
    (2/2) benchmarking "in"...
    done (took 0.100589376 seconds)
  done (took 1.016996329 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.098841433 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105191973 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.089841747 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.110735828 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.09787691 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.090973682 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.118186696 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098018514 seconds)
  done (took 1.621849308 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.140931692 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.16096005 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.096945671 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.102941002 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.161285532 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.132954802 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.151106791 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.09612494 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.107298532 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.085630583 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.135923313 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.102382049 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.091698859 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087252384 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.110544293 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.098825241 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.090986546 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.118758978 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.098197555 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.09254589 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.11369272 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09779717 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.092447739 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.12073306 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.087148021 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.093089434 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.113922263 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.103315792 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087147093 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.111464872 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.090932396 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.092021115 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.09488834 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.115728942 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.092259188 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.162916771 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09831742 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086831319 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.110930846 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.0978089 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.123419142 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.110732172 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.093771073 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.089565865 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.113500736 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.096167969 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.095670151 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.109692055 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.086463292 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.087712627 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.091743759 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.106628879 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.09214401 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090698431 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.111581467 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09945358 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.093311013 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.107776023 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.090732532 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.087941506 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.10846499 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.089122015 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093658155 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.112196183 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093686179 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.092950878 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109911899 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.093421712 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.09407232 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.092535681 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.111107348 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106848916 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.111690495 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.098285134 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.098477333 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.092174915 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.108649873 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.097691546 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090363926 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.112325669 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.096870428 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.120760174 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.112538496 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087089416 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.087294465 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.116242946 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.094935577 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.094782956 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.103734976 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101366283 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.094257901 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.111216875 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.087394328 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.090817171 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.086957351 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.114660029 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.085688279 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092299494 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.109201475 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.098362063 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.096925209 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.109876961 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.095634605 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.09729949 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.115831825 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.092341159 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.13699884 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.109061517 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.088819541 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.094582068 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.116756173 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.08713552 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.091421992 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.109658672 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090353889 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.087543077 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.114528049 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.094672045 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.093788367 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.096495198 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.113156705 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.094980687 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.094752012 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.110498684 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.089932967 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.096802863 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.118860685 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.095388645 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.093772788 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.111598864 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.095056119 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.094439236 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.114287642 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.091341159 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.097853494 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088727522 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.112398618 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.094556576 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.096162573 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.110610491 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.088960107 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.090395074 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.111546229 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.092702305 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.094698113 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.111948986 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.088768154 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.083778605 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.111066305 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.088782761 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.093714837 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.119074791 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.089923526 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.093704957 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.0878357 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.119887577 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.088855719 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.097066231 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.113144562 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.09844232 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.098649869 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.104594961 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.09007174 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.094241946 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.112605138 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.089488834 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.09407308 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.09269109 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.119963679 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.086810929 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.096388721 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.104581196 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.091388788 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.098073287 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.113447827 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.096953763 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.098696359 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.151562468 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105916447 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.098742544 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.111101543 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.093637477 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.097382946 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.092304175 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.119268699 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.100344285 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.097434406 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.111179277 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.092388256 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.097784579 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.108299697 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.096298034 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090852637 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113995039 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.086262321 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.094695537 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.085976981 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.118124612 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.096161029 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.097544244 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.117475945 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.09551728 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.09116927 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.120723553 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.090580136 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.106311539 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.105113344 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.099960904 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.103431927 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.117451162 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101061434 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.094850343 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109211016 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.095240112 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101204128 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.0956389 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.113444927 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.095786713 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.086682291 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.107010985 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.099976493 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.096708564 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.108238738 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.09452065 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.095627808 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.114550882 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.091897959 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.087154464 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.098266102 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.118195424 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.089953698 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093372068 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.10960388 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.091912603 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.099550507 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.106187558 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.090491664 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.095082085 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.117181872 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.093919895 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.093514833 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.115005662 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.099835619 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.095719911 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.095263431 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110989281 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101306898 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.091253688 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.113916772 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.092198117 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.095816509 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.105818811 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.097031452 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.094070265 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.109956472 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.091130149 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096904057 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.118072756 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.101099018 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092491554 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.097760305 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.118973427 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.099972921 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090797273 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.119155373 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.090579527 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.086917099 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.109493239 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.088268485 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.095417714 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.088886383 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.120034791 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.092434879 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091821887 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.117614801 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.096545503 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.089944832 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.119495533 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.105379608 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.086274544 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.106926137 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.093281981 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.092206529 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.111929498 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.091168909 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.096369583 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.11385155 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.100670175 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095531031 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.11004356 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.094891929 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.099285291 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.109479429 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.101561608 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.099662821 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.099363563 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.110223226 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.098743137 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.090245114 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.11698075 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.089097312 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.092669365 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.112567459 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093907437 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.090546348 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.111432912 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.091380717 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.087371229 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.110026364 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.100239057 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.092176036 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.097605069 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.114032175 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.09254307 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.089232866 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.110129741 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.100144697 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.092127167 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.120116162 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.094060338 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.087467455 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.106640355 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.099833623 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09382132 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.097780616 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.110776504 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.097499314 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.099813055 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.118158053 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.094375695 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.10130251 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.122436122 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.100858077 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.099681964 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.106148855 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.093529399 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098432571 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.113671688 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.098474754 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.095378608 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.087116051 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.116355425 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.099704258 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.095014932 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.112121887 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.087732398 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.094955794 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.120448239 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.097754599 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.097880826 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.095503982 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.116635908 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.089691218 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098016983 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.119033382 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.096207675 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100134959 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.11402111 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.098232742 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.091151505 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.117287042 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.096938332 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.088549393 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.08746073 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.111729165 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.100191716 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.086551211 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.117959183 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.099224791 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.090713396 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.112624234 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.09934955 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.090512428 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.116514137 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099325291 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.092201987 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.122953381 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.097217189 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.09299896 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.097815826 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.119165718 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.089327226 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.092929206 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.112784769 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102863764 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.092372369 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.119485328 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.09609226 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.098910102 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.096385576 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.121096457 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.099574083 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.098767852 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.108857698 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.101572011 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09613279 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.117009578 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.092935757 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.092353403 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.108942104 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.095489519 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.100706264 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.111479781 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104979143 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.1007192 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.092123153 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.112903876 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.100042235 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092242015 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.122141399 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.092044986 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096441625 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.108752334 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.097175835 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.092084932 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.120607122 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.092214283 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.087694501 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.119527002 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.101327185 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099161368 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.097232435 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.122486467 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.089253823 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.088854388 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.117258482 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.091961765 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102771836 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.116941528 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.094195483 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091985127 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.117337103 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.096159399 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.100450117 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.088008452 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.11227988 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.09576933 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095323256 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.113623556 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.090496536 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.09704362 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.113736835 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097752026 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.092947972 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.110028969 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.095981643 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.101161219 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.112319904 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.091981584 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.091850697 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100452763 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.114398516 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.091152569 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.087731907 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.120798232 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.097286544 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.099917525 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.11258129 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.096420343 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.091862737 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.116511827 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.105840886 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.092519683 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.115432699 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.094151718 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.099679863 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.120063108 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.089271521 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.091034591 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.12419887 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.10068482 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.095842732 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.096947454 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.115054707 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.102073781 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10162189 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.118067416 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.09005111 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.088360483 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.113290263 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.089943052 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.096656283 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119484433 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.096033666 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.091847979 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.098793273 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.119466209 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.097250976 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.096690745 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.110199961 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103669101 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.092580203 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.117422067 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.090472665 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.089431985 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.095815356 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.121108083 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094530156 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.094499759 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.117163166 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.098046487 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.089670702 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.11244325 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.099811342 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098854577 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.119887941 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096281939 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.093547036 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.097180989 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.126834989 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.097445314 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.093456546 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.122820047 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.101984987 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.095216872 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.115713656 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.098241894 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.100954133 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.117454377 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.103067793 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.092092283 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.114903025 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.102956171 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.101279118 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.124512866 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095253996 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.089391658 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.119075607 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.094853053 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.089890856 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.098820449 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.124263712 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.101978045 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.0951537 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.113919308 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104308924 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099599035 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.11603726 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.094228657 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.092881379 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.120998201 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.094347613 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.098679377 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.112241492 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.103723471 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.101839074 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100438672 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.125866529 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.090867905 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100679379 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.118611651 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.103662675 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.095774472 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.110711066 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.091191688 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.097501601 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.122125341 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.103331345 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.099179484 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.098962644 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.121746327 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.097651412 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094441831 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.112968256 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.102845393 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.099832362 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.115585994 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.098827985 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.093595515 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.115942777 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.098125207 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.102435519 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.101008397 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.118164117 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106456605 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.100742316 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.114673028 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.093669412 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.095155111 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.119208492 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.097139247 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099031858 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.112531219 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.091811972 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.100755965 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.10156958 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.116654859 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103202937 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102420923 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.114822892 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.09910677 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103461617 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.12219532 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.097132243 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.097159731 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.11853988 seconds)
  done (took 61.582062653 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.14571847 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.104164155 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.118553672 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098108547 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115409408 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119943974 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098402288 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099764023 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.120967604 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108048971 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.098340879 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.117428176 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114266618 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.119225048 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.135871093 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107810607 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.117039516 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100665874 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098185425 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.09835941 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.134527746 seconds)
  done (took 3.227855922 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.116004864 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.111662715 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.12930726 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.112408713 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104080184 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.131350973 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.109494227 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.128502734 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.112717122 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105960258 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.132935857 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109640911 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.125030163 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.106429342 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105572406 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.126673304 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.112727206 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103930245 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.130727763 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.109534094 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105969864 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.130677763 seconds)
  done (took 3.421628449 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.129183153 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.101390994 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.096725642 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.119804155 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.100939815 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.097725783 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.122189173 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.098949528 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.106781401 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.114463738 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.090911593 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.09356782 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.095594733 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.118845554 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.091977278 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.33708146 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.127382426 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.101775994 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.101837488 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.118040028 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.09008658 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.097879747 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.097915914 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.109619121 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.103688819 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.102341206 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.118339311 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.101993163 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.089602391 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.099932457 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.119867352 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.092613547 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.089121529 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.108988204 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.090750502 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.100416012 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.098985638 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.119176606 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.097975593 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.088758062 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.120023299 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.102322438 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.088960988 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.097130264 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.119907419 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.092275023 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.100075828 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.118933017 seconds)
  done (took 6.088318061 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.127111175 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.161967123 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.101016372 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.136737199 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.134565941 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.107629272 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.100159422 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.136702301 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.100123293 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.123122188 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.114220585 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.110304606 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.125047018 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.104923363 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.103605679 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.125035606 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.104617825 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.100314327 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.127345355 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.101164439 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.10492943 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.122728986 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.112780569 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.130764851 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.105079884 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102904338 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.121528726 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.106281514 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.109928253 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.125770195 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.106552912 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.105530187 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.132505103 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.104867674 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.102162358 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.123753693 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.113395253 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.102551751 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.12338138 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.099994233 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.102646445 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.127288895 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.103229064 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.135603654 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104396672 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.104710048 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.122387251 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.102619306 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.111731085 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.123720274 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.110579252 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.112343314 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.12506419 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.104127704 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.104455358 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.13515823 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.103335728 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.102063994 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.126095063 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.111941714 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.099917219 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.126737516 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.112952146 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.102383754 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.129645272 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.113455203 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.125230912 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.106371281 seconds)
  done (took 8.798288094 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.133139359 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.105749776 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.13525504 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115986389 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.104949197 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.128519142 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.105786739 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.104899744 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.128664551 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112292582 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.127699114 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.200683109 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.124711754 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.112045239 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.106199373 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.127196886 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.106063758 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.107154876 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.128342848 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105974096 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.104956672 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.136728454 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.107870599 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.134629218 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.118442732 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.102580518 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.127370304 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.107044011 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.114020573 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.127654398 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.118633862 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.126891991 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.106932155 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.114213722 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.139067767 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.107768537 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.101375662 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.127637295 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.106830199 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.106472373 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.12444342 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114980458 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106398827 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.12485547 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.107372007 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.107922563 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.135517281 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.117475803 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.133568114 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.113887695 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.105756473 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.136539599 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.106536924 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.126977044 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.116842059 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.121807758 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.136066907 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.113868979 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.127075939 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.116319125 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.113153788 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.142387747 seconds)
  done (took 8.285114069 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.10119529 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099860692 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.098586481 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.120339343 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.099779755 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.099278466 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.09957527 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.120703599 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.100127199 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.099816986 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.120565344 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100720468 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099152867 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099671891 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.121722723 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101349223 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.098729708 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.1195016 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100703852 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.10000583 seconds)
  done (took 2.977775392 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.109991163 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.11747235 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.122150422 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.108867246 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.102082224 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.126837718 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.1023069 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102379467 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101638462 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.123790332 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110596969 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.109275154 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.123578799 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107223738 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.130187056 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.109154231 seconds)
  done (took 2.688703893 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.119538896 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.116846506 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.187386548 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.10348268 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.124486211 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.109843802 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.102838305 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.103774584 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.12490195 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.107362499 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.105341502 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.127838069 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.103228137 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.103429804 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.124989907 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.10753464 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100391184 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.126592032 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.104705691 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.165575561 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.128008188 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.104577059 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.101432123 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.127365076 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.103812726 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.104048657 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.129652626 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.103288339 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.103045032 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.124399759 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.103864248 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.107149633 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.121850554 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.10612862 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.102277468 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.122977079 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.104110091 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.102911055 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.104645201 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.124459112 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.104386203 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.103053236 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.123953156 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.104478538 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.099812239 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.124545027 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100826979 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.106571181 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.123784432 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.104410209 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.103353285 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.105252962 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.129914009 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.110715599 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.107234842 seconds)
  done (took 7.137531406 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.113965738 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103541601 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.133191242 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.101046984 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.102673244 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.102592282 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.124950374 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.10534716 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103292799 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.122441393 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.104021968 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.103057265 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.124076945 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.10394928 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.103244683 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.123504368 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.10072528 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.102595593 seconds)
  done (took 2.866522879 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.108405136 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.101649986 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.104672793 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.124174774 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.1017246 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.101346608 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.123228323 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.10136766 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100743988 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.100589737 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.12560077 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.101947996 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099767038 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.123752779 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.103148632 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100741758 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.123208404 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101967913 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.101904028 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100270718 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.123795701 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101900086 seconds)
  done (took 3.265897172 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.114146375 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.183801599 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.108615961 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.191599179 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.099720139 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.096814002 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.13055696 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.09959849 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.114061931 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.11966555 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.098048603 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.096706336 seconds)
  done (took 2.342655544 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129706748 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137685954 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.124662903 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103949828 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110721649 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128432119 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108588119 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106093823 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135693345 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118392583 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127522332 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11512615 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113903713 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136309911 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111328142 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134015427 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107232945 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106157119 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122825394 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122002907 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106074733 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137114785 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106840595 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10529105 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129308145 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114331501 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136471623 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119352426 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107209047 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137017102 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111720924 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105958128 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136719762 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117098962 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126354395 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114781808 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105107605 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144143762 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111051706 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137239057 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104470843 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1108171 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137469406 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112524037 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114238674 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128787484 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112266872 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126810533 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108204455 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127346853 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134830744 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115129643 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132197877 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116448898 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114527592 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.149288888 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117977862 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137728622 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11132506 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139137445 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115758841 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110572023 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136883077 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119609765 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131758075 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117200108 seconds)
  done (took 8.88735286 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.14449448 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104008061 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128937693 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119146801 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114580032 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131731831 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108833133 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129135374 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10885993 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.103797085 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.172013294 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10761442 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115148441 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137953164 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106897239 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128302332 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109078668 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11494774 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12666684 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129596691 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106352019 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.140276887 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116451871 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137130927 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119308747 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132443131 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109035495 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107213065 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128611095 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108487559 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113048422 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129234265 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116757023 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103122371 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137687955 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10779266 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107639884 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134147586 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108939644 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134246246 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117041914 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122462211 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129659833 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108265283 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140084915 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1085774 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107436009 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125652937 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110589175 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104625557 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141547483 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119001313 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139832131 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119751879 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108016112 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128943946 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10870331 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108273506 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13012591 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113536907 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116445996 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12995258 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12911743 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129010574 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109124084 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115291523 seconds)
  done (took 8.860493199 seconds)
done (took 167.916724772 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.148698981 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.186102187 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.145209458 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.177882735 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.094501085 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.128434312 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.124664493 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.170305153 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.092505538 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.116156182 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.094615153 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.095049761 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.182042353 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.094830089 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.093928018 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.095919046 seconds)
  done (took 2.933224195 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.19334599 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.305281405 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108210816 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.12004834 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101364618 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.099296714 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.119775073 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.100402095 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.098173072 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.126785715 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.099763963 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.094443667 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.126486702 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.095923021 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.098379359 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.097664778 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.128306603 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.09935269 seconds)
  done (took 3.118202861 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.119006397 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.142907198 seconds)
  done (took 1.167947069 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.12907887 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.213180284 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.278310259 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.169565701 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.120005545 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.14137994 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.148510541 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.132877519 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.18809991 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.134266615 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.110475104 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.096716455 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.146787993 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.103481888 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.11342539 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.120668318 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.127035157 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.13486304 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.114392327 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.100634283 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.14337529 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.102591563 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.1060095 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.134631 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.17904236 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.133290284 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.103653237 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.101927885 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.122982207 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.112946962 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.105266901 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.139991829 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.110490727 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.179071334 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.102430004 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.175244782 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.10587973 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.121943789 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.112979127 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.098209293 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.125429601 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.102764467 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.133033112 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.098689878 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.102537932 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.106446702 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.12687473 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.101964978 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.12787462 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.108185278 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.107052259 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.128720653 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.15055624 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.128347356 seconds)
  done (took 7.867911298 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.863160057 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.140005891 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098097871 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.011946011 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.14624909 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113685195 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.859987554 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.145547573 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.253450757 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.88348946 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115474821 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.108689757 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.259903605 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.258045665 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.291235936 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.361510481 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.722685929 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.114447406 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.129127243 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.163376816 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107567445 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.145385175 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.121894825 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.517428254 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.1010468 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.098569478 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.130186786 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.109198412 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.177995087 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.100521099 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.103079801 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.194562308 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.292207589 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.207798228 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.099938795 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.121247509 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.099899221 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.184635511 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.271485435 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.220447104 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.173789288 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120151675 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.098868942 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.107242489 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.141905004 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.097042863 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.178320304 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.189698841 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.166566379 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.126506547 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.110905694 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.110524703 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.13005694 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.177040024 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.099292684 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.359699311 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.361240867 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.121468308 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11048 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.11343307 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263676797 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.124126909 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.237151837 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127651858 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.215767552 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.121131735 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.830893136 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.162044883 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.121195456 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.104617575 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.106420261 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.130426377 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.105744282 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.190178323 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.476626746 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.132524367 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.105050358 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099110933 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.230946231 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.122977605 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100562711 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.180544856 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.101840763 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.108432606 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.133953023 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.109833058 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.188647956 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.269517871 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.110667857 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.108658246 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.128921943 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.114584852 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.100210932 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.23273523 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.228535972 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.175345345 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.231864292 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.107966756 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.180767863 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.185917426 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.105109309 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.18913013 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.107612556 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.13540067 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108685001 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.225168436 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.155253453 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.104855929 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.10482118 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.133136079 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.136605621 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.12600397 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.110955588 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.186146029 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.55765942 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.16361798 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.119746243 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.106353351 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.110738852 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.17886 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107640865 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.26351512 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132755087 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.162227268 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.130729029 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.09758867 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.130978326 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.158232511 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.131690492 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.109777904 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.10671883 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.134424509 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.258008021 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.243551654 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.11195759 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.254880116 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.198143478 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.108098456 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.190935445 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.109282439 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.187228744 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.111420452 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107098136 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12559552 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.817949462 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.114705042 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.132230739 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.107118616 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.204440263 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.10135639 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.102310647 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.100028832 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.120587294 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.814059748 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.104064531 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.09767861 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.125979492 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.106900806 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.107711118 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.131561881 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.106205899 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.178810933 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.243432859 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.109672558 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.131337783 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.100083996 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.181485022 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.101042535 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.100045508 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.124034884 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.102357776 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.109199097 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.128478538 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.103524273 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.190500074 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.175037828 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.231343693 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.65321512 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.100954425 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.100128141 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.260981321 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10270098 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.327230624 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108643652 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.256179151 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.161168709 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.120439511 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.359540746 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.160119685 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.20786815 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.103365637 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.191323133 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.097314464 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.13264246 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.153894713 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.124446126 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.107289593 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.177098244 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.112846636 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.134332461 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.291478274 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.099848743 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.251448062 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.097729408 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.189398748 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.102408823 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.128801237 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.328778849 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.099684522 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.135838047 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.156108042 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.127273377 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.103675731 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.626851715 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.101250657 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.111930971 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.130518892 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.231539137 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.184140199 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.109927219 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.131856471 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.112263511 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.177918071 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.205540141 seconds)
  done (took 47.598026944 seconds)
done (took 63.589974618 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.268317073 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.17676932 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.281803728 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.178178467 seconds)
  done (took 1.907318968 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.241592671 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.156795109 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.200134945 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.119965677 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.206185825 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.119733395 seconds)
  done (took 1.978809783 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.17610347 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.167775518 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.144558248 seconds)
  done (took 1.418750749 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.198610957 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.214565708 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.325167414 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.231240549 seconds)
  done (took 1.987499673 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.264166071 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.117343265 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.124050005 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.206465338 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.22078942 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.204683336 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.12346801 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.173446683 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.128677935 seconds)
  done (took 2.540444322 seconds)
done (took 10.768170168 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.388766639 seconds)
    (2/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.193609533 seconds)
    (3/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.408667859 seconds)
    (4/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.294028692 seconds)
    (5/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.305309232 seconds)
    (6/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.281563216 seconds)
    (7/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.172860061 seconds)
    (8/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.128646516 seconds)
    (9/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.202070906 seconds)
    (10/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.293678865 seconds)
    (11/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.081685011 seconds)
    (12/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.107943016 seconds)
    (13/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.288967055 seconds)
    (14/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.370361074 seconds)
    (15/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.108942832 seconds)
    (16/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.185510262 seconds)
    (17/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.085021666 seconds)
    (18/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.107347161 seconds)
    (19/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.142154434 seconds)
    (20/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.194825222 seconds)
    (21/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.237128512 seconds)
    (22/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.207899854 seconds)
    (23/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.222562611 seconds)
    (24/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.221025239 seconds)
    (25/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.349664497 seconds)
    (26/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.158408485 seconds)
    (27/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.109388183 seconds)
    (28/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.165400829 seconds)
    (29/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.15362281 seconds)
    (30/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.196442794 seconds)
    (31/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.077659023 seconds)
    (32/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.160896662 seconds)
    (33/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.100543505 seconds)
    (34/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.169488882 seconds)
    (35/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.133920808 seconds)
    (36/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.247467116 seconds)
    (37/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.166392128 seconds)
    (38/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.144871489 seconds)
    (39/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.213530815 seconds)
    (40/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.171069673 seconds)
    (41/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.128998869 seconds)
    (42/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.241940062 seconds)
    (43/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.186320689 seconds)
    (44/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.205429707 seconds)
    (45/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.083644401 seconds)
    (46/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.100809901 seconds)
    (47/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.135392574 seconds)
    (48/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.078479691 seconds)
    (49/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.192364976 seconds)
    (50/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.133224361 seconds)
    (51/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.142226448 seconds)
    (52/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.165814295 seconds)
    (53/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.19828536 seconds)
    (54/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.184868633 seconds)
    (55/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.108891354 seconds)
    (56/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.11663644 seconds)
    (57/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.168592439 seconds)
    (58/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.084143719 seconds)
    (59/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.182959723 seconds)
    (60/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.194376029 seconds)
    (61/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.131840718 seconds)
    (62/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.171863775 seconds)
    (63/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.133853672 seconds)
    (64/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.136752668 seconds)
    (65/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.11593964 seconds)
    (66/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.107124262 seconds)
    (67/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.197034323 seconds)
    (68/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.080747507 seconds)
    (69/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.108204148 seconds)
    (70/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.124661849 seconds)
    (71/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.080301041 seconds)
    (72/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.194305095 seconds)
    (73/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.151823421 seconds)
    (74/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.105822591 seconds)
    (75/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.104597543 seconds)
    (76/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.140649188 seconds)
    (77/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.080793463 seconds)
    (78/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.133735565 seconds)
    (79/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.141191082 seconds)
    (80/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.122332259 seconds)
    (81/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.078799848 seconds)
    (82/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.12558915 seconds)
    (83/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.107988406 seconds)
    (84/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.109330361 seconds)
    (85/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.08407488 seconds)
    (86/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.128195672 seconds)
    (87/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.134085768 seconds)
    (88/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.085320876 seconds)
    (89/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.130610719 seconds)
    (90/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.143046746 seconds)
    (91/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.174167404 seconds)
    (92/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.100139742 seconds)
    (93/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.129345976 seconds)
    (94/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.085480605 seconds)
    (95/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.121591294 seconds)
    (96/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.131422046 seconds)
    (97/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.083678379 seconds)
    (98/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.077055095 seconds)
    (99/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.101002743 seconds)
    (100/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.124368933 seconds)
    (101/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.108385244 seconds)
    (102/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.08385498 seconds)
    (103/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.085299258 seconds)
    (104/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.121550857 seconds)
    (105/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.110389474 seconds)
    (106/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.107655874 seconds)
    (107/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.101577861 seconds)
    (108/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.106639148 seconds)
    (109/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.10305158 seconds)
    (110/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.143847105 seconds)
    (111/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.147383377 seconds)
    (112/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.120656396 seconds)
    (113/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.101211297 seconds)
    (114/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.200028958 seconds)
    (115/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.102471462 seconds)
    (116/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.102446761 seconds)
    (117/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.129640021 seconds)
    (118/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.079767248 seconds)
    (119/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.085478718 seconds)
    (120/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.0816635 seconds)
    (121/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.077244705 seconds)
    (122/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.123542895 seconds)
    (123/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.13420529 seconds)
    (124/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.14460871 seconds)
    (125/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.126783929 seconds)
    (126/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.082425817 seconds)
    (127/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.108691572 seconds)
    (128/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.144931304 seconds)
    (129/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.135495555 seconds)
    (130/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.119596865 seconds)
    (131/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.107401809 seconds)
    (132/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.123902457 seconds)
    (133/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.078143641 seconds)
    (134/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.085049959 seconds)
    (135/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.09943689 seconds)
    (136/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.108192889 seconds)
    (137/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.116617548 seconds)
    (138/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.078658037 seconds)
    (139/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.079660385 seconds)
    (140/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.077277523 seconds)
    (141/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.11796683 seconds)
    (142/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.123671414 seconds)
    (143/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.122801077 seconds)
    (144/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.126901903 seconds)
    (145/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.081805317 seconds)
    (146/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.085683497 seconds)
    (147/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.085026024 seconds)
    (148/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.135006627 seconds)
    (149/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.103634867 seconds)
    (150/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.104264163 seconds)
    (151/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.13599909 seconds)
    (152/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.079606297 seconds)
    (153/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.078586557 seconds)
    (154/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.132069956 seconds)
    (155/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.084044112 seconds)
    (156/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.102848311 seconds)
    (157/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.100501496 seconds)
    (158/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.082253003 seconds)
    (159/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.080832186 seconds)
    (160/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.101626682 seconds)
    (161/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.079514449 seconds)
    (162/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.079715533 seconds)
    (163/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.099501337 seconds)
    (164/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.157446442 seconds)
    (165/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.10151058 seconds)
    (166/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.11182564 seconds)
    (167/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.108775934 seconds)
    (168/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.11008972 seconds)
    (169/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.124901419 seconds)
    (170/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.10200504 seconds)
    (171/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.108060102 seconds)
    (172/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.104003586 seconds)
    (173/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.08241503 seconds)
    (174/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.102832678 seconds)
    (175/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.136634385 seconds)
    (176/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.10954363 seconds)
    (177/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.078955048 seconds)
    (178/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.085911191 seconds)
    (179/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.104082378 seconds)
    (180/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.083076206 seconds)
    (181/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.121870102 seconds)
    (182/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.081126595 seconds)
    (183/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.082336801 seconds)
    (184/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.106278103 seconds)
    (185/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.079975514 seconds)
    (186/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.081224885 seconds)
    (187/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.102390934 seconds)
    (188/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.101672936 seconds)
    (189/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.087609674 seconds)
    (190/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.079390124 seconds)
    (191/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.0788715 seconds)
    (192/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.085878183 seconds)
  done (took 26.572318804 seconds)
done (took 27.510028077 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.205541872 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.104773915 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.135117134 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.109420543 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.202279646 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.118159899 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.124092085 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.137164069 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.120565711 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.110071379 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.126968681 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.12329598 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.110075135 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.202576113 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.111859112 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.127117073 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.101632943 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.119648343 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.150386227 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.126838088 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.2010097 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.10488073 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.120263812 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.125040459 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.177979786 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102209196 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.134866031 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.110802893 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.121698743 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.135472335 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.111846093 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.10153052 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.15012915 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.125915447 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.101510984 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.135518981 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102589845 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.087203111 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.110686923 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.136387806 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.12252408 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.111232222 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.135156252 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.102908089 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.110823126 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.134719444 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.10194852 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.113085331 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.125009055 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.111637611 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.103819245 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.150064269 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.111357596 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.09994436 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.123158237 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.103818914 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.121649379 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.100360288 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.147677262 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.101687726 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.102104518 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.126452172 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.113837234 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.101807318 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.133799541 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.105566284 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.110753514 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.136680075 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.111247063 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.104560182 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101704568 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.134304866 seconds)
done (took 9.857381094 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.107863141 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.146514219 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.202898975 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.209511366 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.130482755 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.11718013 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.141691491 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.126091779 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.113132323 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.146517055 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.138860329 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.15567861 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.183508364 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.14238726 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.118515933 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.112663416 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.13823261 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.111078303 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.207471001 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.126823073 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.12647824 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.142807381 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.130118409 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.117148206 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.13203669 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.129604709 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.132315135 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.115285771 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.105175838 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.147447415 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.127282576 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.105014443 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.132200287 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.125544338 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.121999974 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.139365204 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.119960123 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.114371076 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.130196371 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.107502985 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.114241511 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.145214263 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.107407514 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.117453095 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.137857369 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.1212565 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.111986467 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.143446376 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.108251802 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.112501351 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.130394439 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.134001674 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.119043447 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.146764384 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.118727519 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.117819561 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.143151001 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.118839003 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.109265772 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.142411156 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.106975284 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.105463991 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.132427467 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.129318996 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.109429438 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.144314499 seconds)
  done (took 9.57238673 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.125607426 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.136831541 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.13959778 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.116858367 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.110737835 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.124492385 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.100538014 seconds)
  done (took 1.834523066 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.10277229 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.186266815 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.209441764 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.210630965 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.182110046 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.221626498 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.147913252 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.101668574 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.136858509 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.13642947 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.186224978 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.238349805 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.110524079 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.142437208 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.187941718 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.125196986 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.190399768 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.126870938 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.116767335 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.213325464 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119449209 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.13257281 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.139737937 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.102403312 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.20667155 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.10451799 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.257497867 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.120177808 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.110607343 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.140728215 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.117382376 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.206183792 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.182726841 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.141623677 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.110398897 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.211559144 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.181661517 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.140317932 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.196735041 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.13296024 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.181209284 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.141008759 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.117312047 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.116441643 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.142608938 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.171145058 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.145992475 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.117385089 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.114903594 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.215759242 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.112213889 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.21093897 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.112796335 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.141008889 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.114108338 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117823895 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.148896396 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.118354673 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.214910378 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.120354781 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.209343479 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.186397565 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.208889797 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.210041329 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.126659832 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.210155569 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.179855973 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.140312817 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.111577479 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.117391955 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.213317176 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.116677618 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.139394053 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.174547187 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.14451613 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.187351 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.213385759 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.114540724 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.14093725 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.10605447 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.115165873 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.122195771 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.202953221 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.114748888 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.13888242 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.122015219 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.114984787 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.142573611 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.107606362 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.150464852 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.116794877 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.114344157 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.146699869 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.117092614 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.118333544 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.216948875 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.112391027 seconds)
  done (took 15.716900774 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.106040521 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.105111472 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.108084086 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.128445036 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.104718782 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.10346265 seconds)
  done (took 1.658669793 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.140861652 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118453252 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.150798556 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.118543141 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.165494512 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.215352323 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.222269464 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.110999368 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.160185193 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.128236399 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.215631351 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.192651524 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.219163316 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.121144886 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.222214093 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.118852859 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.224646932 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.114381092 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.151091218 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.11453982 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.116721563 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.146934479 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.115878982 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.20871828 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118422864 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.119218727 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.135618642 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.146819017 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.123801342 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.137292395 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.121674757 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.117069838 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.134825901 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.113303888 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.222430754 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.109613433 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.1135266 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.146171383 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.120365827 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.117808418 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.221069714 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.11492691 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.148099487 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.119749637 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.136887706 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.111163989 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.119394993 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.135344581 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.19682489 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.145014 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.119434977 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.11793584 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.143058603 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.120286518 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.110461328 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.137438115 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.119596991 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.222963827 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.121006636 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.108912213 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.143077975 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.118759209 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.110932556 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.147333481 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.118126389 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.118082436 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.134801305 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.119040776 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114646406 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.142776606 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.121011331 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.142364191 seconds)
  done (took 11.212521335 seconds)
done (took 40.966969186 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.60376038 seconds)
  done (took 2.601665071 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.891741217 seconds)
  done (took 1.88994239 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.654975956 seconds)
  done (took 18.688297669 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.437493384 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.469621297 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.160201787 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.146241367 seconds)
  done (took 3.215947209 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.819008283 seconds)
  done (took 1.842698245 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.322679089 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.235602928 seconds)
  done (took 1.565044311 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.718196587 seconds)
  done (took 1.73554818 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.498658824 seconds)
  done (took 2.503012012 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.286675102 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.241990832 seconds)
  done (took 1.550836694 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.612196072 seconds)
  done (took 1.632192686 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.453462261 seconds)
  done (took 20.475805347 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.25465929 seconds)
  done (took 1.280222967 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.286778987 seconds)
  done (took 1.312376007 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.527453735 seconds)
  done (took 4.553936758 seconds)
done (took 65.852353656 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.11392443 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.115891057 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.11605282 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.137942686 seconds)
  done (took 1.498059499 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.122640655 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.11757881 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.145934344 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.117478421 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.12383249 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.117368142 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.141868421 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.119168953 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.116481934 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.145873529 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.117012168 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.115746843 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.146200917 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.115625919 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.115036352 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.144858469 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.121870944 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.117212688 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.144241793 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.119908578 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.11808543 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.143665057 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.121441977 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.118812346 seconds)
  done (took 4.053500206 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.113667709 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.107525482 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.11001254 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.13255541 seconds)
  done (took 1.496595059 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.125490255 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.128694037 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.15231441 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.123508436 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.129253455 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.152727627 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.115657471 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.114254835 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.141099466 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.125873831 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.131874054 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.156009899 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.128121059 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.117795415 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.153761011 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.111186695 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.116717966 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.15315072 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.123395819 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.124123338 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.143659353 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.123715076 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.121180752 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.151842922 seconds)
  done (took 4.192421981 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.190909104 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.128768477 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.171879921 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.16047762 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.175166873 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.114678625 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.143754538 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.147280171 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.123814598 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.119181954 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.145256377 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.160161764 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.148134345 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.118826124 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.117976124 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.148629015 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.129946382 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.121683521 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.188439537 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.121061259 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.150739049 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.128391347 seconds)
  done (took 4.184790952 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.119512893 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.108000228 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.103714847 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.134775862 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.120761345 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.110899833 seconds)
  done (took 1.73169755 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.107477093 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.102529559 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.102258614 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.127456473 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.105878038 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.102338224 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.100719051 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.12939751 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.105255929 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.10319928 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.128181165 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.101479147 seconds)
  done (took 2.350436044 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.33140464 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.108355673 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.13399787 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.111440413 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.112409809 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.104950406 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.145111134 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.106678075 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.268806389 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.103431204 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.131335549 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.196447233 seconds)
  done (took 2.890461678 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205468284 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144178189 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25283791 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.388639331 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186530068 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159728649 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.307297061 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188223943 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.174999794 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163277697 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21086586 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160057505 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1525289 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209851641 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162672737 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.158326819 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163304378 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23156459 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166568586 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210693488 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182079489 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.197546243 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187855671 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175159749 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140632777 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188336418 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.118153652 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125477399 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191617048 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189668368 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176324914 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174767092 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139639269 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21725457 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258451257 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175151538 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271561493 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157881233 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.170593401 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.211619985 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.259908515 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139322684 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218082729 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178375517 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12849251 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208800144 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152846986 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.210874184 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.133144579 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170729467 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182655529 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205859511 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.20190908 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136735677 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.3266479 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13308511 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.168302412 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177553097 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214085346 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227424035 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176341142 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.148448126 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.200121322 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188667714 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24027238 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.140108755 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.19241863 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122940325 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191036175 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.23118565 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18049853 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186146656 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.238289197 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128543602 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19811689 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167864164 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181426402 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230303398 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17030164 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.14402931 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151609232 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159965237 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125282456 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.187180925 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148531516 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213108063 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159701834 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.341768156 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179856948 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182773854 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158753448 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186714544 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18726957 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148413173 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.101245214 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167814872 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.159214657 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184746011 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126913443 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179852186 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140259513 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.122921663 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178873054 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.120776083 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195511811 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.134124053 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189330829 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1688158 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.156653153 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175876775 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.174295683 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.15884374 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194931237 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189523936 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157209927 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130561956 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24589326 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193453614 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.136167135 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.198173446 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.193955205 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.177418084 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134172903 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191029148 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189914291 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168509072 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22313301 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139452908 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133119152 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.16793002 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195129333 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160650415 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.178149443 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127430446 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.163833061 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21776691 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.151137853 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139171345 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206310119 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132686272 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122732907 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162386455 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136421783 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.167296447 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.148220493 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.138308565 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180616613 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165410455 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.190388387 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180987236 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134557018 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197985936 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130653226 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.16644921 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174583567 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.118420103 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.200654044 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222174461 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128641785 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205458082 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.162065136 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208845068 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196044289 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128603938 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181927195 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154431778 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.119269827 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188379558 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.171423242 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.190842544 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.187972571 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207064823 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.190881988 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.18615114 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149805214 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197619032 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.182082305 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183033612 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.142469292 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.197051472 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169340746 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.14753341 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.121488659 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.126516437 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164563942 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128292682 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134257903 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207617216 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191678308 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.204108813 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165908228 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166450539 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.189063087 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.150443776 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159836585 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.200953817 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138479165 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.216261341 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188299319 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205571673 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139496102 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189863528 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.118975375 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151768737 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.133279346 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.188083668 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136641043 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132878552 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168804013 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.218351258 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172376439 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175164495 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218466638 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165774927 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.227052648 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.120000178 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.186492042 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171593225 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192972668 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.182728306 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132372452 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.186297022 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.216640375 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142759081 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221728438 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166830695 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206198573 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221996905 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.164607086 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128246013 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173681252 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158500794 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165595997 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161199118 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173328066 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130058678 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179444501 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.137445197 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165070195 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186788911 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170645139 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177623467 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.187686314 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199828134 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124618602 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139409812 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.202725106 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144121705 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.133215654 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169802819 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223445504 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147559715 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184782556 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199484736 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129668836 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.316949144 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213214164 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205322877 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135044431 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164357295 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170325435 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.188440064 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16261642 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.212531101 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138252195 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234127362 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.195198049 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.141749667 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128535094 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174412147 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149531369 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.167801609 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.151672068 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.189504033 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.142476716 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2151732 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135865174 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.195071925 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203649712 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.144014992 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.147465921 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165290819 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252586006 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165842411 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200926102 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.162023917 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.193256393 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179972072 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150348065 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124921514 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.130281377 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.211291666 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127698155 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204333238 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.202548839 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209049149 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173413819 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189147751 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138922537 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.152074353 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165120137 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146608912 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213341674 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160813963 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.136964083 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218287266 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.128266616 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156657003 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160135579 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.316105406 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146811819 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201251919 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.107284094 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.312356834 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127144041 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15800734 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162876068 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196582837 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.131696126 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.181585355 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198808131 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139130584 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.190129631 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133207926 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.206971589 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211984275 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166565017 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203091517 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.143932005 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.18988437 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187492003 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174789395 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172973848 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.146315095 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157019599 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221714692 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.206997761 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.13149758 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19541424 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169297777 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.197497257 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174280227 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165755504 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181627102 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15624463 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16503504 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169162556 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122930199 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187655266 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.175711098 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156966161 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176143813 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198020328 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128776431 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153948008 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147249888 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191494699 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140363916 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.127142875 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213577224 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.127428445 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208484671 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237381973 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128860835 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.195173503 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14583705 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128942451 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165569413 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141256335 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158307064 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.170571854 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207226147 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.130927263 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204160994 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165831512 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193988896 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156457283 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170820605 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 1.332106758 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.12589607 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217225115 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.177712744 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197183695 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178932559 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173952624 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.195576172 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149927807 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193308404 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146809041 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.248189775 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164121005 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.192995353 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129696764 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169930836 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136659513 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.16104419 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150893212 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195462835 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142082543 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.134953772 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.194671507 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143576702 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.175206249 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140462802 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22791622 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150752596 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215232819 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.215306499 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137785832 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203151574 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175618296 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156056859 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.165014907 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203748946 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143521601 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181160622 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.133172417 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.164662927 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213947681 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.152569565 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160262876 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201501328 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168887873 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199866816 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.134713459 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206520664 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139764204 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204784011 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126299908 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.179226292 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172208448 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132308811 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.154642872 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.673968636 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188229231 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.163275273 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170867216 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.173434203 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222700402 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.12209071 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131328815 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.315395836 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18992778 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194753406 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.165315628 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134841818 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173487986 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159111526 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.1922923 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170477287 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.127868171 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156217399 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.145070033 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.183621377 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.142473199 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.194540155 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184070972 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188751656 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184854836 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.161606642 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.251412324 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170231572 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168965433 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.14584312 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.129439026 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139181895 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162712492 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141254126 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.210314664 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241908808 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.161022705 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.175078782 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135236219 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.124274081 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157239507 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162794407 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179667549 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165979529 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175427861 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.102993324 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138698778 seconds)
  done (took 86.496533907 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.160267542 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.150488274 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.166330757 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.219623155 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.192674185 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.28927488 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.227643611 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.244824401 seconds)
  done (took 2.771404395 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.117238817 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.157289425 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.139783975 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.142017582 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.108428154 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.440830603 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.129791076 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.145459714 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.158314334 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.148132898 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.133195629 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.522625784 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.143879383 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.116539547 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.144945387 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.105596251 seconds)
  done (took 3.965031295 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.659032573 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.548856104 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.017131407 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.293227668 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.260224067 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.202832404 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.761871449 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.196983958 seconds)
  done (took 12.065411589 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.149283232 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.142644272 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.372399731 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.271258312 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.202875088 seconds)
  done (took 2.268754561 seconds)
done (took 130.981741363 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.120585367 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.121305233 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.121704544 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.150839461 seconds)
  done (took 1.630554974 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.177419286 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.091017868 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.092672121 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.117224204 seconds)
  done (took 1.604533757 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.464568155 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.090273718 seconds)
  done (took 1.711007234 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.152191599 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.134742867 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.163651228 seconds)
  done (took 1.592989734 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.13865655 seconds)
  done (took 1.269697364 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.127448477 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.124855339 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.233596603 seconds)
  done (took 1.621094315 seconds)
done (took 10.561202905 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118401279 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.928158883 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.430884945 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.13122955 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.710125711 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.424433527 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.421817815 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.173655328 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.171381433 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.135734656 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.130108252 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.687424708 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.431414386 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.871437333 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.387957794 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.901218454 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.692815265 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.109956856 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.143345518 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.110213385 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.400750613 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.133934392 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.109483015 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.110399204 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.714560576 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.417942575 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.107972164 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.913886482 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.10824924 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.11164706 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.423690309 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.109135962 seconds)
  done (took 20.893783906 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117095254 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.165428489 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.144352009 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.111170003 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.11192545 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.138292446 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.120262826 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.122014056 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.20096477 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.108760577 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.158391466 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.108792356 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.113872996 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.136671516 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.134148362 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.108487094 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.139186411 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.111753935 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.116947337 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.138225122 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.131704623 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.107585473 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.135357558 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.112056849 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.108846156 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.15625312 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.110307367 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121597058 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.134373046 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.114238096 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.113864784 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.109050731 seconds)
  done (took 5.197482593 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.156835156 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.174235255 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.14607571 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.146265427 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.186182552 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.111944902 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.221491188 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.148543165 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.204399763 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.110048303 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.131148536 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.135675341 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.149631882 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.108650427 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.161700867 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.108378094 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.111563947 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.138074645 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.117639602 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.110809133 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.158642713 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.108188469 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.110058651 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.138647946 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.109024204 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.131697468 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.136710685 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122037729 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.107875359 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.141142578 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.113883941 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.108971039 seconds)
  done (took 5.509126923 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.123602454 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.123417058 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.131515676 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.160636184 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.117761086 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.121544003 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.152156728 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.11857499 seconds)
  done (took 2.193709749 seconds)
done (took 34.928466382 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.134661791 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.127721824 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.12989433 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.153014646 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.189270609 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.145579935 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.126710345 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.114979672 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.153459697 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.130189164 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.108936401 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.117057368 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.157452921 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.119036718 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.219107866 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.125035612 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.223088807 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.189991636 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.146415064 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.124980529 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.116504397 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.225178175 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.1221636 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.117239178 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.223518245 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.112676254 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.214324882 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.11962856 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.119066522 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.140703784 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.192397616 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.150796357 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.117993149 seconds)
  done (took 6.03845461 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.206480001 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.119688915 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.148056507 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.117535456 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.119243002 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.144790022 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.211228932 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.1465659 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.118416099 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.116298923 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.116356733 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.221863607 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.124270454 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.142531667 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.120902489 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.109474563 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.239958191 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.119709051 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.109406551 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.120749386 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.115232829 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.117127062 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.252132022 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.113501657 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.116761692 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.147008585 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.122005196 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.122803969 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.119359989 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.149449833 seconds)
  done (took 5.396968758 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.124129745 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.131619143 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.136063329 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.215524636 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.14740161 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.158768802 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.138008075 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.13205028 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.169991978 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.114006015 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.126422732 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.177799637 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.12901085 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.123070308 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.14688793 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.130597787 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.135155285 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.142543976 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.120052106 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.128427214 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.160926154 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.129837871 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.135470453 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.148876538 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.112119251 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.120507821 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.151265718 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.127463715 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.120385208 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.126016688 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.144366156 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.115994477 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.113878046 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.17788014 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.11363006 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.153976115 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.139826488 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.124584084 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.154732562 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.145701283 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.115592701 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.141669707 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.139635569 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.165211198 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.142116417 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.126363306 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.122713656 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.125771749 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.140757938 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.130570915 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.183307634 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.114586022 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.133810088 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.138301253 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.112502164 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.120398901 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.111891237 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.144499862 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.128511022 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.114511589 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.167050245 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.121071249 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.122616334 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.14244879 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.123661875 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.112113177 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.11061217 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.147091061 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.138462028 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.119873854 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.178670965 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.11274066 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.123452296 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.155385649 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.124773231 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.124049461 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.141445726 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.12385589 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123115029 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.146423777 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.126342534 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.114947077 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.114764533 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.159585011 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.133999503 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.155141939 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.125445472 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.126366382 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.115968369 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.143804978 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.130252328 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.113053456 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.146903602 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.126771604 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.112015599 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.144246826 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.126834713 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.12398645 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.139576488 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.13901191 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.117038913 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.11272576 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.16690736 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.11670039 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.11771657 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.151554463 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.154124499 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.111888757 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.153406505 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.125413422 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.112506166 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.150107013 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.116509114 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.111848913 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.15893275 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.128704499 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.118831516 seconds)
  done (took 16.848919247 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.318449222 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.271648425 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.211196479 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.245628843 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.125866454 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.239567822 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.300292452 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.303885386 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.112098114 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.149002083 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.196070239 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.274001726 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.112335884 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.171964784 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.2744522 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.387528809 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.141926585 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.17886001 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.148094035 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.125976951 seconds)
  done (took 5.451731569 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.133842351 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.146848542 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.164803245 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.140185332 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.121953338 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.159043377 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.113180496 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.134343671 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.154214233 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.123371601 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.114580897 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.157854707 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.125515547 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.128630386 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.158091264 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.147885624 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.118699247 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.14750764 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.136523388 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.117909383 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.131374981 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.138743166 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.122798434 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.163193198 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.132603011 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.123027657 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.14136289 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.118978449 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.119174325 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.120014833 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.14986168 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.131320887 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.118966779 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.133769078 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.124981824 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.126695486 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.148352719 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.116132027 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.118051631 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.145647755 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.129153194 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.125007798 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.119724785 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.128336333 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.133751394 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.110128754 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.126836254 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.155608361 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.106985129 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.131340231 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.154329822 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.128478099 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.120684241 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.164464577 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.119920343 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.129362002 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.15248851 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.128462838 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.118353526 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.140069436 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.112247373 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.116247073 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.121109395 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.157216527 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.125673787 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.132966124 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.158919272 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.112761319 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.116844697 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.146700827 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.116661286 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.127159864 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.163895741 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.124474628 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.119182608 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.15573124 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.122598882 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.09534331 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.122871459 seconds)
  done (took 11.615691294 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.138945632 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.123054841 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.130837586 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.17804136 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.127124148 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.118269766 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.152629855 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.133310238 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.128900311 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.1620204 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.129196682 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.127814875 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.16492745 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.12405012 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.121993832 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.160148042 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.12677885 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.150576172 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.161419274 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.140372723 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.128397713 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.150421098 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.12603187 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.124046585 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.172581811 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.124817566 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.139345064 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.157915422 seconds)
  done (took 5.103483428 seconds)
done (took 51.600217486 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.298787599 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.497722306 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.272471822 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.268560661 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.333778465 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.29213807 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.270268647 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.281338885 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.717809614 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.23907177 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.26933538 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.280289907 seconds)
done (took 29.191993378 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.357033197 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.798985869 seconds)
    (2/2) benchmarking "String"...
    done (took 1.564256185 seconds)
  done (took 4.522232968 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.257325452 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.258912843 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.507062459 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.257336492 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.258328911 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.260193209 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.269161237 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.276895525 seconds)
  done (took 16.247445921 seconds)
done (took 26.54529634 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.309631866 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.442898518 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.514612411 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.261849155 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.277290003 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.279049192 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.259583357 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.28538194 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.271237656 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.265998116 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.686734678 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.525759388 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.263432739 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.633802085 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.263166849 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.264131299 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.277347769 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.499575997 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.264456215 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.292445998 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.239426973 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.241250306 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.296262153 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.264351243 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.268485186 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.264015842 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.332604497 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.27631153 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.460370574 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.266109077 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.299027986 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.265544907 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.263399824 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.269185196 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.261303205 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.272304546 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.46427364 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.271858562 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.248477085 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.292999739 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.465014808 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.266157686 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.262688728 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.264230629 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.268945936 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.310155569 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.251851842 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.395845508 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.284403106 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.271460903 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.341225742 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.65235463 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.269057786 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.271059307 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.264034816 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.493414939 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.285835857 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.319402641 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.288359043 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.272173674 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.263824049 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.272435871 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.27913897 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.266634003 seconds)
  done (took 147.69873201 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.263305266 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.268050269 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.267920752 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.271480564 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.268864395 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.269517187 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.263056737 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.26472393 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.26999623 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.270008857 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.267719352 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.269271622 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.268252594 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.222509508 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.274753967 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.28700976 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.264178007 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.28198424 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.296143372 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.265263402 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.276300225 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.268102004 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.264903371 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.266846817 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.270585744 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.344055429 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.305771403 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.271470077 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.280240201 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.265331474 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.311827685 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.275130851 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.902825524 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.11523806 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.280374622 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.290419499 seconds)
  done (took 82.528999859 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.266070184 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.264997571 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.265987737 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.298174367 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.266534885 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.849374629 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.851195744 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.242400649 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.292427828 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.65588476 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.525910876 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.270711205 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.359495868 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.279152382 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.267470881 seconds)
    (16/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.267178802 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.281853628 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.269351618 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.292880323 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.272519999 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.850653937 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.283119556 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.445476356 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.284739992 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.298688602 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.660596591 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.292378135 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.271492105 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.300325134 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.601202884 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.31833026 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.266067461 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.619080493 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.707331307 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.381341372 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.271010496 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.300760779 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.267933388 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.55025817 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.268616615 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.269038896 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.273243981 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.922047151 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.273320272 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.850436714 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.27430936 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.260535819 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.273565044 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.270585667 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.195719944 seconds)
    (51/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.273979499 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.975386377 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.273110331 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.268815032 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.272504186 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.269700356 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.26963329 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.302513643 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.173697366 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.368545549 seconds)
    (61/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.268367653 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.269657082 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.273557605 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.303125142 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.269346279 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.276363695 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.274244838 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.15828923 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.329938464 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.376163314 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.853936729 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.274508706 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.36513758 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.389127704 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.272213103 seconds)
    (76/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.270044538 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.270278019 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.270644391 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.271118631 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.382103571 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.269878096 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.957503209 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.448778081 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.290023664 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.664278747 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.374116556 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.271697967 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.62020641 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.27351116 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.270482511 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.97255346 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.366008524 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.271301676 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.272345448 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.272129616 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.960968896 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.856755971 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.522827607 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.276518225 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.899530836 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.276928222 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.137320093 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.841136954 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.928781477 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.277080112 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.382573579 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.451071094 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.290230277 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.272648472 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.663263413 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.278177526 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.328792437 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.273831012 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.676152446 seconds)
  done (took 381.667930524 seconds)
done (took 613.057154878 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.190313484 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.135198972 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.253853343 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.163796803 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.130657001 seconds)
  done (took 12.045257653 seconds)
done (took 13.217737852 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.468720454 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.469736997 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.337656872 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.473076926 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.307483432 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.487062743 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.453713804 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.289741913 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.387761663 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.357887965 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.387173955 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.32867177 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.308993639 seconds)
  done (took 19.230655704 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.565211373 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.283574434 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.340743476 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.544205481 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.322069296 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.57623741 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.59455052 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.28593474 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.42661095 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.320491647 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.297558626 seconds)
  done (took 18.730431711 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.566967654 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.284610697 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.343602752 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.552308128 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.323164859 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.565048824 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.603879512 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.287906318 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.441925905 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.299055191 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.29590297 seconds)
  done (took 18.739282384 seconds)
done (took 57.874503259 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.314554312 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.376817913 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.312700606 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.295406541 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.29423588 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.294353022 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.298712112 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.294594613 seconds)
  done (took 11.656092963 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.294286088 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.293374959 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.292050223 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.293073169 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.29230526 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.29322633 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.294968093 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.29341031 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.294505747 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.294188486 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.293556334 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.29442228 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.293634901 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.294976243 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.292313232 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.293586836 seconds)
  done (took 21.873422207 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.295274191 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.293056184 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.2944555 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.294190766 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.293201643 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.295313105 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.295217736 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.293153764 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.29377391 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.292825672 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.295171946 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.296447749 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.295687647 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.295703426 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.294866477 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.295698195 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.294619044 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.294225245 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.297807891 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.294837723 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.297308556 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.295130315 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.29366862 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.296926662 seconds)
  done (took 32.25462618 seconds)
done (took 66.960392405 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.278610213 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.298363076 seconds)
  done (took 5.754465209 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.35428761 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.353483108 seconds)
  done (took 3.886395216 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.295392728 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.296961392 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.296905696 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.294690503 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.294728755 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.295099905 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.295985103 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.296898512 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.295904925 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.297331128 seconds)
  done (took 14.136666657 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.298446199 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.297192108 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.296671056 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.296558843 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.296755628 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.297317006 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.297976455 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.295536443 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.297468038 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.295498116 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.2982565 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.296801177 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.29572677 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.293150447 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.297081015 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.295977774 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.295354923 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.294452541 seconds)
  done (took 24.515437301 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.308142321 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.312482101 seconds)
  done (took 3.797584388 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.424306528 seconds)
    (2/7) benchmarking "second"...
    done (took 1.33706523 seconds)
    (3/7) benchmarking "month"...
    done (took 1.399124146 seconds)
    (4/7) benchmarking "year"...
    done (took 1.391119576 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.336066499 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.317837109 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.337157618 seconds)
  done (took 10.720293474 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.295667496 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.501798223 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.633079371 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.304585816 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.29618836 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.300580615 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.489963716 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.300429912 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.301454013 seconds)
  done (took 13.601902551 seconds)
done (took 77.590247385 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.278789475 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.325205489 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.300520227 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.300383382 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.613678918 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.298194759 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.284252249 seconds)
done (took 16.579870157 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.265234309 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.262938734 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.275566693 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.292007478 seconds)
  done (took 10.270719919 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.278094055 seconds)
    (2/2) benchmarking "read"...
    done (took 1.603486012 seconds)
  done (took 5.057697841 seconds)
done (took 16.506306359 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.294954418 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.295196988 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.294725662 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.293175564 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.294255605 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.293573944 seconds)
    (7/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.294381305 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.294787401 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.295476087 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.29516009 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.293413241 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.293668725 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.295187924 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.293440595 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.295107241 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.29265247 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.29458404 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.294817491 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.294949907 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.293928711 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.29524928 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.294585476 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.294001392 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.294457909 seconds)
  done (took 32.24160156 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.294146628 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.293945254 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.294110288 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.294254752 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.294620105 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.294498751 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.294927538 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.29545054 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.294226114 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.293654704 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.294497246 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.291654608 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.294533411 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.293943854 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.294622151 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.294027264 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.293946441 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.293419346 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.294896514 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.294887697 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.294600547 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.294525572 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.294221943 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.297589959 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.294285798 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.294865228 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.29512436 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.293750026 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.293248164 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.295030163 seconds)
  done (took 40.009413392 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.295974382 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.293745035 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.293629299 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.294676724 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.293671592 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.29395384 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.296535293 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.295775988 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.294404933 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.293824778 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.293174874 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.294552528 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.295288478 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.293989956 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.292647352 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.294203505 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.292843128 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.293073103 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.294321312 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.295628138 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.294409571 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.295160805 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.295559589 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.296615029 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.293879723 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.294358701 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.294261328 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.294345347 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.293838953 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.293405079 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.293878231 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.293971714 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.296014915 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.296610982 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.29287652 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.294942928 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.295567278 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.295533255 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.295189981 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.295613892 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.294452092 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.295653576 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.294831456 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.294703299 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.297007595 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.295081164 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.297202884 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.297956339 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.295135474 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.295642733 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.295235484 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.296483039 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.296873508 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.295735948 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.295039009 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.296409823 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.296555418 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.297167675 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.297019372 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.296099568 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.296231025 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.297028799 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.295711463 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.29568891 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.29640068 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.297232817 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.296029252 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.298049693 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.296390127 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.298547041 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.29774472 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.29779981 seconds)
  done (took 94.443929354 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.297489893 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.298428958 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.297844011 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.299571567 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.296698318 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.29734063 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.297624723 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.298406315 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.296047394 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.299542804 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.297402517 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.298145493 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.296972386 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.298276136 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.296932513 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.299334988 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.298444928 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.298443505 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.298102586 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.298533622 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.298028748 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.298529816 seconds)
  done (took 29.734508628 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.299580001 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.299221682 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.299056993 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.300171749 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.301901299 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.299976909 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.30020224 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.299384523 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.299859631 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.298646027 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.298739168 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.300481082 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.30246119 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.298924398 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.301510286 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.300722465 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.298263424 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.301093871 seconds)
  done (took 24.580772259 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.300647099 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.300671332 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.298594285 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.300080614 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.300687168 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.300337633 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.300947855 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.29872151 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.298989331 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.299771772 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.300079971 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.299726944 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.299718704 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.299924343 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.300790473 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.301359835 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.300338143 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.300212474 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.301230764 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.305393143 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.302223188 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.300525828 seconds)
  done (took 29.792756966 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.300787971 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.300293042 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.301712595 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.301018951 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.302162693 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.300994597 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.299580882 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.303068406 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.304842126 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.300280291 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.303137935 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.300178591 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.304693944 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.302787519 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.301814508 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.301759777 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.302494026 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.301505044 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.30271324 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.30255251 seconds)
  done (took 27.220314866 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.303585986 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.302293882 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.302562245 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.302027614 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.303087272 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.303444062 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.303912098 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.304703045 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.304240433 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.305183819 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.30255129 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.305119502 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.304673193 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.303018326 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.303014121 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.303545575 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.303331184 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.305086567 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.303543597 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.304872981 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.303981093 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.303803557 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.303271564 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.304407716 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.30555281 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.302982634 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.305266999 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.303275394 seconds)
  done (took 37.689036248 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.303298835 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.304121363 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.302651892 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.304052163 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.304619727 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.30374458 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.30460308 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.304642721 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.303478038 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.303765041 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.304166023 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.304883489 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.305248367 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.305152321 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.30338977 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.305455888 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.306555969 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.304148415 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.305656583 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.304594964 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.303860596 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.305236884 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.304502576 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.303142359 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.303305871 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.304049119 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.306351545 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.307036105 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.304329902 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.303647635 seconds)
  done (took 40.319722801 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.324016577 seconds)
    (2/2) benchmarking "in"...
    done (took 1.322987907 seconds)
  done (took 3.83150771 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.305280557 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.305595199 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.302077555 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.304246681 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.303200506 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.303092972 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.304519746 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.30486128 seconds)
  done (took 11.616753553 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.296963344 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.305576848 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.304274379 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.304035952 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.30479977 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.296416913 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.305207579 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.308785756 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.298363639 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.296988473 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.298123994 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.297677121 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.29976476 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.299864175 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.299686655 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.300890797 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.307821489 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.30597057 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.306415011 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.306812949 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.307168318 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.299113939 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.30244811 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.30904592 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.297905347 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.304924753 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.304967358 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.308995818 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.298162376 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.302353954 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.301989145 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.307713992 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.306263401 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.306398547 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.306828317 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.305809714 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.307225328 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.305387314 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.307763665 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.310447411 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.307349587 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.305284628 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.301103976 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.303688796 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.303899161 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.310081384 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.308785591 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.307683058 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.299445437 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.303732544 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.310127555 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.299003192 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.30938766 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.303594005 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.306325741 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.308356938 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.314860934 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.299662713 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.300899231 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.306602007 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.3145646 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.308956529 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.305533769 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.312347327 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.303280022 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.306674644 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.311223702 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.313550725 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.30811657 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.309153429 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.305402 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.315519771 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.312543343 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.310512243 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.307629703 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.307216734 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.29890927 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.31131349 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.309215677 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.309794101 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.312440237 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.309395691 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.302475626 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.305057042 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.30323966 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.311289739 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.308313693 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.306732863 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.29854431 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.308387384 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.316020175 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.307248347 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.300136904 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.303453337 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.304031644 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.309444715 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.298815904 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.302946121 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.310880477 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.306526976 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.307236119 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.29889708 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.305807531 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.312384954 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.307339467 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.308591295 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.312821915 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.301441573 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.310230473 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.314356691 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.309837718 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.300258629 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.302996908 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.309235195 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.299683658 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.304952458 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.313174521 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.305263052 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.313163171 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.306258907 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.30445038 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.311529614 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.313470337 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.308065332 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.302421777 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.312189325 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.309448818 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.306342756 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.315162659 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.308346565 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.305719504 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.304975193 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.313486653 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.30415216 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.311615111 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.303417663 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.313644032 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.308935641 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.309995028 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.305966658 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.309505396 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.306591842 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.307723004 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.311778129 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.315079357 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.305305132 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.316070382 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.30905319 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.307162868 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.311270245 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.314251095 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.30950682 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.303080068 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.313480386 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.302451146 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.311998676 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.302427494 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.314429452 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.309982014 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.309501362 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.309197107 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.302024383 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.305265474 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.312960911 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.308645674 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.310477581 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.312700298 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.30867222 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.311248845 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.302588196 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.312069288 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.302739771 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.305114748 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.313152716 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.311555877 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.310176813 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.308874774 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.317865005 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.311237873 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.311030895 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.30472958 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.308399285 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.315695324 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.312603592 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.319591271 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.312179464 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.311627443 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.30546212 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.307637031 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.313746601 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.304683549 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.317487289 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.317039932 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.320017056 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.309087488 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.313028077 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.303772474 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.312768641 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.311920276 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.320472527 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.311901883 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.311966326 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.307375378 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.315435219 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.308137192 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.314874237 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.304572421 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.314301154 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.313337166 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.31546401 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.313065811 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.30778229 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.311499932 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.31712083 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.312373134 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.313640306 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.307716459 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.315970983 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.306059742 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.309056889 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.316579628 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.312349903 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.315784859 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.319973413 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.310749727 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.318026994 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.314871976 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.308382324 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.31467899 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.311431655 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.313755003 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.317511373 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.315638667 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.310496648 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.319433859 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.315825504 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.30867804 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.31412025 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.321754196 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.31458753 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.307515252 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.316534664 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.314452253 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.315949707 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.314768969 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.309740747 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.317286859 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.315375621 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.324651823 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.307784435 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.317005286 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.308308712 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.317057075 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.310427591 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.315777592 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.312666697 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.31759358 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.325055813 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.316249765 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.30966113 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.319212976 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.313493631 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.315919838 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.307019478 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.317807435 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.315864152 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.31553143 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.314471258 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.314247756 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.317700105 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.307753534 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.316927858 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.309288447 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.324904021 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.331530326 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.319740993 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.319815355 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.319246517 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.316781763 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.317355212 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.312518805 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.310245385 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.312125425 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.310295647 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.311226157 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.317837624 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.309932728 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.319142342 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.312960052 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.317538838 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.319343938 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.316101012 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.308798052 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.318450502 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.316180684 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.31589954 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.30755708 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.318017793 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.312402757 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.31657222 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.316602483 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.31052127 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.321762711 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.320237355 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.314153442 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.316053893 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.312483298 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.30947415 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.312973652 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.320961799 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.310705803 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.321278497 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.309761917 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.314241637 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.312310398 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.320970764 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.326868919 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.309422506 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.320893357 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.317406559 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.308902032 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.310899475 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.319589428 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.320854263 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.3276478 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.310980131 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.320520942 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.317654828 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.319795259 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.31877786 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.319387149 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.318662841 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.317368408 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.322411184 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.322094744 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.312733414 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.320839896 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.32613663 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.319666287 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.317623416 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.310827988 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.319391507 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.328741459 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.313522263 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.316620381 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.313174006 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.321781915 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.317756949 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.319857456 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.318157144 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.319039779 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.322983824 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.323530406 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.321969447 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.318109828 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.323008229 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.330702322 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.322112581 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.332211454 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.311463659 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.323393817 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.318855132 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.313460924 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.313230592 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.314618227 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.322399474 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.311191055 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.321549711 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.318109867 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.315014926 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.319067365 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.326303458 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.312486508 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.318124259 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.328256785 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.311065442 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.321777967 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.318642745 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.311837151 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.323688136 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.320362527 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.312562328 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.315388553 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.314940265 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.321628194 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.313033397 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.322564756 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.313861848 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.323528561 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.32054438 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.319175534 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.319493076 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.32122132 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.312366481 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.322998579 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.3189288 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.332823493 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.313566765 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.318202186 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.315353116 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.325090131 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.332526255 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.316167435 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.326093141 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.3219033 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.313916778 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.31838099 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.325867151 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.314218893 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.324701508 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.31277999 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.315800426 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.314666001 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.32175213 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.322978178 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.323892551 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.312984773 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.31393669 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.323589487 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.321255609 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.321082582 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.317172475 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.327748847 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.315071016 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.314643571 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.32314674 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.315594287 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.326673115 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.314923235 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.316851139 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.318206813 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.32545933 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.321071538 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.321647693 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.313766709 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.316001919 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.327998639 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.32674612 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.316078543 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.315423646 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.324443964 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.315324686 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.319183889 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.318618473 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.315780919 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.317101484 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.323985253 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.3156043 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.316321637 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.315310575 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.324010798 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.323746876 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.322744455 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.315308928 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.329434508 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.329946756 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.327536184 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.314085968 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.31751154 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.318152635 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.322649262 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.32180092 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.315564416 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.327779366 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.331064258 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.326180596 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.322147559 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.321251218 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.313168321 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.323142963 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.323252471 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.318787177 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.32760932 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.318032105 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.328606941 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.322681373 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.321785797 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.315571367 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.31656684 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.316318534 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.318459739 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.323511586 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.321264485 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.325841979 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.319529825 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.327130702 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.32404905 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.322483434 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.321988603 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.314599391 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.324831003 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.314884329 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.325371441 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.325287808 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.317455891 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.327277806 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.323551987 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.317145114 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.3195261 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.326053615 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.323050683 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.315639559 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.321829236 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.328066388 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.33276683 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.323572057 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.316889933 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.321294171 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.325937071 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.323561648 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.322822456 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.316764622 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.331365922 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.334934939 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.317108248 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.319119704 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.327194874 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.334246832 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.322483176 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.32146881 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.318440015 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.321432457 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.326594768 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.322914416 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.324676426 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.328251254 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.317330296 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.325043052 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.315904201 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.319411605 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.323995929 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.333858373 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.322373555 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.319764656 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.330018663 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.335267399 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.320316182 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.33603689 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.330427353 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.323237228 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.335698624 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.315779011 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.325103917 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.317783689 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.328162613 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.322260815 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.32411667 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.321917243 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.316546163 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.325763363 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.330505532 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.332648065 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.325623044 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.316262058 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.317256369 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.325720807 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.324369174 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.325429526 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.323288682 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.325005034 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.324303377 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.319168886 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.33362247 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.337882504 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.329258777 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.325848791 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.325011203 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.324463086 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.327973038 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.321277476 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.328531033 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.325239169 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.325572549 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.322652499 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.33303947 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.327913257 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.318854242 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.320887089 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.319985725 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.327925537 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.332969249 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.344320867 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.327744587 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.329087061 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.327129816 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.325173163 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.319426518 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.329632679 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.324675703 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.31881574 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.321349007 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.327973849 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.326899201 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.326010113 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.318260382 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.329816946 seconds)
  done (took 785.25517216 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.325278045 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.32399227 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.32597696 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.326146168 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.32927291 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.325712814 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.325640699 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.32704542 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.325311915 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.327149417 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.325320186 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.325854498 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.326470749 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.325654026 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.325130716 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.325749385 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.325940825 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.327173725 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.326215763 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.328966972 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.327398681 seconds)
  done (took 29.051098991 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.32612159 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.325252075 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.326867861 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.328471683 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.327659812 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.326681417 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.328861879 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.325846371 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.327547956 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.325724337 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.328622101 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.326666247 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.326500364 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.326406581 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.327576572 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.326130707 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.328065482 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.326750363 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.326097585 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.327563577 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.32868932 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.327726872 seconds)
  done (took 30.39614312 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.329192498 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.32803771 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.320611784 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.330997548 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.327616633 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.327952963 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.327552585 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.327337477 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.329377305 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.320193813 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.322073462 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.322854051 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.324370978 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.331422125 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.325172176 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.333082033 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.329424302 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.330604664 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.327877952 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.32966635 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.329932388 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.341083209 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.328338453 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.321462024 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.330669885 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.329550319 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.330912074 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.329311998 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.320661273 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.331273536 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.331162099 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.323006086 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.33201951 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.331783874 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.322828853 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.331873706 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.329698083 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.330099225 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.32953729 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.327791395 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.338445462 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.331869197 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.334179476 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.343411605 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.330791529 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.323306271 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.335168442 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.330580869 seconds)
  done (took 64.99774991 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.331855503 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.33098429 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.330439636 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.331847122 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.331183769 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.33075617 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.330975331 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.330520289 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.332281184 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.331596284 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.330948725 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.330237062 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.329863471 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.332252296 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.332201549 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.330502181 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.331529113 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.331400489 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.329958997 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.331731732 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.331489748 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.333267241 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.332410878 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.332916903 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.333532336 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.332092268 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.332385034 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.333210469 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.333040287 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.333717795 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.33392282 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.333796957 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.333454325 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.333215774 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.333700484 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.335037576 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.334241919 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.333808358 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.334883706 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.333333972 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.335063727 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.334229364 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.33364037 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.335755429 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.333984748 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.333534459 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.332360047 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.333711375 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.334541443 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.335230869 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.335211921 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.333783609 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.333559255 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.335243025 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.334396952 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.335185619 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.335149382 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.333655269 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.333986782 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.334767116 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.335593317 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.335946889 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.334730999 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.334621034 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.335152788 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.33562658 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.334581183 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.336047021 seconds)
  done (took 91.866320025 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.336068273 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.337153887 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.334344947 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.336762229 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.33688813 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.334654792 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.335707871 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.336265666 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.336294985 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.335377792 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.337824895 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.337705437 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.33695023 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.33736849 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.336145989 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.33551166 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.335803279 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.336371565 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.337368327 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.335746897 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.33716468 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.336637159 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.337458382 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.338680239 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.338196262 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.338712007 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.337210433 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.337550529 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.338045424 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.339281569 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.337847885 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.336620513 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.337281608 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.337683799 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.338753005 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.339897244 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.339170795 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.338312756 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.338250522 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.340074828 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.338005744 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.339964405 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.340180325 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.337834908 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.339563263 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.339246055 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.338339444 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.339552749 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.340220682 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.339139893 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.337549667 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.340281908 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.337637336 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.339602667 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.339233826 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.339413725 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.337579276 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.339153435 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.338189902 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.340613004 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.340135322 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.339135066 seconds)
  done (took 84.158913398 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.338781661 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.339901339 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.340155873 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.339130076 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.339186084 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.339262575 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.339888863 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.339565479 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.340056201 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.339770157 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.342223113 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.343023528 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.339394545 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.338416368 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.339111101 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.342862216 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.340301364 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.340599451 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.339557434 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.340412942 seconds)
  done (took 28.012190913 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.339087586 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.340406996 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.340025377 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.34038924 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.341049317 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.3397606 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.339899868 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.341008094 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.340032018 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.340597921 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.341313346 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.341839645 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.341074462 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.34164461 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.341871066 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.341654391 seconds)
  done (took 22.662585056 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.341770564 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.340131481 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.341615276 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.342531434 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.342365297 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.341583699 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.342423991 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.342208629 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.34236702 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.343119468 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.342554503 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.341710043 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.342775761 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.343041684 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.342120341 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.342496359 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.340895153 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.342220984 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.341627622 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.342688872 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.342690256 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.342878129 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.343803957 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.341383288 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.34359889 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.343537918 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.342343872 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.341675621 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.342074972 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.343461979 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.341061553 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.342853148 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.342802722 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.341679473 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.344023096 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.345116537 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.343499746 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.343256615 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.3437945 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.344281461 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.342468485 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.345289524 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.343788209 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.343004092 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.343345618 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.345190037 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.344188158 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.343743313 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.345261434 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.345786311 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.343658123 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.344945374 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.34502478 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.344927449 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.344365274 seconds)
  done (took 75.080501068 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.340237153 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.33961968 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.338728963 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.339140056 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.339109761 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.338852252 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.337586993 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.33346511 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.331287691 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.329495893 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.331791491 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.332647229 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.331653438 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.331074974 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.329231207 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.32609859 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.324384883 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.325698445 seconds)
  done (took 25.213744777 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.324955839 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.326421287 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.32694019 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.324592649 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.324464562 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.323735206 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.324605761 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.323896079 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.324473715 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.323709274 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.324312738 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.323574456 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.324447518 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.324452336 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.324565416 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.323172452 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.325788556 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.323429623 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.324742271 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.325739691 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.325102223 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.324733883 seconds)
  done (took 30.341987866 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.314970468 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.315376411 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.314187115 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.328408236 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.323238491 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.313838427 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.315802403 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.315898506 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.331995173 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.339137711 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.334363966 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.321670402 seconds)
  done (took 17.067519216 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.325558507 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.325804259 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.325688466 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.32722407 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.324661611 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.326596037 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.325212858 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.326146655 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.324708941 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.325821765 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.325423291 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.325847779 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.326308104 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.325472909 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.32577442 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.325387797 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.327217661 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.325602845 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.325868293 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.326483691 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.327267233 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.325648764 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.326096803 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.327677911 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.328160229 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.326408026 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.327894294 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.327295977 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.326754155 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.326775717 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.327633212 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.328304262 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.328706988 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.327940842 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.328524326 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.328364981 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.327529268 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.329542611 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.327126069 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.327367651 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.328730584 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.327959007 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.3279658 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.329426783 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.32954663 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.328702726 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.326775968 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.328365606 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.32912055 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.33576079 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.32852326 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.328578967 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.33043787 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.328416328 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.328875663 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.331666697 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.330670132 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.32832248 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.328400145 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.329017413 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.329981115 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.328635753 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.329591912 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.330345221 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.329797425 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.330489296 seconds)
  done (took 88.832702702 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.32981409 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.329790425 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.330274326 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.329404588 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.332113272 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.329571017 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.330361541 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.3314007 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.330933494 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.330548893 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.330447133 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.329053893 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.330791802 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.331032126 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.330892656 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.331915353 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.330213719 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.33134033 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.331912431 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.331322357 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.330796542 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.330450902 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.330726733 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.33159821 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.331493938 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.331358411 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.331659846 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.330561914 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.332851365 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.330778106 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.331648327 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.330983245 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.330977952 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.331949533 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.331643298 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.332630223 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.332860196 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.333780827 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.332667303 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.331808536 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.332400006 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.332856267 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.331928545 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.331914272 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.33312302 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.333403426 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.333598643 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.331297395 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.333013681 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.333604525 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.336750529 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.335443368 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.334587159 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.333113035 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.333715643 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.333331098 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.332518905 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.33480136 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.335765649 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.332878449 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.333664159 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.332768024 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.333736384 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.334838341 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.333915487 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.332971816 seconds)
  done (took 89.125158103 seconds)
done (took 1834.718524599 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.490888229 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.444237111 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.322796223 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.33582805 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.323252775 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.324414133 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.335635906 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.323264933 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.323513394 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.324149994 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.321595527 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.508756204 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.351473161 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.316649036 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.318298037 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.414369536 seconds)
  done (took 26.985794758 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.337907987 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.322048652 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.424239478 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.326187502 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.344557261 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.497108984 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.381148927 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.322381437 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.474254406 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.335823792 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.308052318 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.35317233 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.318470276 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.310603938 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.332402915 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.491168603 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.560446447 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.306582187 seconds)
  done (took 28.948063895 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.724482761 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.326234445 seconds)
  done (took 5.248047574 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.329586279 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.311124101 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.311177363 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.309240147 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.303275713 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.299270079 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.305494374 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.300632042 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.308464308 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.421259574 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.30389637 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.315765862 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.30357978 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.302400717 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.311046518 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.347889097 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.445096368 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.30818662 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.30944697 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.306843989 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.299242298 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.389365821 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.339776127 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.30942163 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.41699851 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.305862718 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.303391827 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.308137003 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.415266233 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.311324925 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.300778902 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.302559799 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.302754502 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.204044542 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.827291111 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.29387104 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.323602189 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.30951933 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.308826437 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.431804504 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.305068879 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.309543109 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.294813675 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.818944374 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.401418539 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.412219106 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.29677459 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.300049795 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.302715818 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.365036797 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.298360089 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.298840863 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.354655384 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.061469525 seconds)
  done (took 83.473935602 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.347505626 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.289346914 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.467734303 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.304456163 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.296254227 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.286565066 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.283572697 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.54714096 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.288380617 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.285486889 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.590864931 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.88192626 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.291398474 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.356502246 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.325069788 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.345831179 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.282722582 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.281604469 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.283504321 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.284798412 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.836884071 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.284729184 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.282354945 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.362715845 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.322780446 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.79974941 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.285024201 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.287640814 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.297274838 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.284094669 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.852973091 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.300630906 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.341445208 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.283953135 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.561407748 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.655288975 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.620288575 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.295715498 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.312164926 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.288293188 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.30967986 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.795545713 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.637963873 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.283977455 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.284746315 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.788956408 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.284395724 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.288427289 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.296699029 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.562050448 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.283849358 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.283933133 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.287218229 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.286155793 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.284367365 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.343939287 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.340460602 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.802680748 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.283947146 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.28402983 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.327720078 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.285314148 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.291146549 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.290124221 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.290939684 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.638809673 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.520829187 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.293718883 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.635615889 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.843071734 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.290651588 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.935235141 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.289392 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.295620513 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.320178454 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.287043958 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.302298716 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.803659358 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.312001626 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.286335231 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.616447039 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.293861498 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.582090957 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.30214779 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.288309025 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.857874031 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.294922536 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.33679782 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.286745551 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.297236925 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.287031848 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.286955624 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.572878145 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.331021431 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.290832505 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.286583869 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.306126101 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.28616549 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.301285866 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.290000542 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.914318599 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.287558778 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.282734004 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.300036703 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.278554588 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.280063656 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.279755598 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.279342757 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.562174288 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.277914829 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.298063223 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.280277491 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.278438157 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.279883241 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.359937913 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.281491615 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.566447755 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.280505968 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.275548126 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.280271952 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.276923146 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.305497695 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.277921112 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.297084051 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.250710705 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.580018298 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.293394197 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.294059182 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.276435453 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.288273569 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.275947862 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.280032593 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.340519941 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.27810279 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.061604257 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.316198674 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.276576684 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.277076322 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.28883549 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.278670836 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.27990408 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.279795659 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.577036138 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.558870787 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.49774284 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.282658018 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.278587608 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.07814232 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.315931048 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.460969903 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.296853637 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.27814496 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.559487892 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.537923536 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.280412675 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.280141393 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.283911059 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.559156424 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.279240711 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.600852289 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.869827516 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.280589927 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.278340729 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.059138478 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.088400287 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.284698238 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.283401439 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.571401066 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.295515688 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.27957776 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.280431906 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.282369962 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.281194809 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.28420118 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.280896844 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.280417131 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.2789942 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.62345345 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.475899133 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.296133029 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.282433745 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.796058496 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.311271315 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.282208382 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.283138064 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.283677747 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.281310601 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.332194954 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.285385293 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.318589163 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.285740768 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.283651566 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.821308688 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.281176119 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.282241123 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.476373252 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.009828721 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.282249987 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.282417017 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.281131565 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.346075176 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.828162587 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.307623615 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.571296363 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.289577619 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.32117704 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.281165421 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.298343585 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.828280773 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.294999272 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.282357383 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.006885083 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.283538583 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.734494899 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.283778551 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.285323688 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.918610721 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.283384246 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.283814085 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.287826702 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.282834881 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.604110297 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.283844098 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.319979782 seconds)
  done (took 487.226136864 seconds)
done (took 633.090261338 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.281582272 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.284070618 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.290104591 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.287540376 seconds)
  done (took 10.322768791 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.301353142 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.289868292 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.297906148 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.289944904 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.299344352 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.289440336 seconds)
  done (took 8.948140667 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.285019811 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.284157687 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.289820427 seconds)
  done (took 8.038762336 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.483906923 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.302712866 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.629217752 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.292388294 seconds)
  done (took 8.888479751 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.299776323 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.299905282 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.299662341 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.300423486 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.301640673 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.30187988 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.301656699 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.300910419 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.302291309 seconds)
  done (took 12.88669482 seconds)
done (took 50.263993487 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.454298774 seconds)
    (2/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.357505347 seconds)
    (3/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 1.768764038 seconds)
    (4/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.268575444 seconds)
    (5/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.460614963 seconds)
    (6/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.449803231 seconds)
    (7/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.45109824 seconds)
    (8/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.400058708 seconds)
    (9/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.354765756 seconds)
    (10/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.265572399 seconds)
    (11/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.502759337 seconds)
    (12/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.330762053 seconds)
    (13/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.429319888 seconds)
    (14/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.525941461 seconds)
    (15/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.328433939 seconds)
    (16/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.575643491 seconds)
    (17/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.571633389 seconds)
    (18/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.361101325 seconds)
    (19/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.382914948 seconds)
    (20/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.29741977 seconds)
    (21/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.562928934 seconds)
    (22/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.272970649 seconds)
    (23/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.265606386 seconds)
    (24/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.32089335 seconds)
    (25/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.368101599 seconds)
    (26/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.279971005 seconds)
    (27/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.322904645 seconds)
    (28/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.597601353 seconds)
    (29/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.371024222 seconds)
    (30/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.406885407 seconds)
    (31/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.268922674 seconds)
    (32/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.32390014 seconds)
    (33/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.41026625 seconds)
    (34/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.266886069 seconds)
    (35/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.327566864 seconds)
    (36/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.508156743 seconds)
    (37/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.406790047 seconds)
    (38/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.270110188 seconds)
    (39/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.643549066 seconds)
    (40/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.56883947 seconds)
    (41/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.375537212 seconds)
    (42/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.58421151 seconds)
    (43/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.442435711 seconds)
    (44/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.495028809 seconds)
    (45/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.278596885 seconds)
    (46/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.417005572 seconds)
    (47/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.360870991 seconds)
    (48/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.367657622 seconds)
    (49/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.49510866 seconds)
    (50/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.402936873 seconds)
    (51/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.500558355 seconds)
    (52/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.422157225 seconds)
    (53/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.272463904 seconds)
    (54/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.369819902 seconds)
    (55/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.531442971 seconds)
    (56/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.454761509 seconds)
    (57/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.48098819 seconds)
    (58/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.268507771 seconds)
    (59/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.334278298 seconds)
    (60/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.275984441 seconds)
    (61/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.331279527 seconds)
    (62/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.465579661 seconds)
    (63/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.386960031 seconds)
    (64/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.388554119 seconds)
    (65/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.335879765 seconds)
    (66/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.332763373 seconds)
    (67/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.498538872 seconds)
    (68/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.386061848 seconds)
    (69/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.320326879 seconds)
    (70/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.394850455 seconds)
    (71/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.441068608 seconds)
    (72/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.2692135 seconds)
    (73/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.409504756 seconds)
    (74/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.423417364 seconds)
    (75/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.411824396 seconds)
    (76/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.447938772 seconds)
    (77/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.376137225 seconds)
    (78/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.364346916 seconds)
    (79/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.295177383 seconds)
    (80/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.397547185 seconds)
    (81/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.270103629 seconds)
    (82/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.367698927 seconds)
    (83/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.44970231 seconds)
    (84/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.473309631 seconds)
    (85/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.449664908 seconds)
    (86/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.441185601 seconds)
    (87/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.326353054 seconds)
    (88/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.639861134 seconds)
    (89/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.405789193 seconds)
    (90/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.375532805 seconds)
    (91/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.270288814 seconds)
    (92/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.459291662 seconds)
    (93/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.406588438 seconds)
    (94/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.283379245 seconds)
    (95/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.380452604 seconds)
    (96/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.327456853 seconds)
    (97/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.407251693 seconds)
    (98/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.272225777 seconds)
    (99/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.451404684 seconds)
    (100/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.401586404 seconds)
    (101/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.332742198 seconds)
    (102/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.408133199 seconds)
    (103/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.272550344 seconds)
    (104/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.441841843 seconds)
    (105/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.330089847 seconds)
    (106/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.322238925 seconds)
    (107/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.294301545 seconds)
    (108/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.500591477 seconds)
    (109/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.404544181 seconds)
    (110/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.281289767 seconds)
    (111/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.374502024 seconds)
    (112/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.292999399 seconds)
    (113/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.401279687 seconds)
    (114/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.282196361 seconds)
    (115/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.445975761 seconds)
    (116/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.300895326 seconds)
    (117/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.384814839 seconds)
    (118/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.360808109 seconds)
    (119/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.443998612 seconds)
    (120/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.473534788 seconds)
    (121/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.289964371 seconds)
    (122/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.380002476 seconds)
    (123/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.463930479 seconds)
    (124/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.53507606 seconds)
    (125/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.44563833 seconds)
    (126/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.50336191 seconds)
    (127/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.342321606 seconds)
    (128/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.532996443 seconds)
    (129/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.386965508 seconds)
    (130/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.547758457 seconds)
    (131/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.331231516 seconds)
    (132/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.403788319 seconds)
    (133/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.276788341 seconds)
    (134/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.322914117 seconds)
    (135/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.474678889 seconds)
    (136/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.54236267 seconds)
    (137/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.300753171 seconds)
    (138/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.405498347 seconds)
    (139/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.283573982 seconds)
    (140/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.288074246 seconds)
    (141/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.612757796 seconds)
    (142/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.433652078 seconds)
    (143/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.387696451 seconds)
    (144/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.539392103 seconds)
    (145/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.28981511 seconds)
    (146/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.273900433 seconds)
    (147/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.64784547 seconds)
    (148/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.362506196 seconds)
    (149/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.533587747 seconds)
    (150/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.29654888 seconds)
    (151/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.457615679 seconds)
    (152/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.354992664 seconds)
    (153/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.275237988 seconds)
    (154/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.490793101 seconds)
    (155/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.640732974 seconds)
    (156/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.372902173 seconds)
    (157/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.364564377 seconds)
    (158/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.405659418 seconds)
    (159/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.441826991 seconds)
    (160/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.275508092 seconds)
    (161/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.288159889 seconds)
    (162/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.281740706 seconds)
    (163/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.361688339 seconds)
    (164/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.528998952 seconds)
    (165/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.404905947 seconds)
    (166/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.369686168 seconds)
    (167/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.334240337 seconds)
    (168/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.577744046 seconds)
    (169/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.410430361 seconds)
    (170/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.296347007 seconds)
    (171/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.6493909 seconds)
    (172/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.399811976 seconds)
    (173/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.276563827 seconds)
    (174/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.308712149 seconds)
    (175/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.382876815 seconds)
    (176/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.335767169 seconds)
    (177/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.282503014 seconds)
    (178/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.513764365 seconds)
    (179/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.278839037 seconds)
    (180/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.573227555 seconds)
    (181/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.501053376 seconds)
    (182/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.392382033 seconds)
    (183/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.394078644 seconds)
    (184/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.698448336 seconds)
    (185/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.390370673 seconds)
    (186/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.577458215 seconds)
    (187/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.315111203 seconds)
    (188/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.330525603 seconds)
    (189/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.311500303 seconds)
    (190/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.290513717 seconds)
    (191/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.277661052 seconds)
    (192/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 1.786187115 seconds)
  done (took 318.144670867 seconds)
done (took 319.325543455 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.327178814 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.403648376 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.306596821 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.306717829 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.307762912 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.299158675 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.327890847 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.307766628 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.321887053 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.321769949 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.310426446 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.320120252 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.323711375 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.319122566 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.340667069 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.308304437 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.306849735 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.317780658 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.322969058 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.324779906 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.309521993 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.310640371 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.334453316 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.30855261 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.315790397 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.31485305 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.314932557 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.299576357 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.316452419 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.325570949 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.300216746 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.314744389 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.325346385 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.319431487 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.309430476 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.319265658 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.31049101 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.406539726 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.330669617 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.319828606 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.318868206 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.326646034 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.315274079 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.31346374 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.3216487 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.336975949 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.317235897 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.324864303 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.301178242 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.309390411 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.331095256 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.320855789 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.319004089 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.294603501 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.30990904 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.325893312 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.319827204 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.329640821 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.31697366 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.311273143 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.345017285 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.330412338 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.321596907 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.319724996 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.319091558 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.327690918 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.322393906 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.327785109 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.319563284 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.314122208 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.314148817 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.320928801 seconds)
done (took 104.273185567 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.43374266 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.307800989 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.46988641 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.319504925 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.477091215 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.433671771 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.319664818 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.320924898 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.320843826 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.109629595 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.318329285 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.319869111 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.31100463 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.321043736 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.431881094 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.320828865 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.319309432 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.007703974 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.320347204 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.452728218 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.311943969 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.320469586 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.32220048 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.120447832 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.309620608 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.303974037 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.453256043 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.321559514 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.021355487 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.305310291 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.308600132 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.020663323 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.454262366 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.341178796 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.331058045 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.32982526 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.479219248 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.325151188 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.437510071 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.436559951 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.47102725 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.359859251 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.30598419 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.31322939 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.323368584 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.322219042 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.32172185 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.350288964 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.312456708 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.322364944 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.013730945 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.332040524 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.333269722 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.323286146 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.321845675 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.341999204 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.323280754 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.323121808 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.456237373 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.324842452 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.438109684 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.126975276 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.11360803 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.323235091 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.31147566 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.326237705 seconds)
  done (took 107.224542362 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.384946133 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.390772514 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.424360305 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.315287781 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.365705566 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.426750908 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.319427063 seconds)
  done (took 10.827594558 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.320800532 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.322975138 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.3644187 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.36427899 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.324868212 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.488637585 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.324316345 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.327760372 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.324236863 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.367407876 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.325154107 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.324311684 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.333894536 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.313461142 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.363165252 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.326191433 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.432851924 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.316986887 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.325171016 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.468621769 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.324275858 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.333614792 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.366747227 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.329120177 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.326062807 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.323960938 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.100245498 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.326015212 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.324656293 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.326394673 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.324533579 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.381678343 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.324845664 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.317582609 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.327090108 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.433639912 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.325618158 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.325335391 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.326718503 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.319693054 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.326195967 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.326420155 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.326376392 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.32732266 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.32628558 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.3419713 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.327269739 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.326255011 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.326086426 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.32730263 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.367425769 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.32749664 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.327347563 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.325975985 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.37368216 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.336996023 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.327444761 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.32772805 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.326558331 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.327677891 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.472287461 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.365121478 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.32732715 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.364585393 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.328670034 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.328313199 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.327694494 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.327112001 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.408289804 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.327959389 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.366701742 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.326287391 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.502128724 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.343909424 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.329363276 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.322537459 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.321299374 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.327564333 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.317584837 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.325803522 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.32788132 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.320743711 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.326100182 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.328835975 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.328883955 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.480319105 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.430832161 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.328545677 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.33526418 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.327058116 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.328869305 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.368760332 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.329382534 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.3287609 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.37043361 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.44021076 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.371844482 seconds)
  done (took 136.533658387 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.333909097 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.332871962 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.324286265 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.347313656 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.322043639 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.320833005 seconds)
  done (took 9.187617185 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.323236236 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.333989485 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.330111493 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.329347356 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.330450057 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.331202349 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.331510118 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.322920067 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.33391781 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.331974124 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.332462281 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.330931657 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.33312073 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.332512454 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.332022712 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.330756492 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.332078782 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.331707506 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.332881211 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.33323282 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.319506986 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.332619792 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.332918919 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.324323263 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.337300411 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.333151643 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.347344804 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.332803585 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.330781329 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.328925052 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.333680488 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.333577683 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.325295816 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.329032966 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.336667347 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.325544567 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.337405662 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.334179342 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.332858386 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.334533013 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.33394391 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.334204919 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.334419756 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.335126583 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.325697555 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.329841335 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.337191148 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.348123322 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.333227906 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.335141463 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.335042675 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.333763962 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.336050145 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.334662952 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.32660835 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.328419586 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.337517665 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.33469298 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.335234273 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.328220025 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.336666793 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.335876647 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.327255572 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.337106222 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.334273171 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.335312767 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.327594759 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.338698599 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.334004979 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.335093903 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.335929027 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.33387718 seconds)
  done (took 98.162095849 seconds)
done (took 363.13110139 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.761360329 seconds)
  done (took 3.973121334 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.587946149 seconds)
  done (took 3.799647873 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.841883879 seconds)
  done (took 22.306785108 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.326099865 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.330843634 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.321824523 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.324252508 seconds)
  done (took 10.515262371 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.575986413 seconds)
  done (took 3.78774998 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.332248362 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.332886871 seconds)
  done (took 5.881153447 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.497064698 seconds)
  done (took 3.710519154 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.523419432 seconds)
  done (took 3.73734638 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.340318696 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.340012195 seconds)
  done (took 5.901321924 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.303058092 seconds)
  done (took 3.515432376 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.278319628 seconds)
  done (took 20.492935331 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.351438661 seconds)
  done (took 3.567418392 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.353414303 seconds)
  done (took 3.567283719 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.751295416 seconds)
  done (took 5.965140205 seconds)
done (took 101.932503254 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.32337451 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.330789836 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.330386228 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.329468739 seconds)
  done (took 10.529074402 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.403166723 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.402325729 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.412423747 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.397925016 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.397996854 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.406086974 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.366128756 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.365056269 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.395834887 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.391633554 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.407564442 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.397862138 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.407141609 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.36519756 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.392422184 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.408674964 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.395860149 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.412943359 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.36720708 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.399040014 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.3411908 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.398354345 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.393527294 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.340246753 seconds)
  done (took 34.579686631 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.850958197 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.403433269 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.485556668 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.385279449 seconds)
  done (took 7.340450267 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.446649951 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.446221439 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.463009597 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.501108264 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.548133103 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.458561113 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.369775304 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.362935742 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.349787922 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.44709151 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.527062781 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.445232679 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.660366247 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.342208464 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.659398658 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.342045914 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.341273456 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.445414302 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.495874312 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.523890276 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.343027335 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.44497916 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.449379726 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.445344025 seconds)
  done (took 36.076721223 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.350618429 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.358595292 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.342552748 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.358925385 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.344244463 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.343768754 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.345580194 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.351215505 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.344149387 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.34381462 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.344717268 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.358080746 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.34428574 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.344418922 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.350452753 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.346731637 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.345215829 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.35168336 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.35233996 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.344039514 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.343081395 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.349778191 seconds)
  done (took 30.875132684 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.328549356 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.327356808 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.680255464 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.584813215 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.33053585 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.334842876 seconds)
  done (took 13.805370623 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.401316416 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.533975901 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.33621946 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.668765104 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.751264666 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.338149423 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.336698641 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.570301918 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.852313656 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.855650793 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.390880121 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.40608496 seconds)
  done (took 19.661557334 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.332097461 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.33415727 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.337461533 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.351319504 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.388738546 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.34086863 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.343112362 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.330126801 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.394974533 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.393430263 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.340649462 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.391575561 seconds)
  done (took 21.498649929 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.422248737 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.340776691 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.341243694 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397614123 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344235677 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.341288479 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.409635473 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.019575527 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.345525674 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.615764185 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340167263 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.423137394 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.588842752 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350281165 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.344612483 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.284607255 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.57375976 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.809430514 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343643821 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.344669427 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375153601 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.342378309 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.364641424 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.541167717 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.34435332 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.343919022 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.605131264 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.343186668 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.613927248 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.590934352 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.591053644 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.348951036 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.620001278 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.97080455 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.448449984 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.538468937 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352178623 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.350521055 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.325979907 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.361613414 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.345703385 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.345166394 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.587589262 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346567434 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.344955463 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.352205498 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.038130871 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.35374123 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.345923275 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.346748339 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.591075836 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.429157392 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.350487733 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.345184851 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.335730282 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348332483 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.35105526 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.46951111 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.983796637 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345060352 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363508362 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.35024444 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.340477774 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352500412 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.983044176 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.353936837 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.354184838 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.353346184 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346863893 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.357478897 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.369906149 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347111551 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.367470123 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347062246 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.08607906 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.358429081 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350404814 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.867556611 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35259287 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.353504199 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.573508123 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348941109 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345825709 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.347131172 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.348461153 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.064574821 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.355286502 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.317395173 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.386429313 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.026097494 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.543908996 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373060047 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378683433 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.571279797 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.31656786 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349415297 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.348289129 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351494767 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.370981406 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.032966186 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349604366 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.353980508 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.596868559 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.560115257 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359399406 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.298306684 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.805813335 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352276793 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.379387274 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.361574307 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.551876932 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.946972841 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.606285072 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357033129 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386710879 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.350201978 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.128705335 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352663053 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.3630399 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.356366224 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.623934161 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.165138937 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.351748316 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.422702964 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.352740352 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.351887518 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.359600494 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35197443 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.351107277 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.525352734 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.370482034 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.601059295 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.357533899 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351995496 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.351507198 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379195715 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.35324481 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.573872442 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353935252 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.631873521 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352317423 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353218019 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.351796643 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.571342619 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.362535391 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.36458537 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.691968226 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361608397 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.363491882 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.600239213 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390985827 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.464626164 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384737753 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.357481638 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.606897226 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.358804206 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.359706651 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.361937758 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.354780935 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358281923 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.36151346 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355768187 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.954627736 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341255878 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.359991366 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.355105859 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.37204991 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.428993657 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.363489382 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.551417139 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.368897859 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360199945 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.367528724 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.355431684 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.581029726 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.599246946 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.361674719 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.531084457 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.806241774 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.950900231 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.376281181 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.355072102 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.355308563 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.354012261 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357413278 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355675401 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.35675443 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.553364325 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.613470154 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.358201918 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.965435811 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36450442 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.361705597 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.364324543 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.600892066 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.370548262 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357484853 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.357556784 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362442042 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.367725971 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.605561392 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.584021379 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.371598933 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.355627163 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.918895829 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.365343203 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.358991178 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.3570134 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.383419912 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.36195367 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.177870251 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.698712667 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.371793153 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.609175661 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.364516266 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.377293912 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.356997311 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357564223 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357976367 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.374762243 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387386479 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.556375676 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.363824113 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376089241 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.996312027 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.110775003 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.905749262 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.371202056 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.370434872 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.365262806 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.047767642 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359958091 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.360122709 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.601615436 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.046344722 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359424037 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.815330088 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.370468753 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.097950404 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.610579004 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.593433599 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.362624334 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.359410387 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.623461361 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.578186434 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386232158 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.358706604 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.3663711 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.3290851 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.889784188 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.368820707 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.540616857 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.047559412 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365055874 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.361673217 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.375903713 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.36518629 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.739983883 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.360407254 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360974919 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.364569693 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.37609036 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.184204629 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.366335536 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.360775495 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.993368032 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.375518615 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.824759784 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36079865 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.561313023 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.614651646 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.592023609 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.381965855 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.372884929 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.613452019 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.611190143 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369775776 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.366848775 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909301301 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.227221661 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.370944974 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364208787 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.139363655 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371728037 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.641698469 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.376542208 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.38014436 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373414215 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.363761749 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363580972 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.36300125 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.370517862 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341267908 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.835269966 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.376468839 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379066423 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.371041288 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370280372 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.612505076 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.381468619 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.964871803 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.59620537 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.361469317 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403127413 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.369419208 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370983361 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.336253505 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.366291846 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.36535704 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383510534 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.58635295 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.36446712 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.333832728 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.434158663 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.579278745 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.365025309 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.374793064 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.577329556 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.365991973 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.381828322 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.142712616 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403876909 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.375275613 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367274948 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.358279914 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.425433182 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.440199892 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.565961718 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.61934437 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.619265773 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.751372623 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377973027 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.368374092 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.383167522 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.44862499 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367185538 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.371262161 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.387313547 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.966890433 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.128605828 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.982725063 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.625563818 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.373855712 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366002432 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366140312 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.608981774 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.368047736 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.643481739 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366676173 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.36543088 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.3955412 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374582922 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369130041 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.5872377 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.642346709 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.36984153 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368481804 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375654049 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.369816511 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.62342115 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.587683284 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.846534739 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.893845052 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370912643 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.369961184 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.072722541 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.646143181 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369793981 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.371258687 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370880716 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.373455494 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.394678375 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.378937668 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368862588 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.59519432 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.618570266 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.03183504 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.618906906 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.559225116 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.297857395 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371510352 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.623265277 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.203768659 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.571048414 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.980642846 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.077061228 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.629564174 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.4456919 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.571623599 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.374730164 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.609742456 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.376862254 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.377285192 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.373185746 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371310803 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.371778728 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.619850569 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.980146099 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.632127761 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.378148211 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.375468117 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407886298 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.571357937 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.594881369 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.095627325 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.59201974 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.625300698 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.379961609 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.372967543 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.98601983 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.631757999 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375094287 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.379586546 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.580142737 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.375414153 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.408424363 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.24317225 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.373411205 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.900969689 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.586546754 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.3940849 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373498415 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.083262282 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.990822105 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.381045511 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.854642928 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.374354584 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376191513 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.655607011 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.382812699 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.375177051 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.660717808 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.379813699 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.379639663 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.581724031 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.979603874 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.128372629 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.379717747 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380871458 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.393108659 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374974741 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.455636152 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380818492 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.375151748 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.760910261 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.374955385 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375532281 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.390182879 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.385942265 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380002799 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.382400263 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376082192 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.385533982 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.347168755 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.358496424 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.388307574 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.505030198 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.913346305 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379390147 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.993035054 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.712590638 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.626220423 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.383124794 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.352463363 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.38362401 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379188508 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37724242 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377214273 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.370537244 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.915333587 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.390678709 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.634616135 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.386384811 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.588654735 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.589599664 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.378636728 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.582711061 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38952527 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.402314384 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.347567956 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377991451 seconds)
  done (took 973.706831131 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.379526207 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.38619507 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.395469533 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.440069556 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.385632231 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.38216561 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.387676308 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.445875146 seconds)
  done (took 20.457292834 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.371760847 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.377650782 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.371007659 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.378345662 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.379917437 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.849712319 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.381447384 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.379326414 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.392268552 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.374214268 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.388459085 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 1.991757891 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.379871628 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.371910139 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.376137915 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.386529003 seconds)
  done (took 32.404951281 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.084423479 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.391510174 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.910946097 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.403414724 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.402192197 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.374852404 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.513427168 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.382655754 seconds)
  done (took 25.719265717 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.385135702 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.384165483 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.385967288 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.384862082 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.386179388 seconds)
  done (took 8.182111924 seconds)
done (took 1236.052424403 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.388105477 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.387485621 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.387322625 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.386841948 seconds)
  done (took 6.805019877 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.351424102 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.351475546 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.352331806 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.366051159 seconds)
  done (took 9.677719237 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.053525185 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.89879887 seconds)
  done (took 5.208619479 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.910166154 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.913675187 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.903237998 seconds)
  done (took 6.984292177 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.670428782 seconds)
  done (took 2.927749273 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.350197243 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.376268609 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.08134127 seconds)
  done (took 8.064841757 seconds)
done (took 40.923773276 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.371908099 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.136172543 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.527789068 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.37170092 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.533830477 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.52620244 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.623184196 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.373095275 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.392912555 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.37374021 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.373048662 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.532379668 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.610307129 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.132786738 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.604327383 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.136468406 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.532984832 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.383199734 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.384246294 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.379737589 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.623391899 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.373643613 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.386480042 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.373089551 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.533985086 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.521639043 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.385614484 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.13709402 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.38289272 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.38595852 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.516965698 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.376088121 seconds)
  done (took 82.554834792 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.383000455 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.380261994 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.386599177 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.3745932 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.390268616 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.384604834 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.374884675 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.37521394 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.376017347 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.398318623 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.374433414 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.390628137 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.375684469 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.376243185 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.391347748 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.389838649 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.382641995 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.377000366 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.375993122 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.391675698 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.380560012 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.382881002 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.383244618 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.381147617 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.375363525 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.378270487 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.390492859 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.37615778 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.374734579 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.376365306 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.379070359 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.391428038 seconds)
  done (took 77.478939895 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.377291835 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.377630943 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.386397614 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.385295154 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.377732891 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.392324358 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.379828319 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.378524999 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.37901765 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.381319023 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.37696295 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.377954974 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.378673396 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.392193533 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.378143927 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.377917009 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.376590204 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.382302216 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.377047747 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.377673503 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.393691533 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.388564888 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.37748006 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.377304766 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.397237081 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.378214688 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.378209126 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.377041274 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.376879042 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.37957901 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.383856637 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.379350693 seconds)
  done (took 77.459073164 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.62029997 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.393254936 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.396963009 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.38891626 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.397700485 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.393193997 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.388192128 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.62572199 seconds)
  done (took 14.867193074 seconds)
done (took 253.617379171 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.388104277 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.873214502 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.421147737 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.390845444 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.4099978 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.416669144 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.59165154 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.416142332 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.577400039 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.391116629 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.404805249 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.399709314 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.167785311 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.529838118 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.183974424 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.310521215 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.249197797 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.386729499 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.93701837 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.611728897 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.416491506 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.391588375 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.194885397 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.260407422 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.360635227 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.454555002 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.450351908 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.541106865 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.503413593 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.448839872 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.864464861 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.400853629 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.399284904 seconds)
  done (took 64.009247207 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.386461288 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.396333125 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.397623557 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.39817059 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.398137515 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.398409235 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.38775144 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.398516581 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.397721676 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.399461811 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.398514694 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.398586977 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.398734056 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.397819769 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.397833582 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.370152792 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.387641287 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.399006006 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.388955887 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.371408649 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.398879378 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.398815885 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.397532402 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.398931662 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.399180997 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.399311912 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.399627482 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.3997572 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.399317805 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.400008397 seconds)
  done (took 43.123964579 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.399332634 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.953056838 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.110522854 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.403082664 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.392543259 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.394395628 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.672918152 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.400869299 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.394425986 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.39583025 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.860638034 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.407451517 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.425238142 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.117873174 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.398706691 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.401009338 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.401493571 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.391460503 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.965458702 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.407654722 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.670995926 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.404401469 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.670326108 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.405469237 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.395574401 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.39286269 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.397655138 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.203489825 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.410117095 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.864441529 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.141849564 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.672121195 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.119405783 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.165899928 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.142253646 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.409756704 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.400843264 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.868627571 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.400246337 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.393545707 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.670621381 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.398760363 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.119619973 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.073963726 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.410593203 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.403537568 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.241012422 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.869600934 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.634083324 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.404911688 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.156890183 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.401763447 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.405636377 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.395451538 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.628567653 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.401792768 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.394652869 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.222571774 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.398045946 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.672497019 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.408783851 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.396201408 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.962673899 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.40149521 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.959784867 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.40270487 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.405380523 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.397323503 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.126170667 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.403963752 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.083547754 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.412778061 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.404227795 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.866915944 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.968138445 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.287565531 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.397696191 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.967791506 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.14715598 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.688587814 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.402767403 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.183563136 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.691528254 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.39967762 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.408701009 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.409557381 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.405672982 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.469604197 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.672551648 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.005640395 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.080613657 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.244683802 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.683623961 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.403582359 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.398443572 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.226875978 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.406182391 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.406523025 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.122399706 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.097616643 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.414177386 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.405962294 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.074360189 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.415810308 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.677636937 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.401827291 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.167385373 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.404528092 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.469621515 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.407079521 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.404269194 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.401443429 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.678575689 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.406999154 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.407767434 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.069701647 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.894897912 seconds)
  done (took 194.709658931 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.393709396 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.394963644 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.394868979 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.392752937 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.393123287 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.401170058 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.392111802 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.39442937 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.398936081 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.392911185 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.393436948 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.403090284 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.400662446 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.391878092 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.392745981 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.413742301 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.393511981 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.397302017 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.412468204 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.392858757 seconds)
  done (took 45.215159779 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.40790838 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.941496092 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.914814048 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.410550886 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.410264995 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.401575933 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.455001497 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.410902505 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.409829163 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.68922461 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.566434513 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.417150714 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.410679446 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.410615163 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.916138643 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.387523183 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.690164089 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.945000797 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.410872578 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.944337519 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.384145994 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.411203749 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.400959276 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.94112367 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.701513567 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.678056851 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.458089108 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.943622237 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.411206885 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.411548876 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.945180259 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.41313129 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.402810253 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.93061838 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.412379957 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.424634145 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.41062716 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.458746075 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.459616804 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.694146087 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.950537642 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.690164149 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.42349962 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.567091852 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.419152176 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.383731111 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.95533653 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.413931381 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.38604315 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.414905811 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.418878563 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.932642354 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.404980835 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.932531187 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.413186364 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.414591923 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.948420796 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.930726752 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.924641551 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.574877843 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.404338139 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.681528422 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.414992068 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.957929601 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.413424373 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.413763037 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.413337203 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.573939837 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.952971327 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.687097193 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.70007299 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.695267232 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.417937722 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.471374595 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.414057925 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.695605082 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.469715352 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.799576023 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.700988308 seconds)
  done (took 126.899307946 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.6655099 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.517534661 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.772467867 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.980046718 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.895732412 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.541124831 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.517422987 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.648734743 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.420973879 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.519735003 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.032326335 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.49807177 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.16800221 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.474831441 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.515080342 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.528851818 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.79216135 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.342744258 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.022468316 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.013917985 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.428579912 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.508548337 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.929778116 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.602481256 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.406890748 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.94286685 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.326716534 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.915297773 seconds)
  done (took 53.208438361 seconds)
done (took 528.428482971 seconds)
SAVING RESULT...
DONE!
