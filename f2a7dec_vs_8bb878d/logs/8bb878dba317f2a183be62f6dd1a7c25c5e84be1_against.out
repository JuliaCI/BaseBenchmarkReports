cset: moving following pidspec: 31579
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 2.120054784 seconds)
loading group "string"... done (took 0.525520146 seconds)
loading group "linalg"... done (took 8.505751488 seconds)
loading group "parallel"... done (took 0.174296433 seconds)
loading group "find"... done (took 5.528610722 seconds)
loading group "tuple"... done (took 1.901570832 seconds)
loading group "dates"... done (took 1.335704105 seconds)
loading group "micro"... done (took 0.191701097 seconds)
loading group "io"... done (took 0.501983356 seconds)
loading group "scalar"... done (took 51.553036678 seconds)
loading group "sparse"... done (took 13.613584873 seconds)
loading group "broadcast"... done (took 1.26183417 seconds)
loading group "union"... done (took 9.399221129 seconds)
loading group "simd"... done (took 3.077570056 seconds)
loading group "random"... done (took 11.43072893 seconds)
loading group "problem"... done (took 2.268022028 seconds)
loading group "array"... done (took 24.437573778 seconds)
loading group "misc"... done (took 1.127203508 seconds)
loading group "sort"... done (took 3.736204453 seconds)
loading group "collection"... done (took 19.33193639 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.69804637 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.148322583 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.197494708 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.206693476 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.283619017 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.168454243 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.160317014 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.171308778 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.694482408 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.211361684 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.138778773 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.438317395 seconds)
done (took 6.337588226 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.268756908 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.240718256 seconds)
    (2/2) benchmarking "String"...
    done (took 0.190929678 seconds)
  done (took 1.197327931 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.078118295 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.158636759 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.109465968 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.095983287 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.095148726 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.111540282 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094988668 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.110023352 seconds)
  done (took 1.54697945 seconds)
done (took 3.854654872 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.534742639 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.908055433 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.533602342 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.181552386 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.316439578 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.308290411 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.265683494 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.220277021 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.092080411 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.085912331 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.195512333 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.433894994 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.392788795 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.978155229 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.068695522 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.09347138 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.155822568 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.783216856 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.079994763 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.108970501 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.53098567 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.212642852 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.11560639 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.106834193 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.185546233 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.135206344 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.143619095 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.108430352 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.679606426 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.135583705 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.216114791 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.084768665 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.142484921 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.165586013 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.213113538 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.111549726 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.688113325 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.201629173 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.097331869 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.103108956 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.692513845 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.123224132 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.205968203 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.107146923 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.067471823 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.164427161 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.122134634 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.081613673 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.094322572 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.102999842 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.159917171 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.480706181 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.111373753 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.196033393 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.094750387 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.70719595 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.098878787 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.276275464 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.125998975 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.094637144 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.092861345 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.088284011 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.166416264 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.095024697 seconds)
  done (took 20.470816771 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.169164658 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.18683732 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.078594104 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.158201511 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.121642661 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.099311426 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.08557609 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.079399383 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.127148492 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.178733561 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.139453687 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.193166033 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.077766719 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.090600894 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.17063614 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.232332591 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.130114016 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.105445701 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.090370721 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.108879645 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.122934932 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.113690011 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.092772085 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.091985672 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.173658327 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.20746581 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111798302 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.123795978 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.091077396 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.095952215 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144011032 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.14488647 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.09355011 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.089597524 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.188639336 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.108701991 seconds)
  done (took 5.407878628 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.245050032 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.107598755 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.250929435 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.199886848 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.153480154 seconds)
    (6/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.204627895 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.184952117 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.178995858 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.299241764 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.248062279 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.164131512 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129941861 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.097873022 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080660941 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.081034876 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.098654792 seconds)
    (17/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.084150361 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.344512817 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.192812492 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.150838534 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.189546063 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11398628 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.083600506 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084595219 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.103882604 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095985761 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.120308161 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.362950556 seconds)
    (29/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.086915187 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.227101529 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.113660734 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.038823527 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.107107988 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101042352 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134033668 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.200031018 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.126157193 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.139173837 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096790685 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.104820884 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.204959822 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.122089122 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.079215318 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.136115285 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11868841 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.132276609 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.109840453 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.112171532 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.22128635 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.088847463 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.131654501 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.030912335 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.199252072 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.162374751 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.084895666 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.289697431 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.128765007 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102929188 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.111772615 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.785432558 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.131527833 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.082239542 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.079363394 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.114622362 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.080237581 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.481634861 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.129307375 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.257754757 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.087016362 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.158315556 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099474764 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.121731066 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.089803914 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102053828 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.112982718 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.086578642 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.097657441 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.089254558 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.080635813 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.108455835 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.114253312 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102471123 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.081946084 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.14928773 seconds)
    (85/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.100560087 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.097433068 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.10801947 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128827873 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.091225241 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.105009238 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113472592 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099838569 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.089925815 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.188745458 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.097831902 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.131824418 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115645094 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.129963555 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.104571055 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.252219314 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.085516398 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.123844563 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.102728119 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128675009 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.10266082 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080946358 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101483982 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.080763467 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.082272748 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.162404928 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.089091429 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.080987526 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.106295718 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.095224754 seconds)
  done (took 28.806873533 seconds)
done (took 55.451893828 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.42551012 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.082377177 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.081171429 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.101605865 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.081805662 seconds)
  done (took 1.620580918 seconds)
done (took 2.440671558 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.310401553 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.199549457 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.105702251 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.191169117 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.087603774 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.196989672 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.182771865 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.101512708 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.206515089 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.08518296 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.191577026 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.088119655 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.105644307 seconds)
  done (took 2.899057745 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.103643084 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.106687492 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.102465997 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.12136427 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086862238 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.1023239 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.120031682 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108776773 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.102883461 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.112899851 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.08721927 seconds)
  done (took 1.977306356 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.100702737 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.106339616 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.092711947 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.117682149 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086395981 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098751342 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.11825596 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108680761 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.099749815 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.113770792 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087515058 seconds)
  done (took 1.951832 seconds)
done (took 7.64805396 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.20835144 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.989007918 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.169418426 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.248260203 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.378436183 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.279415642 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.630327998 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.181380417 seconds)
  done (took 16.035595796 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.202983819 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.113833427 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.091366156 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.095029442 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.116890545 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.092243851 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.097401121 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.11446416 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.097025884 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.096665301 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.113535849 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.094639563 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.097063669 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.090730576 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.109890839 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.091534108 seconds)
  done (took 2.598480786 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.144884447 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.141456968 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.099852101 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.099017479 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.113961237 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.100858446 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.102972369 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.11733121 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.094984137 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.095743911 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.118985022 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.100158436 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.098155158 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.111105915 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.099721324 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.118119466 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.111902444 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.099958302 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.11722784 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.116880668 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.100052437 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.096513603 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.115966243 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.099658126 seconds)
  done (took 3.525700659 seconds)
done (took 22.98127582 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.149056456 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.104281872 seconds)
  done (took 1.076050526 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.167146799 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.187248693 seconds)
  done (took 1.186860895 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.112245803 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.09185285 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.13721635 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.103690872 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.091158713 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.109639757 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.11683994 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.108341438 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.091826879 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.092161794 seconds)
  done (took 1.893106631 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.095093446 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.095696708 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.122520969 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.171453835 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.119096937 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.095028262 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.095832721 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.113191865 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.097435065 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.090848973 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.115911985 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.22875514 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.095665433 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.128326633 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.095190176 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.113042335 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.100518675 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.095272834 seconds)
  done (took 2.90332437 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.091330619 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.092936526 seconds)
  done (took 1.021504914 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.095538676 seconds)
    (2/7) benchmarking "second"...
    done (took 0.091174293 seconds)
    (3/7) benchmarking "month"...
    done (took 0.092683442 seconds)
    (4/7) benchmarking "year"...
    done (took 0.110844116 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.091247838 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.09086947 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.110938509 seconds)
  done (took 1.516454321 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.524040641 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.241426895 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.367755742 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072445912 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.122445427 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.331167611 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.104727173 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071675268 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.092195976 seconds)
  done (took 2.797140451 seconds)
done (took 13.227556919 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.093956829 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.244476997 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.632904684 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.114033376 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.090452903 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.164217505 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.319246575 seconds)
done (took 2.499378332 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.348794487 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.166519406 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.084263521 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.093099383 seconds)
  done (took 1.527338664 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.083670759 seconds)
    (2/2) benchmarking "read"...
    done (took 0.09910912 seconds)
  done (took 1.032869219 seconds)
done (took 3.405609947 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090840991 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.090423682 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.138886137 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.090606524 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.089829124 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.089105196 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.109431256 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.091405452 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.089772598 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.108656755 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.090148653 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.089570032 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.089278865 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110329542 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090565083 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088960679 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10679391 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.090284277 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089555321 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088354304 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.106631315 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.089612072 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.08889216 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.105826823 seconds)
  done (took 3.191789723 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.111716655 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.091381796 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.111973393 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.094589929 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.093429554 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.112399905 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.095398817 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.091570611 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.112738576 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.092657903 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093921823 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.110699532 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.091812453 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.095111619 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.109684034 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.095054868 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.094297266 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090518855 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109438038 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.0947481 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.093745344 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109566317 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.09406401 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093027183 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.112804309 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094564359 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.091998853 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.109870103 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.095005166 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.09268525 seconds)
  done (took 3.824957751 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.09920691 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.08693729 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.090118727 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.116131327 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.088490448 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.090425397 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.105362528 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.090824638 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.090900753 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.0892947 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.110632053 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.090421147 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.089664928 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.108677619 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.092010297 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.092477295 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.116047776 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.092118061 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.091558099 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.090668862 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.111590047 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.090708178 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.089246311 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.109361708 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.090338437 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.087323454 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.090349054 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.108906095 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.090954918 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.088557422 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.112003166 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.094773761 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.09014838 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.118392058 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.094799015 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.090476471 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.113472485 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.089000015 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.091743899 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.087153328 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.107148158 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.090596983 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.089881553 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.114074919 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.091708814 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.091077487 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.088807387 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.110018836 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.092214286 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.092978936 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.106866805 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.090614708 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.093803853 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.109593984 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.094679226 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.087513495 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.089837243 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.105561703 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.092371765 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.089444886 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.104573976 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.088491541 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.094982137 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.090748987 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.12411305 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.096166162 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.088824776 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.111252277 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.091739547 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.09559611 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.110947934 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.102035216 seconds)
  done (took 7.843131462 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.115111566 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.099534115 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.110061438 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.092768174 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092203739 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.089779106 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.11518157 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091172198 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091723697 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.115688561 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091984637 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.092261298 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109963659 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.092152198 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091557211 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.112985874 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.097297143 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090861805 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.107902558 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.093176725 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092175646 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.09526981 seconds)
  done (took 3.037701129 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.238186933 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098993493 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.139290872 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.12354827 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108477634 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.123736825 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.096406891 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.096734426 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114757568 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10099888 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099570748 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115919705 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109592256 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.117353463 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100865035 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.101110105 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114006023 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.101824063 seconds)
  done (took 2.958467051 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.105199179 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.095047493 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.155238627 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.093478608 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.092535555 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.112422388 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099159423 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.112467104 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.111525202 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.093310901 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.098844921 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111041632 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.094089608 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092930804 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110425173 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.093896723 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.093269051 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110591582 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101104438 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097849675 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.116105356 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.099947088 seconds)
  done (took 3.148389564 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.10621111 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.093737428 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.128463454 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.09727401 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.093326877 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.110783018 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.100534593 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.093249927 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.119946087 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.093296834 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092386172 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.091446833 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.126259078 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.092765754 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.097804094 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.111907794 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.094513581 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.093288402 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.11164498 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.093000518 seconds)
  done (took 2.90043341 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.196494136 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12825623 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.110208568 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11593239 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.128247528 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.109696357 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.135145684 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.108692843 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107868286 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.137000807 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.11103796 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108597146 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.135674623 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113730738 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.127178138 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117829588 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.135685299 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.117673235 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109026237 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.127163963 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.120477176 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.10701924 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.135751909 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.109061518 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.127181707 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109874471 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108388242 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.13238313 seconds)
  done (took 4.290024198 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092177353 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.092808849 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.090931023 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.110326293 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.091963279 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.090055291 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.109345838 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.092505376 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.093013159 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.090287568 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.111074308 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.093282449 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.091619149 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.110032761 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.093797581 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.091257961 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091259984 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.109482751 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092286807 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09136678 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.109285996 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092820515 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.092266106 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.090146766 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110042053 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.0920506 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091659077 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.090023098 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111104268 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.09228711 seconds)
  done (took 3.760219032 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.105876571 seconds)
    (2/2) benchmarking "in"...
    done (took 0.102028326 seconds)
  done (took 1.06707196 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.09990512 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105551656 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.091210458 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.111615029 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.099047538 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.092388586 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.119762569 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09805855 seconds)
  done (took 1.6814219 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.169545005 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.193358631 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.096122828 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.124729813 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.172551337 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.182628546 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.150643531 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.098328418 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.090613646 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.084061231 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.185198012 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.083344024 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.113857985 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.089498783 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.09130424 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.119524037 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.093574744 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.099650514 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.118294472 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.094820958 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.096382045 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116623097 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.094752706 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.102599262 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.106553617 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.095663472 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.095702832 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.122719479 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089825152 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.093737712 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.111005911 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.094531935 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.094430132 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.115750451 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.094251298 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.192039969 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.10044046 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088540039 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.113895694 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.097929686 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.12376431 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.114192111 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.095018141 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.091608296 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.114272819 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.097600028 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.096939102 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.112835366 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.086679262 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.088396084 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.112115404 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.089299813 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.092178375 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.111675522 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.094106291 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098161402 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.113710936 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.090578745 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.088885513 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.107270976 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.092831168 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.089151346 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.112539087 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.096723135 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.095007177 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.111236733 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093073982 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.092884724 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.094136881 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.112971463 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.092010854 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107259293 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.113068483 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.096726342 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.098486718 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.112999302 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090451684 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.097214606 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.11133471 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.09338149 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.097718452 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.140992033 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095725097 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087934024 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.108024496 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.100013762 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.094423638 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.114630988 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.087195451 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100377324 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.113625864 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.095605567 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.086073695 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.10980825 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.090365796 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.096524052 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.085906951 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.112132277 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.092579203 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.097313752 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.11781175 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.09292417 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.094471204 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.116991732 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.098895701 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.092474616 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.180296509 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090472029 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.109705336 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.095437728 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.09750103 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.106926276 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.093546878 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.092575255 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.110110893 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.09041461 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.09878628 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.091815878 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.114079033 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.098056273 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093637121 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.113441538 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.096267517 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.092084723 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.109370651 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.097588986 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100650738 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.11350872 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.096348897 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.094424393 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.112430469 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.09470693 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.096276195 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.108719387 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.099581096 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.0897977 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.092611077 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.115198934 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.098714666 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.093240308 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.109252853 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.092553881 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.09403713 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.113543278 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.096661357 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.095757407 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.1083237 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.087160607 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.092970284 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.109107182 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.095641731 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100805571 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.108902875 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.096273589 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.089125995 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.121250434 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.091479547 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.099108564 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.11480748 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.100097004 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.099254362 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.084914946 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.110252037 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.095672366 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.093943703 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.11007795 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.094328941 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.091970616 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.118687332 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.088072294 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.106142955 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.104083874 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.09121506 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.099036959 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.113615382 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.097677944 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.089324045 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.149699824 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105623343 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099479851 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.111711634 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.094465013 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.097198899 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.093457908 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.117835648 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.099572303 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.097668153 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.110291993 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.093718666 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.097983202 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.109437252 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.097142391 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091809326 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113681335 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.087267819 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.094545552 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.104316356 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.099530866 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.095657182 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.117557515 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.100447475 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.096531464 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.092342985 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.132717872 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.091084084 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.097065307 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.106623665 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.099584132 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.102919527 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.120799665 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101070669 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.095167463 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111683084 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.097494126 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101830138 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.116700851 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.096184933 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.09526448 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.106536291 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.088761305 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.099337508 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.094640903 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.109692405 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.094315383 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09700146 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.115644375 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.092057781 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.085572302 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.116681175 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.097555403 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.089006625 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.114512796 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.091007935 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.091160232 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.121219684 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.087934089 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.090243643 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.11550259 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.100400148 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.09399351 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.112620004 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.097766345 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.098864857 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.097072558 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.115232056 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092479863 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100068282 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.111664836 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.093656042 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.090078488 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.115784587 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.088723148 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.095448303 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.112947933 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.091658991 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.09060212 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116986779 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101839105 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.099170934 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111352471 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.100739919 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.099311547 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.098723618 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.112135536 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.100308329 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.090039317 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.10767621 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.089999549 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.08653933 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.115730818 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.091388997 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.099117723 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.110747483 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.09346471 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.098015842 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.116162306 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.092963547 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.098977612 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.123939136 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.089837042 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.087956389 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.111825063 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.094185252 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.090434403 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.110380409 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.096643078 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095235197 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.117124402 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.098043987 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.0909915 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.0944994 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.119894701 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.090510598 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.099860473 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.119250068 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.100592021 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.089159494 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.118788486 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.091339474 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096888439 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.108072361 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.094505437 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093717911 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.113957483 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.092058764 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.092197262 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.10992227 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.088796358 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.090331269 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.118935242 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.094382738 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.0977657 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.112093089 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.093685275 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.090721462 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.089920186 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.119484147 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.093974315 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.100760165 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.115373085 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.089318844 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.087536577 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.118859053 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096155467 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.099477782 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.10917508 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.099724127 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.101041345 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.098239214 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.115573849 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.104157284 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101661853 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.121561328 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.100688399 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.08776166 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.112398225 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099648549 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.095165549 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.1177841 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.098101835 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.088606278 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.116865375 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.101360859 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.097382352 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.113196188 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.090131691 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.09619826 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.120133218 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.099019041 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.09989602 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.096007061 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.116884541 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.09056471 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098643737 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.119364904 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.096434232 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100732389 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.115143121 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.101198879 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.091990689 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.118973423 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.097569996 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.089207183 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.088014519 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.112609446 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.101608008 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.088773366 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.119754039 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.100574131 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.091212446 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.113546203 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.100854162 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.091278006 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.11755563 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101091795 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.093004621 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.126285513 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.096846932 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.092802799 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.118798767 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.101991909 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.089707043 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.093428065 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.114689464 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101808835 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.093435265 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.120593007 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.096799941 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100643464 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.117332656 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.101183003 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.099874019 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.12085453 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.090655666 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.10220521 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.118454222 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.098981544 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.092528889 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.0934868 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.11025849 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.094192745 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.10080934 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.11345484 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103306917 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.100921508 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.114284504 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.09428359 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.100111909 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.114106894 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103548122 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.091623854 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.1163299 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.091352437 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.097361495 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.115142642 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.103832998 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.092930195 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.109231053 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101255652 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.100698839 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099289303 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.117925287 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.102181856 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.089730638 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.109389564 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.099926459 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.092980619 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.125870961 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.100164121 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.093617909 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.114106567 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.099806167 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.096101144 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.120690752 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.091585948 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.091771659 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.095317083 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.118813203 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.093326036 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.09044298 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.120182784 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.094556021 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096548935 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.115743576 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.090430925 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.093619709 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.123178083 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.094381711 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.091038718 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.113029951 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103792169 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.094106557 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.112425398 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.092256447 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.101063799 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.117058101 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103908207 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.092683655 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.114835496 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.094790905 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.099084047 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.121051324 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.095661379 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096872207 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.092882158 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.121060453 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101337699 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.08938658 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.113757545 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105677808 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.09917714 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.117665832 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.099130703 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.095001242 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.122678944 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104297744 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.098435696 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.110289932 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.092404612 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.094511772 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.110070936 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.099985234 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101168231 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.114008186 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.093643828 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100960827 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099221672 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.119983267 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.099287823 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.090612808 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.123083462 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.094388622 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.098219305 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.109287629 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.09143378 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.098874419 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100517929 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.116926508 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.096721679 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.09866688 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.119209864 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.09192488 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.094394051 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.120631598 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101791017 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.101514312 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.117561256 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.095748119 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.101387167 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.12674698 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.098538528 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.095358863 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.12233831 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.105652888 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096801633 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.114938671 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.101460839 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.102976764 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.117728104 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.10371615 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.093861489 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.095505254 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.124080973 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.104319764 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.103728435 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.115910288 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.090737058 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.100132167 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.115235282 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.091971809 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.099074352 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.1244652 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.103330545 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.095728362 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.114346754 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106105426 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101310228 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.11745355 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.094687606 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.094426478 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.120800507 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.095368607 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.100016443 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.112900644 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.105041325 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.103125011 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101085719 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.126706275 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.090908656 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.102754152 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.119908845 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.105394446 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.097540192 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.111156197 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.092509408 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.099983049 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.124424357 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.104748931 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.100470163 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.099104949 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.121582757 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.098115815 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095741602 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.11453418 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.103890142 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.101351107 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.118801875 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.09967805 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.09542203 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.118620644 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.099463149 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.102176922 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.124080365 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.09889031 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10655211 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.122833698 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.098336997 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.093592031 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.116554671 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.101446275 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.098430821 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10216356 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.115604823 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.092357689 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101478227 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.124681332 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.097324262 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104096925 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.123984142 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.096960952 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.099614258 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.127286546 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.103803175 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.099136507 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.117921187 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.102068481 seconds)
  done (took 62.464703184 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.149420507 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.106433148 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.119734613 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.100086361 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115910943 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.12229657 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101096076 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100637311 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.122857072 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.10899933 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.098846945 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119857903 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115031404 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.138697469 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117667426 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109195607 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119500586 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100805345 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.099585377 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120629717 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.113976801 seconds)
  done (took 3.32156105 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.118013937 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.112126112 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.130196246 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.113495027 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106054721 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.130177978 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.109832278 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.129681465 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.112737064 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105803403 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.133441936 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109721361 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.125748839 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.108878208 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106763319 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.128084973 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.113657517 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105576421 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.13202927 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.110001108 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.127848649 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.110801605 seconds)
  done (took 3.498792546 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.131737624 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102948899 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.096846817 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.120767772 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.103318189 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.098970033 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.123324591 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.10071141 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.108066614 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.1144844 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.092019892 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.094981531 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.097068336 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.120202634 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.095754515 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.100063843 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.129189746 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.104778584 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.104028767 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.118935204 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.092137948 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.100133835 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.099222042 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.111376382 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.342467791 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.103619297 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.121763692 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.104331474 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.091193585 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.122325799 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.101426572 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.093388892 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.089280539 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.111083126 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.091721609 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.10235744 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.121808538 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.101146327 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.099379788 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.089362508 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.121919039 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.103528248 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.089302506 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.120746372 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.099672153 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.093045675 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.121969544 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.101532736 seconds)
  done (took 6.218209896 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.13022734 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.165259596 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.103647505 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.135390954 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.134806819 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.109096193 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.122916557 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.138407828 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.100469318 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.124089905 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.114739482 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.112311699 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.126718065 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.106445809 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.125195799 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.104491984 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.105421225 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.122648656 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.10889656 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.102993381 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.125373845 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.105880783 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.111817314 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.133503575 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.104807655 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102516291 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.123830516 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.106747113 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.110054356 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.127839976 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.105887048 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.126593436 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.114068604 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.101919391 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.121720277 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.104849946 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.11293346 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.123542856 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.104784349 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.100854229 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.124262395 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.107823893 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.106376498 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.135695167 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.10418459 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.103530099 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.125207774 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.101200813 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.110663998 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.124760785 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.109165214 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.134084701 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.107237102 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.104015565 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.126120932 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.113162925 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.10373742 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.123726813 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.105902515 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.112301075 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.12201363 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.106198085 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.111930318 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.126087639 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.109417811 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.133616179 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.107548508 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.105820104 seconds)
  done (took 8.908718911 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.135955508 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.107988846 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.136262625 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115931732 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.106558188 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.128880926 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.107005137 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.127155715 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.110531296 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113109393 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126176209 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.227309659 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.126907939 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.112380983 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.128099151 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.108494628 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.106356227 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.128999599 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.108135805 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10799932 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.128303439 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.115742255 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.107038624 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.135814562 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.117466862 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.124375846 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107945161 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.106846667 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.135238803 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.1089066 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.116369751 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.130201532 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.107552872 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.133825636 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.121520424 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.10589339 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.123838085 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.108845576 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.106789364 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.128629763 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.104878302 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114190013 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.129119227 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.104210574 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106630422 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.13012165 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.115228288 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.137743523 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.11260148 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.112252016 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.130350172 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.114617501 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.128665975 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.108596078 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.114603671 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.143483159 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.115137785 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.136464544 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.107947678 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.115222534 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.136705871 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.121522299 seconds)
  done (took 8.413922936 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.104053627 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100085503 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.100004173 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.122537089 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.101703937 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.09987659 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.120461921 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.10219464 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.101519529 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.10021731 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.121703788 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100781061 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099904997 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.122061292 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.102132902 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101848353 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099647076 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.121000465 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102037729 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.100321209 seconds)
  done (took 3.060567656 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.111761671 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.118080132 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.123355964 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.109636849 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.103640512 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.128532316 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.103027781 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103197754 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102093738 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.125405373 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.111033378 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.131691424 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103998575 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.108583781 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.130980713 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108239552 seconds)
  done (took 2.758430042 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.122669289 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117301715 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.213049298 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.10472633 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.125168005 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.10984442 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.102716932 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.12696818 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.102735947 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.107872263 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.129275397 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.10647541 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.101951208 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.126023894 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.103710512 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.106225381 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100794659 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.128308526 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.104406233 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.218876014 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.105650655 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.127422121 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.10522784 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.105667706 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104467416 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.130616164 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.108334908 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.101595438 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.127313153 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.10365982 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.103497313 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.131239355 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.103193107 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.107060337 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.127068181 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.105247089 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.103669579 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.125200265 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.106967687 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.102903321 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.125728342 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.105164303 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.103784716 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.12662607 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.103014152 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.104016628 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100555768 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.130048805 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.105269032 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.103832478 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.125219284 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.108659074 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.106595558 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.133205734 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.110328308 seconds)
  done (took 7.325278184 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.114206153 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103530693 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.134362509 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.102527768 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.103959518 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.105575185 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.127045347 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.105952289 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103824938 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.124790553 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.104898327 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.104493898 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.125612857 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.105206988 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.105583569 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.125433753 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.102346823 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.104369783 seconds)
  done (took 2.94483983 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.108792567 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.103904109 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.106304873 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.125430935 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.102561942 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.102086601 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.123140892 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.103967116 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102172172 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.12388713 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104223689 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.103351429 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102140193 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.124362752 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104338479 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103698103 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.124143275 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102664962 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.103228538 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.122980391 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.104163563 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102919836 seconds)
  done (took 3.347409712 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.117053943 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.215011399 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.109655566 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.223708679 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.099551682 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.121015864 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.109861493 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.099506014 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.137598482 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.100273798 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.098662842 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.120705764 seconds)
  done (took 2.501839431 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.133469048 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138322419 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126007804 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104595369 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111529776 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128359562 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108072945 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106622848 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136225925 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117974017 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129660131 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11570385 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11658076 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137791043 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11261525 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133125049 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108844715 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107596421 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126440104 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122188807 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107502816 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137803991 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108145212 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128763152 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10862649 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114344385 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136796642 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119031422 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127821864 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118873876 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111602736 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128497094 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117106125 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.138306413 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105912958 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115093918 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12897523 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124759354 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11103352 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.138207803 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103881601 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13332792 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118220179 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112221452 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136622026 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108574199 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111925016 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130600456 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107744489 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.148762637 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113335793 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11470715 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134628429 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115633031 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138648842 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129171633 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.139876047 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116748917 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111488233 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.142856423 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116134757 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133346547 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118265482 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.140320197 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113697169 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114443189 seconds)
  done (took 8.994601036 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.143664366 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104041016 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130222946 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121850369 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138289441 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110812026 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109120259 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129168487 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109568039 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104938956 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.171408033 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110876461 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136633933 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117591948 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106972195 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130618798 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109279695 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115938686 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127948115 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129913839 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129727974 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118934884 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116959031 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13840792 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120329072 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135647705 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110062135 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109170669 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130816955 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109984962 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113163417 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131365994 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11611613 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.126603381 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118206091 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109076099 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130289202 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114560243 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107800879 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135526697 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116736035 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.144647772 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109150763 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108911059 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.143666902 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110181472 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108484032 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130769925 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108600692 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104994069 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.143093381 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119465667 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.142223463 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116820485 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129677978 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110421446 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10896261 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130417265 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109765306 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112738221 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139171809 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109170356 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.150367192 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110558847 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110242097 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139419706 seconds)
  done (took 9.001945904 seconds)
done (took 171.310432655 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.179995378 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.215996722 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.198185368 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.157760938 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.09524036 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.1523991 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.127750053 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.200856764 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.095332642 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.09449232 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.117562375 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.098097583 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.162262154 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.094025385 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.118855943 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.097930859 seconds)
  done (took 3.146249453 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.197950581 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.332652305 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108816847 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.122013312 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.102068908 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.098983844 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.121051543 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.10225864 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.099706368 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.130361637 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.101814085 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.095311143 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.128650918 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.096443896 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.099170439 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.121809106 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.107551267 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.099861959 seconds)
  done (took 3.233663328 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.122208902 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.145013528 seconds)
  done (took 1.238074242 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.131736877 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.212903973 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.280769159 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.170812481 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.120919351 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.140549964 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.149909751 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.133665515 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.187622077 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.134956838 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.112266786 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097475472 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.148621707 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.106722096 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.137866756 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.100778065 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.127720224 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.136602162 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.114797912 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.101791421 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.146256173 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.105165378 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.10438752 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.136830789 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.178034898 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.134585107 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.105114659 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.104091332 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.124029681 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.115102793 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.105994999 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.140417493 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.111091611 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.177691118 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.103056291 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.174755345 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.129563403 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.101405203 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.115238157 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.122750971 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.105523602 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.103961809 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.135942732 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.09852646 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.103070681 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.13016579 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.105158292 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.102671663 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.13139028 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.108659369 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.129608732 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.10910978 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.174814185 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.108142745 seconds)
  done (took 7.995094551 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.864095818 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.141982423 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.101336638 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.008951726 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.146903159 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114675906 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.858154842 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.14676855 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.252663144 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.882797527 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.117581692 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.132482125 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.238900337 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.256259406 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.289730555 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.358410893 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.722420396 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.114122778 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.129369013 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.163187647 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107971295 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.147720463 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.121035312 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.515316282 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.101413258 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.123199209 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.111827083 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.110147558 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.176948819 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.101008317 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.127510229 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.173962321 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.293115503 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.209019221 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.124452984 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.10161025 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100101909 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.185581193 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.270571983 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.217293031 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.195236882 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09900492 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.100227109 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.131211274 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120467572 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.098375835 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.178482533 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.191596815 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.189377282 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.106980068 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.110389418 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.134667431 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.108503338 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.177946997 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.098644613 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.357418861 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.388141525 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.101585977 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.110445871 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.13765673 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.268862153 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.102587067 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.235539499 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.150569032 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.215071072 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.100511835 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.834663877 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.184918043 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.101341067 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.128401922 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.109301437 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.106704438 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.130746755 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.168063166 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.49742113 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.111400271 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.127119835 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102053882 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.234943232 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.102063703 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.10018814 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.181374735 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.101634223 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.133759396 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.11295891 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.133565837 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.165932175 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.271341507 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.131959001 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.112627535 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.106731121 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.137213365 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.102791829 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.231880175 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.228996718 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.174027755 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.207323619 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.132021252 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.179214368 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.162574686 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.128668049 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.164860728 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.131572305 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.113438739 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.129213972 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.225316563 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.135907809 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.124994108 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.108014837 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.110510836 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.160544239 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.105109532 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.131277608 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.165067608 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.553534768 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.18659878 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.098015883 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.128194884 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.112799852 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.179183095 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11005697 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263144578 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.111078777 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.18583456 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.12992686 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.100964602 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.108882824 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.180543799 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.108694835 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.133851944 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.108321173 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.132501127 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.258092603 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.222251774 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.133638496 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.253413438 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.177929682 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.130445807 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.170380581 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.133817544 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.187556748 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.115465279 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107397947 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124705859 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.826118989 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.117005788 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.108970863 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.131116303 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.183124456 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.125464378 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.105490254 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.100504729 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.121176395 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.817802472 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.107934378 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.099022083 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.125906147 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.10837607 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.110124831 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.133067199 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.108161396 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.177762693 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.242155731 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110495141 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.132240952 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.103804023 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.180751719 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.103439057 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.10209211 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.126245013 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.103541876 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.110399319 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.131673288 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.105437084 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.190764107 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.174511495 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.229924447 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.653553152 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.102792928 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.101817322 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.262899368 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104030516 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.325398154 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.110499894 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.259721382 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.159829476 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.122602074 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.362163128 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.185174908 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.184927148 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.104925235 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.191208091 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.121991984 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.112127065 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.179101619 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.103053416 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.109580606 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.176758121 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.113342558 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.13513602 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.27886864 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.101839312 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.252095357 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.098782295 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.18837736 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.102865906 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.131660342 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.327847167 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.102135041 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.140083206 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.15641396 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.132219766 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.103941483 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.646706091 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.102618954 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.13779139 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.107590588 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.230890562 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.184157842 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.111553437 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.136366324 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.111462429 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.180271789 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.230432301 seconds)
  done (took 47.910431929 seconds)
done (took 64.473547891 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.267862916 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.178734855 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.280886094 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.179312067 seconds)
  done (took 1.957347741 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.27436057 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.159531461 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.257945809 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.098595784 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.263056945 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.098461014 seconds)
  done (took 2.139474468 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.179589448 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.16998342 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.152639151 seconds)
  done (took 1.496463011 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.199886994 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.217129794 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.325413843 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.230688454 seconds)
  done (took 2.053022602 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.29592383 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.116874246 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.12506685 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.238977309 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.25428563 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.208882504 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.123083755 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.17619406 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.128603921 seconds)
  done (took 2.704714211 seconds)
done (took 11.338107383 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.436329395 seconds)
    (2/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.22132112 seconds)
    (3/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.178492051 seconds)
    (4/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.389745577 seconds)
    (5/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.336677885 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.225841015 seconds)
    (7/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.403302223 seconds)
    (8/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.105711816 seconds)
    (9/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.134010125 seconds)
    (10/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.13478137 seconds)
    (11/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.113403491 seconds)
    (12/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.229155527 seconds)
    (13/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.324987212 seconds)
    (14/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.299135089 seconds)
    (15/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.187853201 seconds)
    (16/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.228862032 seconds)
    (17/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.340606236 seconds)
    (18/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.3815702 seconds)
    (19/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.219291161 seconds)
    (20/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.148601752 seconds)
    (21/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.120597332 seconds)
    (22/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.231656805 seconds)
    (23/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.258907283 seconds)
    (24/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.154269224 seconds)
    (25/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.130100004 seconds)
    (26/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.311149102 seconds)
    (27/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.402482567 seconds)
    (28/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.154556733 seconds)
    (29/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.135648482 seconds)
    (30/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.11221017 seconds)
    (31/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.109525288 seconds)
    (32/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.203913514 seconds)
    (33/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.111608432 seconds)
    (34/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.19046954 seconds)
    (35/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.157187477 seconds)
    (36/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.077267893 seconds)
    (37/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.194084907 seconds)
    (38/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.137186129 seconds)
    (39/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.180541973 seconds)
    (40/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.182711566 seconds)
    (41/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.08617048 seconds)
    (42/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.085028332 seconds)
    (43/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.287876904 seconds)
    (44/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.096473764 seconds)
    (45/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.233924718 seconds)
    (46/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.140313886 seconds)
    (47/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.120739752 seconds)
    (48/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.126271638 seconds)
    (49/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.085366571 seconds)
    (50/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.175481266 seconds)
    (51/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.077093459 seconds)
    (52/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.103612749 seconds)
    (53/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.086046899 seconds)
    (54/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.107131458 seconds)
    (55/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.132173539 seconds)
    (56/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.108604838 seconds)
    (57/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.12078838 seconds)
    (58/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.17919488 seconds)
    (59/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.213048043 seconds)
    (60/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.080410767 seconds)
    (61/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.080252259 seconds)
    (62/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.148790903 seconds)
    (63/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.126912328 seconds)
    (64/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.080543653 seconds)
    (65/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.131259487 seconds)
    (66/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.109743488 seconds)
    (67/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.183606104 seconds)
    (68/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.148435935 seconds)
    (69/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.135623948 seconds)
    (70/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.085192343 seconds)
    (71/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.10702688 seconds)
    (72/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.123004285 seconds)
    (73/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.162642428 seconds)
    (74/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.143203041 seconds)
    (75/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.222845636 seconds)
    (76/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.085310943 seconds)
    (77/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.080808325 seconds)
    (78/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.131716327 seconds)
    (79/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.147696413 seconds)
    (80/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.112893562 seconds)
    (81/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.220772715 seconds)
    (82/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.1062059 seconds)
    (83/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.121731508 seconds)
    (84/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.078348157 seconds)
    (85/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.202361823 seconds)
    (86/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.133784148 seconds)
    (87/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.142066039 seconds)
    (88/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.104836683 seconds)
    (89/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.121809092 seconds)
    (90/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.127129109 seconds)
    (91/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.101155222 seconds)
    (92/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.111413685 seconds)
    (93/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.077678627 seconds)
    (94/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.109002511 seconds)
    (95/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.110422414 seconds)
    (96/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.105983249 seconds)
    (97/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.083038897 seconds)
    (98/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.14062152 seconds)
    (99/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.160822097 seconds)
    (100/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.081437595 seconds)
    (101/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.150305699 seconds)
    (102/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.085948932 seconds)
    (103/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.110205773 seconds)
    (104/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.099982284 seconds)
    (105/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.109541673 seconds)
    (106/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.10536967 seconds)
    (107/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.176974531 seconds)
    (108/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.12820362 seconds)
    (109/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.085571459 seconds)
    (110/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.077647217 seconds)
    (111/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.103297085 seconds)
    (112/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.126022244 seconds)
    (113/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.110613801 seconds)
    (114/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.105669563 seconds)
    (115/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.126938335 seconds)
    (116/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.079271187 seconds)
    (117/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.08122601 seconds)
    (118/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.109951347 seconds)
    (119/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.126868305 seconds)
    (120/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.146636529 seconds)
    (121/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.077987137 seconds)
    (122/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.134995313 seconds)
    (123/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.102440626 seconds)
    (124/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.150246469 seconds)
    (125/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.134821758 seconds)
    (126/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.078577732 seconds)
    (127/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.13493913 seconds)
    (128/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.113418852 seconds)
    (129/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.101200867 seconds)
    (130/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.108286948 seconds)
    (131/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.14983587 seconds)
    (132/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.085759499 seconds)
    (133/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.109441443 seconds)
    (134/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.110328611 seconds)
    (135/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.134779274 seconds)
    (136/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.102223536 seconds)
    (137/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.147755707 seconds)
    (138/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.125075587 seconds)
    (139/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.102942217 seconds)
    (140/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.080357471 seconds)
    (141/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.129489722 seconds)
    (142/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.111688338 seconds)
    (143/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.084901521 seconds)
    (144/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.128335638 seconds)
    (145/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.103147993 seconds)
    (146/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.154491466 seconds)
    (147/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.110300015 seconds)
    (148/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.080685162 seconds)
    (149/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.082021561 seconds)
    (150/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.138281922 seconds)
    (151/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.079328379 seconds)
    (152/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.129304653 seconds)
    (153/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.143880779 seconds)
    (154/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.081056059 seconds)
    (155/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.081053956 seconds)
    (156/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.110624301 seconds)
    (157/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.084579569 seconds)
    (158/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.178103376 seconds)
    (159/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.124663778 seconds)
    (160/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.105893542 seconds)
    (161/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.104653339 seconds)
    (162/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.109454661 seconds)
    (163/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.110376852 seconds)
    (164/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.105566478 seconds)
    (165/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.124615264 seconds)
    (166/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.110169356 seconds)
    (167/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.079840983 seconds)
    (168/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.080794331 seconds)
    (169/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.130212885 seconds)
    (170/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.077468145 seconds)
    (171/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.106314543 seconds)
    (172/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.083176136 seconds)
    (173/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.113498961 seconds)
    (174/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.078367985 seconds)
    (175/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.08493672 seconds)
    (176/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.13611918 seconds)
    (177/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.079795343 seconds)
    (178/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.086215326 seconds)
    (179/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.078096878 seconds)
    (180/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.128961878 seconds)
    (181/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.112405861 seconds)
    (182/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.101552687 seconds)
    (183/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.138864611 seconds)
    (184/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.125803155 seconds)
    (185/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.104292937 seconds)
    (186/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.085650642 seconds)
    (187/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.108669041 seconds)
    (188/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.079764487 seconds)
    (189/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.081724168 seconds)
    (190/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.079526022 seconds)
    (191/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.081668898 seconds)
    (192/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.105699343 seconds)
  done (took 27.407196849 seconds)
done (took 28.403182713 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.238669312 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.129917194 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.111586116 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.111792287 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.236811131 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.117811858 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.153590467 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.113886993 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.121736329 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.137224174 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.103378363 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123969732 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.138746847 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.207855224 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.14072001 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.103490338 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.101972418 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.148004614 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.12674619 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.127484837 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.238152014 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.129015643 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.122404147 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.103578951 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.23905339 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.105296444 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.13542554 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.113559217 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.124893433 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.136864963 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.114112835 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.102184175 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.150572816 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.128386768 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.102576129 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.111163396 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.128196125 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.086126691 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.111835465 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.136068489 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.126299779 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.111713277 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.136961122 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.104635638 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.112495166 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.137546837 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.103901222 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.11526356 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.125606999 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.114741452 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.104859772 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.151119864 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.113753179 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.101576281 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.100848401 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.129526565 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.122201875 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.103570091 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.150660744 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.103704876 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.103195445 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.127948771 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.115081781 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.103039377 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.135482705 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.10510762 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.112170232 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.13723784 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.113446208 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.106523397 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.102862929 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.136842195 seconds)
done (took 10.215212471 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.108022576 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.147188938 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.238316858 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.240271422 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.130298097 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.146102598 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.11710387 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.12653064 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.143787931 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.122014708 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.164892432 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.135906214 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.243929408 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.12080054 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.117667219 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.141690513 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.114675718 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.111675322 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.241815193 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.152716726 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.129163365 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.118233614 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.156798885 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.120105198 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.10524056 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.165777951 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.110936401 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.139094629 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.108940927 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.116137397 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.152060127 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.108008764 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.110632863 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.150525506 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.124486747 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.117304212 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.14480809 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.116073217 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.107327377 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.13164894 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.115894286 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.12487407 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.132714423 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.11905953 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.116107455 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.148689244 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.115451499 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.119679128 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.133768502 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.115739235 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.108489902 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.157786714 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.11994358 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.147199277 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.121120003 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.120325875 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.144258939 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.121616502 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.110368065 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.143392287 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.109037951 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.107425132 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.108874748 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.155230034 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.110220663 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.144632409 seconds)
  done (took 9.890068415 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.126313676 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.13595364 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.142398966 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.118604605 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112614649 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.126707528 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.10283955 seconds)
  done (took 1.905856015 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.107386357 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.247407772 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.221131311 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.24792353 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.244587605 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.258590785 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.125784367 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.128233836 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.139080037 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.112413238 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.249496853 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.278583664 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.112497634 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.14489924 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.250746977 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.10351811 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.252196638 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.104540798 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.118831191 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.251510195 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.146427844 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.136064733 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.1159786 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.130576544 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.217911101 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.131047099 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.296847447 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.122136632 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.111856784 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.143662582 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.119061317 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.207518473 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.21967526 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.144481874 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.113340844 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.247895094 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.24434769 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.118899077 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.26063325 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.107553828 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.247240905 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.11758645 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.14461776 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.118654552 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.117589227 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.236313679 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.120784841 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.146907181 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.116993471 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.254449506 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.114128006 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.247433296 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.114186003 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.14510531 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.114926652 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117748281 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.15168429 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.119499402 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.255875397 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.120158091 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.250042232 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.25003253 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.248939794 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.226244522 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.155372413 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.2480537 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.209822605 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.143528272 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.112859804 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.118323109 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.252195703 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.11619638 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.143048801 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.262168199 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.122124256 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.254704511 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.251324098 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116793141 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.115766752 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.133658604 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.117885448 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.104646272 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.242913413 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116795286 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.141699341 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.123134147 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116198656 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.145003869 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.109352816 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.125859945 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.146107286 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.115361233 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.146873659 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.119445109 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.121513894 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.255183513 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.114002052 seconds)
  done (took 17.304427338 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.107670082 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.105540379 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.109321888 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.132750148 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.10590916 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.105403664 seconds)
  done (took 1.744134456 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.14209501 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.119114572 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.152312738 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.120639487 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.192430924 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.229649662 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.263086752 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.139380775 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.138644584 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.129345548 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.25633742 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.261741112 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.260383744 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.122628188 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.263262811 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.121144421 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.265456808 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.115726116 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.153723175 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.116256418 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.117121728 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.150225188 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.11682281 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.249806531 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.119372057 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.146127396 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.133593911 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.127023095 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.152771223 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.11469678 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.121566735 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.146299859 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.111909461 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.112024135 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.261502543 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.138495788 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115781978 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.121103204 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.149098368 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.120558028 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.263086751 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.116766785 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.123757206 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.150409496 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.112609192 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.137559209 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.124005164 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.111635225 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.262907551 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.120667223 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.149964359 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.118980542 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.118954307 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.149693807 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.112090696 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.137972183 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.123915221 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.266092575 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.12359759 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.109897784 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.146953765 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.119988172 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.13846524 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.1254927 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.119060062 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.145782644 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.112679483 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.119361428 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.142533498 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.122078591 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.122757671 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.144479712 seconds)
  done (took 11.960360382 seconds)
done (took 43.840452674 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.656269434 seconds)
  done (took 2.727021195 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.940066003 seconds)
  done (took 2.014065833 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.597511413 seconds)
  done (took 19.700356127 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.441738115 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.478407163 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.117813748 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.148546344 seconds)
  done (took 3.259450875 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.828858845 seconds)
  done (took 1.923883335 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.321159515 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.239170347 seconds)
  done (took 1.636199423 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.745773348 seconds)
  done (took 1.837547947 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.55554473 seconds)
  done (took 2.635200788 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.284974138 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.241557385 seconds)
  done (took 1.615666896 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.651671635 seconds)
  done (took 1.736858567 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.67370633 seconds)
  done (took 20.76845784 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.25531977 seconds)
  done (took 1.348039002 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.288509664 seconds)
  done (took 1.386490385 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.70276342 seconds)
  done (took 4.800772096 seconds)
done (took 68.471747343 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.118492827 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.118597903 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.116440916 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.143261114 seconds)
  done (took 1.580091593 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.12534961 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.119671911 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.149218151 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.119251207 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.124852592 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.14367271 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.120598995 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.120950578 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.11778246 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.148031055 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.119294411 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.117861777 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.148123131 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.118116721 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.115445579 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.1501134 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.122978458 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.11913217 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.14674154 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.12037736 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119167072 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.148496061 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.122212263 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.120632856 seconds)
  done (took 4.17590068 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.116550908 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.111368754 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.11106589 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.135392227 seconds)
  done (took 1.571114083 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.126835594 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.130376575 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.154080325 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.126874236 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.128592598 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.155228519 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.11723574 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.114608699 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.143349801 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.127966205 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.133777475 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.158696072 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.131510716 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.145477979 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.128394505 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.113533129 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.11923991 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.15692159 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.125395987 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.153594907 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.12034807 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.123890022 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.149477544 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.127729481 seconds)
  done (took 4.309566923 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.194326576 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.1299439 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.175003471 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.161695602 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.177915746 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.11619096 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.145072282 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.150469868 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.125241037 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.147252708 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.12251311 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.162073664 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.151052295 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.120620327 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.118305099 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.14996055 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.131265203 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.149184552 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.166370448 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.122371446 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.150958017 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.130572058 seconds)
  done (took 4.298529806 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.122691398 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.110037772 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.129725545 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.110822455 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.122886283 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.137757017 seconds)
  done (took 1.840084896 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.110392125 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.10357466 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.104627763 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.129919682 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.10965099 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.103170195 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.12759772 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.10735093 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.104389111 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.103598055 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.130781285 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.105020056 seconds)
  done (took 2.435463432 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.337096174 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.109369923 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.137264863 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.112925373 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.11355164 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.106566706 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.149695162 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.108635308 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.26635732 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.105224341 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.133593516 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.193262222 seconds)
  done (took 2.976003664 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204662206 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148179861 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254133283 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.680918773 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163554187 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.189619068 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.28589155 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189142563 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.206997258 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137744993 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215451095 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159191686 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182933151 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184741714 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166915123 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.156138391 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194177344 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235346716 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141865989 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.238331348 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155795401 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201463157 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.215791368 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150178153 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163890644 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16335212 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.117374578 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155531559 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166302839 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191747882 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202663103 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149538651 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167702529 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191904629 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258965085 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206675483 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269153265 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133425415 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.197603149 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.215032479 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.259600222 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141593493 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219648844 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151923358 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157814991 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183252927 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181124041 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.181820555 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.161508209 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144023728 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212851646 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20479489 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.176209856 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163417063 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.324508705 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135434838 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.142900179 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.259422023 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215556622 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228348356 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177503817 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.150559391 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176962192 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21748297 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240958162 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.141775857 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.193376469 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124249652 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191974021 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.23075072 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182347236 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188307039 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.238923351 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131120055 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199455673 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16881446 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184583684 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231833459 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170994554 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.145944052 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153155008 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133533281 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153316596 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.187166941 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149276505 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213479758 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159076387 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.33785592 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178704696 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.184856773 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160786093 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188791293 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189112969 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150048513 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.101260561 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171064827 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.160954149 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184891638 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129451192 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181705391 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140875001 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.125831479 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181516828 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.123074299 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195920547 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.133638893 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191165196 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172587752 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.15974934 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176329165 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175851777 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.160607613 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197394449 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218505097 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131457496 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131404394 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246995008 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196369198 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.137079658 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.202109476 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.195320201 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.175820966 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135601108 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19301318 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221615871 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143412893 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226733438 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138969255 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162744246 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.140470262 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198221793 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160213111 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.181297086 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128469922 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.191245741 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192281274 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.155309599 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141611422 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210162149 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133433999 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151578424 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138733472 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13631921 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.170728281 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.147512592 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.165926478 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155176755 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193727 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163862032 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186713832 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134119599 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200997109 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130859838 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.194908821 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149533084 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.145095122 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.175945466 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225600684 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128578221 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209191215 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.162172045 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213299274 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20132961 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129087639 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.211804315 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128832708 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.119600693 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190010642 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.195822831 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163963398 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.216216042 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205394921 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.167101693 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.192093389 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149292473 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197584413 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.213373738 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157317219 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.172428926 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172316433 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198512438 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.120459187 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.12250498 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.157442625 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136856386 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157485277 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138203012 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209062285 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164874864 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.207106955 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.195755465 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139025234 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.217962971 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.124720255 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188687097 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.173209337 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167829029 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.188741352 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21877219 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203327269 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142436803 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190289128 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.121773602 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126698196 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.161213399 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162078918 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164345226 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136615673 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168163207 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.191904853 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201122015 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148040926 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221210736 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195675836 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.19970518 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.150836055 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.160956018 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197721196 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166318559 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.213856826 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133898469 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.189294028 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.191620424 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169993424 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191109736 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196728883 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205588753 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196625709 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.194160802 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130789487 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.177172429 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16092936 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166795312 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162215658 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173222958 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132729065 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151898087 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.167364867 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14112281 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214981509 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17078792 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179338628 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.186788505 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173084992 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154357291 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142160068 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.201445635 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146145148 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.132386881 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173146437 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224622416 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149486064 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186397785 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200677016 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133515233 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.312132489 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218222196 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2065548 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136785606 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165988872 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171696093 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.189187429 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163246109 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.214392692 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140766212 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235043865 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.198438702 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.143897898 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129108143 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17722892 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150979837 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.16788833 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.151288822 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.191329839 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.144273562 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21780893 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164528952 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171455379 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204602576 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.147477639 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.14833727 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169494538 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253506224 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167248094 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2032564 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.161667597 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.194680227 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210162775 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125685395 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125677265 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.160472684 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.185565518 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156316919 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176289109 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.192867069 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211851445 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175433625 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191900172 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140918439 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.155290687 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166577963 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175921715 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186600967 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163858511 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.137389333 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22069008 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.127000987 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161112841 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161349178 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.320082052 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146904968 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203122648 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.106090273 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.313433688 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129479849 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161135042 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162859285 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199184378 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.133221344 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.211265263 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176070931 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16700159 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164901327 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134256457 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.208527349 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213490405 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166177427 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204475626 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.175412987 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163149739 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190662382 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174935025 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175442031 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.148072956 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189203526 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195906155 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.208877191 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.130627109 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198382731 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166714649 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.199872633 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204976827 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140583238 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212239207 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129842774 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192400064 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13912157 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124421534 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190764329 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.194053385 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132112095 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205683606 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169954353 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159558975 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129435244 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147043108 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194289023 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140757797 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.159033727 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214264998 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.130213099 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18018498 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240488763 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158009622 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167571189 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145325409 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160627632 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138019078 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174150287 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132414255 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.174934572 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211990314 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.130799839 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208972449 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194504612 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167338294 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186883421 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143330478 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 1.356943273 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.130278081 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219997069 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151406617 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226050186 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150163097 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204846126 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168306763 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181784706 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164965009 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178907292 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.219100994 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194005397 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.194410599 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134627378 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143214391 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168187299 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.13427899 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.183526327 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167989462 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169807297 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.1380489 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.194144647 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147105973 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.146268924 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171861173 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227790529 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153227543 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21934549 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187379701 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167526873 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174899289 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207305022 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128604355 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.196994874 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200245188 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144939964 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179834021 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.136266903 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.137188409 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241474105 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.126007023 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191092031 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174209764 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.198608714 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170355244 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.16573118 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176747371 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170035393 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201907813 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128793364 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.152239242 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.199174144 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133659098 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.154576578 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17239909 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191557784 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.165971676 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172659877 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.178930978 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2232964 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.125299274 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.632225841 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.320256148 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192052686 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19562372 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.16511852 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13823218 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145731193 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188738806 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.162264452 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201669037 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.129908007 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160099626 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.14661524 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.184266003 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.143161905 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.197393095 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184389185 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191027789 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185950843 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.164235343 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.250330577 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172261544 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171414247 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.14570831 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.131360635 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14044889 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164607374 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143643822 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.209749054 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246764773 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.162659755 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.177514934 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137269895 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.12592502 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161222655 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163889099 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181877689 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167821449 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17872122 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.103104311 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141638886 seconds)
  done (took 87.693643386 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.163787253 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.153638188 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.172057784 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.224190924 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.198538979 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.293542617 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.231780035 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.24903619 seconds)
  done (took 2.874442561 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.124240205 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.160940922 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.141950534 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.144990991 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.110727232 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.488616509 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.159231796 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.121140896 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.161023137 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.152822381 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.137041606 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.571242899 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.116191822 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.145648535 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.122879654 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.136939258 seconds)
  done (took 4.172085168 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.832040621 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.55603594 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.202234496 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.283268487 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.265931659 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.208080315 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.810936368 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.203652305 seconds)
  done (took 12.549994875 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.166688202 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.158808978 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.456002652 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.31219263 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.182661304 seconds)
  done (took 2.468399058 seconds)
done (took 134.027126586 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.126137912 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.122768593 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.122347415 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.155585237 seconds)
  done (took 1.701535016 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.199645869 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.09012624 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.092731548 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.118297126 seconds)
  done (took 1.694970392 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.467270491 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.090532221 seconds)
  done (took 1.782235994 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.155406574 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.138782389 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.169982367 seconds)
  done (took 1.677536283 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.135777117 seconds)
  done (took 1.331516727 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.12837208 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127469483 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.276251624 seconds)
  done (took 1.733320559 seconds)
done (took 11.122971418 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.123687393 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.930067029 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.43417538 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.132344197 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.709739296 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.427923658 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.425258063 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.176218158 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.174012102 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.139164569 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.132629248 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.690705981 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.437802783 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.880989812 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.396905387 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.909816264 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.694856364 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.11100165 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.146818553 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.11206795 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.407138266 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.138942364 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.11325971 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.112765839 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.721345576 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.420029485 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.110836462 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.92139271 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.111021836 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.113294193 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.42970195 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.111359961 seconds)
  done (took 21.085951887 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.12389021 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.16707926 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.147952068 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.113538074 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113309373 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.140904047 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.122287446 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.122990595 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.205409243 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.112071561 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.161413351 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.10989262 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.11585059 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.140422027 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.137611153 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.11067381 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.14197586 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.114220701 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118463559 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.141982872 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.132459128 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.110403925 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.141162408 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.113770444 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.109937282 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.16085144 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.111958368 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122602392 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.140665245 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.115252683 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.116569304 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.141715725 seconds)
  done (took 5.395278998 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.164596466 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.175829579 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.149909476 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.147999266 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.1893012 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.113034437 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.22413659 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.151004305 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.205105872 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.111907381 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.13228539 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.140089766 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.152765813 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.111082116 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.166194789 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.111224264 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.114165861 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.144044021 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119505053 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.11217681 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.163293632 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.110927307 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.112686805 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.14294276 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.112386717 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.161685227 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.112887306 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.124084632 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.139065659 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.115400868 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.11590948 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.139698845 seconds)
  done (took 5.697245961 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.130946835 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.125464766 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.133350877 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.164874947 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.119839827 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.123095505 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.15538547 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.12082708 seconds)
  done (took 2.286606363 seconds)
done (took 35.672816019 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.144143351 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.130200618 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.130254424 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.156499227 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.260178219 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.119091634 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.127727915 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.118192076 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.156750774 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.132861237 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.110975315 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.150065438 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.131462206 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.121268867 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.261776986 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.125267555 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.26660856 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.265162865 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.118935729 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.156400773 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.121992128 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.268035583 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.125093718 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.118840054 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.253555429 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.114806628 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.256187776 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.122049984 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.151567701 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.114880566 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.263119328 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.125654787 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.118813803 seconds)
  done (took 6.540931228 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.25410135 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.152401389 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.121872184 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.11984084 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.120558771 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.149916959 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.281738681 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.119780401 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.119706851 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.119033424 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.15082861 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.231942141 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.15745275 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.115759933 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.122283208 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.140138326 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.253837812 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.152968938 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.112721343 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.093015495 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.115689738 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.150810556 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.264327608 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.14645573 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.120087972 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.118574422 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.154214364 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.125961105 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.121297915 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.151603097 seconds)
  done (took 5.789822674 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.130706996 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.134150745 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.166968041 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.187655632 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.149254624 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.163489353 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.139623343 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.133623902 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.173159744 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.114852981 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.12819685 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.17951107 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.129637816 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.125053681 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.149284685 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.132742076 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.13592712 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.145755236 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.123363663 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.131029947 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.165041698 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.131509119 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.136752439 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.152203282 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.112917876 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.121476932 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.155233101 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.128939821 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.122362985 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.159041906 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.117652012 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.116845889 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.146719105 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.150226522 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.114934822 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.159494129 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.138919574 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.125891412 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.159404555 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.146147789 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.116352435 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.14770779 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.140939413 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.167164647 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.148522949 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.126859473 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.125250734 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.160200998 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.11357129 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.133121106 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.189095555 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.114207293 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.163788569 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.115005741 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.112451828 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.121290725 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.146551115 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.118036754 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.128456465 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.147146438 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.13944903 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.12019448 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.155381531 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.117029238 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.124521866 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.142522418 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.115875031 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.118593886 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.169205664 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.123401012 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.150741993 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.113521569 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.157776268 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.128292642 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.123934606 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.157062817 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.114063023 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.124553561 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.156828667 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.120200069 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.125807895 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.147237611 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.118485417 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.130751104 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.165118714 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.129956753 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.125527459 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.157929041 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.11960951 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.115790775 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.161884105 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.11686907 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.118951802 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.157606794 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.116010413 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.118151654 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.157095233 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.12818314 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.11282171 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.13929506 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.14949768 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.11405956 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.139211312 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.149158975 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.12122181 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.1230226 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.187083567 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.115591745 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.12428309 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.159516304 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.115427087 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.12109228 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.148365794 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.115706769 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.133112305 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.159834629 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.122996705 seconds)
  done (took 17.233180768 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.36694037 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.350052367 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.186586202 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.435415174 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.128571305 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.279935964 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.345506401 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.347553981 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.11431371 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.183069476 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.17525491 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.317671566 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.148664983 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.143217196 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.349939082 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.441141512 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.145115889 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.180427978 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.15196263 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.128075976 seconds)
  done (took 6.155439196 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.138550494 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.14845471 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.167176506 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.142459026 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.124797851 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.16252733 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.114391597 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.136322884 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.157677418 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.125000429 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.116670325 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.162263114 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.128390381 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.131170358 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.161665003 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.14687684 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.122629092 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.150478703 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.136729515 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.119268043 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.133139143 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.139153991 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.123072283 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.167467698 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.133137436 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.125273579 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.14605434 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.119562309 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.120826135 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.154938904 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.119582445 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.132754276 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.152834943 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.105482438 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.126218175 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.160091608 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.123012497 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.118312286 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.119507989 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.14961214 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.131013149 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.1300211 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.153780117 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.099773239 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.133333744 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.110610063 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.161383976 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.127906959 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.106547958 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.164661643 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.12822572 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.128303793 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.152113785 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.137685996 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.121457394 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.161677313 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.126759788 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.12846024 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.149514629 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.115218347 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.113509059 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.117465848 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.154010141 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.129772734 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.126226148 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.166240774 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.13065124 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.114764693 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.151308076 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.119094784 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.117547191 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.159980838 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.134819052 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.123298774 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.153717518 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.127352089 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.122164974 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.123523683 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.129091235 seconds)
  done (took 11.898210464 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.145048255 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.125602439 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.162398991 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.151785721 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.128074564 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.151205734 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.127004716 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.134715266 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.128840263 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.166330265 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.129858418 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.128868728 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.171107288 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.125822007 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.124061961 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.164009643 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.128607131 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.184176189 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.134436043 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.141637238 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.162057002 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.121883574 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.127623745 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.157195327 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.145010779 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.126807684 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.174188466 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.130003022 seconds)
  done (took 5.260341227 seconds)
done (took 54.098561755 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.391953631 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.589844427 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.35719422 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.357273489 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.375636907 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.370361961 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.35124788 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.35476855 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.92104681 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.324775029 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.356828518 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.356414644 seconds)
done (took 30.352430665 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.364172239 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.892866094 seconds)
    (2/2) benchmarking "String"...
    done (took 1.641347405 seconds)
  done (took 4.777141511 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.34779411 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.346369154 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.6138324 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.342422262 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.345361008 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.349057983 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.348000993 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.344418346 seconds)
  done (took 16.929635298 seconds)
done (took 27.660400553 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.397266414 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.530414981 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.600634779 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.326972801 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.35011858 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.343715548 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.344036979 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.373133905 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.354244992 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.333962473 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.778326235 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.607552744 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.348551925 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.727281238 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.330712354 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.35215016 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.360156827 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.604343327 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.349453508 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.381260467 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.323549359 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.324546193 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.352422894 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.352494799 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.359300763 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.355314924 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.344103903 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.357455201 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.542238403 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.367324334 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.38333705 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.351153447 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.33960364 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.364215308 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.346717536 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.361662945 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.541119309 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.356333875 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.327436235 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.360244838 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.542270161 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.349925661 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.360081105 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.361548336 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.327552096 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.378405466 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.328315477 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.481073359 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.372274772 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.359763492 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.36068551 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.723343218 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.361013308 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.363004317 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.354565875 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.577981837 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.368315145 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.409112209 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.371788075 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.364263938 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.358662245 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.360889341 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.404755463 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.350828195 seconds)
  done (took 153.039196258 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.3548919 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.352718575 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.351477513 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.35660043 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.354661722 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.353524535 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.350902994 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.353798501 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.352428628 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.383278999 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.351249465 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.350735541 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.352421664 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.333191406 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.363313436 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.375809274 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.354816901 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.36699374 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.361525183 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.350744844 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.356720531 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.3533686 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.352077197 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.351514627 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.356921101 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.428822879 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.387150465 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.359028799 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.365426585 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.353505067 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.351718425 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.359708008 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.99994274 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.203662911 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.363466551 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.376173551 seconds)
  done (took 85.686992876 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.354457123 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.354483673 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.353899207 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.388963326 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.353905016 seconds)
    (6/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.354414279 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.964408508 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.959916323 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.344491722 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.572091825 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.829767616 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.64412847 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.354643388 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.45211751 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.367475044 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.355098899 seconds)
    (17/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.356588736 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.37116811 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.354730504 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.380677119 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.355421957 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.962744551 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.370302145 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.534895113 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.366604148 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.388143149 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.753592038 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.576279208 seconds)
    (29/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.353532702 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.357343011 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.388968997 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.703954633 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.403873573 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.355443272 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.737677567 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.824203332 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.468658068 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.358349605 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.391816626 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.356677739 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.643295373 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.358812185 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.358345263 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.361223972 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.053615687 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.356847216 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.967467069 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.35852052 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.346942284 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.354134104 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.356426569 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.264628332 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.114988613 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.357908012 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.355173462 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.357708911 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.356712404 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.357893688 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.391998747 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.274681288 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.450829325 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.357030955 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.361774185 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.390876602 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.35987563 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.520885098 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.359657651 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.451309841 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.4145136 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.4661175 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.96810729 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.357667221 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.461907891 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.483213184 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.355853989 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.356737127 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.359330561 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.360498448 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.473802824 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.359296999 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.068673846 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.537426723 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.37318196 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.83394712 seconds)
    (85/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.360156172 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.455453506 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.359778708 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.725559345 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.358896535 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.360395316 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.099533095 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.45646879 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.358784165 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.359476645 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.360623734 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.073066635 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.966446334 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.633401767 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.358821916 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.887335908 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.358093816 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.245924311 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.955202035 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.04692265 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.360934876 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.472514185 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.542100916 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.3720402 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.357471854 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.803093566 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.358154119 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.419782838 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.35472671 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.762159888 seconds)
  done (took 392.142831853 seconds)
done (took 632.110274741 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.241040918 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.179620633 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.336666755 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.192031346 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.175224734 seconds)
  done (took 12.377480522 seconds)
done (took 13.630676397 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.556823953 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.555291389 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.419679593 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.55740663 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.393884663 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.574208125 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.537879125 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.374715443 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.474943702 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.439388019 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.471445958 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.408432321 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.390979746 seconds)
  done (took 20.402346534 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.681222286 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.368035879 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.423279825 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.641051775 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.398750671 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.649225564 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.68023119 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.365395173 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.55327409 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.37651213 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.376171107 seconds)
  done (took 19.761340715 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.648697086 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.362628691 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.423269539 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.633449679 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.400532804 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.657058958 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.699181081 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.363729947 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.515836322 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.377013353 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.372733824 seconds)
  done (took 19.700746679 seconds)
done (took 61.117040393 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.38964047 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.458971923 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.380079055 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.372586918 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.369524848 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.368263637 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.373707424 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.369514989 seconds)
  done (took 12.327344608 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.367321685 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.367291473 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.370590664 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.370837289 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.365573841 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.365581577 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.366156064 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.368559751 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.367460062 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.364301834 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.367740729 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.368106608 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.368758877 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.365253235 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.367052587 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.367691679 seconds)
  done (took 23.121552538 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.372605384 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.367437654 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.368093127 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.366427634 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.365977363 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.369269311 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.368473192 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.368407541 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.366603521 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.368202763 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.366191471 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.368733391 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.368986827 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.366366642 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.368723839 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.369466633 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.366022552 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.3643543 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.371781677 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.365061063 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.366049007 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.36724588 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.369557066 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.367212598 seconds)
  done (took 34.070486134 seconds)
done (took 70.760181557 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.354811763 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.350619267 seconds)
  done (took 5.948728099 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.428351181 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.426235074 seconds)
  done (took 4.095628934 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.36730041 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.365539212 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.369763795 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.368626958 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.368951137 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.368693664 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.368298547 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.366962862 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.370200496 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.369841685 seconds)
  done (took 14.930188565 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.370121678 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.370215732 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.371710775 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.368787426 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.36916856 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.366922896 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.37015656 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.372008674 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.370073587 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.371480759 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.368032488 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.367061287 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.371953233 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.369879402 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.37007526 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.367349038 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.36965041 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.371466185 seconds)
  done (took 25.899789768 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.382114198 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.38854166 seconds)
  done (took 4.01810744 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.49759713 seconds)
    (2/7) benchmarking "second"...
    done (took 1.41304949 seconds)
    (3/7) benchmarking "month"...
    done (took 1.475525457 seconds)
    (4/7) benchmarking "year"...
    done (took 1.46567964 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.412744119 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.391755074 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.410804086 seconds)
  done (took 11.314079996 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.357966555 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.646642324 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.817236189 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.508249044 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.348527035 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.369419923 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.333036927 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.367671377 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.369741459 seconds)
  done (took 15.364894192 seconds)
done (took 82.813375381 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.355470833 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.382805569 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.364728619 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.367432054 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.666626435 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.376167918 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.358898601 seconds)
done (took 17.120597841 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.338620189 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.34067038 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.336546285 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.366664102 seconds)
  done (took 10.624642995 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.359549849 seconds)
    (2/2) benchmarking "read"...
    done (took 1.680914518 seconds)
  done (took 5.288841601 seconds)
done (took 17.161477216 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.374078333 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.372866651 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.3737893 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.371809496 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.373199336 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.372569286 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.373961891 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.371858027 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.371501819 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.372321921 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.369883498 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.37463975 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.373914221 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.372557548 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.373141655 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.372645846 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.373303145 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.371188047 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.372484994 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.374164655 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.373579708 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.371768302 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.371065378 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.372263036 seconds)
  done (took 34.190962879 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.37264043 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.371700667 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.373907959 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.371220454 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.373754351 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.371496184 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.373227648 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.372024776 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.375187626 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.375698513 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.373605389 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.37463095 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.37231517 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.372388031 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.371846858 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.373841142 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.373944234 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.372609426 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.374903618 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.372901109 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.372717266 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.373203488 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.374541919 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.373469125 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.37443793 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.374248233 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.374294517 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.374368664 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.372073374 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.374582668 seconds)
  done (took 42.44873316 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.379805883 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.37477628 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.377271587 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.376521944 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.373157497 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.376144429 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.376804219 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.376034065 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.374685108 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.378136264 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.376117209 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.378117987 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.376403145 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.3773721 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.375966548 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.374632273 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.37658688 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.374706664 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.374224055 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.375914636 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.373344806 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.374813579 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.374558322 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.3761713 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.375454362 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.376715103 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.376608138 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.376077285 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.375618881 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.375237606 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.373850423 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.376137723 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.375035882 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.374971509 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.375096702 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.373099804 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.37662041 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.37561752 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.378472478 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.374637092 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.375024784 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.374772521 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.374743612 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.374716527 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.376079365 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.376078706 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.377311931 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.376301107 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.376684369 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.37676057 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.37801156 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.377742867 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.376969854 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.376665634 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.374905859 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.374312576 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.374704307 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.37728851 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.374137654 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.375849739 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.372469148 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.375979263 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.376353682 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.375968952 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.377726212 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.377409538 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.377334319 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.372954405 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.374254278 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.376596315 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.375989673 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.378297966 seconds)
  done (took 100.31400387 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.377528816 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.378398113 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.37695192 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.377571021 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.378529121 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.37825299 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.378049294 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.376229497 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.376412901 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.379775381 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.37880842 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.379447637 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.378248894 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.379379354 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.378482793 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.379870836 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.37882691 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.37610023 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.378202283 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.379359846 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.378515502 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.378226731 seconds)
  done (took 31.574633079 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.3816122 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.376781903 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.375964839 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.377776401 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.377968359 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.377460759 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.377515472 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.379802047 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.377915013 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.376498453 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.37818521 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.376042156 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.3797938 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.378084847 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.378790264 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.375155007 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.377552453 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.379261707 seconds)
  done (took 26.055638154 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.378476333 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.378729108 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.37808678 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.379217363 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.376859873 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.378206416 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.377492802 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.378691816 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.376988866 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.379319412 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.377709914 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.379937143 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.37954231 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.378568296 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.378585402 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.382789634 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.379338713 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.378264541 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.379090478 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.379997492 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.377840485 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.37858292 seconds)
  done (took 31.586698673 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.378800706 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.37705707 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.380466251 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.378313841 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.378373577 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.379539917 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.377280562 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.381322278 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.382109841 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.380641844 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.379218262 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.379408188 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.380342003 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.378565226 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.378896941 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.37825662 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.379205868 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.380087392 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.380242373 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.377333434 seconds)
  done (took 28.840148316 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.37906752 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.37940885 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.377892001 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.376987876 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.380577014 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.379204024 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.38083697 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.379355212 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.379006037 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.380601842 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.379211194 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.380214239 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.379234726 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.378332336 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.376896199 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.379380815 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.377753148 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.380613147 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.376952476 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.378921413 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.38053368 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.379549758 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.381601383 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.378357145 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.380491194 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.381323111 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.380452701 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.378854668 seconds)
  done (took 39.8767025 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.38314863 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.380097062 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.381550669 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.380810676 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.38082853 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.379549496 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.381051398 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.380726387 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.380405045 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.381522243 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.38227624 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.381870734 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.379781693 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.382600644 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.380448899 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.381165948 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.379936094 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.38152801 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.380954404 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.380255392 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.381633851 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.382924686 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.384884295 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.383179685 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.382255356 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.385863001 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.380689034 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.383755589 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.383029722 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.380542667 seconds)
  done (took 42.705511384 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.405526638 seconds)
    (2/2) benchmarking "in"...
    done (took 1.400322529 seconds)
  done (took 4.06210327 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.382936323 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.383512787 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.382808929 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.382375869 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.384395022 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.383345203 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.383138869 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.384640008 seconds)
  done (took 12.325641778 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.374953302 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.385305836 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.383601524 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.383966083 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.383163049 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.378165513 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.382005975 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.386301237 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.376822315 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.376864319 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.377176141 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.375417524 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.379735159 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.379388152 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.378362059 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.381875231 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.388330218 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.385135017 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.389527852 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.385511321 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.387566505 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.381090901 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.385358944 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.387178729 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.374511731 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.382950209 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.384677289 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.387854882 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.378797767 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.383037141 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.38261445 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.386271759 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.385938338 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.387492203 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.383625213 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.385862203 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.382876232 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.384297799 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.388601097 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.388940161 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.384339002 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.386565447 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.380920335 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.385203522 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.383591752 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.388964426 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.388602561 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.387197542 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.379012143 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.381417357 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.389157535 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.377783146 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.386018945 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.383690298 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.389124742 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.392613832 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.392928704 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.381002278 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.378604519 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.387432595 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.396726313 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.390118302 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.382642168 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.392231788 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.38290254 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.387160777 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.392438938 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.394834975 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.387009675 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.391465413 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.387420147 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.396591706 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.392864216 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.393739216 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.387225371 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.389461524 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.378880664 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.390636764 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.38765497 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.391133298 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.394230324 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.386043161 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.384789074 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.385401792 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.383336936 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.390737041 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.387502949 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.389712745 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.380113846 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.390553838 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.397310899 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.385966483 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.379192788 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.381991474 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.382946921 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.39026483 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.379179246 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.385328926 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.390183716 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.392240078 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.387885527 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.380456971 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.386261456 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.394093716 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.385507237 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.391969914 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.39756728 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.381072712 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.39297306 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.395485957 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.388093208 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.37906149 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.385311258 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.392752284 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.379650616 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.3848782 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.393069799 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.383907603 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.393943767 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.39217226 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.388943174 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.393255092 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.394197407 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.391910281 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.38582031 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.390071118 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.39109988 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.385765132 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.399023298 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.389520856 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.388299451 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.384735094 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.397789937 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.38754692 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.395144314 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.386216945 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.394773364 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.388777966 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.38903519 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.386387093 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.388867674 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.386839053 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.391108078 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.392675141 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.395678598 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.387208106 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.399360784 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.388607713 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.38826824 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.393849356 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.395376229 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.388931492 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.386846926 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.393837934 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.384157115 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.395117742 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.384729772 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.393218093 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.390770954 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.393636449 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.392671824 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.382477608 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.390515163 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.394878546 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.39036876 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.392470946 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.394988329 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.390931296 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.391201273 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.383838186 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.394002224 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.382458465 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.386092297 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.392048322 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.39328589 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.391026053 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.388658941 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.40057606 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.390849234 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.390704564 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.384967569 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.388213448 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.39574718 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.393390955 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.397204811 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.392153157 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.390611968 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.385189688 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.385868802 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.393839188 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.384602583 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.396266223 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.398366261 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.396912303 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.386355364 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.392083017 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.384344362 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.393191998 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.388823289 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.398881862 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.390421306 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.392889192 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.384045024 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.397072431 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.384690485 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.395021539 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.382511036 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.392466316 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.394915626 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.391530814 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.391259218 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.3884414 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.388522272 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.394033584 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.391604409 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.392011293 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.384765088 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.393235933 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.383277369 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.38886292 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.398236446 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.391379388 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.393019428 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.397793444 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.389860893 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.39532721 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.392965541 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.388142338 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.394493791 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.392940122 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.392446955 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.392970456 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.391607734 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.386353411 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.395546616 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.3951325 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.385623847 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.391945965 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.399717594 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.392932837 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.385192023 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.393948472 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.390445131 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.39245821 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.394958062 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.384085614 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.39462304 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.394156361 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.402038602 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.385948025 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.396016292 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.385502585 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.399404562 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.388871268 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.391685568 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.388626043 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.395595953 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.398237211 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.392750395 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.386359967 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.39490023 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.392517291 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.394070454 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.384926062 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.393960618 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.394002813 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.392413102 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.388768904 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.391294897 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.395500657 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.386745295 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.393254961 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.385804287 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.40156302 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.406807662 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.397142512 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.398632665 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.397485866 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.396473395 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.398679477 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.386175162 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.389769446 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.390803824 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.389316397 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.388329465 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.395942892 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.388462444 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.396788927 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.392770323 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.395368224 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.396684437 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.389712618 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.388100064 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.397158045 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.392427131 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.39319721 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.388147174 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.396072046 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.388512564 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.395082211 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.394934494 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.387253951 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.400187482 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.398983496 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.391637106 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.390239786 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.387334064 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.387023797 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.389640473 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.399850793 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.385703091 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.393637487 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.386742844 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.388304151 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.38961351 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.396425701 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.405871953 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.389163162 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.398654105 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.394177703 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.387060965 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.385516178 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.396278484 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.397124782 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.406809006 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.384677445 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.395109146 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.396158782 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.392904441 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.393571209 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.394634382 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.393493068 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.395165953 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.399707146 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.397861523 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.387574566 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.39479288 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.401301169 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.39467226 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.395590484 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.383624982 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.392220607 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.402881791 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.388868491 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.393083881 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.388122309 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.395266448 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.393357213 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.395757312 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.396750231 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.395500843 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.398523222 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.400909641 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.395556456 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.39386611 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.400462155 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.403315244 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.396656018 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.405712299 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.390589748 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.399683623 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.392658897 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.386350306 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.387736095 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.384767108 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.397337295 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.38584873 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.391994703 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.393752072 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.387600543 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.395350376 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.401226281 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.386649211 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.387737932 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.399529478 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.385224376 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.397193556 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.393914819 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.385921704 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.393904366 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.394919995 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.386052703 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.389924367 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.391843864 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.395023708 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.384226676 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.396695067 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.39013681 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.398409601 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.394700099 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.396715229 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.394763999 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.392481243 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.387050188 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.390094482 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.393852382 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.399137446 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.387737172 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.395384506 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.388552941 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.397634936 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.404921797 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.39114451 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.397427406 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.391026345 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.387678295 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.389511394 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.395053393 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.384850615 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.39549483 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.379478061 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.38724016 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.387152027 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.392143666 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.393132479 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.391855185 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.385484528 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.384926127 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.397223292 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.396050765 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.39482627 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.389363 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.395560635 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.389042815 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.389021484 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.390456589 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.38814741 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.399012692 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.390358234 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.391805788 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.391597329 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.398830374 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.396804347 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.400123557 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.391908956 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.389715431 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.400549942 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.401834588 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.395761275 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.386370284 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.394356365 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.388965019 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.39250022 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.393710257 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.38941469 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.393884349 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.398294212 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.393772102 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.393365539 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.388396539 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.400631045 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.40114725 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.399136901 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.39562381 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.406195422 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.406776236 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.401831896 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.391857393 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.396085215 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.393780898 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.40218644 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.399605195 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.389526161 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.403539529 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.398153177 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.396746156 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.397229863 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.397985674 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.388842259 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.402536824 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.397295494 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.391871174 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.406224111 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.396681699 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.40212021 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.40046317 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.397887048 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.391600721 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.389198993 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.39493277 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.393562349 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.397896223 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.399404743 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.405867414 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.39968512 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.396572718 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.400845652 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.40193158 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.401814143 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.392795585 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.398226635 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.39007017 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.397684325 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.397285808 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.391590716 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.40008976 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.400030956 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.395109781 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.394495865 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.399447529 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.402983904 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.396137413 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.396255068 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.405731165 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.410094249 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.397533247 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.393702094 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.400018578 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.40589786 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.399407129 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.403028672 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.395959532 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.410953647 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.418411367 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.393839232 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.398865466 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.405013916 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.414224297 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.403459651 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.402888463 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.396513557 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.399778404 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.404326364 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.402697552 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.409221872 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.407643371 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.397374151 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.405776303 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.397791976 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.401662192 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.404941578 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.415082572 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.406115853 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.398038221 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.408904738 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.409578964 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.400256653 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.416965259 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.410493658 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.399927772 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.408755185 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.396637819 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.407550587 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.398226457 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.410778832 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.403804643 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.404756173 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.4033504 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.39557227 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.406376392 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.407593222 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.414388911 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.406217258 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.396912485 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.400612143 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.407135407 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.406792002 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.408367718 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.403687933 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.404591014 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.404364229 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.398341105 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.410359176 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.418860655 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.409951806 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.406037433 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.404981294 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.40154627 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.404289177 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.402152257 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.408338704 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.404867807 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.408914959 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.401375547 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.415203683 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.408077633 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.39897646 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.398356707 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.403077897 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.409035138 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.415615661 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.424363509 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.410859292 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.404329753 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.410395533 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.404370966 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.3995487 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.40912067 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.405295457 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.398469943 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.402465354 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.411074737 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.410063598 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.407815319 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.401970979 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.409350663 seconds)
  done (took 831.832302742 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.408937238 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.406452303 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.406888674 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.406455646 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.405783153 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.409676191 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.405846876 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.405108671 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.411034555 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.408718978 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.405976495 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.406658114 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.404603727 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.408124002 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.407988982 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.408072728 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.407993489 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.410326576 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.410946939 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.409706802 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.4089596 seconds)
  done (took 30.839974067 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.407994359 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.409215534 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.409611464 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.407914551 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.407366086 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.408223712 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.412262634 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.407926504 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.410723602 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.410099359 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.409304761 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.412809645 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.410716826 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.410178542 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.408895503 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.411825933 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.410402791 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.40834133 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.408749897 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.411354774 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.409668112 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.410465342 seconds)
  done (took 32.291431086 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.407551134 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.41217003 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.403457954 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.415736844 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.412406542 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.413499088 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.409289212 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.411076656 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.412345538 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.405590275 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.403812805 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.407601964 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.407057932 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.415284449 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.411061612 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.418879745 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.415599636 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.415058544 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.411169213 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.413071396 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.417659218 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.426096156 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.413875981 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.404711966 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.413456434 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.412747693 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.411365007 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.411675597 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.404778071 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.416149697 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.414151537 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.406288883 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.413646592 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.418183191 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.406155589 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.418370977 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.415348635 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.41253074 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.413812061 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.412723129 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.419205676 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.414374561 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.416383969 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.425528873 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.415733668 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.408239296 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.416967766 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.412965205 seconds)
  done (took 69.094935433 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.412613362 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.416517037 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.417640267 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.415636553 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.416051936 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.414876565 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.415274508 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.4142023 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.414757849 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.414031989 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.415967519 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.415472531 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.416517882 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.411276413 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.41580605 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.416937687 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.417561914 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.415353405 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.414522099 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.415812566 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.415307454 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.413991851 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.415844311 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.41673921 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.41776077 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.415215965 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.415049984 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.417854349 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.418337887 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.417414412 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.417577644 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.418044917 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.417409076 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.415141058 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.41776564 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.419957405 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.418634759 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.419184452 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.420874835 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.417268464 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.417258036 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.417164877 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.419214088 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.417285139 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.418134068 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.417674866 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.420892161 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.420258899 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.421744458 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.419856548 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.420213065 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.419599222 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.415987993 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.421059741 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.418389574 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.420837848 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.418763566 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.41923715 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.420451994 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.420931552 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.421028754 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.418389375 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.41979913 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.418253331 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.417110981 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.417079104 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.419769511 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.418907903 seconds)
  done (took 97.672771369 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.420644732 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.419425839 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.420355414 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.41830866 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.420366851 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.419985333 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.421122338 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.420910592 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.418070255 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.418608517 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.418648121 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.420333062 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.4180633 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.420322655 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.419919889 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.418877734 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.420254352 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.41801431 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.421562206 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.419720156 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.422250222 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.419268736 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.42136413 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.420948298 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.421663385 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.417565063 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.418595716 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.419395523 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.419023739 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.421184535 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.420274696 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.421152189 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.421791308 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.422488294 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.419667738 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.420060583 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.419878001 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.420307842 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.417548722 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.412898498 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.411602419 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.413057443 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.411953156 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.413166704 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.414732406 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.410706345 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.407863016 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.407542045 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.406091984 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.4087692 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.406312636 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.406647634 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.407732111 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.405806262 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.404885772 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.40657963 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.408042448 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.407038 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.405883403 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.406263968 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.404569797 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.40689758 seconds)
  done (took 89.060919422 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.405283493 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.40588659 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.406117557 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.406436276 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.402511912 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.40147522 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.405562584 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.403150962 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.402927962 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.403699786 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.40628568 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.399083731 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.401388944 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.401516866 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.399605216 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.40288758 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.400861208 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.40245599 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.396098009 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.394274682 seconds)
  done (took 29.323059377 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.39603211 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.395307606 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.396386555 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.396318312 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.395360068 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.393482776 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.391380003 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.393051959 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.392389464 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.390991068 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.395064206 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.394436786 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.387789886 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.390409147 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.391467953 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.390739002 seconds)
  done (took 23.560133999 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.390490599 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.390221004 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.386387508 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.388670084 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.386030994 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.387097626 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.386872924 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.385325592 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.388215183 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.382545474 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.383318404 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.382819118 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.381299622 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.383315459 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.383661989 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.384229779 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.379775196 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.37985623 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.379133469 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.380485427 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.379414815 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.379063275 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.379610693 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.379376554 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.376355802 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.376165614 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.37706326 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.375346336 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.375635363 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.376991773 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.379017418 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.374359015 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.374198324 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.375131471 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.372609276 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.373359017 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.374414725 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.376805699 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.371180772 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.37129233 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.372281187 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.370609357 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.371187246 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.37171019 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.370652056 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.36940793 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.370179168 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.369915778 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.367817748 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.368472128 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.369912605 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.369194678 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.369756679 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.365844415 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.36804949 seconds)
  done (took 77.017324489 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.364764169 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.368185315 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.368092147 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.369939079 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.36514163 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.363543414 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.365993547 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.368223287 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.363822656 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.364382611 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.365397351 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.365331373 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.362088034 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.363979646 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.362955784 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.363676421 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.364804653 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.364076239 seconds)
  done (took 25.821010427 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.360028676 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.361887357 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.361588611 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.36127302 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.361952675 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.364265747 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.363281746 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.35821593 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.36006971 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.361906726 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.360141638 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.35861243 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.360350414 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.360113701 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.361238938 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.357813976 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.35838646 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.357982003 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.35744831 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.357708814 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.358828697 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.359292161 seconds)
  done (took 31.168069396 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.346570163 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.345777671 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.346501529 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.360273738 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.355248089 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.346075544 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.348430189 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.345647421 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.361502902 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.370821486 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.364314586 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.352261663 seconds)
  done (took 17.481123214 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.356601739 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.352996064 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.352936458 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.353367088 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.353706965 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.352817011 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.352542516 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.35472396 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.351038424 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.35275714 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.35217401 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.352131523 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.350391899 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.353420252 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.35290497 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.352853559 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.350751844 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.351605651 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.349119296 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.350158309 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.351146705 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.350096615 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.351013797 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.348075055 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.348859989 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.348119542 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.347736456 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.350014637 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.350312541 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.34804794 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.348613337 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.348120325 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.347492176 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.348046218 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.348235149 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.34904303 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.349198769 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.348967465 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.349276226 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.346817444 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.34732315 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.349120239 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.348485389 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.348887316 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.349929807 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.349621349 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.345896981 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.347004671 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.348368337 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.348286 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.346209967 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.347519554 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.349444047 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.34524033 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.345726897 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.34738004 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.346301881 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.346116729 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.347544785 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.348731702 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.34426327 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.344559456 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.345489091 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.346457363 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.34595584 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.34453676 seconds)
  done (took 90.289341175 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.346139655 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.344994402 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.34466188 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.343130678 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.345089537 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.351801387 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.34466892 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.347749935 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.344516029 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.344503908 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.344541237 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.343145335 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.344194495 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.34480631 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.345394024 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.343917838 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.344454182 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.343426696 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.34495786 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.345000303 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.346633661 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.344661217 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.346227082 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.345069352 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.345150167 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.344344363 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.344801399 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.346321374 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.344593601 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.345681102 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.344371092 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.345742448 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.344801925 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.345103349 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.345911183 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.343862807 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.345470501 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.345130416 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.343935607 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.345209123 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.346393983 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.346923004 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.34673614 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.346877961 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.346544791 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.345585848 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.346386174 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.345986648 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.347567598 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.346314127 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.345930162 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.344628737 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.347340321 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.34705554 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.346981166 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.345645728 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.346133601 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.346227048 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.347021816 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.348163689 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.344166451 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.346739453 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.346886683 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.345975064 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.346600576 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.347178489 seconds)
  done (took 90.041138417 seconds)
done (took 1930.722352923 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.502464093 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.456764311 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.334196194 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.348831588 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.335624975 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.339023432 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.344839134 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.334993953 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.33473219 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.334209732 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.334084672 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.527218795 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.367901831 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.334245616 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.334598723 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.433992207 seconds)
  done (took 27.226363458 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.361183565 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.34386284 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.449737039 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.345248866 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.363824142 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.522557072 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.400338425 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.340529447 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.503033383 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.362186962 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.332422795 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.36497589 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.34137938 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.333325369 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.364198846 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.520913045 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.597075351 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.337489015 seconds)
  done (took 29.411668408 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.76335313 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.365234613 seconds)
  done (took 5.356202203 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.360776135 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.341197415 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.340292266 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.33824236 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.341457426 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.332474379 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.339998135 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.347730946 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.342127766 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.466844031 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.342729162 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.353629486 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.355783545 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.341941965 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.349056178 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.386503214 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.506322812 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.349837078 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.348171333 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.347613159 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.340446644 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.434895067 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.381909515 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.352936921 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.460363541 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.348172913 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.348803142 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.347701615 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.457708832 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.35170382 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.34080485 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.341930049 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.34387747 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.280991638 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.876715374 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.339172021 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.363777771 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.350027025 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.351812331 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.489767092 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.343921115 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.350721634 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.334392156 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.870260886 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.446102527 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.455425626 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.349936549 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.356940553 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.34275072 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.40457206 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.341315403 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.343346299 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.399285329 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.138271837 seconds)
  done (took 85.845269904 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.391683407 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.33692826 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.51803906 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.359928616 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.335774018 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.35311828 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.336396724 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.612015919 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.353130622 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.33591706 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.646747498 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.94798175 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.344636236 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.401689504 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.379473013 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.39058279 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.336256431 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.336126429 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.342067239 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.338120153 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.899941315 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.336521531 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.336987595 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.415126421 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.378142147 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.869710718 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.345302291 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.340404553 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.339345171 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.335224124 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.918031609 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.351742825 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.387306114 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.334097082 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.614690877 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.716986349 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.681325523 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.346385809 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.3564782 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.331546889 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.353065977 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.852578796 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.702770519 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.332436101 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.328287681 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.855473308 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.333428994 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.329925376 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.328349485 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.597980189 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.328958506 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.332333246 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.339541666 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.335000152 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.330449297 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.390483038 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.38860485 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.864301549 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.33599732 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.329577864 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.383207367 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.332784287 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.33177158 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.332224254 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.332449015 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.699497958 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.580240638 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.339785167 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.69588061 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.909711766 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.336343292 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.992455702 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.335903304 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.338247267 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.364103656 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.332524684 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.33542321 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.865669607 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.364971324 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.331921212 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.676630825 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.337086606 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.634744012 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.348048486 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.336691932 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.913245498 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.348087913 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.38100465 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.332374563 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.336063759 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.351697996 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.335408635 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.622646416 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.380842644 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.331700367 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.332827886 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.369198355 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.33250194 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.350805975 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.338922289 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.983364134 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.34202833 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.332992212 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.352435008 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.333969752 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.338421037 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.334573141 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.332832092 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.616817398 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.337807178 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.345380668 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.336351776 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.333544871 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.343746254 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.413396109 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.333460415 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.640340517 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.342806578 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.334195747 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.343123314 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.338472355 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.35174143 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.335056042 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.343521254 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.335901029 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.63860647 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.35061203 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.354217669 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.335130049 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.335194145 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.337296056 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.35797324 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.388355049 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.33892758 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.127564045 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.38003005 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.33556807 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.335026577 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.34933296 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.33540694 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.346065421 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.340038685 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.639989434 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.625167378 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.563902439 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.339665815 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.335674032 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.147223799 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.374167425 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.520187191 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.352195802 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.336037431 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.618420262 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.560472258 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.338462022 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.336281281 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.340990792 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.616873832 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.337409242 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.683466084 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.942010872 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.342423281 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.348373474 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.136928668 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.16114254 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.343875609 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.342009097 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.636795603 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.353922459 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.337642479 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.336907952 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.336986788 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.340709441 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.342154323 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.344786662 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.338291058 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.336798827 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.681271397 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.533129619 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.35258952 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.339520686 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.869876348 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.368391441 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.338155286 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.344802124 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.342654024 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.338082975 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.389215949 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.337870451 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.362750709 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.341133176 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.344369286 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.898627562 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.343550662 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.340488415 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.532810851 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.077633039 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.345069543 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.339495789 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.34134024 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.397741017 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.900006051 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.381975273 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.64493977 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.344628808 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.380800196 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.339509135 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.356671527 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.899409952 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.350414632 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.339743651 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.080069646 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.345398249 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.778075813 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.340250504 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.356465128 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.002033812 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.345558303 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.343850749 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.341545468 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.358784363 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.672128039 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.340840856 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.352447579 seconds)
  done (took 499.833537608 seconds)
done (took 648.901210489 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.340329791 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.338628567 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.346040738 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.345917866 seconds)
  done (took 10.606015313 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.35869487 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.34664122 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.357122156 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.34587606 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.355303969 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.345825844 seconds)
  done (took 9.345725634 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.34117149 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.34037891 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.347723456 seconds)
  done (took 8.265910962 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.54716975 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.362417516 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.694591883 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.354809292 seconds)
  done (took 9.195614698 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.358701268 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.357966185 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.359313913 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.357055068 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.36036202 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.361312868 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.359438089 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.358264448 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.360941297 seconds)
  done (took 13.469147616 seconds)
done (took 52.115902954 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 1.829644829 seconds)
    (2/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.324174065 seconds)
    (3/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.361463891 seconds)
    (4/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.680690255 seconds)
    (5/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.345807345 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.411753477 seconds)
    (7/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.32191138 seconds)
    (8/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.53470702 seconds)
    (9/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.377455783 seconds)
    (10/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.44731514 seconds)
    (11/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.380547268 seconds)
    (12/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.336522904 seconds)
    (13/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.441013489 seconds)
    (14/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.424583092 seconds)
    (15/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.499657826 seconds)
    (16/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.43233065 seconds)
    (17/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.323877199 seconds)
    (18/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.620285642 seconds)
    (19/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.326805864 seconds)
    (20/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.352207965 seconds)
    (21/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.502318529 seconds)
    (22/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.661524309 seconds)
    (23/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.344996767 seconds)
    (24/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.433756443 seconds)
    (25/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.424215542 seconds)
    (26/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.373787352 seconds)
    (27/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.589390273 seconds)
    (28/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.458653802 seconds)
    (29/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.377774576 seconds)
    (30/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.384640028 seconds)
    (31/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.37437679 seconds)
    (32/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.554248984 seconds)
    (33/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.386269653 seconds)
    (34/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.48695105 seconds)
    (35/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.42802754 seconds)
    (36/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.323680606 seconds)
    (37/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.692006253 seconds)
    (38/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.423078639 seconds)
    (39/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.325797292 seconds)
    (40/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.324552489 seconds)
    (41/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.341342437 seconds)
    (42/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.502652085 seconds)
    (43/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.561354628 seconds)
    (44/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.432727256 seconds)
    (45/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.424146624 seconds)
    (46/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.42591561 seconds)
    (47/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.498685511 seconds)
    (48/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.500240216 seconds)
    (49/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.496887253 seconds)
    (50/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.528340918 seconds)
    (51/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.377620228 seconds)
    (52/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.488205735 seconds)
    (53/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.328950155 seconds)
    (54/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.442293308 seconds)
    (55/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.438066854 seconds)
    (56/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.326756525 seconds)
    (57/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.606760713 seconds)
    (58/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.36107571 seconds)
    (59/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.329220701 seconds)
    (60/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.432248319 seconds)
    (61/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.324735518 seconds)
    (62/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.502388597 seconds)
    (63/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.529785883 seconds)
    (64/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.626610707 seconds)
    (65/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.620363666 seconds)
    (66/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.330165242 seconds)
    (67/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.521009505 seconds)
    (68/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.556126819 seconds)
    (69/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.420809838 seconds)
    (70/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.55431315 seconds)
    (71/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.467319995 seconds)
    (72/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.44367582 seconds)
    (73/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.425236756 seconds)
    (74/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.444902746 seconds)
    (75/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.657840106 seconds)
    (76/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.335317172 seconds)
    (77/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.556893296 seconds)
    (78/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.562318837 seconds)
    (79/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.432889188 seconds)
    (80/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.448696321 seconds)
    (81/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.635328305 seconds)
    (82/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.473401409 seconds)
    (83/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.43437593 seconds)
    (84/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.349136685 seconds)
    (85/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.328465746 seconds)
    (86/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.523071075 seconds)
    (87/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.495357101 seconds)
    (88/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.591609438 seconds)
    (89/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.365818305 seconds)
    (90/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.359327457 seconds)
    (91/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.468847176 seconds)
    (92/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.382297581 seconds)
    (93/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.425656939 seconds)
    (94/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.680686324 seconds)
    (95/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.383127648 seconds)
    (96/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.468555861 seconds)
    (97/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.560833072 seconds)
    (98/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.380543488 seconds)
    (99/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.417792229 seconds)
    (100/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.461689732 seconds)
    (101/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.427615137 seconds)
    (102/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.528950439 seconds)
    (103/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.38998828 seconds)
    (104/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.429668414 seconds)
    (105/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.562554728 seconds)
    (106/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.34949057 seconds)
    (107/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.33971107 seconds)
    (108/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.356559978 seconds)
    (109/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 1.839644638 seconds)
    (110/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.328735116 seconds)
    (111/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.353079289 seconds)
    (112/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.432294082 seconds)
    (113/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.38538684 seconds)
    (114/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.464030559 seconds)
    (115/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.440412568 seconds)
    (116/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.33099237 seconds)
    (117/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.463427225 seconds)
    (118/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.390942229 seconds)
    (119/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.367813244 seconds)
    (120/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.464990157 seconds)
    (121/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.382958872 seconds)
    (122/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.589204715 seconds)
    (123/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.377782998 seconds)
    (124/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.33299125 seconds)
    (125/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.651933256 seconds)
    (126/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.329059541 seconds)
    (127/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.391951851 seconds)
    (128/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.418328764 seconds)
    (129/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.462671782 seconds)
    (130/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.465565576 seconds)
    (131/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.550562763 seconds)
    (132/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.695620801 seconds)
    (133/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.389370913 seconds)
    (134/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.596664266 seconds)
    (135/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.497389413 seconds)
    (136/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.509532062 seconds)
    (137/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.48224803 seconds)
    (138/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.444385631 seconds)
    (139/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.457719934 seconds)
    (140/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.449753038 seconds)
    (141/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.370501574 seconds)
    (142/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.418755641 seconds)
    (143/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.632431717 seconds)
    (144/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.518071153 seconds)
    (145/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.456758198 seconds)
    (146/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.603577376 seconds)
    (147/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.335426213 seconds)
    (148/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.367661197 seconds)
    (149/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.444691663 seconds)
    (150/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.530135596 seconds)
    (151/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.333175893 seconds)
    (152/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.453926425 seconds)
    (153/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.449388376 seconds)
    (154/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.345030993 seconds)
    (155/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.52913518 seconds)
    (156/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.333598505 seconds)
    (157/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.570087844 seconds)
    (158/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.334726707 seconds)
    (159/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.419126568 seconds)
    (160/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.45450473 seconds)
    (161/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.598748338 seconds)
    (162/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.393861063 seconds)
    (163/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.332253078 seconds)
    (164/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.5063607 seconds)
    (165/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.470033462 seconds)
    (166/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.50808838 seconds)
    (167/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.335509338 seconds)
    (168/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.338547379 seconds)
    (169/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.42883885 seconds)
    (170/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.33215176 seconds)
    (171/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.6391808 seconds)
    (172/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.765235569 seconds)
    (173/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.438246561 seconds)
    (174/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.348065903 seconds)
    (175/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.604927745 seconds)
    (176/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.391923331 seconds)
    (177/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.485364083 seconds)
    (178/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.601116092 seconds)
    (179/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.331857108 seconds)
    (180/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.513764486 seconds)
    (181/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.394863693 seconds)
    (182/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.463808927 seconds)
    (183/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.511141151 seconds)
    (184/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.558247957 seconds)
    (185/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.470569962 seconds)
    (186/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.708160685 seconds)
    (187/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.526799669 seconds)
    (188/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.338497685 seconds)
    (189/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.50120409 seconds)
    (190/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.427541624 seconds)
    (191/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.535309451 seconds)
    (192/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.659504899 seconds)
  done (took 329.165371115 seconds)
done (took 330.402982495 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.385089483 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.453520309 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.365036345 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.364134097 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.365746249 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.369160991 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.384386057 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.360759582 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.378005986 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.378272751 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.362684779 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.377388695 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.380180604 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.375987935 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.399205126 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.366194449 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.363726574 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.376420209 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.380467221 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.380163362 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.36620935 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.365278495 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.387702708 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.36485887 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.370906967 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.373895299 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.37100257 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.360187535 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.37290906 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.380597278 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.360824832 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.371223928 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.385518433 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.37727023 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.366934245 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.375412006 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.36773853 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.456527856 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.386634206 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.37664997 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.375713176 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.382547524 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.370908383 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.371967083 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.379391666 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.395863571 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.375890975 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.381203175 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.363124116 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.357034446 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.391965235 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.379296949 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.375048187 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.35771552 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.365237631 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.387976129 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.378547842 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.38770176 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.374122559 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.368855922 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.40252978 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.386949979 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.379622435 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.375086998 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.375517926 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.383025529 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.378229362 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.383442452 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.374925713 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.371121197 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.370227608 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.376271081 seconds)
done (took 108.431886781 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.490862296 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.363999122 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.524916681 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.375216975 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.535895533 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.495865488 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.375145657 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.375852915 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.376350237 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.170237659 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.375884836 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.375808178 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.365997168 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.377220807 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.49146107 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.376416952 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.376307762 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.068511684 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.376942626 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.504748168 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.367678751 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.375897871 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.378086992 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.175767458 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.366798852 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.36316498 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.506460932 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.377980109 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.076266007 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.360539221 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.36422689 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.075963705 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.506635237 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.398824578 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.386879641 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.387458734 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.537783633 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.382177606 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.49348525 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.494614209 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.527829651 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.415822055 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.363790357 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.366986107 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.380769578 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.379127639 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.380332649 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.407551562 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.365788996 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.37996838 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.072886862 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.388242671 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.380476505 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.37878125 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.379996486 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.407383128 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.379625911 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.380249496 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.506349007 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.380565885 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.492920855 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.178493862 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.176570159 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.379868369 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.366790302 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.38034541 seconds)
  done (took 110.998433404 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.439559803 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.447732387 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.483550863 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.371386431 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.421597198 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.48377004 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.372070393 seconds)
  done (took 11.275690648 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.377211703 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.379759864 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.420096935 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.419448846 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.379773852 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.546848235 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.382028271 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.382418927 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.37972999 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.421544279 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.38154855 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.380995925 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.390200525 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.372462717 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.420574405 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.384552094 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.49273008 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.375228618 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.382652611 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.52401856 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.380831187 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.391143361 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.423823375 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.384476369 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.381839943 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.379797085 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.155077382 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.38131446 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.382544566 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.382846568 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.38206889 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.440341566 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.382972584 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.372088027 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.380973519 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.486598688 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.382525926 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.382024262 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.384149984 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.374851099 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.383641171 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.38165235 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.382701108 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.382215346 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.381861393 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.396515189 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.382275215 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.383166048 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.382687876 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.382446162 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.42234149 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.383054535 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.384070846 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.382501572 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.42705473 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.393206999 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.382877981 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.38291531 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.383612001 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.38316934 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.527380488 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.42206439 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.383416019 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.422015197 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.383332291 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.384127515 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.383781906 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.383056233 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.464996972 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.383367796 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.420782859 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.384522777 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.557515014 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.398592485 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.384041069 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.377536864 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.378578671 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.384114942 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.37292869 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.385284166 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.382770453 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.379054729 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.383370724 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.385314796 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.385464798 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.535836869 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.482185143 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.384838334 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.391697082 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.38505576 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.385506382 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.42797538 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.385884638 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.384779131 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.427844173 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.495695175 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.427409238 seconds)
  done (took 142.04109017 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.389145143 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.390290561 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.379481569 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.403980351 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.377076006 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.3771486 seconds)
  done (took 9.579058136 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.380976334 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.389988987 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.388507396 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.385335379 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.387023175 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.38729763 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.387357275 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.379025037 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.391537438 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.387920207 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.388067575 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.388855508 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.387755611 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.387840678 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.388472653 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.38651463 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.386130851 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.387956756 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.38733136 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.387667377 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.374913232 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.387696192 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.387624575 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.380644435 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.389963237 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.386924727 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.403062159 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.387374385 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.387150181 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.384743828 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.390344824 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.390625841 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.379771145 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.384551298 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.391173846 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.380016294 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.39167625 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.390438562 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.389301267 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.388564971 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.391574883 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.389258797 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.389039814 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.391717402 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.381188215 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.384798615 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.39373559 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.404485909 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.389610169 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.39208797 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.390091577 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.388181605 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.390643632 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.39183759 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.382879187 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.384756653 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.393894472 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.390886489 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.39029819 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.380817175 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.393917507 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.391374713 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.383461083 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.392704417 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.38907613 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.39044684 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.383871254 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.393127387 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.391720469 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.391143339 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.392433007 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.39050051 seconds)
  done (took 102.227560412 seconds)
done (took 377.374321812 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.727138079 seconds)
  done (took 3.993971251 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.383183203 seconds)
  done (took 3.648702756 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.633875942 seconds)
  done (took 22.902374801 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.419657561 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.433378101 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.399785872 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.380635618 seconds)
  done (took 10.899144642 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.653357447 seconds)
  done (took 3.920625207 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.384337361 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.385718036 seconds)
  done (took 6.037910771 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.59057037 seconds)
  done (took 3.857865538 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.580644599 seconds)
  done (took 3.849959297 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.398745332 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.40791286 seconds)
  done (took 6.079899317 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.357581639 seconds)
  done (took 3.624053775 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.388202027 seconds)
  done (took 20.655861035 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.406056474 seconds)
  done (took 3.675026222 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.413152529 seconds)
  done (took 3.680495259 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.928388283 seconds)
  done (took 6.195035171 seconds)
done (took 104.286934061 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.377111036 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.375915959 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.376181064 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.37767955 seconds)
  done (took 10.774141275 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.455990512 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.455706244 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.464330087 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.450347391 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.445261227 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.459410964 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.418549483 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.418487849 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.449080866 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.444941241 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.460559917 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.450796776 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.455446174 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.419746741 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.445721764 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.461054033 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.448883931 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.466136413 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.432119038 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.451469856 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.393724316 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.453372798 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.44578295 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.393715762 seconds)
  done (took 35.909835612 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.903115609 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.455880252 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.539334346 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.436296747 seconds)
  done (took 7.602567274 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.497871329 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.498429993 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.51729581 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.560263448 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.580953661 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.513406992 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.42058853 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.418039803 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.401782169 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.500285137 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.578537148 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.498081259 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.71395556 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.394339981 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.712766817 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.395306906 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.395302811 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.500826789 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.548317694 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.579427927 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.396641401 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.499514178 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.5050112 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.499196016 seconds)
  done (took 37.39606385 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.404717661 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.41345809 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.396745867 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.41254528 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.39740124 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.398138485 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.400311928 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.403214268 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.395765854 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.396085043 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.397032091 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.410569703 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.398105274 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.397579426 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.404080125 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.399400848 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.400794549 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.403492152 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.404686743 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.398383497 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.39794137 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.4044117 seconds)
  done (took 32.106720693 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.383749047 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.381435491 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.734766712 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.637538538 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.381739287 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.382245052 seconds)
  done (took 14.172619699 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.459390562 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.595522145 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.390176137 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.73853496 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.830775554 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.395320134 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.389226926 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.633822989 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.932746111 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.932055326 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.451314344 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.459951627 seconds)
  done (took 20.481150133 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.396052256 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.388224368 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.39821278 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.405164239 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.444948663 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.394760125 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.395870144 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.383865487 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.450425292 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.448820585 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.394520538 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.445726993 seconds)
  done (took 22.220908004 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.480800338 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.394236698 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.399236685 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397551938 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396426334 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.394854963 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.474132603 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.100601389 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.398386776 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.670491985 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394995052 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.485143479 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.64263601 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395009163 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.401159931 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.363620506 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.626548499 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.905358453 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394770033 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395191043 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432367692 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.399133196 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.40064733 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.612258801 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.399216448 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.39432239 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.658472338 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.395028289 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.687479214 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.662621656 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.664064067 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.405705063 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.671383024 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.037433141 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.50287283 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.60682141 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393456954 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.402768535 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.38233004 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.401433538 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404136168 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.40260455 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.657929324 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403374841 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.396197791 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.397691241 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.11155676 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.405698028 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.395542587 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.39768815 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.659402999 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.485226569 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.403378901 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.396905586 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39868536 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398726315 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.402922956 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.523838682 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.038934907 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399839596 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405267054 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.405439944 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.389957122 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418973318 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.067925144 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.405739574 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.406050172 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.403123999 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399060812 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.408459835 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.425513442 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397682005 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.419853573 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399406391 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.191408506 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.404513513 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404997854 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.970396491 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402220054 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.405430068 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.625374304 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398969136 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399249199 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.396820382 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.399284689 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.159073391 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405887989 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.368724125 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.438816592 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.103974324 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.608438341 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423630751 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428631611 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.620994769 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.367923504 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399484656 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.400203176 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407050472 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42213735 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.108466823 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399309395 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.40583109 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.649235321 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.613049764 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400768567 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.39179725 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.9049522 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402396779 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.427929816 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.399942678 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.617613134 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.043289005 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.667324311 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407147015 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.441453543 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.400396327 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.221693161 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40486932 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.411812822 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.407677252 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.690532147 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.251323985 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401842151 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.477034234 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404460991 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.402163712 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.403480647 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409168639 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.403163329 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.590811084 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.406907723 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.671143709 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.410035458 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401942918 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.413263096 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417426553 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.408565253 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.626254372 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405716475 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.684125588 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403743483 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402077613 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403592578 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.621746765 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.409623003 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.410844391 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.745233136 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403620134 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.439469257 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.672269904 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.441483169 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.518226628 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.435815145 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.41534787 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.656731901 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.411802261 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.408834397 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.407453576 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.411397655 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409638133 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.411979471 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404605749 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.049912803 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386935635 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.409332097 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.404935887 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.420646251 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.479426153 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.413118442 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.615466227 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.422216102 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408335602 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.415741168 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.417716753 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.631862965 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.668278072 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.410803218 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.585051328 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.885720582 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.04697883 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.422848809 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.404126387 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.404482016 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.405079555 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40674456 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404005459 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.404292132 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.616942866 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.677540218 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.410100224 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.075237591 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408513717 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.411788885 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.419348797 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.668719222 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.422089601 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40748778 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.407818168 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411253587 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.413499299 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.675587263 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.632523335 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.424311454 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.407484004 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.968751677 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.414234629 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.40470875 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.407693251 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43342611 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.411087301 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.256863558 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.747865489 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.416468434 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.676827492 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.41643875 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.429523352 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.406592751 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410133548 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.427138539 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.415866475 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417479062 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.621127237 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.429823639 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416393719 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.044694365 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.212826476 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.996840358 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.409783114 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.426994961 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.415277867 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.119815782 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407794366 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.41047293 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.65946244 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.121418656 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408815551 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.892117384 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.411528546 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.176114206 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.678925184 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.641880388 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.410198242 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.421322015 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.682743537 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.627647073 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.439665889 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.411761247 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41348784 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.377760156 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.966792498 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.416181946 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.593362691 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.121667539 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415690833 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.416278594 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.477613095 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.415062952 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.801088895 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.412592266 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411252621 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.415554425 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.427713726 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.258022371 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.414530043 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.412426612 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.089324444 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.426744195 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.898898217 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409481487 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.623960151 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.680278219 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.657924781 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.431705396 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.423957128 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.661668415 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.67690837 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418744572 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.416165156 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.004202607 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.269004627 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.418306751 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412345538 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.2299326 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417145705 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.725396991 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.415435863 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.432704298 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.42065298 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.413204868 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411897435 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.411556908 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.418935994 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390634459 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.921588699 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.408292742 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411327203 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.418232965 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419950386 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.660607078 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.428763288 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.056946643 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.638450812 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.403651262 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.467261377 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.418993809 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.423394891 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.389041446 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.412461058 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.413146051 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.434328686 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.633703081 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.429730747 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.383647572 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.419484519 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.624383812 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.412835846 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.420811629 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.645766099 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.417871102 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.426976992 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.222948305 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.443372783 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.42364028 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416677081 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.409325569 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.456913476 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.48774465 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.627895463 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.686788727 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.686622522 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.813230915 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.429155973 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.417081188 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.432932746 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.497388532 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414124546 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.437533224 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.419716747 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.060966621 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.227013493 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.06950102 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.683075926 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.421623351 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.426259929 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416336505 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.657994051 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.415614807 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.691199755 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415432183 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.405916644 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.444726451 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.428469199 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.434567912 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.635000359 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.692012705 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.417500222 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.426054843 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.422914062 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.417270093 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.687270605 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.637283308 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.933111492 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.983979263 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416467614 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.427907977 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.135006739 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.691353247 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415213021 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.417414784 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41840995 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.435024177 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.425117948 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.425438686 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.43197384 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.641652024 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.681543856 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.073637711 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.685792508 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.600223128 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.337691612 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416809995 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.67142416 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.249097385 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.630852873 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.076345254 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.174183576 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.67056293 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.49394891 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.631984667 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.42306422 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.656570511 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.419781983 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.423223351 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.418459438 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41872448 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.419050866 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.683311207 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.075950825 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.673234483 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.42409652 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.420402642 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.454582792 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.632912975 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.646453826 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.193741374 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.639138813 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.689096487 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.432039175 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.419687756 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.076415787 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.688849183 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.426638498 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.425010527 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.653073564 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.42467099 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.459351526 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.296826757 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.421341189 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.998510796 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.631102624 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.441761869 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.425905934 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.184663636 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.074395672 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.420835493 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941917217 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.420526482 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420427498 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.703463494 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.428271841 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.426988306 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.709438316 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.428845655 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.424258617 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.641346009 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.074483683 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.195342981 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.448201693 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.431588996 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.430477845 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423498772 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.504061888 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422839992 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.423353588 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.819913067 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.42709352 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421683537 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.436266259 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.426454289 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.433096371 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.427905319 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.423277843 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.432136595 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.398523443 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.411112678 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.430892649 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.555360547 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.985549307 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.425222301 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.040942228 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.76048526 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.672392592 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.430109884 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.398449264 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.431367326 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.425740984 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.424021305 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.422876845 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.423703145 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.018281141 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.428309267 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.696772286 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.436863753 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.637045877 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.638510597 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.43752797 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.641102654 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.437478003 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.449499405 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.393778641 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.425431601 seconds)
  done (took 1000.526362383 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.45145058 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.429700204 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.424486973 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.425709839 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.457046483 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.444235136 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.451745186 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.501346651 seconds)
  done (took 20.88812065 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.425752853 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.425279231 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.42499788 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.424912216 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.429870353 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.919919532 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.42506807 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.426616442 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.440338442 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.426608986 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.427213635 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.067958133 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.427156102 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.428184919 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.432721148 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.428309375 seconds)
  done (took 33.285636999 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.209330099 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.470919496 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.106139066 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.489774169 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.437577065 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.422089025 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.59858471 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.417961526 seconds)
  done (took 26.456524919 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.433821075 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.432057157 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.434471683 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.433782285 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.431545972 seconds)
  done (took 8.470596175 seconds)
done (took 1271.559770426 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.434075034 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.436251488 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.433674496 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.434262429 seconds)
  done (took 7.04146685 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.398377087 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.397366699 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.400674416 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.420443787 seconds)
  done (took 9.92131353 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.131392906 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.957086217 seconds)
  done (took 5.392948698 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.963692231 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.958754135 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.952326921 seconds)
  done (took 7.17930318 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.705631383 seconds)
  done (took 3.010286626 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.392589838 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.425819328 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.433125173 seconds)
  done (took 8.556743137 seconds)
done (took 42.405616336 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.426715257 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.182942676 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.574260625 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.42594714 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.5803369 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.575513778 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.671207384 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.41986457 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.423334972 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.421814922 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.42635527 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.582172144 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.65841283 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.179331523 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.65819467 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.183586853 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.580746338 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.41964064 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.447406472 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.422137852 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.670488305 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.429915677 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.422460363 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.431422415 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.581363801 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.565093558 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.422470701 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.184253479 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.427418888 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.421278182 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.565529146 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.420768696 seconds)
  done (took 84.107862942 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.422862122 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.420756698 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.437009291 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.440432396 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.421316834 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.436946738 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.424689363 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.421506973 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.4243446 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.423972712 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.421977703 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.424565425 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.423159543 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.421994591 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.42109984 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.42285041 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.422072417 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.421301821 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.422244681 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.422554817 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.422851365 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.433636622 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.421896412 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.436666712 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.452832152 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.424586478 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.438198789 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.440598956 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.422888805 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.423581431 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.439970407 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.439277229 seconds)
  done (took 79.002992302 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.436264454 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.422888505 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.436038748 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.423875445 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.456442655 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.439686863 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.427949423 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.421766461 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.423465445 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.429119332 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.440417973 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.424012721 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.438572566 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.423484473 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.427596939 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.424348422 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.435808433 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.428593633 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.441467962 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.437313735 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.423515852 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.424204256 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.432654093 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.423976909 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.437094883 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.430030079 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.440013874 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.432844147 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.425029769 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.424051151 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.450847358 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.425315209 seconds)
  done (took 79.11732836 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.664732282 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.439339635 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.443513705 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.435435222 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.444231117 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.440178617 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.436356612 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.673691192 seconds)
  done (took 15.288786947 seconds)
done (took 258.822636707 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.436355303 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.930582836 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.466289378 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.435044347 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.456374192 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.464427771 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.642721535 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.462733116 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.630539236 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.449843944 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.449405752 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.435588508 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.242931099 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.573377396 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.246734086 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.379052246 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.320938044 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.432937025 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.021359503 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.660743378 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.462487075 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.426971794 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.25693082 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.335936025 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.414210192 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.503127039 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.498852501 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.591683551 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.554106962 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.497827009 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.926738899 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.448167607 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.445906654 seconds)
  done (took 65.812513053 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.434136412 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.44328714 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.443371281 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.443006216 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.443741743 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.443627531 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.435316465 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.443593589 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.443575956 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.444408536 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.444058064 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.444818087 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.445046837 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.443111809 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.44374691 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.41790646 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.434908171 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.445070264 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.434266418 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.417810976 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.444779235 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.44464265 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.445300212 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.444966798 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.445254824 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.445385513 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.445555713 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.448209347 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.445426249 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.448108185 seconds)
  done (took 44.560464431 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.445970901 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.995186784 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.183150136 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.449185207 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.436954508 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.442452276 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.730247821 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.45235478 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.440003588 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.44234146 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.908255005 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.454216915 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.471933519 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.188458906 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.444877212 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.447020378 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.445756755 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.437900022 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.001606732 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.451889991 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.728767702 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.454366901 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.731019622 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.452080086 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.441843273 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.439888759 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.442584389 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.28674446 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.4473141 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.907858938 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.235634234 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.728088867 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.186260031 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.240454763 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.240109656 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.454135834 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.449038162 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.91404263 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.447033207 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.440171878 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.729707419 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.443988928 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.194744657 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.140225159 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.462826863 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.449457447 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.298874347 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.913972779 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.689592062 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.451557432 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.225185692 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.447289272 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.450968277 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.442020374 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.68669267 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.447441991 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.440421618 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.304232278 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.450057077 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.72901039 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.456843364 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.441525892 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.004984709 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.446729603 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.003690339 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.442381404 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.44928921 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.441600855 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.197329516 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.450490905 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.155007345 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.462653558 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.449238433 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.916922185 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.007753521 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.348939608 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.443503376 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.009881228 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.227458383 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.728884498 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.451146935 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.247054337 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.749902705 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.45091037 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.452506082 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.45180954 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.451234404 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.514957778 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.729707705 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.076431958 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.15088039 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.31641894 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.7394729 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.456154862 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.443369004 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.300935439 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.453735631 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.452354069 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.193927285 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.160248041 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.4666442 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.450944433 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.140858438 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.467614875 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.735350485 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.454700598 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.235044056 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.44913878 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.546651368 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.45307413 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.450537305 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.448674186 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.736702786 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.45336809 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.453950273 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.13680678 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.939918372 seconds)
  done (took 201.003211625 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.448007591 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.43916847 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.450577677 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.439361476 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.438352072 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.447496587 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.438309615 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.439644628 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.444066895 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.438711304 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.438447596 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.447798326 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.444866276 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.438607707 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.438216187 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.43880436 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.437849672 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.445765289 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.454790896 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.439224955 seconds)
  done (took 46.169736582 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.45489751 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.018751391 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.985470025 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.45968923 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.454431797 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.445511831 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.503003104 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.457587744 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.455271645 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.751779913 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.625957299 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.456878747 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.455335405 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.453678461 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.980127501 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.433414135 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.751971757 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.024867525 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.45996382 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.019415674 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.433735678 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.455565824 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.444912645 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.019951034 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.769156442 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.740013976 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.511938317 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.02077207 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.461884707 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.456947025 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.019307676 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.462653547 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.447526387 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.007029447 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.463123103 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.471913505 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.457683209 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.506066311 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.508507976 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.755330779 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.033344667 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.753844724 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.474184333 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.620397401 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.464018761 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.42979316 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.032942941 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.463390516 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.430176338 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.459808643 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.464411143 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.99657482 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.454027014 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.99732683 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.463690078 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.458542667 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.022374801 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.000613061 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.990821273 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.628576025 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.450689326 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.737360226 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.463600689 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.035850108 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.465122386 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.45796767 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.460690644 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.626338509 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.028525185 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.744014386 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.760971294 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.762161082 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.465980118 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.519891904 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.460867461 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.757354286 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.522370149 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.861008888 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.7632656 seconds)
  done (took 131.36999103 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.729060847 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.571688931 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.837482616 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.042159158 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.965784162 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.593135782 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.57125898 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.696681418 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.460426374 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.56474276 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.120056531 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.547659702 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.228461269 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.526297443 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.562884454 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.575751564 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.857713457 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.410070434 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.088504724 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.097241988 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.46119129 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.551230928 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.985264704 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.656194877 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.451151295 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.049912829 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.408884479 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.984396096 seconds)
  done (took 54.921275388 seconds)
done (took 545.146616425 seconds)
SAVING RESULT...
DONE!
