cset: moving following pidspec: 8899
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.506784246 seconds)
loading group "string"... done (took 0.542175722 seconds)
loading group "linalg"... done (took 9.820748081 seconds)
loading group "parallel"... done (took 0.181712449 seconds)
loading group "find"... done (took 3.421014125 seconds)
loading group "tuple"... done (took 2.102906863 seconds)
loading group "dates"... done (took 1.388973783 seconds)
loading group "micro"... done (took 0.196848252 seconds)
loading group "io"... done (took 0.514537783 seconds)
loading group "scalar"... done (took 58.802127775 seconds)
loading group "sparse"... done (took 14.378311485 seconds)
loading group "broadcast"... done (took 1.420685049 seconds)
loading group "union"... done (took 11.114624343 seconds)
loading group "simd"... done (took 3.868098849 seconds)
loading group "random"... done (took 14.133157813 seconds)
loading group "problem"... done (took 2.367007241 seconds)
loading group "array"... done (took 23.733473824 seconds)
loading group "misc"... done (took 1.142013363 seconds)
loading group "sort"... done (took 3.786712953 seconds)
loading group "collection"... done (took 22.060231362 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.733842701 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.118476662 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.200659496 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.199988615 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.270379255 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.163295069 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.158176686 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.142987921 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.551151301 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.210522917 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.13853487 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.360661451 seconds)
done (took 5.97105211 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.293379037 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.060083634 seconds)
    (2/2) benchmarking "String"...
    done (took 0.191400455 seconds)
  done (took 0.918901195 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.078063462 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.160856682 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.106124804 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.093545951 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.093266804 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.10931606 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.093776963 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.113220329 seconds)
  done (took 1.436955669 seconds)
done (took 3.401415626 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.546267643 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.876349217 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.493404933 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.188450387 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.298678943 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.303940743 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.269867118 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.230536379 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.087399964 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.084282144 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.19503556 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.445110768 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.420701141 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.976603323 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.069025604 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.093875078 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.158914313 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.803667697 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.078962002 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.110328476 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.524919629 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.227265705 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.117269419 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.106532949 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.18734091 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.126984311 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.141432509 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.102996988 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.685883222 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.132467523 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.208366292 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.082360255 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.14055769 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.17342064 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.220096493 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.108032732 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.684752388 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.199439663 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.09726766 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.101436836 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.675715526 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.12227918 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.211710285 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.105873817 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.070031994 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.165930461 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.114613883 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.078994454 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.094409832 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.100838887 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.156761308 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.436660364 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.103677003 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.194494705 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.091683635 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.717556625 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.096182953 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.268731165 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.124894049 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.093961653 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.089794174 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.089196534 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.153714989 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.093080431 seconds)
  done (took 20.240059311 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.18875647 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.204154163 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.092978942 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.145452301 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.142231772 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.0809967 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.089704933 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.095961795 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.115945674 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.197106971 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.124905211 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.212650325 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.075417512 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.106745994 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.165171083 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.250812419 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.10995252 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.122596856 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.090882805 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.094701174 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.143577979 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.094772954 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.093138502 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.109662362 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166961108 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.201486849 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.109400981 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.122478113 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.091758907 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.099888717 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142645575 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144823419 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.090443431 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.088724004 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.17349725 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.119643091 seconds)
  done (took 5.390528464 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.238333762 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.100812657 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.241473925 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.187631799 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.126150126 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.17725188 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.190399132 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.298995686 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.242401859 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.163527018 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.123737547 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.094839591 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078235873 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.077747201 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.094719721 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.841005695 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.154784794 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.154922955 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.167000739 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114250921 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.096605191 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.42807086 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.099296376 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.083304948 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.092073167 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.078850986 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.221902199 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.092554832 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.469202528 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.081518708 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.113168476 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.111981427 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.190555358 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.131746845 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.119409554 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.107607564 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.084539653 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.20606516 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.097924699 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.077063208 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.093837596 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113417968 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.127943717 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.107021755 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.10272756 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.132128255 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.085240527 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.107153593 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.036061236 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.19248089 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.182396849 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.10448725 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.276649193 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.105224473 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.095642498 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.107774275 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.781536456 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.132940817 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.083708169 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.094245965 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096091825 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.077298335 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.470754436 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104385168 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.31445692 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.081366381 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.162467422 seconds)
    (68/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.095863316 seconds)
    (69/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.116583956 seconds)
    (70/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.199167539 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085152672 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083831953 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.121658755 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.084009412 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.082098605 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.094544982 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.083718386 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.078853036 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.106877911 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.11253617 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.09942211 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.078515891 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.145416463 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.109567082 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.106042634 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.1247867 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.089621072 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.085148594 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129456944 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080993092 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.102471761 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.184714344 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.114371945 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.111578665 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112141247 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.141714541 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.084468253 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.256768709 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.095192402 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.124292088 seconds)
    (101/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.097827021 seconds)
    (102/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.08373456 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111897157 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.112749107 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081034991 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.103173831 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.084874044 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.079508624 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.098949473 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.146399383 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.088424601 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.096990677 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.088606114 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.093179877 seconds)
  done (took 27.086284325 seconds)
done (took 53.383812017 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.770032087 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.077493722 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.097407408 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.078467413 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.077513402 seconds)
  done (took 1.831843114 seconds)
done (took 2.548115801 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.180743793 seconds)
    (2/23) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.263656947 seconds)
    (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.196817252 seconds)
    (4/23) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.125688682 seconds)
    (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.147355646 seconds)
    (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.16808863 seconds)
    (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.149852769 seconds)
    (8/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
    done (took 0.16470889 seconds)
    (9/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.146407187 seconds)
    (10/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.165652452 seconds)
    (11/23) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.166484545 seconds)
    (12/23) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.104679477 seconds)
    (13/23) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.172143287 seconds)
    (14/23) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.182251976 seconds)
    (15/23) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.100216262 seconds)
    (16/23) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.20246592 seconds)
    (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
    done (took 0.100957396 seconds)
    (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.145928698 seconds)
    (19/23) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.083020801 seconds)
    (20/23) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.189560297 seconds)
    (21/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
    done (took 0.083127002 seconds)
    (22/23) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.10364383 seconds)
    (23/23) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087569509 seconds)
  done (took 4.166531434 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.101197467 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.09746603 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.100843533 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11833227 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085131612 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100534751 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.117462716 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.104907263 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100239601 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.111879979 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.085656617 seconds)
  done (took 1.848415535 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09745123 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.097911794 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.090412706 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.115958479 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088449189 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099930446 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.117804053 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.111533636 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.10051522 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.115318546 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087814619 seconds)
  done (took 1.84959699 seconds)
done (took 8.584852776 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.205217254 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.643396905 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.176745713 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.244295033 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.326594212 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.293281767 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.60225154 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.200270143 seconds)
  done (took 15.524230626 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.111319453 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.093213555 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.107489389 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.176557561 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.107537846 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.095662645 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.090992001 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.115907564 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.09611845 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.093810085 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.097606651 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.113875609 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.095011299 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.091582339 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.10823748 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.096442857 seconds)
  done (took 2.475463035 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.13459167 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.115376988 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.113083153 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.096734595 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.093345395 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.11353966 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.099454226 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.095366749 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.110968969 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.092948975 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.100701734 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.112359734 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.095957545 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.094283994 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.116329974 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.117453505 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.095307171 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.116445613 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.117140852 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.100197391 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.11684348 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.097073853 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.098871204 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.116586709 seconds)
  done (took 3.355402624 seconds)
done (took 22.084357992 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.14994242 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.085769723 seconds)
  done (took 0.972520957 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.162106342 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.181109801 seconds)
  done (took 1.085874933 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.109284317 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.090063184 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.138770628 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.104412473 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.093540725 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.109587034 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.11622312 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.092703491 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.109516091 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.09266798 seconds)
  done (took 1.802471436 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.093156535 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.093190476 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.121210867 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.16104304 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.118467221 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.093514608 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.096500872 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.113636546 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.097655278 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.090739369 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.11594284 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.110451137 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.097015759 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.126546948 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.0966639 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.096539453 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.117427329 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.094579598 seconds)
  done (took 2.678372802 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.09088294 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.094044766 seconds)
  done (took 0.930498155 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.093593803 seconds)
    (2/7) benchmarking "second"...
    done (took 0.090943474 seconds)
    (3/7) benchmarking "month"...
    done (took 0.093759594 seconds)
    (4/7) benchmarking "year"...
    done (took 0.10999145 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.090354884 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.091271546 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.107852348 seconds)
  done (took 1.423960183 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.528041422 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.242569156 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.378823845 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.076416392 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.123152966 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.315405408 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.123180941 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.073112149 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.093372273 seconds)
  done (took 2.724018766 seconds)
done (took 12.361378376 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.088930625 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.205867342 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.59499196 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.12612325 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.089051624 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.147798764 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.345444313 seconds)
done (took 2.355054839 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.335119811 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.176765394 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.084312158 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.092935946 seconds)
  done (took 1.435431794 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080324969 seconds)
    (2/2) benchmarking "read"...
    done (took 0.097209786 seconds)
  done (took 0.935156056 seconds)
done (took 3.127470639 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087721857 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.112064302 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.089839057 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.108984378 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.090367254 seconds)
    (6/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.0905325 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.110654953 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.090066368 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.090764069 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.212114855 seconds)
    (11/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.109392589 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.089460988 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.090895228 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.107047109 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089648378 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089079955 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090881434 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107699227 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.089209212 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090129207 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090790618 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107262611 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.089860934 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.090049925 seconds)
  done (took 3.191743438 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.10935874 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.091043891 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.112440671 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.094946567 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.095727688 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.114394335 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.095142167 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.093170369 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.095817186 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.110678852 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.095227014 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.095908035 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.109391914 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.096402563 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09431159 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.112321757 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.095117483 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09372249 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110837113 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.095601068 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.095626623 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111722146 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.096287105 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095512815 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.112167042 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094924393 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.093383351 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.11147354 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.094564644 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.09564911 seconds)
  done (took 3.769872742 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.09463071 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.084509549 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.091423549 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.11650826 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.087959476 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.091897745 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.106722745 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.091580784 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.092746333 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.091636732 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.110533535 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.09024013 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.092724324 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.109551745 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.092916232 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.093946446 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.100497268 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.108510859 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.09057141 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.092802924 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.112040861 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.090209225 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.090541386 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.092217845 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.108622079 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.088723386 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.093851076 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.108918088 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.092479981 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.091750724 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.094602099 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.111840613 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.092115709 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.100981048 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.111511896 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.091659363 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.096120109 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.088556984 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.109829145 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.088535102 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.089179644 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.107895284 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.09070145 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.096842858 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.091990198 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.110220532 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.090648172 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.093132047 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.108659047 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.093369072 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.08792768 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.091716939 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.110292391 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.093384897 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.095286094 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.106705061 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.092010739 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.0887486 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.093323039 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.107812583 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.08879592 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.088600476 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.113151268 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.091866656 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.107070349 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.114889088 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.09113581 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.093547252 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.093552122 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.115758549 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.093378764 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.102960772 seconds)
  done (took 7.781987561 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.11082522 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.10039186 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.110780468 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.093149605 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092114568 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.093463698 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.113523728 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091734165 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094913067 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.115331854 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091404374 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.093706885 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110626345 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.092470972 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092135694 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.093517058 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.115582621 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092148669 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.093106859 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.111397832 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092639396 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.097388442 seconds)
  done (took 2.960726382 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.218371315 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.115443372 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.146031276 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.123285833 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109856202 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.123976069 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.096415113 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.098772668 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113751696 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101124273 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101844839 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114048432 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.110136313 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101651539 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.118057053 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.102133657 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098644605 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.119747626 seconds)
  done (took 2.882375296 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.101641702 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.091828936 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.155516447 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.093895338 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.094549142 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.112542632 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100131364 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.114031967 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.113710929 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.094237183 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.101147098 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112974766 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.09527854 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093884047 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094975954 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.111965309 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.094668224 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094563793 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.118639796 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.0988504 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.10023585 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.117894257 seconds)
  done (took 3.075494293 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.10271705 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.090439267 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.128409625 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.097768604 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.092002034 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.094629586 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.116638845 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.094245293 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.102515195 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.111319873 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094384232 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.094594515 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.125765611 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.094494383 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.100129848 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.111685927 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.094405446 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.092387932 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10957118 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.093512679 seconds)
  done (took 2.81086552 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.184304161 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.128333246 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.109120752 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114228167 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.123585573 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.106199128 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.133429472 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.106937066 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.106570781 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.136847525 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.107596665 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107434438 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.133254165 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.118736644 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.128474752 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118318088 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.117992953 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.133939658 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109706292 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.11085893 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.138461097 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.113771075 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.134326177 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.109810093 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.11098641 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.127904183 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110726674 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.117197299 seconds)
  done (took 4.1710182 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089214104 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.089745485 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.089552546 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.110574113 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.092693268 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.092031192 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.093213366 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.111967403 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.0936672 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.092442672 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.111084044 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.093264516 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.092153767 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.093837506 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.110786767 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.093140774 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092794415 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.093399399 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.111145178 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092793223 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.094002009 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11092539 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.093165503 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.092837092 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093490241 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.110264973 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092647405 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.092580162 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111562477 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.092192629 seconds)
  done (took 3.698769583 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.102301156 seconds)
    (2/2) benchmarking "in"...
    done (took 0.098536649 seconds)
  done (took 0.97524645 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.096186096 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10399271 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.08965065 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.109719456 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.100039527 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.094542466 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.120415927 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100204484 seconds)
  done (took 1.591191857 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.184574602 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.212427601 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.118694061 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.106873311 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.212681854 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.19174532 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131097516 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.098902538 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.116882587 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.086187372 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.208005728 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.085577386 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.093697298 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.111021019 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.09422991 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.101480766 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.115232082 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.10407396 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.102502606 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.114805835 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.098990571 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.100913164 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.115392739 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.10509552 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.089854128 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.115249247 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.098374524 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.107499784 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110770789 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.096866556 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.09358961 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.113651471 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.097594479 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.099496568 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.096548722 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.211132184 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.122852658 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091706648 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.096080432 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.120194941 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.127124698 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.096817441 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.116258411 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.094536621 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.100889066 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.118007138 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.100281898 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.09542074 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.087344803 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.108418057 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.095416155 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090937122 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.113623033 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.096268945 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.096236779 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.1206066 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.0978692 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.092630948 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.109561306 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.092058703 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.094483194 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.110035495 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.097189703 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.096145877 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.111001598 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.095994967 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095546391 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.096497668 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.114313728 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.096820447 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.095107698 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.128589182 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.096295625 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.101027199 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.120932662 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.096677748 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.093280982 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.120613016 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093640147 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.096874082 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.120126993 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.122900146 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.098128305 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.110357663 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.091410036 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.103003242 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.099150339 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.117746183 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.088811534 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.105727821 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.118259584 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.098038142 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.089622097 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.113070309 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.090853552 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.097255251 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.106369028 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.096234583 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.094263191 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.101245998 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.119372357 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.093735264 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.097774326 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.120863122 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.099994097 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.091047026 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.163760019 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.092600109 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.111819261 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.097841804 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.101551974 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.089260948 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.114549418 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.094617629 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093290947 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.111393707 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.10049699 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.093520452 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.115253722 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.097063058 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093736069 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.113503526 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.097937191 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.091842075 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.088478594 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.117279844 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104985411 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.098675893 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.11875129 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.096954913 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.098824674 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.114359328 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.100887527 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.094683424 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.121853871 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093292583 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.097208641 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.098947389 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.121619879 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.096587666 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.091325049 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.113878294 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.095259357 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.09120964 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.116510252 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.093874392 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.087600108 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.104922638 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.093283434 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.087741096 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.113369065 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106265542 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.092255901 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.10037091 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.111548968 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104349545 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.094362224 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.12159399 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.096965009 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.09742778 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.117724768 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.084879673 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088290016 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.115336679 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.093022831 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.087454212 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.094086183 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.111456211 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.098961529 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.085450953 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.11613225 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.084211275 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.089266241 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.117641406 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.094083549 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.094677341 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.088120994 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.149869949 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103287399 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.098293924 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.116837627 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.092493534 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.095500127 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.112234225 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.096418367 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.098297567 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.115536354 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.090225748 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.090471409 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.117558672 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.087824485 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.093247914 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090884123 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112722303 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.084937782 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.093996682 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.103999748 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.095077042 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.093100644 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.116498003 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.096640642 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.094477205 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.110296244 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.100235092 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.087362441 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.096375887 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.106508493 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.097433808 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.10217027 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.119287417 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.099088989 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.093299373 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110023388 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.09482246 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101156147 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.114015923 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.091467171 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.093769179 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.086056536 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.106786147 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.098646378 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.09603392 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.107379897 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.093691646 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093915687 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.11439274 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.095114847 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.09065928 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.121856498 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.10022906 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.093405717 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094429189 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.110790106 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.092956467 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.10292601 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.109107275 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.096362132 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.099984897 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.122880941 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.096892276 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.098462553 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.12033107 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.104446725 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.100694 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.100482148 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.111061839 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103689832 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.091482212 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.1130055 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.08893308 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.095996578 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.107182527 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.094670013 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.092838478 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.109546406 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.088662714 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095355587 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.098924822 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.118229728 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090474951 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.098304301 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.120562623 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.09975422 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090463801 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.117506349 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.088612059 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.085776525 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.109085803 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.094377792 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.096085801 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.088665297 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.116957795 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.090007596 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092145069 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.118459885 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.095135182 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.090636063 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.117565727 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.102806697 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.087397709 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.107815594 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091370749 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.091713418 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.109936426 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.090011518 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.094802721 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.114397 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.097730705 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094138851 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.089412435 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.11558361 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.100731579 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.089709489 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.117945613 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.098876117 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.099364195 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.108440119 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.097323812 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.089596391 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.117905865 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.087914097 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.091975784 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.11178098 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.091214813 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.088811585 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.099960536 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.110609053 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.085687614 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.089144728 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.118216556 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.09080898 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.097911587 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.113545117 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.089692207 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.089030894 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.109370608 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.099037892 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.090131149 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.100493313 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.113274694 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.085901821 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.08649873 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.117435219 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091719399 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.098424895 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.106780906 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.096711736 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.098774404 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.095809955 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.112372899 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.101249903 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10110976 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.118870811 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097927245 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.086292935 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.110439233 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096032601 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.092761415 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.115347533 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.094136712 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.086929819 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09455638 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.118160414 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.093489721 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.091199102 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.106732657 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.092727304 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.099172631 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.114360161 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.095531322 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.0948611 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.114399871 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.090649025 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.096845866 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.098793152 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.112878087 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.099049251 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092654208 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.11740705 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.090254049 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.098831193 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.115872495 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.087392002 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.085599337 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.090229581 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.120708055 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.090188149 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.099934433 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.117859344 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.089506381 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.090821896 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.117985291 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.089310708 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095220544 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.097890049 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.111002061 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.102529862 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.094033154 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.111790512 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.097204968 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.098894538 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.107250329 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.091994376 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092340799 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.119633026 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.091275925 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.098167624 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.112551919 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.098189876 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.09587771 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.098161793 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.119196384 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.098806196 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.086925685 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.120742297 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096679714 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.095296553 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.111205272 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.093090694 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.087453142 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.091685794 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.119316115 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.090466682 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101830003 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.117613078 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.089974026 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.090853091 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.11894713 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091570423 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.099383523 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.11087136 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094690426 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.086747063 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.115370019 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.093269918 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.099376173 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.089924966 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.106551569 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.098331329 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.098219333 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.115777559 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.094857304 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.099543718 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.108049113 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.086318652 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.096976667 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.090397285 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.122813712 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095283255 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.091499873 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.112190498 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.095910785 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.09474807 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.118521494 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.087488088 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.090556696 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.114353349 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094694445 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.092609692 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.090456482 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.1185404 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.091748111 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095370069 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.113528723 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.086974577 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.092981661 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.119491731 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.091298388 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.089105225 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.110116873 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100132928 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.092794108 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.090640373 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.109587857 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.0989965 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.095497961 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.119807934 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.090462467 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.094055141 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.111327995 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.095888633 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.101044875 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.112405911 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093926742 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.091901778 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.118284554 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098695444 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.087499367 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.10988086 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102890959 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.097422393 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.095943243 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.116398727 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.09240792 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.101101257 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.12137359 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.096940578 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.08826576 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.107912624 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.092088814 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.087761212 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.097500607 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117415943 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.092712248 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.090957528 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.116867822 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.097985548 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.096300799 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.114038414 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.087541982 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.100107609 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.111232934 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.096358981 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.087632518 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.087848788 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.116085792 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.098965761 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092202542 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.113235213 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.095447054 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.097811603 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.088296795 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.110120333 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.096841324 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099159953 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.119375957 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093767618 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.092701187 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.117981537 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104802916 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.095849536 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.115273123 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100512536 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.099835487 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.115097832 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.093038769 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096778757 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.121205457 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.096270023 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.103077081 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.091593961 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.11291158 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.100465983 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.100829748 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.122855036 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092445273 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.088018796 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.120068694 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.091707428 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.08804019 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.118018905 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.100599698 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.101033803 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.114327136 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.091714073 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102204732 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.098315135 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.114465799 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.092331529 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.091935068 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.118141834 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.090856607 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.097846822 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.111558017 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.102016734 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.100306778 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.121164193 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.102589429 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.088239904 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099614152 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.115488322 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.102741067 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.095461443 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.109106738 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.088665558 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.097573775 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.12100152 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.100948565 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.098180314 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.099050925 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.117859255 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.09437258 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094672261 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.112769092 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.101629739 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.100119295 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.115483824 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.095443723 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.093176963 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.115985458 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.095840239 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.100067345 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.101248015 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.115993453 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104077177 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.098634777 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.112969561 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.091625011 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.09453445 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.118404653 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.094957227 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.098686131 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.112459829 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.089591071 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.099539947 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.103375445 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.11469453 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101790399 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.10192049 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.113410108 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.097102043 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101462739 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.119683112 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.096588396 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.095272798 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.097250709 seconds)
  done (took 61.885256575 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.144685916 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102778589 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.117011519 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.097084189 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11411062 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119830811 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09686748 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.097577651 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.11824824 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106015534 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.097505077 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.096937048 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.12954216 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.118494989 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.137043368 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107526355 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097468774 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.119757657 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097263843 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098879501 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.131936444 seconds)
  done (took 3.178791687 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.111641528 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.110862101 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.129660339 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.109088853 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103634362 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.130424063 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.107024719 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.130839783 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.110661841 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105568336 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.132568711 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108194251 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.105745527 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.126373941 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106634157 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.128448652 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.111757781 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103798007 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.130511277 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.106921081 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.106125142 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.128309745 seconds)
  done (took 3.366118697 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.125115796 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.099616404 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.095919859 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.117536757 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.099437934 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.096603821 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.12012553 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.096589005 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.104965828 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.093990526 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.110274325 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.093451832 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.095799293 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.117547262 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.091173384 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.096479101 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.126123293 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.100461127 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.102061281 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.09718472 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.110361432 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.096546197 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.098814168 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.109532317 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.101644296 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.102462124 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.100371075 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.123110049 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.088573993 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.100082901 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.117173804 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.091133324 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.08866822 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.089480007 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.109061206 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.101631376 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.100038076 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.119966217 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.098030771 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.088229522 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.098879185 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.121281432 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.088999659 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.097933742 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.117266391 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.092031514 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.100213402 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.098454203 seconds)
  done (took 5.757643288 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.1248209 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.156287866 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.101779677 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.126769057 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.132790434 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.107140108 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.100649814 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.1501812 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.098998409 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.099959315 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.135737857 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.112355963 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.126598041 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.105485567 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.103380844 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.124423685 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103303997 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.100809869 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.127060344 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.100901534 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.105420622 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.126159486 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.111549104 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.111529926 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.125795788 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.100926044 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.10205283 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.124977456 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.110562353 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.107083331 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.127706377 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107870845 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.112495633 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.125858725 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.346819075 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.101919753 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.1369463 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.104540702 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.124275745 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.099418422 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.101821513 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.104719745 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.123850568 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.113560286 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.123447559 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.103088216 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.102482251 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.099273053 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.130191854 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.101209312 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.12927932 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.111659643 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.103640796 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.124231611 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.104134878 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.111935905 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.124230634 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.100518861 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.104363471 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.131037796 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.099348499 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.10407061 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.134473342 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.105227726 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.107378667 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.134348959 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.103168078 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.125600578 seconds)
  done (took 8.934297212 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.129459416 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.105760707 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.133947578 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112714803 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.106122859 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.127335433 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.103959733 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.104988952 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.126124117 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.109554133 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.104718579 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.234155 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.125148566 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.108255066 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.105233436 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.127716223 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.104474067 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.105831167 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.128754876 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107118358 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.10446049 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.134516492 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.104335841 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.133427343 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.114283867 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.102189702 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.126443286 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.104917165 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112903746 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.128613125 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.116760187 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.125960314 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.104226116 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.114021978 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.138369949 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.104309036 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.100462244 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.125332471 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.10606241 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.105922774 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.123807218 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.115876995 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106033609 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.123578448 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.105938769 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.105714448 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.135983686 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.116831191 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.134269641 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.11032776 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.106363612 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.13453233 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.105426129 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.105541568 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.133756016 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.120285116 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.134785823 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.114732546 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.105433864 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.133772922 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.113833216 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.142030795 seconds)
  done (took 8.188122319 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098836656 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.09773274 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.097948125 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.118403175 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.097300502 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098445203 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.098210407 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.118272068 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.097697692 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.098353696 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118879177 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097538802 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097982319 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0993183 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.117826877 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098398171 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.098082857 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.098563383 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.117387828 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.098215705 seconds)
  done (took 2.909776794 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.107770292 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.115996043 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.121130503 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.105748584 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.100686827 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.126755744 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.100646813 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100758008 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101260014 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.123305505 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110033806 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.109167421 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.121464656 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106690482 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.108751862 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.1268801 seconds)
  done (took 2.636535444 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.117422871 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117304612 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.199375151 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.103613601 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.122507461 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.107369596 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.102066363 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.124947167 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.10008617 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.106598431 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.105170385 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.125081226 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.100811428 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.103607138 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.122158173 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.102756714 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.099645398 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.125093495 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.101793613 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.202043491 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.103445177 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103215294 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.124327686 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.104006668 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.102403506 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.127362605 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.106199484 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.101251766 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.103361375 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.123375026 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.104648856 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.108626011 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.120749557 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.10777099 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.104519189 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.122540437 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.1005038 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.102467149 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.124760491 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.101953212 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.10389575 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.102307849 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.121544775 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.103459072 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.100901888 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.122798376 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.099246337 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.106900442 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.12294166 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.102552413 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.102627003 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.126739928 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.105144191 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.109798303 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.12937924 seconds)
  done (took 7.098794392 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.110253128 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101738083 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.135362683 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.099499941 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.10206315 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.102826543 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.125338528 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.103295547 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102542626 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.121289249 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.102840056 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.103879979 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.124427167 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.103242361 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.103159281 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103750877 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.120035902 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.102720159 seconds)
  done (took 2.818462046 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.10621927 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.102043313 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.106164495 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.122454857 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.100786616 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.10219657 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.120690695 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.100224496 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099683466 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.102221534 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.121294652 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.101729084 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100357837 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.122790261 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.100887409 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10194602 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.123022425 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10026602 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.102427769 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10018898 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.122768503 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09988808 seconds)
  done (took 3.216919943 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.111210173 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.225749156 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.105912732 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.234447375 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.099227986 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.121581238 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.106942189 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.099359395 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.138664641 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.096860954 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.120951833 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.097368607 seconds)
  done (took 2.41622863 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127086055 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138518746 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.12461178 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10231779 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110688505 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128435798 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106781936 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106900876 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135607244 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117249636 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129986516 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113819369 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113298213 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136483629 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110548267 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110735926 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127614572 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106448545 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103224188 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141143872 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106097833 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137667962 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10566107 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107210249 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128383554 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113801291 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115525967 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137436768 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106512081 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137013765 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110827328 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107202866 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13732147 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116479715 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103118893 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135673761 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106565234 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142856192 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111650741 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11516692 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.123839785 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111302336 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137264772 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111663643 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115495725 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12863236 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111747411 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106340158 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128028663 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125964851 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134562377 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114668902 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111845308 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136706063 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113935484 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.149746544 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117769377 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137473483 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110520836 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117454639 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.136793425 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110857479 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136854938 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116001014 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110868987 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137176255 seconds)
  done (took 8.831436115 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139969503 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.103931496 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128321906 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11850643 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115577066 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128194282 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107519815 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107647604 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128499286 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.103681118 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.171262811 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107244019 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115696966 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135646885 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108058431 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129062356 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106424418 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114982991 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125597869 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127071031 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107815209 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136906122 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11472632 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.138635728 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117351423 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111030014 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127802341 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107673595 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10859472 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128252589 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113287596 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128793328 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114337613 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103629218 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137020168 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106301951 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107287654 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134097234 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106879394 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111659892 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136275574 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122929874 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130096945 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1061204 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119869533 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128069311 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107349694 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105272243 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129124943 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105939301 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118345135 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.139119031 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119283626 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137816394 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107092228 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108361513 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128030792 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107536044 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108652533 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132590869 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11475125 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132272576 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127416113 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108867619 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129812138 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114937762 seconds)
  done (took 8.776915649 seconds)
done (took 167.68069814 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.172862249 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.211816034 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.196784909 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.156090122 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.09270717 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.151443325 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.125724793 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.199089576 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.092938928 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.093557635 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.114309318 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.094509515 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.161018351 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.092846619 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.115179657 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.095547276 seconds)
  done (took 3.028139711 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.192644548 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.338144068 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.110426781 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.119331543 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.100364637 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.099266556 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.118374202 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.100149036 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.097976272 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.125335233 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.098453712 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.094471035 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.125375088 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.093856349 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.099319046 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.119107457 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.104798804 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.098779956 seconds)
  done (took 3.10966833 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.116145086 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.148251558 seconds)
  done (took 1.138208352 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.126348791 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.213600526 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.292165286 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.168437158 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.118172969 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.136728189 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.146588265 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131946914 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.187614291 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.132922334 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.111093417 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.096390623 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.146733404 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.103682817 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.115732606 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.11710377 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.125869923 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.115541856 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.133760594 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.099412003 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.123544986 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.121438172 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.103784076 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.134843386 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.17813734 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.132934654 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.102430198 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.101041881 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.122207938 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.112946467 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.104716622 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.13703972 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.109882698 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.179710531 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.101311198 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.173844798 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.106354781 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.120871665 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.111666253 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.098979317 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.122633726 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.101758247 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.111953381 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.118083712 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.101704447 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.10587375 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.124374626 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.10188007 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.107942348 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.127950257 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.106446596 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.127571989 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.15099143 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.128523764 seconds)
  done (took 7.808516351 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.89993615 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.146659144 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098791731 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.052974489 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.142361449 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111930098 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.900581832 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.146265574 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.249413513 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.915486643 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.113075382 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.10579783 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.261672561 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.25935976 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.273467483 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.360028698 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.756503181 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.110071903 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.130420433 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.165014021 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.104229858 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.13809745 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.113691818 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.445312346 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.098402221 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.098229214 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.12629825 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.106122679 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.177026788 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.099163804 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.10332652 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.194622417 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.293308155 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.210262657 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.099277651 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.120335067 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.09816763 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.190866257 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.269136921 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.219325985 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.169419711 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118491863 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.098886041 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.104176435 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.134394497 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.096073553 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.180814907 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.192303148 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.169172612 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.124953591 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.105554039 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.106833891 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.123085179 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.177700103 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.097165909 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.358340206 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.363832473 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.120816847 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104152505 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.111386405 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.262868499 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.122450036 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.238037657 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.121722959 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.215453057 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.122035465 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.797823226 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.164515556 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.119889711 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.104015568 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.104991044 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.125965285 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.102630663 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.182169892 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.398802858 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.126058324 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.103836365 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098553613 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.222288299 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.099193833 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.122620894 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.15843882 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.121518067 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.105229301 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.128327007 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.103881098 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.189738369 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.250848911 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.127824626 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.104095768 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.12603472 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.108790629 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.100887756 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.229765553 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.229387537 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.179259646 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.22841186 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.103153709 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.181362381 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.164746843 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.124973973 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.188561355 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.103827162 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.11052742 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123858715 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.227193553 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.136549897 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.121984782 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.10481932 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.105845704 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.159162337 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.102371247 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.128145133 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.165425731 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.479710923 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.186131762 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.096878454 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.12528543 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104602176 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.180791362 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104723291 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.26544694 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106630165 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.185958319 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.126305149 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.095551423 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.105487291 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.180443483 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.106947831 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.128342995 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.102822902 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.10955206 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.279384469 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.222761605 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.129663522 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.247598023 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.172311585 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.127240876 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.170026298 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.127586143 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.164490356 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.131084869 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.102991363 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100968438 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.809029878 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.109537973 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.104648445 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.126052831 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.178821903 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099859899 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.122305398 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.098977388 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.097781736 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.814510345 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.124959745 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.097268597 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.10162971 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.126314398 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.103210214 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.104660934 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.126351658 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.155882195 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.265824179 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.106411695 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.103827354 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.121901367 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.156782052 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.123651129 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.101844409 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.099984164 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.122271832 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.106217054 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.104318481 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.124679064 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.164379937 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.177452974 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.232866075 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.579825834 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.122039512 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.099282261 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.243241426 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099927178 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.349310798 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104638256 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.236439769 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.183017738 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.097266548 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.361346458 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.184314052 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.203183959 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.102669785 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.192649707 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.098445117 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.106662908 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.179474239 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.100956721 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.129105366 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.178484321 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.108195603 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.106105587 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.271074988 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.123016623 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.246896104 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.096978899 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.190568528 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.100186163 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104571791 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.325957147 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.123350658 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.111529458 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.180284886 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.104884143 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.101051478 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.882184453 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.123334061 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.107937078 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.105097033 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.256665446 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.161524798 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.128826035 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.105547199 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.108517115 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.180563142 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.228698745 seconds)
  done (took 46.266888439 seconds)
done (took 62.225540592 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.253678151 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.164268185 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.351580702 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.145060642 seconds)
  done (took 1.85721192 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.254142432 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.16275963 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.240281889 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.096669896 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.246186395 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.096098357 seconds)
  done (took 1.995753209 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.167008777 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.163179526 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.14015075 seconds)
  done (took 1.37231226 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.206685128 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.204658147 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.341449829 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.23032587 seconds)
  done (took 1.944081894 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.270340875 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.11426522 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.126158395 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.223039831 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.239256553 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.203950697 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.122103678 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.171977254 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.129056514 seconds)
  done (took 2.534018856 seconds)
done (took 10.603779812 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.432990392 seconds)
    (2/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.407007575 seconds)
    (3/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.244454343 seconds)
    (4/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.319795432 seconds)
    (5/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.322082956 seconds)
    (6/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.149540362 seconds)
    (7/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.234080622 seconds)
    (8/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.200732525 seconds)
    (9/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.288491467 seconds)
    (10/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.414073824 seconds)
    (11/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.138021687 seconds)
    (12/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.38213653 seconds)
    (13/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.317051414 seconds)
    (14/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.132424588 seconds)
    (15/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.263594012 seconds)
    (16/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.175068254 seconds)
    (17/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.393905338 seconds)
    (18/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.083992956 seconds)
    (19/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.210789316 seconds)
    (20/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.102688047 seconds)
    (21/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.16855727 seconds)
    (22/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.124674763 seconds)
    (23/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.248507584 seconds)
    (24/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.107415829 seconds)
    (25/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.17853399 seconds)
    (26/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.126964282 seconds)
    (27/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.143170792 seconds)
    (28/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.365857923 seconds)
    (29/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.2070821 seconds)
    (30/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.337107209 seconds)
    (31/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.07913036 seconds)
    (32/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.274471321 seconds)
    (33/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.119399021 seconds)
    (34/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.157979221 seconds)
    (35/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.08360851 seconds)
    (36/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.123554341 seconds)
    (37/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.19579671 seconds)
    (38/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.151322142 seconds)
    (39/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.077938803 seconds)
    (40/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.143530089 seconds)
    (41/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.125898704 seconds)
    (42/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.110833933 seconds)
    (43/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.213012606 seconds)
    (44/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.175537511 seconds)
    (45/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.084956439 seconds)
    (46/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.151311586 seconds)
    (47/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.101646609 seconds)
    (48/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.190994621 seconds)
    (49/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.153532142 seconds)
    (50/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.148688646 seconds)
    (51/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.134174765 seconds)
    (52/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.226873116 seconds)
    (53/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.130187769 seconds)
    (54/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.118298543 seconds)
    (55/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.176493318 seconds)
    (56/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.157136437 seconds)
    (57/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.08517796 seconds)
    (58/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.077467755 seconds)
    (59/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.102031299 seconds)
    (60/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.109840699 seconds)
    (61/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.083075924 seconds)
    (62/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.080516637 seconds)
    (63/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.084956937 seconds)
    (64/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.128200989 seconds)
    (65/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.117607383 seconds)
    (66/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.255566283 seconds)
    (67/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.189954531 seconds)
    (68/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.080300585 seconds)
    (69/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.125812898 seconds)
    (70/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.10204821 seconds)
    (71/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.077378885 seconds)
    (72/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.102708392 seconds)
    (73/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.128749838 seconds)
    (74/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.105807056 seconds)
    (75/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.11017765 seconds)
    (76/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.080618373 seconds)
    (77/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.101662318 seconds)
    (78/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.085531601 seconds)
    (79/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.13693522 seconds)
    (80/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.122962026 seconds)
    (81/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.100787987 seconds)
    (82/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.106295656 seconds)
    (83/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.13320471 seconds)
    (84/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.127445184 seconds)
    (85/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.101996929 seconds)
    (86/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.158715994 seconds)
    (87/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.092980896 seconds)
    (88/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.134306198 seconds)
    (89/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.119607681 seconds)
    (90/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.151745551 seconds)
    (91/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.10517436 seconds)
    (92/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.078353191 seconds)
    (93/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.105850367 seconds)
    (94/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.145959629 seconds)
    (95/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.085515701 seconds)
    (96/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.116044619 seconds)
    (97/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.085546874 seconds)
    (98/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.126379579 seconds)
    (99/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.103307499 seconds)
    (100/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.080877478 seconds)
    (101/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.123060779 seconds)
    (102/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.110238841 seconds)
    (103/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.285637358 seconds)
    (104/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.080628267 seconds)
    (105/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.138404455 seconds)
    (106/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.099743059 seconds)
    (107/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.134582793 seconds)
    (108/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.131099359 seconds)
    (109/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.126251901 seconds)
    (110/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.165097515 seconds)
    (111/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.146530631 seconds)
    (112/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.079519243 seconds)
    (113/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.214414234 seconds)
    (114/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.108380469 seconds)
    (115/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.179310789 seconds)
    (116/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.106944922 seconds)
    (117/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.11233665 seconds)
    (118/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.084426844 seconds)
    (119/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.139104351 seconds)
    (120/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.105240328 seconds)
    (121/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.102713181 seconds)
    (122/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.104164211 seconds)
    (123/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.109989036 seconds)
    (124/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.132227923 seconds)
    (125/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.110135746 seconds)
    (126/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.079319367 seconds)
    (127/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.083838381 seconds)
    (128/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.122834731 seconds)
    (129/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.19145322 seconds)
    (130/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.102351964 seconds)
    (131/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.084601203 seconds)
    (132/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.085049415 seconds)
    (133/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.100579541 seconds)
    (134/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.134617017 seconds)
    (135/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.081775796 seconds)
    (136/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.109060582 seconds)
    (137/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.086498702 seconds)
    (138/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.084127919 seconds)
    (139/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.105659955 seconds)
    (140/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.083604256 seconds)
    (141/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.121329468 seconds)
    (142/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.121934945 seconds)
    (143/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.100973969 seconds)
    (144/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.133529301 seconds)
    (145/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.101810821 seconds)
    (146/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.081373112 seconds)
    (147/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.133989399 seconds)
    (148/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.078708875 seconds)
    (149/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.08515515 seconds)
    (150/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.085419768 seconds)
    (151/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.109414143 seconds)
    (152/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.137479853 seconds)
    (153/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.083829061 seconds)
    (154/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.101777895 seconds)
    (155/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.105212682 seconds)
    (156/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.106245718 seconds)
    (157/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.102452867 seconds)
    (158/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.110997044 seconds)
    (159/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.103608343 seconds)
    (160/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.110331732 seconds)
    (161/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.112006906 seconds)
    (162/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.084912118 seconds)
    (163/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.101430886 seconds)
    (164/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.078479154 seconds)
    (165/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.099059024 seconds)
    (166/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.078669587 seconds)
    (167/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.125965011 seconds)
    (168/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.085957779 seconds)
    (169/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.101631255 seconds)
    (170/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.079977647 seconds)
    (171/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.132833837 seconds)
    (172/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.085269349 seconds)
    (173/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.108821483 seconds)
    (174/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.099333661 seconds)
    (175/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.14641994 seconds)
    (176/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.109114928 seconds)
    (177/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.079528047 seconds)
    (178/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.081389747 seconds)
    (179/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.10155205 seconds)
    (180/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.100055894 seconds)
    (181/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.099981775 seconds)
    (182/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.08608072 seconds)
    (183/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.107431694 seconds)
    (184/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.081503328 seconds)
    (185/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.12266652 seconds)
    (186/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.102046497 seconds)
    (187/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.105760251 seconds)
    (188/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.109980442 seconds)
    (189/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.110074758 seconds)
    (190/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.111134242 seconds)
    (191/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.101903938 seconds)
    (192/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.086324458 seconds)
  done (took 27.119582451 seconds)
done (took 28.02856002 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.22174345 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.130170465 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.110351593 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.110307221 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.231678466 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.117385786 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.151696571 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.1115551 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.121167215 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.134595392 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.100835495 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124119766 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.13348612 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.242853288 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.113516022 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.102777558 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.101387081 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.145076142 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.125099474 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.126875711 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.230345695 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.129119936 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.121032655 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.102065721 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.232594268 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102679044 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.135003294 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.110890386 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.123830826 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.136008188 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.111379333 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.102183672 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.126745317 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.149691187 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.10075069 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.111554539 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.124455837 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.086089857 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.111513373 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.136777056 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.123026438 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.111095082 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.11114439 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.126599858 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.111649624 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.111161787 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.125585461 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.113944792 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.100977515 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.134123273 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.103320495 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.127110607 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.134291421 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.100955899 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.100609012 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.125953675 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.121506366 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.10086743 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.12444154 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.124607765 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.103691383 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.101447883 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.136615991 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.101133157 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.110640957 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.124786493 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.110454323 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.112208416 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.109805389 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.126791487 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101965181 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.111720361 seconds)
done (took 9.970753859 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.105156173 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.144969206 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.244185415 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.250241025 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.154846364 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.117654583 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.11549604 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.149477401 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.115178333 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.119357232 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.162017657 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.134527667 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.251940785 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.118516504 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.14441666 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.11545841 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.11266962 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.134008144 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.247167857 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.127294936 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.125474204 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.143858199 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.127373915 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.11861753 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.129490878 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.129237141 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.133377848 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.114095823 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.105446351 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.124194341 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.149669631 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.106209473 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.10897537 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.145871666 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.122780228 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.116518477 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.141624643 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.114207761 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.109411271 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.129151185 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.111065801 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.146548095 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.105772047 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.117995238 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.138690355 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.122070947 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.113368968 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.118943307 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.130577539 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.113355264 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.10764117 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.154829646 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.117917309 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.12028265 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.1427875 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.118964433 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.118554506 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.143097636 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.10892371 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.118345495 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.129759073 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.106207891 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.106785261 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.150450291 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.109007425 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.118352864 seconds)
  done (took 9.689223124 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.123298437 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.136290613 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.140167498 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.11605111 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112188572 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.124223934 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.100547238 seconds)
  done (took 1.809697067 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.101639774 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.265647538 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.254807925 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.256407837 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.248107341 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.263386241 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.125958904 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.101645442 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.16450324 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.111755356 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.268696408 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.321907446 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.137947072 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.117648686 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.260045861 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.10108477 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.258727292 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.102645076 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.143226648 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.260643928 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119314074 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.133312122 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.140384663 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.102873919 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.260808179 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.103453666 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.307632916 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.146467147 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.112480682 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.11691908 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.143136282 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.180721918 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.259652759 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.144451664 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.110855265 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.257121161 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.249990233 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.117752231 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.331903686 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.107684664 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.247420726 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.116774399 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.118193521 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.143989907 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.11729849 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.24564873 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.121271266 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.144228539 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.115946801 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.272511472 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.113534438 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.260834538 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.115225739 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.142837246 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.113652114 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118191656 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.149427094 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.118265795 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.268832447 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.119333089 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.255159171 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.255549475 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.25092823 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.258857763 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.153462173 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.235558373 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.238423757 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.143524915 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.111082818 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.119193583 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.258563595 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.143475255 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.116232755 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.248505392 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.120857462 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.260303055 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.258998118 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.14084258 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.11560548 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.107132415 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.115686141 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.129403905 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.249365089 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117199189 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.115580189 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.147507357 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.11636584 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.117524095 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.134340436 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.125744985 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.116587918 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.138412626 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.122332282 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.117317672 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.142921728 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.263080801 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.114647246 seconds)
  done (took 17.612658257 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.104091835 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.103896059 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.10808322 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.129121286 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.105061037 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.1052337 seconds)
  done (took 1.641450156 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.139816856 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118265684 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.150648177 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.119930756 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.16593788 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.247540924 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.256849014 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.13911304 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.136570036 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.129651321 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.252053745 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.254318145 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.252743395 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.12101847 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.255715711 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.119582325 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.259197785 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.117564582 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.151914444 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.116082429 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.143471039 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.120938437 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.115252743 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.242799348 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118622519 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.146905533 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.111828535 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.12638071 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.150477435 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.112439344 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.121422953 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.145113857 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.110254311 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.112283101 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.253883143 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.137790016 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114020615 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.121306378 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.146466906 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.119179559 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.257299538 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.11627532 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.151340574 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.12045843 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.112331488 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.136886625 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.121891819 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.11180131 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.256776154 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.120620087 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.14755788 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.119146658 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.118917568 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.148049729 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.111847658 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.111432469 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.146134307 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.261139022 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.122264788 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.110954153 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.146543568 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.119415343 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.112072019 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.148727144 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.119603896 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120965349 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.135128321 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.119628053 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.116852018 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.143708712 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.122252557 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.119663863 seconds)
  done (took 11.689528193 seconds)
done (took 43.393916408 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.758220453 seconds)
  done (took 2.739521211 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.096723962 seconds)
  done (took 2.081003836 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.511593884 seconds)
  done (took 18.526375257 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.411233025 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.346227302 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.994139053 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.168644548 seconds)
  done (took 2.908042412 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.083425332 seconds)
  done (took 2.082049478 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.404091808 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.274673236 seconds)
  done (took 1.668783732 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.712125865 seconds)
  done (took 1.707854908 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.883144652 seconds)
  done (took 2.875206102 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.26737817 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.242353906 seconds)
  done (took 1.514141521 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.665152083 seconds)
  done (took 1.669189415 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.468568798 seconds)
  done (took 21.476577616 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.252210206 seconds)
  done (took 1.26420813 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.289249063 seconds)
  done (took 1.298907061 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.519712856 seconds)
  done (took 4.529982506 seconds)
done (took 67.339309653 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.118334665 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.121710359 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.121760834 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.142707027 seconds)
  done (took 1.505524376 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.121522251 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.117839966 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.121171822 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.142220105 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.12505111 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.116211986 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.141870346 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.120654886 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.115809736 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.143251626 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.117148276 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.11668394 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.14545302 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.116453297 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.115122992 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.119885961 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.145585419 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.11702875 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.117737844 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.143666432 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118869496 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.118919087 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.145580244 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.121284134 seconds)
  done (took 4.036090238 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.113789229 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.108555728 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.111421155 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.131598947 seconds)
  done (took 1.479487179 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.124808117 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.130199762 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.152393354 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.125400517 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.130699329 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.152614804 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.116256104 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.114386318 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.14202237 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.12518446 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.133850292 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.156063272 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.128864363 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.120073273 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.153579317 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.111846105 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.119529368 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.153662049 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.125924808 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.126866345 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.143553296 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.125076186 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.12211563 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.151883437 seconds)
  done (took 4.197224367 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.192570253 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.129214407 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.169776913 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.163664332 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.172641485 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.11466898 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.145757832 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.148771681 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.12343552 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.126279004 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.145546376 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.164115022 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.123673215 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.145781497 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.118612202 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.122934804 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.150147308 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.123132843 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.185063631 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.122246752 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.122921646 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.156383261 seconds)
  done (took 4.181423836 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.120219087 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.107915021 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.107984562 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.130750004 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.120516703 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.111419558 seconds)
  done (took 1.714255381 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.106347472 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.103059963 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.102615762 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.126765055 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.10717829 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.102727305 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.101479131 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.127505563 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.102577943 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.103159216 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.127256517 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.102248725 seconds)
  done (took 2.333899497 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204823406 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145108052 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24888202 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.384088935 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186790869 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160289429 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.302593893 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.182343609 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.175791333 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162707064 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181028304 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187133851 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152532562 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212997733 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142104055 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.185159327 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170731269 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23611533 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168427208 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212259676 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182813927 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178064899 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.21577981 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174175383 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140781117 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16142795 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.143776783 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127819366 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193195049 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163123464 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200750094 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176929621 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141290283 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213536528 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233110909 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203504078 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.294647735 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1585145 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.171796998 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.213192185 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255313886 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139531215 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216883392 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152703894 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15521917 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216576045 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149091019 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.211520701 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.133342765 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143319777 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207439032 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206264954 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.168077204 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163196598 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.323148004 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131901654 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.140955668 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201241817 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213664607 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199348241 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204381645 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.122370524 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.198296254 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213534244 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242563296 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.140028391 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.191661414 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122970907 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189963508 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.203618088 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208697122 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156170176 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.217263902 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157224052 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169927337 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.192549671 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153747567 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233942482 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197177441 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.117691949 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149270376 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160992959 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124162259 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.18884631 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146109927 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24087127 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130504356 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.210153138 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177017979 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178542622 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159925698 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186868094 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159992158 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.174509651 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.101906743 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141897084 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.183700151 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156331394 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155389668 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149673961 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166472812 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.124372523 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152592189 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.148723545 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169483392 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.163075222 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157418783 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196655265 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.129971991 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.206167406 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144550376 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.19093199 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165781408 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220101981 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129324923 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159135152 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246466083 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167622798 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.135592993 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.195491162 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.222858881 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.149604027 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161708947 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163764201 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221328271 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142062871 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225960036 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137774051 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16130469 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.139063867 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199585126 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157519856 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.185605962 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126049383 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.191942276 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210926299 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.126656449 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139705413 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209087209 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133323384 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152696487 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13631636 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135164823 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.16852637 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.150273136 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.165500051 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152666745 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194509253 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164270954 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184458235 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132563514 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200718773 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131063094 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.196589741 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14711938 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.118547218 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.198033421 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225031931 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126924943 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207651807 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.160567411 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206511615 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196988413 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127878857 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.208821176 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126038781 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.120142522 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188690021 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168455953 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.189616007 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.214725567 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174155398 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.187299295 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.193536878 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147132763 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196032086 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.182177378 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183270808 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.138660528 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.198182558 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168533821 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.147953712 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.12266522 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.126824842 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163533651 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128011311 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135544187 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206505222 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19324804 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.201012211 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168655913 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1658873 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.188829465 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.151553764 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157666734 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.204609866 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136961089 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.215990282 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18845232 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205621364 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138962335 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188764681 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.12060581 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152547994 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.132869177 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.185631088 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135430724 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134079901 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168388286 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.190158704 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194665022 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14789679 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213260729 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188386232 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.22935959 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.119746376 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.160020732 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192407991 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166730613 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.209027126 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132264046 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.185902818 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.190725394 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17099652 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189455964 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196889725 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205584799 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19049106 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.192013141 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129199688 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169998039 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158667998 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13716966 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.187845493 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142381045 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158174283 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147836087 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.165396408 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138582281 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214276218 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14386023 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203075104 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.153960408 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196072256 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12508995 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17073028 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173226977 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171535199 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.104685953 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194540733 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19098711 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176820349 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150728782 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197867124 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129380799 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.341350362 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179731451 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197319439 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135623281 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166767175 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170940456 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.18379038 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158337263 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.211333547 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14104318 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234061025 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.198443915 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.137138727 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129441834 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173603146 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14879798 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.167190504 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.150586468 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.193353892 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.143196407 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216131526 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135917198 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.197869563 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176977245 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.173731171 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.148602014 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166574292 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225271851 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195887826 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201908195 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.16308263 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.192401371 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181847273 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15055352 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125662469 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.132169498 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.212207606 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129759119 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206400777 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.188601061 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178697629 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199044393 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160341498 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167644644 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.126480895 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.196192269 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147037039 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207662253 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13305132 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.163298512 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184138203 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.155413449 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130233665 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.186095646 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.284512229 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171213157 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166959651 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.134478083 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.286654096 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152771543 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131075209 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156596466 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194822157 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.131852099 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.207206078 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173879633 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16772431 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158043552 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161440321 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175182472 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204647769 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194443601 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172183675 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.172761642 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160947498 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184884939 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169092605 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1743914 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.145541793 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185570356 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194106283 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.203357424 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.130787317 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197478324 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168217267 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.196986513 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171682785 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166160866 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180175389 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155629988 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164085151 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165569544 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123420476 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186628149 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.16244604 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155547431 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17108895 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199821254 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129351254 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12681323 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174181436 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193608642 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139292042 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.128876134 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211624523 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.128909286 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210418739 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238323928 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12912729 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.19303347 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140588183 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129878676 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166228385 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143179802 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129875199 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.198174288 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175746662 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.160142273 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173629849 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192178323 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162712549 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180999313 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140862696 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.291946904 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.127702074 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219274315 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148897569 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224282779 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147244057 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202497949 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166761611 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17634108 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192842121 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146615976 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.21870799 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192716876 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.195527688 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130198023 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142580031 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16518552 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.133615868 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178732541 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168125954 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170072111 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.134980566 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.166469096 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172595051 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.144161396 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168676423 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199229903 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177270299 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214898625 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.184266098 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165488466 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174883607 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20167841 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127870733 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.192273964 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170008405 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174591042 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151395701 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.162918407 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.137232482 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24353642 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.124255012 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158557685 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201053048 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.194918318 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172799912 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.133834679 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206650484 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138995006 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203461709 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126552319 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.17864803 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168445314 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160900203 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.126198544 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.198980687 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15915426 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.19217701 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141714943 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.177605873 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218644058 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.122593377 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162250449 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.283232179 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185204165 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221066764 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.133233442 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13577751 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174176798 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159259929 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.193878402 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174166885 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.159322034 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128519676 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.144225295 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.183693481 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.137614403 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.196233203 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177850449 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184613514 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21268024 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.133974129 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.251808525 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17004683 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170258727 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.145314202 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.128746511 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138798614 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163061752 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141298885 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.20499394 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24365775 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.162383343 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.174169336 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134449859 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.125519122 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158534455 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160088212 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178469911 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168379452 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177123717 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.102592115 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140129307 seconds)
  done (took 84.442395 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.228059713 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.156958683 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.166083207 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.220746682 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.19227795 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.290143717 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.226499654 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.244488898 seconds)
  done (took 2.829173057 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.117455891 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.158916881 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.14100694 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.14192429 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.109289643 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.507224352 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.160717474 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.118219115 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.159806899 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.150799462 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.135227367 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.568175517 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.116129958 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.14431363 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.118759992 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.133130839 seconds)
  done (took 4.075021238 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.546443698 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.535746436 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.95448702 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.302391231 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.2345216 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.211153219 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.79078923 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.196455806 seconds)
  done (took 12.871779757 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.168638216 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.167710322 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.455642818 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.335511354 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.213734381 seconds)
  done (took 2.446223862 seconds)
done (took 127.11686176 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.122232122 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.123665225 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.123174499 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.152704771 seconds)
  done (took 1.617654358 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.193272138 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.091271624 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.093583029 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.12002688 seconds)
  done (took 1.601555177 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.368953566 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.09070152 seconds)
  done (took 1.585503424 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.143315066 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.13473595 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.163775068 seconds)
  done (took 1.56064792 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.135473302 seconds)
  done (took 1.242674958 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.115137779 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.115424561 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.274863704 seconds)
  done (took 1.61629869 seconds)
done (took 10.335885152 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.140689081 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.922731691 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.432303211 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.131762449 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.711980886 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.425728074 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.419923633 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.175014335 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.168818375 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.137992892 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.130926913 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.693157563 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.434127009 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.871676286 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.390963057 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.901042204 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.693938671 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.110198016 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.144246846 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.110836368 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.400212946 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.135499313 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.111265185 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.112042829 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.690399642 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.449060264 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.109418593 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.8844698 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.137036051 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.112646343 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.39832655 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.138455041 seconds)
  done (took 20.927370248 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.14935797 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.166921775 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.146093602 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.110524823 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113177411 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.140525312 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.120608879 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.122313933 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.199683356 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.110141451 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.160378277 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.108391684 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.115581519 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.140134243 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.133969455 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.109807477 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.139998398 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.112275637 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.11862958 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.111165634 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.15892771 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.109600254 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.111464373 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.139891929 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.1093053 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.131865708 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.138077787 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.123199815 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.109505093 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.141932617 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.114766303 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.111033127 seconds)
  done (took 5.249702002 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.157597256 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.175949401 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.146964504 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.147841264 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.189291718 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.111262497 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.196594304 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.176984479 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.17397937 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.139089687 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.131499336 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.109642697 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.179010322 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.112174183 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.16326443 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.109966719 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.114344296 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.138835153 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.117536143 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.112320647 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.160454754 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.108521264 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.112187644 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.139206204 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.11064977 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.133665951 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.137679051 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122022095 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.11021287 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.141463224 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.11556099 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.111654169 seconds)
  done (took 5.526138361 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.125041356 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.125574594 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.133980039 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.162386646 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.120107027 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.12528649 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.155296217 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.121150169 seconds)
  done (took 2.192461073 seconds)
done (took 35.013240319 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.133372866 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.128235603 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.132499585 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.15429923 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.273351957 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.117423953 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.128154986 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.147412562 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.124976724 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.131433979 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.110714733 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.149879579 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.130002895 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.122353748 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.271354581 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.126496294 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.277266168 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.274815342 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.150781049 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.126469196 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.120070145 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.277037905 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.124171956 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.150473569 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.268229538 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.113438614 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.267380564 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.122030772 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.122196659 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.141599982 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.277321195 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.121689526 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.119810394 seconds)
  done (took 6.545051297 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.225525418 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.150402347 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.120388788 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.118952342 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.121211984 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.15000972 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.22731651 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.149948759 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.11934244 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.119368313 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.148961991 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.21009008 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.155145974 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.114753203 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.121193556 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.110756263 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.258757516 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.120973203 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.141908612 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.092727927 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.115935778 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.118820423 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.270613973 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.115325022 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.151085924 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.118430563 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.120892082 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.155366339 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.120470723 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.121917093 seconds)
  done (took 5.523582478 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.124954215 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.132569835 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.138316133 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.212800388 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.150447271 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.161136798 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.134799903 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.13033269 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.170056223 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.112615339 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.128930026 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.179163561 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128633661 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.123635827 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.140546832 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.128625845 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.128301328 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.111842351 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.150394376 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.13088848 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.131585723 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.159380412 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.133051481 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.120444427 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.14030762 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.119551516 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.124946279 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.155381742 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.12023252 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.1276388 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.142485212 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.114114134 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.115018694 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.175378309 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.113484488 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.127743216 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.162485586 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.124901246 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.126238934 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.175026549 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.113518959 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.114344443 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.138423725 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.199726822 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.113590077 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.123407663 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.143600057 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.126895465 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.110041317 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.160200646 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.155217086 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.112305333 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.164642091 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.111357061 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.110299711 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.151221687 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.113165187 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.115645876 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.155253017 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.113676011 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.135298176 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.120144574 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.15256062 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.113966034 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.124449391 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.140997979 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.112183564 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.117190972 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.16802254 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.120406844 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.150198782 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.141635856 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.124062534 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.125609292 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.124234544 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.154817911 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.111606698 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.124450576 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.154177796 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.116496699 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.125633883 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.144667336 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.113732647 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.129703724 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.162521434 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.127519851 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.124903588 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.153675174 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.115215368 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.115295564 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.129921817 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.144095176 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.116393928 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.125891145 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.143180022 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.116557839 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.123913436 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.151685987 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.111289644 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138586883 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.116592563 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.143960393 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.141635199 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.1172347 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.146792376 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.122503675 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.155498891 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.143544338 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.123268116 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.124854436 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.142395152 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.120880495 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.114203904 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.113407409 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.15861614 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.129258525 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.120656901 seconds)
  done (took 16.793184594 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.37088381 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.361773116 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.210998991 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.405156235 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.127340807 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.280720847 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.390984572 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.365382746 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.113616283 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.147911213 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.202370395 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.325931832 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.113193585 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.173432048 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.367656541 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.440814501 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.142823498 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.184101278 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.1478009 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.126809794 seconds)
  done (took 6.144778511 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.121889394 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.148384196 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.165322887 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.131669989 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.124913495 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.131523252 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.143241908 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.137150632 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.125091728 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.151677421 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.116736235 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.12235423 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.157051747 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.128863622 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.129718039 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.176292189 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.12071172 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.11882521 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.166887384 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.11822754 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.10269661 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.16812355 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.123129851 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.135540222 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.161340941 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.123535731 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.112648155 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.117766837 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.150291137 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.121846467 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.11795933 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.15104937 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.121185652 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.106155432 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.125319333 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.159246705 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.120448151 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.116130244 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.149238379 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.11644866 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.127819065 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.155172608 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.123243644 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.099395354 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.133566056 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.11117699 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.156450678 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.126612804 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.106241738 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.165149379 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.124670082 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.129071715 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.150649058 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.134874801 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.122073095 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.160137656 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.12454071 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.12834713 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.147520228 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.112139625 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.111828021 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.116489658 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.152007795 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.129212792 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.125192711 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.151190065 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.12330488 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.113662275 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.147107715 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.11722389 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.115723374 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.126994649 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.164435248 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.124150192 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.121078378 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.153152811 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.122314809 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.094605768 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.121112017 seconds)
  done (took 11.567053463 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.139178885 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.125377535 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.130507411 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.176040381 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.12710829 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.120330778 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.154406698 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.133381141 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.129166013 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.161854204 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.129031203 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.128477532 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.165639291 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.124799756 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.125141172 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.159617834 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.12610508 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.151742945 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.155361602 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.140322998 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.129488409 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.149178302 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.12605496 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.126644668 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.172361196 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.125170963 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.140978095 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.155702408 seconds)
  done (took 5.094309262 seconds)
done (took 52.792800294 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.290743666 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.484454366 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.254393389 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.251904525 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.273145468 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.278498923 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.258678235 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.260617744 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.718098481 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.226976854 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.2584059 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.251923658 seconds)
done (took 28.960137584 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.307024812 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.394361102 seconds)
    (2/2) benchmarking "String"...
    done (took 1.56708071 seconds)
  done (took 4.113294813 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.24620015 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.243002542 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.48721699 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.245374684 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.24354539 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.244775604 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.248863728 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.260143989 seconds)
  done (took 16.118897917 seconds)
done (took 25.931643055 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.277717778 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.436242245 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.480843576 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.222119236 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.247304556 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.26125617 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.245110566 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.274381588 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.250722747 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.222172973 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.661136436 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.524090881 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.267226099 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.620528359 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.223914372 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.25252655 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.272615149 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.498653687 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.244231938 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.277556393 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.223594033 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.224795882 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.264327384 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.248267316 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.253039019 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.255020255 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.291356658 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.259477916 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.504269477 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.263066959 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.280743112 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.248425287 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.289155124 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.257479727 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.261263941 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.265333986 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.523148018 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.256691079 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.225834221 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.256106 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.497581486 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.267117144 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.24597088 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.256209319 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.226138446 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.223758391 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.230205613 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.362645185 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.270612751 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.2488265 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.248944401 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.710674196 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.264382072 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.260445649 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.258192229 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.556273056 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.270202929 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.338904747 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.274531568 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.261460521 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.248775316 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.246797878 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.251374961 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.248996812 seconds)
  done (took 146.827259748 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.248082256 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.252735147 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.252220767 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.254106212 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.25151774 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.252329738 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.246609421 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.248872417 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.253880533 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.278485556 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.253698539 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.249085974 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.252571576 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.185022624 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.258120032 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.271663515 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.253219915 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.269965218 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.254418536 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.248849283 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.250514956 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.253374539 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.267811268 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.250955904 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.252864538 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.325058229 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.249950506 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.257967173 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.261353097 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.24924117 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.258209189 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.257102829 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.266265432 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.119918764 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.255271661 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.283896071 seconds)
  done (took 82.245079773 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.247316881 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.250623685 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.250668358 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.284379243 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.250493923 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.836277436 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.840199444 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.267806535 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.296241663 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.685425243 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.564017584 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.255565572 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.343151941 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.263834221 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.256348417 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.346798155 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.279356122 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.251624485 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.250808028 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.858711709 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.267856114 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.310566577 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.435753046 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.267331848 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.284116976 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.645207397 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.250710059 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.284995959 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.586460592 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.301302699 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.251995922 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.652682085 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.48958792 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.363352158 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.253311474 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.284306366 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.252106578 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.535755902 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.25173499 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.251961083 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.257041651 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.951416834 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.256992245 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.838824797 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.252574438 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.268653562 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.257775712 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.252950186 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.445728244 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.002570774 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.252282668 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.253351591 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.255314334 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.253752813 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.252565121 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.287059845 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.384397446 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.181627031 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.257838693 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.256342352 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.286926127 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.253814661 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.56748656 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.256930998 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.422076719 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.309894005 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.352250616 seconds)
    (68/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.861109524 seconds)
    (69/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.257303862 seconds)
    (70/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.253597546 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.349914564 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.37222337 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.254237357 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.25465916 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.253140002 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.253036042 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.253726828 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.366745329 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.254524235 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.9580181 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.434880496 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.270528764 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.692950513 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.353446451 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.255565848 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.631681517 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.259874953 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.256092376 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.97945486 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.350917644 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.255868781 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.254933132 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.254971611 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.957958522 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.861640695 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.541972864 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.259523943 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.930407897 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.256793296 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.140591528 seconds)
    (101/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.840516358 seconds)
    (102/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.256364309 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.950703998 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.26046933 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.367852305 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.436539896 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.271271249 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.258789628 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.258351532 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.70999472 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.257634224 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.312402834 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.261350824 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.657739686 seconds)
  done (took 383.36800276 seconds)
done (took 613.588436746 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.234475528 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.236435685 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.235442046 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.235322872 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.236527778 seconds)
  done (took 12.333662689 seconds)
done (took 13.491137165 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.46790092 seconds)
    (2/23) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.456317011 seconds)
    (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.454060994 seconds)
    (4/23) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.321245785 seconds)
    (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.470763262 seconds)
    (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.47522589 seconds)
    (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.382204667 seconds)
    (8/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
    done (took 1.33006236 seconds)
    (9/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.445574313 seconds)
    (10/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.47425763 seconds)
    (11/23) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.459224085 seconds)
    (12/23) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.293690827 seconds)
    (13/23) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.472895643 seconds)
    (14/23) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.43705004 seconds)
    (15/23) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.275874494 seconds)
    (16/23) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.372313777 seconds)
    (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
    done (took 1.403294014 seconds)
    (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.397071727 seconds)
    (19/23) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.342591669 seconds)
    (20/23) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.368723989 seconds)
    (21/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
    done (took 1.491746429 seconds)
    (22/23) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.295791137 seconds)
    (23/23) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.292148299 seconds)
  done (took 33.336644296 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.570426782 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.269401466 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.331140695 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.542593748 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.304848559 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.556076586 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.595880682 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.271605849 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.433884199 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.282124296 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.282272626 seconds)
  done (took 18.599045454 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.552745816 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.271301298 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.346159886 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.536386462 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.305611523 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.549170998 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.602817509 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.273144181 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.453139068 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.28651789 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.281282738 seconds)
  done (took 18.617268644 seconds)
done (took 71.711896585 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.299837817 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.365457599 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.296121568 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.279244804 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.278958877 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.278736612 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.28202661 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.278434804 seconds)
  done (took 11.517691028 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.278229686 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.277780277 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.277370403 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.27750446 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.279127894 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.277237827 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.277517076 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.277572153 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.276813475 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.277217301 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.279092654 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.277181812 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.279345724 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.279654252 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.278732491 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.278801381 seconds)
  done (took 21.609885725 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.281501041 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.277981062 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.278809144 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.278581417 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.279600625 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.280314265 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.279776534 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.277247121 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.278898019 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.277657326 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.279420825 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.277780096 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.278508386 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.279496903 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.27927858 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.280587114 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.279258427 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.280369782 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.282431113 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.279236687 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.278778628 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.279936156 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.27904045 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.278955857 seconds)
  done (took 31.865286589 seconds)
done (took 66.153313427 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.277596187 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.26481289 seconds)
  done (took 5.703459257 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.338742106 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.33685695 seconds)
  done (took 3.839716789 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.280840791 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.279284872 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.281184104 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.280680897 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.281066962 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.280465404 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.27978582 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.280852931 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.287119091 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.28138594 seconds)
  done (took 13.974714781 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.278993299 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.280033152 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.280170142 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.280532422 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.282263866 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.281223425 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.281535841 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.281351113 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.280635899 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.281160155 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.281349462 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.281480719 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.280844636 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.28121081 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.280194792 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.280911536 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.282493267 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.279523351 seconds)
  done (took 24.217612563 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.295672427 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.29950794 seconds)
  done (took 3.758294339 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.407637056 seconds)
    (2/7) benchmarking "second"...
    done (took 1.322546358 seconds)
    (3/7) benchmarking "month"...
    done (took 1.387262336 seconds)
    (4/7) benchmarking "year"...
    done (took 1.378306372 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.323194208 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.304464078 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.325093413 seconds)
  done (took 10.612359016 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.269820913 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.577199505 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.764840996 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.431007902 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.260105586 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.286315568 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.244359369 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.286033966 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.291147185 seconds)
  done (took 14.574274234 seconds)
done (took 77.844215554 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.268835993 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.29198835 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.297868408 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.284205369 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.578737617 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.30581607 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.274114785 seconds)
done (took 16.467393858 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.250177072 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.248141636 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.246641355 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.28015396 seconds)
  done (took 10.189894798 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.267109919 seconds)
    (2/2) benchmarking "read"...
    done (took 1.596248611 seconds)
  done (took 5.029056041 seconds)
done (took 16.385048731 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.284008667 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.282037852 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.282174445 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.284434446 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.283248448 seconds)
    (6/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.284676013 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.283531891 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.285129918 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.28411742 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.282860737 seconds)
    (11/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.284714306 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.285076233 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.283074424 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.28687254 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.287122269 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.285565732 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.284781165 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.284506373 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.284252514 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.285627261 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.283542822 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.285526553 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.283966465 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.287172661 seconds)
  done (took 31.994458653 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.285851901 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.286114395 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.286060556 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.286127806 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.286585729 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.284657356 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.284229037 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.28607806 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.284608598 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.2876605 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.287410028 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.286689885 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.287642755 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.288611617 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.28711739 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.286972302 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.287155941 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.285853262 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.287669267 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.284868722 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.288013624 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.286535182 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.285230449 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.287194602 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.286850165 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.285495905 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.287601327 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.286758606 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.287447149 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.286004381 seconds)
  done (took 39.762794838 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.291322682 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.293390478 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.288314871 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.289675208 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.286794157 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.288080168 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.287698875 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.286629444 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.288547922 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.288097019 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.287962939 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.286747645 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.287988824 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.28775317 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.288144629 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.287227557 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.289262462 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.288323969 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.289264275 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.287137428 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.287379735 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.28849665 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.289065494 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.288108154 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.28835679 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.287084037 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.28820625 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.290567442 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.287446992 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.289581236 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.289795329 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.288910242 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.29025377 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.288701115 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.28720342 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.288010708 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.294113044 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.29635927 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.289545262 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.289024942 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.289195082 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.288363706 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.290857756 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.289839726 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.289845533 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.291822855 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.290802288 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.290894698 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.289676017 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.290401503 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.290451404 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.291563631 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.290791827 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.290678784 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.290001374 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.292159135 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.290823128 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.290511712 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.291955735 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.291558159 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.291037002 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.29245108 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.291453836 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.290962754 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.291734135 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.291217486 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.291249806 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.291630829 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.29352725 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.292193063 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.291260069 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.291246924 seconds)
  done (took 94.036511309 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.291655673 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.291875581 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.292272189 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.291927116 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.291956068 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.29195806 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.291908268 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.293021155 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.292385041 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.2924056 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.292835242 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.294376694 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.293355551 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.293358609 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.292273981 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.291529977 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.29280302 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.291601643 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.293064487 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.294963183 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.292340602 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.292470348 seconds)
  done (took 29.6086564 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.29262269 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.292770373 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.292984481 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.295026629 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.29491145 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.295126845 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.293876508 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.292438415 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.292753102 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.292957334 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.293182505 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.292316908 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.296988638 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.294612153 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.292999542 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.296689239 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.294248975 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.295173919 seconds)
  done (took 24.464705951 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.295135016 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.294718666 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.293533227 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.294667379 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.292977024 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.295050131 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.29642863 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.294414254 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.29516457 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.294805997 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.294030134 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.294606288 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.295181721 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.295426528 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.296088456 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.294435637 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.296474954 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.294407528 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.296103977 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.295539946 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.295313357 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.296438231 seconds)
  done (took 29.665465734 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.296276252 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.29562246 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.295464099 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.297602901 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.294603772 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.295671869 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.296211332 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.294573308 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.299581661 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.296128193 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.295352917 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.29557414 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.297784776 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.295527758 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.295151106 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.295343335 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.296188669 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.297598141 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.29684375 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.295480209 seconds)
  done (took 27.099537948 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.297239627 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.296940567 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.297755029 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.298681232 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.296927364 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.297137837 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.297090419 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.29766463 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.297258762 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.298772344 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.297919331 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.297802979 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.298477934 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.298573572 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.297578884 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.296492137 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.298335036 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.298810792 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.296849343 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.298139079 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.299469859 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.299309352 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.297335989 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.298162486 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.298083599 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.298611576 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.299902611 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.297219027 seconds)
  done (took 37.520078594 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.298173111 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.301260258 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.299905798 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.298856065 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.299707414 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.299540568 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.299426031 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.299203685 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.300602241 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.299749022 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.299233211 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.29937726 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.300288343 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.299274119 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.299057482 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.29997404 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.301567444 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.300012398 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.299785868 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.299491716 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.301135701 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.301696236 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.30227957 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.300810018 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.301007032 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.301648023 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.302646943 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.302361698 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.302026507 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.300905965 seconds)
  done (took 40.191128646 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.320254023 seconds)
    (2/2) benchmarking "in"...
    done (took 1.320241776 seconds)
  done (took 3.821346441 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.301808535 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.299704044 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.300704099 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.300691431 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.301831446 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.302034024 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.302301859 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.301791377 seconds)
  done (took 11.590394862 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.291155615 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.303647061 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.302658313 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.302204857 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.302053655 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.292151653 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.303095446 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.30800515 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.295128392 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.297319523 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.301980555 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.301754344 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.298773434 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.29725186 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.296434411 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.299092287 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.307531949 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.302631065 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.303126531 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.303704048 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.304089117 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.297747702 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.301590929 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.30716936 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.296363508 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.307207076 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.30544027 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.308200521 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.295937442 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.302618654 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.300282732 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.306772968 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.303786396 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.30446061 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.304418385 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.30576604 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.307033069 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.304773832 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.305913326 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.31019876 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.305126557 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.306209565 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.299202203 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.303273877 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.3034285 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.309968486 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.305962755 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.308185316 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.298462209 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.30162975 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.313534796 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.297598728 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.308738401 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.301339471 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.304580026 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.310800948 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.313704427 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.300226705 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.305174541 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.311933743 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.318008081 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.315220925 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.305860366 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.312021116 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.309331025 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.320993545 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.311894051 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.314356412 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.3091122 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.307518362 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.309642615 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.319668785 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.319788896 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.311905785 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.308871098 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.307160944 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.30013767 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.311529039 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.309788512 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.312587867 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.314601421 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.309372821 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.309548616 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.318455012 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.304097943 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.311746253 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.309292192 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.307233829 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.301388938 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.314391645 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.316799688 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.308660294 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.30071658 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.305139761 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.306033541 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.311324462 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.299441505 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.305397776 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.312079947 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.310439981 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.308815759 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.302950973 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.311245957 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.315315831 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.310289676 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.313688052 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.31535905 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.303289989 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.315636232 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.318029624 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.309803597 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.302600534 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.30833806 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.314169011 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.303301614 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.310694074 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.315374221 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.308295148 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.315300656 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.310863217 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.312006831 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.328085606 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.316308442 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.311353501 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.306280999 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.321138892 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.31127641 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.310447529 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.317440231 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.311552134 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.311619911 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.308863725 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.31827851 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.306372211 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.315112917 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.306014461 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.316113417 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.310789225 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.311618876 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.308013596 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.311084866 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.310261321 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.310649822 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.314906867 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.317961204 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.309775048 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.319938979 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.312702628 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.309649476 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.315035768 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.317371517 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.313210396 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.307414654 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.313358672 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.305382182 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.313539704 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.306595174 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.31596768 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.313546649 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.315318098 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.312069104 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.304722285 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.310135479 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.316123766 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.312425789 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.312612118 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.316469414 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.313433226 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.315225747 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.306275705 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.314531639 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.306498347 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.310622366 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.319703068 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.314402696 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.313554923 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.311527245 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.320796511 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.313969693 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.313428982 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.30880557 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.31475717 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.319303386 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.317421087 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.322353204 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.315446824 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.315207939 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.308658756 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.310413894 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.318009453 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.309230369 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.323601297 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.323418467 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.327477523 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.311486663 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.317851743 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.308424361 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.318775481 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.315615585 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.323503309 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.317110504 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.314905005 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.307882077 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.320413254 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.3102624 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.320394592 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.309312391 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.31919472 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.317600859 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.316029339 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.31737678 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.310499007 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.314440703 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.32174906 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.317509929 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.317043654 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.310674215 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.32126377 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.309523447 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.311682109 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.321567577 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.31734563 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.318961778 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.326971898 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.314749987 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.321450247 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.318073272 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.313661111 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.319664142 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.31564649 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.31744579 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.323828661 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.320707976 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.313551945 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.325185318 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.321369317 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.311307311 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.318987723 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.326608458 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.318845702 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.312708267 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.324888459 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.320471434 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.319884781 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.319467935 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.310952269 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.321851938 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.323996642 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.328382673 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.31297228 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.323432476 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.313190241 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.323945698 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.316176392 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.320483959 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.318621803 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.324293302 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.327665535 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.321066621 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.313273569 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.324180119 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.319915133 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.320622067 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.31516795 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.327639449 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.322016028 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.322253537 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.317115769 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.318853168 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.323930261 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.313009468 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.322539713 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.314257313 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.332505656 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.341975432 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.325123504 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.326023291 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.324896336 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.324158348 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.324839511 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.31694163 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.317701363 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.317524352 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.318089561 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.316228553 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.324583297 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.315672646 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.326481217 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.322464439 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.323267415 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.326082309 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.324196932 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.316950579 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.326844844 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.322954186 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.322811417 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.315943763 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.325480462 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.316629265 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.325688573 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.322584564 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.316668977 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.33012161 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.32563108 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.320220415 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.318605083 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.319603279 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.315508995 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.319202502 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.327918696 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.318110579 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.330713074 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.318057605 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.322628666 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.320210055 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.330075097 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.333052381 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.318458492 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.329121512 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.324652615 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.315097176 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.315946113 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.325876282 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.328208991 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.335901272 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.317771324 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.328929742 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.324565904 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.325938901 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.324307935 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.32513255 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.325447931 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.326206352 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.33056039 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.330964753 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.320210302 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.327421139 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.334413652 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.326244661 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.325630213 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.317459841 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.326677427 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.334952194 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.319971363 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.324281555 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.320300289 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.327525717 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.32582359 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.327283132 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.328140786 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.328304184 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.33032604 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.333306842 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.329877655 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.328324382 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.331442902 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.33789915 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.331446033 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.33994834 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.321376495 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.332282638 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.327402458 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.321464564 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.322019325 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.322527741 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.329858447 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.319455558 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.333326314 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.329944944 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.323219431 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.329534456 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.335773608 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.319131145 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.330867591 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.346926326 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.320637678 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.330266213 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.327675193 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.321601761 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.330899688 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.327964272 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.319469454 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.325204243 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.329254547 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.333972685 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.322969343 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.331725887 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.322177198 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.331859564 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.327595638 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.33007891 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.329353499 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.327643571 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.322008559 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.331621074 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.32945888 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.340891539 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.323592407 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.329682486 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.325702023 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.336883352 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.341414676 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.325472828 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.336295102 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.33071456 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.32371197 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.3278169 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.335553116 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.323427826 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.33371878 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.323135727 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.326418298 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.328066534 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.332792883 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.333982939 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.333728623 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.322828581 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.324826899 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.331947619 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.330315379 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.331467101 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.326565217 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.339699945 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.324568738 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.324406179 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.332591933 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.326595446 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.337298187 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.325005407 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.331044583 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.329059292 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.334656843 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.3321578 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.333459401 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.32435214 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.325951724 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.340077114 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.339421822 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.33143676 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.330417843 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.336857757 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.327044557 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.330221956 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.332341213 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.328504281 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.329000581 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.337088715 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.326001852 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.329041832 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.328082754 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.334158567 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.337730507 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.337400373 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.327650883 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.339088608 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.344127398 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.340046147 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.32490402 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.330651279 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.328490124 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.334734788 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.332573281 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.327369863 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.342086147 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.340473148 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.337668741 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.332646776 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.335675364 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.32643648 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.337130758 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.334152628 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.330075985 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.340154359 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.330582166 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.3419715 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.334749773 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.33505554 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.325594692 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.328145218 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.33032313 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.332184347 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.336397398 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.333823238 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.339658725 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.333631576 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.341300808 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.336129829 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.335437191 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.336355662 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.328197285 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.336577413 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.328595395 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.338351993 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.339671399 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.330428509 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.338838464 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.336035593 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.331326123 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.338009311 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.343625564 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.337701609 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.330354079 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.334209718 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.344400962 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.348000169 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.336991402 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.330576215 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.334478453 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.342760488 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.338694144 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.337453147 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.330712523 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.350975848 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.35160282 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.33226718 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.334411642 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.34241592 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.349661245 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.337475202 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.337891735 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.333433186 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.339344623 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.344198919 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.338642748 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.3425127 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.344622099 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.333355705 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.342362938 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.332333076 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.335906317 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.342370192 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.34971577 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.338919103 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.334864504 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.352086514 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.350902721 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.342296758 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.364884096 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.346387554 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.340784656 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.344879071 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.331697934 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.339772295 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.334645183 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.346768565 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.338256553 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.340161232 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.340093527 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.330975277 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.342482775 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.348701071 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.350712533 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.340408384 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.331282403 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.336556026 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.341479784 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.341027026 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.343134081 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.340703557 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.339805246 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.34184316 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.333973236 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.353377936 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.361349673 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.345842169 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.341286099 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.340361318 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.340742357 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.344863414 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.339922085 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.347314587 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.340098826 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.341479428 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.339389829 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.351714593 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.342234147 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.334401234 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.337113822 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.337472634 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.346223512 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.351227821 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.364283807 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.345780499 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.346840034 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.344957315 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.34188042 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.336224038 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.346472425 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.343296825 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.336447485 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.340514164 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.345971011 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.343946717 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.34408982 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.336879228 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.350824855 seconds)
  done (took 789.844276806 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.345292771 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.343478236 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.343281765 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.342060512 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.343189641 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.344194801 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.344236919 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.343602422 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.342644666 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.343415308 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.342347281 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.343431839 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.343408298 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.344107442 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.344148236 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.34470953 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.343683431 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.343209197 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.34427914 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.343373312 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.344378257 seconds)
  done (took 29.432614463 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.343722102 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.34403667 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.344457048 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.345313678 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.343813086 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.344615567 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.345354738 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.345313709 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.34660697 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.344555708 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.344264084 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.345249914 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.345220191 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.345823447 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.345069508 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.346533539 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.345557486 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.344652343 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.344802512 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.345420177 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.344367326 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.344528509 seconds)
  done (took 30.805489421 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.346958332 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.346083489 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.338441485 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.347856791 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.345510549 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.345292686 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.345867239 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.34589263 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.347598518 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.33954056 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.339347081 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.340928842 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.344287082 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.352115237 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.342505425 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.352440515 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.347451647 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.347999301 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.346363938 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.346886408 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.351690413 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.359756454 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.347656752 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.338933957 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.348681345 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.347691903 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.347496015 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.347678572 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.340806106 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.351575384 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.347154126 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.340951547 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.350527432 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.351751167 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.341861171 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.351571328 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.347938138 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.347632428 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.348634389 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.350427743 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.368176389 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.34775205 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.353623188 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.362637645 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.34838234 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.343974324 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.35597282 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.347826818 seconds)
  done (took 65.9180249 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.346836289 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.348704389 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.348792892 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.349528126 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.349454416 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.348843584 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.349680234 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.350308389 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.351100844 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.349382843 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.350319075 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.348804299 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.34954639 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.350633358 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.350524888 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.35051018 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.350577247 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.350407964 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.349253732 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.349404185 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.351513977 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.349488863 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.350885634 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.349501098 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.35101269 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.351768393 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.351698466 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.350265743 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.351335516 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.350919898 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.35150824 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.351754359 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.352192084 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.351534143 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.351321699 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.351196575 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.352261942 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.352197535 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.351573407 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.351557757 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.35269542 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.351885399 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.352126348 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.354584879 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.352204627 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.352049411 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.352664565 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.3519133 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.352065232 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.352793684 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.352965904 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.353615004 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.353019392 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.352482531 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.354187932 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.352823539 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.35374526 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.353146969 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.352634819 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.353843368 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.352513385 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.352690404 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.351759384 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.354539716 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.354255111 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.353734215 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.353242953 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.353068259 seconds)
  done (took 93.124557298 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.354449151 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.354936596 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.354597578 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.355098548 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.354256707 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.354138063 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.354575255 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.353627996 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.354177285 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.355206872 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.355397576 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.355727642 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.35479428 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.354618871 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.354358619 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.354981561 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.355660436 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.355361968 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.355314366 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.354278602 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.3563601 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.354950305 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.356564361 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.356122622 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.355479697 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.35496002 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.356072978 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.356859406 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.354803641 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.35727087 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.356322072 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.357112677 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.355222886 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.357325816 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.355389274 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.356428351 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.356643265 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.356824683 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.35675029 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.354319793 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.356092397 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.358554978 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.357503498 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.359249499 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.357802365 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.358649693 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.357472953 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.358899429 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.356681261 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.358460028 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.358101359 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.357658761 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.357579048 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.358570012 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.357425654 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.357894422 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.357534059 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.358228914 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.357738336 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.357925998 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.358591144 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.359020611 seconds)
  done (took 85.31954947 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.35720917 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.358285372 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.357112451 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.358075103 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.358186002 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.358696246 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.35829857 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.358033677 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.358612654 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.358703726 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.357673652 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.358284967 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.360580138 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.359965663 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.358003183 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.36086266 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.357546314 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.359402559 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.358408538 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.3595824 seconds)
  done (took 28.40015718 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.357532767 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.360998303 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.358515283 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.359197023 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.360088456 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.357731452 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.359579614 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.360599625 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.358926651 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.359788147 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.360753642 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.360118346 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.361018883 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.359035282 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.359547054 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.359989527 seconds)
  done (took 22.983235574 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.360712474 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.361569466 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.359958037 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.361499416 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.360460611 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.361691948 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.359697531 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.360872153 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.362005425 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.361952645 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.360179787 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.362625864 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.359702881 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.362158793 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.361080376 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.36140729 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.36031986 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.362624038 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.362579981 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.361699329 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.363150059 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.361519606 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.363299559 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.363760691 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.362864415 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.364194223 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.362748597 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.363654417 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.362622135 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.362168306 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.36256948 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.362691277 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.362184887 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.362511981 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.364047239 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.362889003 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.364034595 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.362073187 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.363515255 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.36246727 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.363536434 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.362068561 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.364228183 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.364207729 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.363046577 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.364770618 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.362780107 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.362854471 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.362446841 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.362746529 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.364297267 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.364534786 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.364463735 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.363529446 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.36433778 seconds)
  done (took 76.169597667 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.364389695 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.36506836 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.364941171 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.365399525 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.365196256 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.363785995 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.365098322 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.365868422 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.365682994 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.364146068 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.364505418 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.365894498 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.364260542 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.36565756 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.365720424 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.365634631 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.365794513 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.36615493 seconds)
  done (took 25.805642366 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.365553462 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.366257322 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.365795259 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.365141247 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.366105535 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.367577455 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.365818144 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.366801619 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.366393895 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.366804418 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.366487507 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.367175232 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.366440335 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.365219512 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.368623277 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.367554304 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.365892067 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.366207283 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.364858643 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.365677424 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.36699543 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.367378095 seconds)
  done (took 31.295265083 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.357245779 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.35612773 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.35646218 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.372974591 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.373197601 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.356747745 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.357904555 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.358091201 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.379918669 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.405925875 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.401559009 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.374373169 seconds)
  done (took 17.685686978 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.368202382 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.367577224 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.367326853 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.370239688 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.367351189 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.368455293 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.367755163 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.36818614 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.369120643 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.369248916 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.369309359 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.369232653 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.368376391 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.368805905 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.369891999 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.368785675 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.368731109 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.369797261 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.368845705 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.36907641 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.368657704 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.36807501 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.36873482 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.368576969 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.370815623 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.368501306 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.370440821 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.369772075 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.369982668 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.370655302 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.370170049 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.370664527 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.369595503 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.370016907 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.369406929 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.371653271 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.3698302 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.369554648 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.369207854 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.369721359 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.369400663 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.370315519 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.369646245 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.370258675 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.370270515 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.370947215 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.370760785 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.37031756 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.370810537 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.37204614 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.372683358 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.372128066 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.37276348 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.371273513 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.371974924 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.372029204 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.370691462 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.372488428 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.371391276 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.372688284 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.372311281 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.373130574 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.372626212 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.373647096 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.37238313 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.371964174 seconds)
  done (took 91.668360219 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.372811681 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.373943119 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.372008119 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.372839979 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.373210376 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.371904724 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.372395113 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.372327471 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.373008517 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.372441594 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.374032875 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.372168475 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.374064347 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.373542748 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.374384885 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.372861883 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.372315366 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.373957379 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.375257524 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.372609398 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.373857755 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.373201672 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.373353996 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.374697162 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.373440239 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.374024563 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.374955857 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.373481915 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.374029779 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.374828893 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.375435798 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.374486675 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.37459747 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.372657493 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.37310452 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.374418597 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.374276135 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.373941895 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.374638984 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.373874689 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.375048017 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.37410546 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.375437385 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.37437345 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.375263064 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.373901179 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.374550761 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.375450909 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.37636897 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.374387173 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.376155588 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.376118027 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.374882009 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.375297245 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.376229491 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.376186998 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.375806052 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.375342811 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.376822984 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.376140442 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.3753046 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.377210142 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.377950666 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.376625586 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.377087117 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.37762504 seconds)
  done (took 91.954990291 seconds)
done (took 1851.329495914 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.534541362 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.502755695 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.366564138 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.408396364 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.366803761 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.368644559 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.379525097 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.381178685 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.366383417 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.366493118 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.368358165 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.558967694 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.410273066 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.367652081 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.368561052 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.465860269 seconds)
  done (took 27.825358133 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.396711534 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.375978784 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.501796513 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.373025147 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.398521695 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.583362853 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.434853239 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.37262092 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.565503563 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.393243261 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.372353604 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.396471979 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.372525458 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.371128326 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.393227517 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.583676394 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.657629816 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.374863798 seconds)
  done (took 30.162106939 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.882787774 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.379056209 seconds)
  done (took 5.507067721 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.395305059 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.373259088 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.376008149 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.372272679 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.365304098 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.36658442 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.37223 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.3705711 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.366047601 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.519196619 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.375259201 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.387146904 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.393481784 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.374445555 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.381450674 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.420442082 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.524735987 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.382263634 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.382491034 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.378896492 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.373450542 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.47474278 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.419675867 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.383012837 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.518087549 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.37577444 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.379973759 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.381191756 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.505093992 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.385824378 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.374940007 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.374930168 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.377105549 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.367305506 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.937489454 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.379797053 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.40139905 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.382263592 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.383518798 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.529796166 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.376226985 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.380166801 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.381491438 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.933554706 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.496854384 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.505033877 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.386475226 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.375099647 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.377025212 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.444891039 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.377417054 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.378388434 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.438129532 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.217393943 seconds)
  done (took 87.907743681 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.392196141 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.368489394 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.554854862 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.392506494 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.369367213 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.390602736 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.394806508 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.705396628 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.401658162 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.369509262 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.723098666 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.046527178 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.380382294 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.428259282 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.396804806 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.41843416 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.37215832 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.370243392 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.371553813 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.370404781 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.970838866 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.380709676 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.37223436 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.526662667 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.413509345 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.961857528 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.370993932 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.370578512 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.389659629 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.371418195 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.000751721 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.375768447 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.410262751 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.373745338 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.685463086 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.814934914 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.769150643 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.382717338 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.387394626 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.374328571 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.375062503 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.960237153 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.790254301 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.372291865 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.37164354 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.964249437 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.372312284 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.378346453 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.37559362 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.645125036 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.371533473 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.373315526 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.372049278 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.371194329 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.372019117 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.420380683 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.416711173 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.963777027 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.372419864 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.373288134 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.411007322 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.373870737 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.382135315 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.371554057 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.374112675 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.800048899 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.543926512 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.374939826 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.794296884 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.995899095 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.37393445 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.088590609 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.372891986 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.377965312 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.447775734 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.371906678 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.373086957 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.959048363 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.380615048 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.372910252 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.773313375 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.376873725 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.699798077 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.393736175 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.37481223 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.995255734 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.391170578 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.425108573 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.373624812 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.392663767 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.373617867 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.376622708 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.68802321 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.401758545 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.376275737 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.375079417 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.390670185 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.376134433 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.392391908 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.378951978 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.07072898 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.375096666 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.373357326 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.379120204 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.382539959 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.375016242 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.377673637 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.378138818 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.662229451 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.375949274 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.382440509 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.374799761 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.375382987 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.40178037 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.532152434 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.380482878 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.730805019 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.377099836 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.379901071 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.376560319 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.375913883 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.44119843 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.377975303 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.38157237 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.349558629 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.700111867 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.397724736 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.37782864 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.37722661 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.377824807 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.377070481 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.379919656 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.424669063 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.38118821 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.22386721 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.386067719 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.39287964 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.376563077 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.380393666 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.378272955 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.381915912 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.378040642 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.688470301 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.693803133 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.539132034 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.379229546 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.379551027 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.230141304 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.386320414 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.566842 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.398054967 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.379087318 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.683786203 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.541606053 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.379788723 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.380207097 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.383375738 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.662737471 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.378152837 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.725723525 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.033963647 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.378187215 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.378360547 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.222600288 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.125695362 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.380324218 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.379801972 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.700917503 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.397530002 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.377694846 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.3804405 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.379736618 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.379225333 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.384267514 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.388009368 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.380087462 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.380574559 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.494831363 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.578442379 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.398551199 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.382171348 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.967035523 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.398962348 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.395017141 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.38628576 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.38274197 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.381008225 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.417064501 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.381941043 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.381903407 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.3823114 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.384574757 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.002397544 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.380266999 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.38204612 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.580139124 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.172114582 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.381496169 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.382971652 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.380811606 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.430014946 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.998633004 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.431401872 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.737587382 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.389852788 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.426872345 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.382261575 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.385025107 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.998445915 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.383732837 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.381082574 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.159357164 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.381334847 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.069883769 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.382368492 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.384215662 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.081789221 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.382390592 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.38594974 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.383524378 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.383668763 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.693744374 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.384477961 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.404854768 seconds)
  done (took 509.360375646 seconds)
done (took 662.007936139 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.384437008 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.38754195 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.389020284 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.390838408 seconds)
  done (took 10.813628192 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.402039832 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.389384025 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.400246675 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.389413862 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.401065078 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.390192242 seconds)
  done (took 9.635981187 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.382792931 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.388922824 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.390365497 seconds)
  done (took 8.424653827 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.625451067 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.404042892 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.798290129 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.399853955 seconds)
  done (took 9.49165676 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.400820387 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.400323281 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.400805383 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.402292514 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.404198258 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.403860699 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.402797386 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.402765529 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.40319366 seconds)
  done (took 13.882087748 seconds)
done (took 53.510990309 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.383665905 seconds)
    (2/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.376499642 seconds)
    (3/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.475011519 seconds)
    (4/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.372560723 seconds)
    (5/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.416450905 seconds)
    (6/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.45779373 seconds)
    (7/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.459126787 seconds)
    (8/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.36323459 seconds)
    (9/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.54315256 seconds)
    (10/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.673716336 seconds)
    (11/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.422586994 seconds)
    (12/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.785877465 seconds)
    (13/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.415791469 seconds)
    (14/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.566646507 seconds)
    (15/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.492186777 seconds)
    (16/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.708412666 seconds)
    (17/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.994340765 seconds)
    (18/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.381738041 seconds)
    (19/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.365852505 seconds)
    (20/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.490475122 seconds)
    (21/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.37888354 seconds)
    (22/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.387213096 seconds)
    (23/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.658415386 seconds)
    (24/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.997180156 seconds)
    (25/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.363889878 seconds)
    (26/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.493617244 seconds)
    (27/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.493574246 seconds)
    (28/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.363688018 seconds)
    (29/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.365563224 seconds)
    (30/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.692438592 seconds)
    (31/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.364332253 seconds)
    (32/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.551524652 seconds)
    (33/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.518814792 seconds)
    (34/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.711796261 seconds)
    (35/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.697415297 seconds)
    (36/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.472615622 seconds)
    (37/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.769908241 seconds)
    (38/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.617954906 seconds)
    (39/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.388509359 seconds)
    (40/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.452501894 seconds)
    (41/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.491244269 seconds)
    (42/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.465257696 seconds)
    (43/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.945792017 seconds)
    (44/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.603400965 seconds)
    (45/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.944135742 seconds)
    (46/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.499826794 seconds)
    (47/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.53975995 seconds)
    (48/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.011529022 seconds)
    (49/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.779467107 seconds)
    (50/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.653478955 seconds)
    (51/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.372860213 seconds)
    (52/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.377006491 seconds)
    (53/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.476917611 seconds)
    (54/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.556112895 seconds)
    (55/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.699887346 seconds)
    (56/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.473388684 seconds)
    (57/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.401461383 seconds)
    (58/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.471776354 seconds)
    (59/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.366954149 seconds)
    (60/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.444436969 seconds)
    (61/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.660838176 seconds)
    (62/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.719811964 seconds)
    (63/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.749861489 seconds)
    (64/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.513875647 seconds)
    (65/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.394035826 seconds)
    (66/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.385258928 seconds)
    (67/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.195852413 seconds)
    (68/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.476418333 seconds)
    (69/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.552966411 seconds)
    (70/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.490356008 seconds)
    (71/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.368721005 seconds)
    (72/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.664320001 seconds)
    (73/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.50847145 seconds)
    (74/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.615527214 seconds)
    (75/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.428150501 seconds)
    (76/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.566713444 seconds)
    (77/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.374206002 seconds)
    (78/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.390815446 seconds)
    (79/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.42140969 seconds)
    (80/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.482463186 seconds)
    (81/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.385167693 seconds)
    (82/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.486542933 seconds)
    (83/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.56568671 seconds)
    (84/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.392136455 seconds)
    (85/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.565605623 seconds)
    (86/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.705114999 seconds)
    (87/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.837690587 seconds)
    (88/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.467331843 seconds)
    (89/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.411838887 seconds)
    (90/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.475290738 seconds)
    (91/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.511808914 seconds)
    (92/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.377533524 seconds)
    (93/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.516530891 seconds)
    (94/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.483233368 seconds)
    (95/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.369645118 seconds)
    (96/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.426420983 seconds)
    (97/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.899924254 seconds)
    (98/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.41139357 seconds)
    (99/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.427328703 seconds)
    (100/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.497899619 seconds)
    (101/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.526363338 seconds)
    (102/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.42749991 seconds)
    (103/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.688142346 seconds)
    (104/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.570872414 seconds)
    (105/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.420422608 seconds)
    (106/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.523067566 seconds)
    (107/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.556989803 seconds)
    (108/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.517766925 seconds)
    (109/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.479196689 seconds)
    (110/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.475280077 seconds)
    (111/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.837722045 seconds)
    (112/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.400542143 seconds)
    (113/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.917572688 seconds)
    (114/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.501677242 seconds)
    (115/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.384908223 seconds)
    (116/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.37219777 seconds)
    (117/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.565350261 seconds)
    (118/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.770897724 seconds)
    (119/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.38916923 seconds)
    (120/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.568703948 seconds)
    (121/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.3964545 seconds)
    (122/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.661162404 seconds)
    (123/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.428596769 seconds)
    (124/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.43425995 seconds)
    (125/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.435863757 seconds)
    (126/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.375859641 seconds)
    (127/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.663340795 seconds)
    (128/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.522423119 seconds)
    (129/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.468385592 seconds)
    (130/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.370224286 seconds)
    (131/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.567444017 seconds)
    (132/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.70651009 seconds)
    (133/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.482797896 seconds)
    (134/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.428141929 seconds)
    (135/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.684065287 seconds)
    (136/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.428764816 seconds)
    (137/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.203189696 seconds)
    (138/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.555054856 seconds)
    (139/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.781113201 seconds)
    (140/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.556134413 seconds)
    (141/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.533645013 seconds)
    (142/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.485175412 seconds)
    (143/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.614537672 seconds)
    (144/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.606373953 seconds)
    (145/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.519091409 seconds)
    (146/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.39926343 seconds)
    (147/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.477527876 seconds)
    (148/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.373495983 seconds)
    (149/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.020504881 seconds)
    (150/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.387827248 seconds)
    (151/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.39311925 seconds)
    (152/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.46277234 seconds)
    (153/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.615317927 seconds)
    (154/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.434258586 seconds)
    (155/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.834999084 seconds)
    (156/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.469268474 seconds)
    (157/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.397248939 seconds)
    (158/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.519264306 seconds)
    (159/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.541316463 seconds)
    (160/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.435994928 seconds)
    (161/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.487399487 seconds)
    (162/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.557182725 seconds)
    (163/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.504711922 seconds)
    (164/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.375314655 seconds)
    (165/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.465749849 seconds)
    (166/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.375207187 seconds)
    (167/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.525681975 seconds)
    (168/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.919924872 seconds)
    (169/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.56085413 seconds)
    (170/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.373981797 seconds)
    (171/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.437238168 seconds)
    (172/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.614578506 seconds)
    (173/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.437558667 seconds)
    (174/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.521769429 seconds)
    (175/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.507809656 seconds)
    (176/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.43312148 seconds)
    (177/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.375158546 seconds)
    (178/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.818460974 seconds)
    (179/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.375955036 seconds)
    (180/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.483642054 seconds)
    (181/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.608836599 seconds)
    (182/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.746095361 seconds)
    (183/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.673412059 seconds)
    (184/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.523004806 seconds)
    (185/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.59878044 seconds)
    (186/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.553440148 seconds)
    (187/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.968583987 seconds)
    (188/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.437470554 seconds)
    (189/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.433765046 seconds)
    (190/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.438797212 seconds)
    (191/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.534198127 seconds)
    (192/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.795064648 seconds)
  done (took 344.938577255 seconds)
done (took 346.204116891 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.429491933 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.494120108 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.409271309 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.409636572 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.412280646 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.401970177 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.43135443 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.412508777 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.423367115 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.425077306 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.402431366 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.418510333 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.42698714 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.420691793 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.445319261 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.411542628 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.410657902 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.420528182 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.427532822 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.426616093 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.413224716 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.41303589 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.438029595 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.411739884 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.421125091 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.421131034 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.417929672 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.40503398 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.418995744 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.427107915 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.407539124 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.418785367 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.428548679 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.422638359 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.414869839 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.421171985 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.414353497 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.497575093 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.431944986 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.422416876 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.419054965 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.42742325 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.418298757 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.416773818 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.423685802 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.439667395 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.421978982 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.428923379 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.407991413 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.416137945 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.434047226 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.425729643 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.420197253 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.416270125 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.403597367 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.429494413 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.421881937 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.43382824 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.421525983 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.416639141 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.448114061 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.435382553 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.426203351 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.422033748 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.419600226 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.429709718 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.423428531 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.428879993 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.421426756 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.417346878 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.417401631 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.421302311 seconds)
done (took 111.761274692 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.536551081 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.40821286 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.569746706 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.420947523 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.583453244 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.537971993 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.419972834 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.421799487 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.421596302 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.210935373 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.420039557 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.421813619 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.409909672 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.422135326 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.537975221 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.42081196 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.422220006 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.112634936 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.422131836 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.548149672 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.412733589 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.421052318 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.422020304 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.216813187 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.410063399 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.406247567 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.550851093 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.422818968 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.116077968 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.404972298 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.409543258 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.115442627 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.548738744 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.441315903 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.431933786 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.431845441 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.585657231 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.427783386 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.537920162 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.538193147 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.572981318 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.46150275 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.414721492 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.412906087 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.425461596 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.425456313 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.423865927 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.452602463 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.411243393 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.4229107 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.113693964 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.4333105 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.432977046 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.424521081 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.422815964 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.442787658 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.424324428 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.424554971 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.551990923 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.425517555 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.539928755 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.218305506 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.216407282 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.424466409 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.411091834 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.425284677 seconds)
  done (took 113.956952256 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.486084272 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.492418911 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.536290864 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.415309937 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.466439152 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.538867511 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.416106363 seconds)
  done (took 11.633321737 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.423849798 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.424287689 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.464289554 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.463234293 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.426464751 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.588638672 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.425632018 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.428047208 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.424962041 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.467611029 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.427730155 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.424611509 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.435906241 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.41680234 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.464918934 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.427616991 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.534048791 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.416943187 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.424289141 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.572288238 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.427104298 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.435007829 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.468377481 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.428712793 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.427241104 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.424155225 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.177843113 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.427201026 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.427770647 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.426615164 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.426297327 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.483294282 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.427342016 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.417725375 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.427832961 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.532251419 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.428014755 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.426786968 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.428790558 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.419532231 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.426863479 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.427882308 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.427932641 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.427486279 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.427942106 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.443912003 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.428943566 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.426652409 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.427904027 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.429728559 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.468308739 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.42864886 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.429468513 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.427607994 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.474529885 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.437172805 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.42890885 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.428305928 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.428848974 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.428866523 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.574544163 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.465779463 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.428433703 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.466793579 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.430187889 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.429130685 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.429813014 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.428965611 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.510372249 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.428638223 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.468630692 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.428024669 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.600968461 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.445337773 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.4312747 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.422723104 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.423376218 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.429179606 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.416947845 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.428019504 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.430021965 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.421860607 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.429380928 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.429442451 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.430459347 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.579711393 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.529203477 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.430049953 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.437325989 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.427706181 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.43014667 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.47271474 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.430163148 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.430561019 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.471713329 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.536132403 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.47444827 seconds)
  done (took 146.412302791 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.435184219 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.434671709 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.426759545 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.452757862 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.42445223 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.421262257 seconds)
  done (took 9.883205407 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.424322302 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.435441272 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.432391 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.432407194 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.431975012 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.432969512 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.43224808 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.42389671 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.435930365 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.43297164 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.432982226 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.435565175 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.434842351 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.432380152 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.43333192 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.43363314 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.433652855 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.433438512 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.432131206 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.433650684 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.418850548 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.433690592 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.4334471 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.426491995 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.437760185 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.435386748 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.448448805 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.4343934 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.433629504 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.432953593 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.43811308 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.435449369 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.426846062 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.432140973 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.438550356 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.426318001 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.438600876 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.43685709 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.433666187 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.435446519 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.438014939 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.43490303 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.43549584 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.438454816 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.428074936 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.431797566 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.440920903 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.451026976 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.435378984 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.43813558 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.436698928 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.434823499 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.436545023 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.439103481 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.428990875 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.431297949 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.441906138 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.43636582 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.435732862 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.428290604 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.437495828 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.436647997 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.429765448 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.440546261 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.43509761 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.438518372 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.429597223 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.440698059 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.437320999 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.436377326 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.439631573 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.435586712 seconds)
  done (took 105.579494192 seconds)
done (took 388.74630177 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.958500044 seconds)
  done (took 4.252417642 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.617528601 seconds)
  done (took 3.911986508 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.907346747 seconds)
  done (took 25.210592065 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.428320907 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.427435053 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.449934975 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.436427514 seconds)
  done (took 11.037033671 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.98939519 seconds)
  done (took 4.285701229 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.443905007 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.433489781 seconds)
  done (took 6.175538845 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.73910789 seconds)
  done (took 4.03521871 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.242559193 seconds)
  done (took 4.546277103 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.437379386 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.436561891 seconds)
  done (took 6.177581679 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.401541438 seconds)
  done (took 3.698743998 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 21.9768995 seconds)
  done (took 23.274938019 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.454919625 seconds)
  done (took 3.754994834 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.458789592 seconds)
  done (took 3.754163116 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.439511423 seconds)
  done (took 6.737484623 seconds)
done (took 112.147617613 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.426191719 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.434119802 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.432940906 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.433328578 seconds)
  done (took 11.023968178 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.503931247 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.505328658 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.512793412 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.500961045 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.496636932 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.507003163 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.466797088 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.468862371 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.4960511 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.493455555 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.511189853 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.499973336 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.510653012 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.466730222 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.49300951 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.511126902 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.497982639 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.515338561 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.467621994 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.500226407 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.441131611 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.500822776 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.495976047 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.441726743 seconds)
  done (took 37.105029422 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.928903156 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.504943986 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.590335989 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.484932639 seconds)
  done (took 7.806889251 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.54622449 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.54820529 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.574733422 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.59990214 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.64927853 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.56108021 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.469977103 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.464434873 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.451300688 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.547962613 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.632365173 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.547053712 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.76248103 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.441574515 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.763907934 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.444117128 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.443701024 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.547261153 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.597005079 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.627585463 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.444505399 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.547335833 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.55333831 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.548749042 seconds)
  done (took 38.614540632 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.451637713 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.459148487 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.445717876 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.458993905 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.446783825 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.446196896 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.447185506 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.450798708 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.444530878 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.446321055 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.446255648 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.458178004 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.444288222 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.445399949 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.45328852 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.447995376 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.447696794 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.451852423 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.454248532 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.446168578 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.446314599 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.454293758 seconds)
  done (took 33.194621879 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.430148186 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.430999286 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.780667957 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.686758567 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.42816723 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.42984655 seconds)
  done (took 14.488192929 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.518614116 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.665739456 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.439578826 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.865742067 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.958422166 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.443154814 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.436312075 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.709639432 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.064740302 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.088344426 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.504227763 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.516471 seconds)
  done (took 21.513308726 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.521981145 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.441854797 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.441006261 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.471480323 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.442796321 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.441371861 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.443150721 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.95255239 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.448077339 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.718752019 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.449006598 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.525149446 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.691595616 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.44180292 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.443822299 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.412070701 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.675686185 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.013189414 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.443925785 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.443413932 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.475696032 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.442232976 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.476585531 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.680410218 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.44547031 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.442648591 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.706535211 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.444038063 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.776386933 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.757263813 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.756445948 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.452646293 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.721353064 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.931038773 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.556973993 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.677746686 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.4371238 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.445785621 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.425468737 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.462768176 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.457223933 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.446375767 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.751917173 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.450908023 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.445308699 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.458525253 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.96068095 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.45392167 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.444308309 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.442826388 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.751075991 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.531935798 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.450245818 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.44510437 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.513850239 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.44599229 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.450936883 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.595456444 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.091253479 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.446530982 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.467906348 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.452854958 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.44569346 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.450888743 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.163004821 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.457610425 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.452831093 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.45234926 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.446197684 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.446806321 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.470553187 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.451246605 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.471964056 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.446996184 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353002565 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.459322837 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.44828131 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.068080343 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.466370579 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.448361828 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.677694418 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.450306192 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.448654172 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.44810656 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.44897638 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.325244463 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.461522512 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.417060635 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.487395577 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.965696014 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.692546247 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.476462344 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.479302927 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.671602753 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.416510633 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.450074922 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.471022827 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.45516579 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.472695673 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.966011443 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.452170644 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.455571451 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.700447664 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.661914565 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.466027538 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.419637297 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.972804628 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.45126476 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.49412206 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.468895918 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.68884476 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.143506398 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.759972372 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.457204857 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.488504849 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.450227625 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.39685161 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.474057843 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.457223099 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.452269057 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.765903326 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.41379921 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.457214966 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.524665917 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.461885596 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.450574503 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.45094651 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.453720885 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.45199925 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.663251626 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.468134835 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.751909595 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.453856834 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.452676061 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.456271711 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.45522121 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.454810516 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.676264185 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.452423526 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.730120108 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.454132868 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.453315535 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.453844417 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.673518828 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.46037209 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.461937648 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.794585125 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.454911344 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.464012566 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.758979504 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.489562718 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.566698563 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.489152128 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.469296712 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.702186058 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.459726496 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.460545801 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.456953261 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.457250032 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.457543979 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.464401795 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.451419118 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.153004429 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.461774481 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.462369301 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.457187365 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.471648103 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.529494916 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.463524374 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.691124069 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.467194543 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.471125106 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.464697071 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.457622707 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.679659465 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.75662756 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.471746509 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.631672886 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.973771775 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.152038901 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.471405962 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.454225088 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.452777033 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.45415925 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.454944406 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.457317317 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.4559686 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.691003526 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.764439632 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.455652477 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.157821622 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.45852746 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.454996175 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.479732855 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.755572036 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.467030649 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.455788361 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.455980048 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.456761737 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.469432668 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.761450279 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.676023368 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.470783265 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.456125211 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.97566682 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.462119404 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.456863558 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.456122333 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.480852521 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.457552982 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.053723953 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.797598286 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.470770113 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.759849827 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.458071189 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.493603953 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.454550617 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.472737594 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.475313575 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.467956684 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.466516069 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.694901468 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.460666087 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.461992544 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.098722319 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379777731 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.101388937 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.473699503 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.459703229 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.464212986 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.979337607 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.459308571 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.459170237 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.73269818 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.982431405 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.459024455 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.979724848 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.465032803 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.335798945 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.763530485 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.692006309 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.472171706 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.461006721 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.773530125 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.676105778 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.484080329 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.465919264 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.465995011 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.425748286 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.056785986 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.473048803 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.638544311 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.979279417 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.474498281 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.461194165 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.513011379 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.46827504 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926376627 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.464357057 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.461149652 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.460234333 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.466194208 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.067973599 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.468634607 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.461444929 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.185603706 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.462112635 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.983177194 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.460955958 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.698969924 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.769500466 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.745937535 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.46797026 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.460578357 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.707129081 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.769140865 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.469391384 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.474885011 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.108249904 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.321014229 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.47052585 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.465187249 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.409605412 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.467817403 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.79472744 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.482170549 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.468250358 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.470509905 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.46366663 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.463568342 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.463613843 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.47060551 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.464232625 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.025512013 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.46025584 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.456280585 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.480260454 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.464523891 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.712974369 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.48002513 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.165291626 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.693436058 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.476365343 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.498853603 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.467871496 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.462710951 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.452214591 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.462283407 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.460185122 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.523272655 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.686247024 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.462646827 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.437471607 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.489779409 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.677420132 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.463105496 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.477747288 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.710522324 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.464684668 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.480543433 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385089202 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.495800432 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.474811991 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.46607026 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.461826955 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.496571577 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.542410198 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.703352086 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.770442738 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.770939768 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916137333 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.47313324 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.466526129 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.480657823 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.547117137 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.465122761 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.46537415 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.469890262 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.165461235 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381389707 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.174646061 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.772443686 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.467663328 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.475691513 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.46436755 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.708347895 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.464780673 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.74240926 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.464922225 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.456107406 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.487441875 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.476195854 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.478369672 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.683555558 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.74067947 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.46607873 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.479924486 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.472588786 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.466628483 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.779835963 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.684210659 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.036006252 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.089867849 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.469844756 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.483347879 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.996445149 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.74517454 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.46642427 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.466855136 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.466895463 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.49165701 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.477077516 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.479113771 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.46747416 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.711515718 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.774863854 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948856478 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.770093188 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.486342149 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.330678128 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.477238081 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.718026064 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.312795619 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.706537892 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.176948184 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.290874496 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.723003987 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.542810322 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.707765059 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.46907555 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.706837592 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.47475588 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.47335471 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.468383888 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.467907536 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.469102044 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.771833861 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.177506829 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.725794385 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.476002297 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.474446715 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.50270549 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.709737582 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.692615891 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.356420374 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.697983275 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.77722321 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.478941768 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.469511991 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.181101838 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.780388339 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.474160697 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.477094809 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.719316968 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.472672597 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.51075726 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.340225843 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.469347698 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.10263145 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.686060515 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.49087733 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.487277971 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.29982577 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.179045575 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.476057426 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.047355325 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.473368753 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.47114523 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.747245579 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.478974905 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.471981218 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.764354913 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.479127082 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.485836175 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.718062419 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.174435923 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.355155346 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.47327133 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.475022253 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.473410317 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.472546669 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.509691909 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.473656761 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.480717486 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.905297176 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.4735837 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.473305746 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.487355437 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.475065788 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.473226845 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.49916192 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.474665495 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.481781351 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.464780794 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.457468567 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.472743631 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.604188288 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.079556571 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.475050055 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.088858838 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.811659148 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.723734768 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.476206487 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.447351343 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.482546581 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.475228212 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.473688164 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.473916215 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.466131457 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.100022752 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.484463893 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.784073436 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.481900927 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.685870978 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.686093332 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.491985607 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.715892875 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.487581597 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.499040992 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.440523474 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.47568915 seconds)
  done (took 1026.501455582 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.475236186 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.493422877 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.496743281 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.562076552 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.504826413 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.621229293 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.484911006 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.588050848 seconds)
  done (took 21.558525264 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.469645931 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.480078826 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.492111957 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.47955609 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.475757032 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.008433144 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.484043101 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.480289931 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.50054729 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.488560849 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.486948299 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.165893071 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.482555364 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.475825919 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.474028786 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.483194726 seconds)
  done (took 34.271933382 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.630179648 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.644835997 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.029175565 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.537204407 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.482543189 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.486722148 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.831249693 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.491669271 seconds)
  done (took 28.472545777 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.486130969 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.487074271 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.489208162 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.484430753 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.487434023 seconds)
  done (took 8.773812866 seconds)
done (took 1284.625125675 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.488864963 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.489532909 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.489581921 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.490036594 seconds)
  done (took 7.295451023 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.451061227 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.451019328 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.451179789 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.464625702 seconds)
  done (took 10.156683214 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.882132227 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.103937574 seconds)
  done (took 5.326670184 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.485326411 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.247431614 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.23282987 seconds)
  done (took 8.30415517 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.793438663 seconds)
  done (took 3.132526731 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.923225016 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.982977195 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.489468592 seconds)
  done (took 7.739869624 seconds)
done (took 43.297382644 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.473654959 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.24321098 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.634881854 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.474217265 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.658432876 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.636015265 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.736987682 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.49095536 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.474571709 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.490935425 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.475091407 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.640277963 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.72629471 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.247663808 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.727884339 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.24640774 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.682736249 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.48543164 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.487139115 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.476010502 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.754028083 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.486386007 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.474512676 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.490794667 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.642156427 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.624454742 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.477228885 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.245990461 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.479876416 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.474616117 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.623923278 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.48890535 seconds)
  done (took 86.112325059 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.484988241 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.478011887 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.477165792 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.494457631 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.497661345 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.47633017 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.499357308 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.477252075 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.479578945 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.475891086 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.489647527 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.476858215 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.477971071 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.490098025 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.476907431 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.494255993 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.477752216 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.51232531 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.486503675 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.476811132 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.478842047 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.476884745 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.480263249 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.476764972 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.478130533 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.49630755 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.478601639 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.478580919 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.478642906 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.499418308 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.479648371 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.477573541 seconds)
  done (took 80.822991561 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.478429677 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.480626037 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.478511908 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.50020912 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.478865284 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.482128489 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.501426714 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.478946894 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.47844495 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.476175464 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.481929341 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.47952905 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.479592782 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.481252963 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.480543231 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.479594126 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.492787697 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.477096474 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.480789281 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.496468477 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.481558389 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.485500894 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.480291874 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.48276359 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.497068561 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.479937545 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.500521692 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.481070662 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.487454069 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.478604264 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.48058178 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.49876189 seconds)
  done (took 80.842715793 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.719141057 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.497767104 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.498622066 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.491848937 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.498926772 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.495780622 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.49027561 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.731142696 seconds)
  done (took 15.768783453 seconds)
done (took 264.890580265 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.48973049 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.499211206 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.51932271 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.489268975 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.508506855 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.517951516 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.73050001 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.524006994 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.715614468 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.497344672 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.505976541 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.494083523 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.417804645 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.639826134 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.481448113 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.492334769 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.500794165 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.503477497 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.498560777 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.738423254 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.521116153 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.485353878 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.493702021 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.494219421 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.460340504 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.56549696 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.56409432 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.657644409 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.61873929 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.563484461 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.491664572 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.494158646 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.5192513 seconds)
  done (took 70.04122869 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.488583385 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.498659314 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.50203877 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.500682487 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.501655025 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.500635535 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.49062906 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.498883927 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.500100465 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.501006865 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.499380287 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.502311419 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.501729503 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.50146923 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.497521626 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.472464625 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.492281058 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.500526138 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.490077844 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.471758393 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.501221617 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.500133945 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.499186949 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.500407598 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.501406884 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.500805183 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.501165022 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.501760421 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.501163494 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.502954822 seconds)
  done (took 46.272431683 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.501302071 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.486571232 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.502551931 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.500206771 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.491003202 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.498916081 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.834114611 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.501935146 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.497354513 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.498185458 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.488024056 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.506031597 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.549675872 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.487444152 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.516421041 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.503034472 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.50487474 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.494327854 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.489465538 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.509835715 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.843385697 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.504875189 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.833746053 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.511363196 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.497377576 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.497527393 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.498125768 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.499066016 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.497117242 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.490453494 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.464568136 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.836282598 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.504513204 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.498458273 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.442467093 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.511190927 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.505228397 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.489137163 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.498478269 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.496345553 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.83276645 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.495553971 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.489488713 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.489249902 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.499224795 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.506886704 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.4884188 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.491568942 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.782955314 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.504207004 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.490396173 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.519571216 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.508136674 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.49829117 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.784364901 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.49857552 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.497159874 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.488909492 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.522395061 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.838591123 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.506482507 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.499727795 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.491750794 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.500445949 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.490990077 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.499615113 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.51338913 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.500868843 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.49109486 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.502663896 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.489958345 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.50064545 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.506190003 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.492355169 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.49454773 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.493798759 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.500820211 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.492590094 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.492197017 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.835530336 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.503498559 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.491169323 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.848291067 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.505136224 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.510521862 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.510168246 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.510663419 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.620370906 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.835801008 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.457660386 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.513071978 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.508906358 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.842750486 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.507343576 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.501848512 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.492694736 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.530859825 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.510078408 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.492489612 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.493590821 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.500133778 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.514304986 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.493751207 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.50394954 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.843007475 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.506393325 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.496341785 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.500982422 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.573850881 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.509550897 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.514815897 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.505063094 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.851790608 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.503476825 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.511902406 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.494132898 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.495965362 seconds)
  done (took 219.666362269 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.492236054 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.514545029 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.512950229 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.494292001 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.493036489 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.502923098 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.495825881 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.499636352 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.498836479 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.496238993 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.499759262 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.506523843 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.50362733 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.496868571 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.495944375 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.497596734 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.495237561 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.506285292 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.49928274 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.494209403 seconds)
  done (took 47.353721469 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.512082466 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.158012742 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.1337003 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.511675805 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.510954122 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.501543291 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.567477288 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.512201918 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.512281016 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.853116273 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.707126556 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.513385338 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.512244331 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.512227582 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.135887946 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.48130296 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.852949293 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.158782911 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.515663115 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.161507536 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.485008172 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.514059188 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.502253269 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.160369477 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.865770539 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.844168954 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.569797495 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.16365272 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.51392752 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.512395241 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.163903458 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.516561487 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.506503252 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.147856768 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.5141554 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.527828395 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.511697482 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.57155012 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.573910933 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.858951533 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.166630607 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.857028249 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.527357966 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.676630844 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.516796936 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.483053995 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.174044903 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.516935724 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.483510914 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.516360235 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.521264048 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.151091029 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.506957833 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.151758068 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.515283762 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.517430237 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.1669274 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.153363107 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.139966128 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.710673495 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.505751317 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.847088337 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.517851732 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.17487364 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.515841202 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.515506201 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.514396259 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.712864477 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.165888281 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.847306167 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.859443418 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.859081208 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.514953443 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.584716696 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.517330583 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.859444463 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.582483707 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.916347974 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.859450982 seconds)
  done (took 138.033364998 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.809559728 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.631590155 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.939082915 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.136923005 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.059379644 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.659022276 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.634872559 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.781122359 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.510802208 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.616205013 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.257951305 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.613124542 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.325997842 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.587535188 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.626835005 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.645426814 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.976439277 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.520208841 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.215873224 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.235728175 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.520714964 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.61913714 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.32949369 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.917896299 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.503260073 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.298283184 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.510433375 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.081506444 seconds)
  done (took 57.928138719 seconds)
done (took 580.641487612 seconds)
SAVING RESULT...
DONE!
