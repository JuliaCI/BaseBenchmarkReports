cset: moving following pidspec: 4326
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.530478125 seconds)
loading group "string"... done (took 0.495335525 seconds)
loading group "linalg"... done (took 9.6932411 seconds)
loading group "parallel"... done (took 0.165882498 seconds)
loading group "find"... done (took 3.498180077 seconds)
loading group "tuple"... done (took 2.093427061 seconds)
loading group "dates"... done (took 1.429851275 seconds)
loading group "micro"... done (took 0.196768731 seconds)
loading group "io"... done (took 0.511200863 seconds)
loading group "scalar"... done (took 57.785007227 seconds)
loading group "sparse"... done (took 14.20624898 seconds)
loading group "broadcast"... done (took 1.341880578 seconds)
loading group "union"... done (took 10.409778024 seconds)
loading group "simd"... done (took 3.621693805 seconds)
loading group "random"... done (took 13.554931409 seconds)
loading group "problem"... done (took 2.204036026 seconds)
loading group "array"... done (took 23.76717354 seconds)
loading group "misc"... done (took 1.144115469 seconds)
loading group "sort"... done (took 3.802380513 seconds)
loading group "collection"... done (took 22.006364779 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.736563768 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.119163384 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.198044061 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.200698808 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.272274562 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.164540495 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.158624387 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.143327984 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.639640079 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.20602297 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.134587084 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.377245196 seconds)
done (took 6.097600763 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.456426125 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.061738923 seconds)
    (2/2) benchmarking "String"...
    done (took 0.191911412 seconds)
  done (took 0.953481287 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.076654283 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.162598586 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.106942808 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.094110771 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.093031518 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.107029353 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.098019223 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.1081305 seconds)
  done (took 1.461066267 seconds)
done (took 3.639369632 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.550667146 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 1.00743223 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.520211121 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.187143503 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.300819604 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.302871622 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.272086799 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.229787756 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.088455753 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.084689627 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.196188894 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.434150311 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.424068138 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.969867796 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.068246078 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.093310429 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.157926803 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.849042637 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.078740689 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.109284382 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.511931685 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.217199339 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.115280407 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.106529736 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.184471606 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.125633598 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.141465694 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.101888802 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.732535658 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.132625666 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.208431198 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.082739853 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.139686814 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.168708186 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.217364391 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.109619284 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.737110385 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.200563921 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.095690829 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.099392133 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.741600162 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.125120045 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.212547538 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.104614948 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.067857688 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.167342157 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.113569166 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.07947198 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.093597083 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.098988715 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.168237199 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.501948575 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.104220513 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.195032068 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.092468358 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.766548577 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.095053517 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.277846974 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.12384938 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.09338643 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.089383237 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.088847499 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.165058991 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.094099072 seconds)
  done (took 20.73183435 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.191389905 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.206225118 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.096477478 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.143657819 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.141918833 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.080357685 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.088075635 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.095348095 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.112766574 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.1958143 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.125108942 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.215487719 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.074757095 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.107131573 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.167028988 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.250744343 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.106851551 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.120901847 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.089520682 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.093094484 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.143216919 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.095945727 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.093884745 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.112527481 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.16947068 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.203797516 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.109894976 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.122286641 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.089016819 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.097277017 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142139901 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.148863275 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.091263724 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.088770697 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.173475332 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.12827281 seconds)
  done (took 5.42327786 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.238129178 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.103827122 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.24497384 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.188515486 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.127310665 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.178634891 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.192350584 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.303209497 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.314112916 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.163807892 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127100221 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.095034603 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.077915104 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.078947989 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.097339308 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.846509361 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.154542158 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.158055165 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.168194478 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113797901 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.096822776 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.719561108 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.099288453 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.084997236 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09196236 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.080461796 seconds)
    (27/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.215877564 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.223680771 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.093087625 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.478133969 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.083613572 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.113607819 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113606995 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.209222003 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.121669546 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.12068414 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.110510777 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.085789805 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.207812335 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.083160248 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.115730838 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.077471903 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.077762166 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134634026 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.11577105 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.105387225 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.118973475 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.119906468 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.09981294 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.107545315 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.102728267 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.192978625 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.161632781 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.102346785 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.277688055 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.108315672 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097332329 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.108322395 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.814570199 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.13084136 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.08326522 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.093806351 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.094518813 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.078899148 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.829010364 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102369824 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.679052364 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.083382068 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.159171243 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09629307 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.115136843 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085845871 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084663978 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.123101816 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.085600288 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.079091927 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.101916978 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.079483666 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.089469812 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.128931045 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.085251016 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.095563838 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.145875703 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.096259252 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.120778235 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109194339 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.103722645 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.084212701 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.127224567 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08126483 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.087398874 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.202431171 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.112894445 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.113274921 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.111786019 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.12817577 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.103040162 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.286596326 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.086202583 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.083347301 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.0814029 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.13787807 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099167452 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112222589 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.11266402 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08054553 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084327959 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.095202486 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.081605882 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.146668185 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.099944867 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.080788907 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.086990014 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.108394584 seconds)
  done (took 28.422165751 seconds)
done (took 55.266555918 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.773339113 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.077502034 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.09845443 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.078526772 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.078742171 seconds)
  done (took 1.864984487 seconds)
done (took 2.603715446 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.181901924 seconds)
    (2/23) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.265886548 seconds)
    (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.198537087 seconds)
    (4/23) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.128409179 seconds)
    (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.148790755 seconds)
    (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.169775625 seconds)
    (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.151643318 seconds)
    (8/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
    done (took 0.167795754 seconds)
    (9/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.148265321 seconds)
    (10/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.168351662 seconds)
    (11/23) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.166667463 seconds)
    (12/23) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.105806171 seconds)
    (13/23) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.173592529 seconds)
    (14/23) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.183675692 seconds)
    (15/23) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.101747021 seconds)
    (16/23) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.205832927 seconds)
    (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
    done (took 0.103255482 seconds)
    (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.147735196 seconds)
    (19/23) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.084647577 seconds)
    (20/23) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.193117743 seconds)
    (21/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
    done (took 0.084087542 seconds)
    (22/23) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.1034325 seconds)
    (23/23) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087362435 seconds)
  done (took 4.229668018 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.106201062 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.099089101 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.102641836 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.122902752 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086385897 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101643581 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.121179643 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10749365 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.1019947 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.113823195 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.088108416 seconds)
  done (took 1.895473899 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.101516929 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.097778855 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.092748974 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11970874 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086718732 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099543203 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.116126911 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107391644 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.099033161 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.114240813 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.086753631 seconds)
  done (took 1.868160147 seconds)
done (took 8.734334912 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.201242654 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.969665652 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.182324509 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.248369698 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.329556675 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.298119445 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.611964945 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.202363209 seconds)
  done (took 15.90109641 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.115093672 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.200348353 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.093011853 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.096311431 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.110518602 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.096297159 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.090358113 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.114912106 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.095659077 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.096526401 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.095495747 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.107195746 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.097014422 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.091588826 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.112672257 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.091648391 seconds)
  done (took 2.505893043 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.136242022 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.117191236 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.117095835 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.100022834 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.094592114 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.117325273 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.101537441 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.096464926 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.113184974 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.095037853 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.103204659 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.11504512 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.098946597 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.094070822 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.116169515 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.118826477 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.094154497 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.114213494 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.117763208 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.098541565 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.11642106 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.098102346 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.097593967 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.115165295 seconds)
  done (took 3.399723245 seconds)
done (took 22.557046227 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.153816078 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.08463117 seconds)
  done (took 0.992889795 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.168671792 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.184180237 seconds)
  done (took 1.113313275 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.114311643 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.090603705 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.137426164 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.104433743 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.09219919 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.108100889 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.117996019 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.091297765 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.108592251 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.092713625 seconds)
  done (took 1.820761053 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.09629596 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.097035576 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.122327901 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.160059526 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.116650375 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094007572 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.096071196 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.112117221 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.097416342 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.090303658 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.113439375 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.109711028 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.095841694 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.127111007 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.095148296 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.097249804 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.116698186 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.095930502 seconds)
  done (took 2.695707951 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.093566034 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.092290536 seconds)
  done (took 0.949604714 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.09516615 seconds)
    (2/7) benchmarking "second"...
    done (took 0.090217779 seconds)
    (3/7) benchmarking "month"...
    done (took 0.092565372 seconds)
    (4/7) benchmarking "year"...
    done (took 0.109388025 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.09089179 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.091011833 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.107493317 seconds)
  done (took 1.440237422 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.521330481 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.237538364 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.373364766 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.076524555 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.122630951 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.313850115 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.123766541 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072901749 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.091992322 seconds)
  done (took 2.722051095 seconds)
done (took 12.495118405 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.092821078 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.207306019 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.604956462 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.130740552 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.09222756 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.152344269 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.345398953 seconds)
done (took 2.39516754 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.346143968 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.179086195 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.084535636 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.09146653 seconds)
  done (took 1.465771577 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.084472577 seconds)
    (2/2) benchmarking "read"...
    done (took 0.10003435 seconds)
  done (took 0.957996301 seconds)
done (took 3.19580163 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090650752 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.111216022 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.088987815 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.1085892 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.088769176 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.08901593 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.107798576 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.090376659 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.089688807 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.212680003 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.10834724 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.09095403 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089530358 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10565812 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089739867 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089136342 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.088967324 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106910944 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.090152766 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088826063 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.08875877 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.106046942 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.090899063 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.088815091 seconds)
  done (took 3.195924754 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.112344733 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.092410876 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.110894724 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.095074444 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.094816903 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.111144942 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.094251861 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.092445839 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.11129545 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.09238188 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09412055 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.093753076 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.109256461 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.095501169 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091378898 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.111561028 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.094982221 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092765212 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110835122 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.094375019 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.093952174 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10892782 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.094389665 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094721227 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.11204845 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094230402 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.091795967 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.109163098 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.095494895 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.094733612 seconds)
  done (took 3.760823492 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.097805654 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.087533782 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.089976914 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.116045157 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.087878332 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.09122703 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.1038694 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.090223672 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.090933398 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.089864696 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.109185584 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.091191045 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.089585889 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.108077618 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.092621578 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.093240067 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.098969391 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.108318497 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.089742636 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.091165987 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.11105217 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.090984923 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.090164386 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.09002982 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.107759365 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.087732704 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.09005019 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.106554536 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.091559351 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.089492374 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.092581302 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.110482096 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.090709358 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.098856316 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.109376909 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.091654006 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.095745696 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.086342331 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.109447825 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.087095004 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.086822776 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.107477873 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.090124459 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.096141593 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.090291125 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.109628341 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.090515511 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.090552125 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.108921961 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.094009957 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.087643096 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.090665203 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.111179744 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.092350282 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.093017681 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.104632697 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.091803655 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.087161599 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.108416119 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.090833174 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.087337178 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.088083167 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.112210146 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.091606792 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.104236217 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.114055091 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.091355003 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.092997081 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.090850797 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.114182051 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.09307371 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.100101427 seconds)
  done (took 7.725840865 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.151976689 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.134402136 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.095043093 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.092731991 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.109807804 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.091256626 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.09587863 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090484578 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111727413 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.096610185 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090907941 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.126633299 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092624308 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.130207381 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091961754 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.09660996 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.114118827 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093130172 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.091001285 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.126526996 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.094372339 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.096035473 seconds)
  done (took 3.09687802 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.215518129 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.115811038 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.142218246 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.121982168 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109608435 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.12058811 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.09638891 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.09734051 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111775027 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100989877 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100044488 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112414663 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109294157 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100049129 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.117301759 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.101374432 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.09466649 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.120376524 seconds)
  done (took 2.871805324 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.10623087 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.093339433 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.155185204 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.093448012 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.092673084 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.11139197 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099270685 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.112837611 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.111694228 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.092270662 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.099569738 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.109858671 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.092806287 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093466763 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092820575 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.111149569 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.093437535 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092914463 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.11777129 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09858725 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.097220592 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.117988377 seconds)
  done (took 3.068117767 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106120534 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.094784925 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.129026754 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.097265421 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.093198918 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.091704391 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.116720467 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.093868759 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.099322899 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.112533643 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094440967 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.092206478 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.125307593 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.094060962 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.098845457 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.111066063 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.093704395 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.094125652 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109860564 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.092929204 seconds)
  done (took 2.825655117 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.187439677 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.126543521 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.109778784 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116899481 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.127093293 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.109212732 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.134665537 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.108683998 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109165669 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.137797507 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.109618515 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108347856 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.134714111 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114222942 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.125263392 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117121478 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.11673815 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.135217814 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109976937 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108045824 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.139831539 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.112064424 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.136382964 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.109287888 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.108338995 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.126997294 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109311409 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.113597816 seconds)
  done (took 4.191507376 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097653577 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.094504046 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.091961349 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.116073849 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.097635964 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.090806366 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.115474795 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.097978275 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.093354997 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.110789127 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.100611657 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.094857033 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.111328008 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.094229597 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.093158015 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.115795099 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093948334 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.099019893 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093892347 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110463903 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.098863947 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092825083 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.117839189 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.092660002 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092375231 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.116955637 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.095247714 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.106014413 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114218175 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.093749025 seconds)
  done (took 3.82569593 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.105438481 seconds)
    (2/2) benchmarking "in"...
    done (took 0.102710177 seconds)
  done (took 1.001009285 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.101375486 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105888289 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.090479135 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.112278005 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.099629959 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.092776838 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.118165837 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100350458 seconds)
  done (took 1.612859755 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.184848906 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.210788276 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.116563998 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.104108926 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.208841072 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.189351028 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131268453 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.097526468 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.111760277 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.08607184 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.201795099 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.084161158 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.090084697 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.109990216 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.092292934 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.097046432 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.112550463 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.101932207 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.099214251 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.114492483 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.097949629 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097205782 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.11341853 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.103084903 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.087253273 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.113076797 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.095790772 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.103411973 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107534223 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.09408302 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.091482532 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.112795792 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.096171044 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.098204404 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.093763918 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.206390274 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.120804009 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090284866 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.092267263 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.118257705 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.126086934 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.093033916 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.114855668 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.093334993 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096157011 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.117162391 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.09859732 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.093066039 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.083998864 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.107890737 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.095532459 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088223583 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.111861134 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093489752 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.093376686 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11855323 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.095629928 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.08964033 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.108279746 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.090900326 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.091523109 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.106818008 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095108763 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.095704793 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.11199474 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.093476484 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091991434 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.092668116 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.113515953 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.094521248 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.092322193 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.126041347 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.093716055 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.097406562 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.119393576 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.095049308 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089565507 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.118743531 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093218585 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.093192639 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.115934924 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.121049555 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094279101 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.107246251 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.089189903 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.100802353 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.094734207 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.115986849 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.086491621 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100393972 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.114838961 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.095198442 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.085697963 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.110926907 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.089874965 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.09746378 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.104351249 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094128449 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.092529647 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.097289122 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.118348041 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.091420705 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.093917483 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.118268375 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.099454819 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.091987751 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.164056087 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.089854383 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.110142594 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.094998172 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.098627742 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.087109641 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.11221088 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.093275185 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090194788 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.109542687 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.098646352 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.093482406 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.114713426 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.099022036 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094828139 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.113772529 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.097443833 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.09346749 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.088448524 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.117566287 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103315002 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.093909488 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.116405567 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.09545614 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.095433344 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.11296913 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.098171574 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.089995512 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.11909249 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090291814 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.094261019 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.095511324 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.119124297 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.094623713 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.087772784 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.11102257 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.095926183 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.093951625 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.116899891 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.094486978 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.088876179 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.105411515 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.094235947 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.089225583 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.114019711 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103936684 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.08986976 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.096063875 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.110320425 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102784163 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.089699539 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.118917664 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.096572781 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.099340158 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.118322664 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.086650928 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090989476 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.11560459 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.09594145 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.089575081 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.093267938 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.113294256 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.102197646 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.085986721 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.117726426 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.087171499 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.091016739 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.119742416 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.096068607 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.097200486 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.089023141 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.152293022 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.106003321 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.119141627 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.095688356 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.094361913 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.097500305 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.113443774 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.098625601 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.098890029 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.119901054 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.091992021 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.092294569 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.120830085 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.090540187 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.095232709 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.113090721 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095339324 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.086728176 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.094611069 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.10641526 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.098711605 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.095435958 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.11787288 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.100464387 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.096731847 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.11161163 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104071128 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.089448822 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.118362696 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.087720228 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.099562008 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.103475579 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.120628593 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100728527 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.09554973 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111305198 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.095936739 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102562735 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.117592057 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.094301423 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.095328945 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.106731364 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.088056724 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.099671046 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.096026251 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.110477311 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.094023443 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094279557 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.11564805 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.0926 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.086632222 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.118013636 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.097487562 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.089210311 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.114284772 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.091120205 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.092135093 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.121323727 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.087001144 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.093341959 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.096061802 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.119160574 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.094434796 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.093004564 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.118031134 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.100949274 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.097463498 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.117462329 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092513212 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102730122 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.091799758 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.114810085 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.09127485 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.096537785 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.108204284 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.095276713 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.094769866 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.111388499 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.091220999 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09755464 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.120662052 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.099576695 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093491157 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.099067677 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.121450928 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.100755887 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092015814 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.119914903 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.091327201 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.087975017 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.113415637 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.087901672 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.09570551 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.11000433 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.109951803 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.092556825 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092312815 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.119231321 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.097296572 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.091939229 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.120439785 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104621916 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.089493824 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.107818773 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091678019 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.093356665 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.111132594 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.090715138 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.096287754 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.115695257 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.099679357 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096647136 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.110828635 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.094609452 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.101141609 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.092630441 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.1204315 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.101381312 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.100397818 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.111491401 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.099725748 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.091477044 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.11827099 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.08832506 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.093728895 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.114378638 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094066475 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.102047045 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.113014339 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.090761375 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.088326304 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.091856474 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.121409648 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.09301338 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.098942235 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.11485302 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.093550746 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.09124237 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.110611232 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.101283584 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.094230911 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.121462194 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.095906603 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.088613335 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.08799723 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.121020128 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094337714 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.100715665 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.111106225 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.098296395 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.101501122 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.119426256 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.095889275 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.103759766 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10340322 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.123014526 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.100129955 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.087324473 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.112322944 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098964946 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.094536011 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.119130606 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.097706801 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.088656765 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.116397966 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.100786439 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.096776571 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.113227576 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.090254228 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.09601901 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.103456917 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.119054141 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.097294507 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.097409709 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.115209573 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.090943902 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098932068 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.101063394 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.115727133 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101901899 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095597265 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.11891743 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.092271604 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.101520045 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.117047835 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.090117488 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.088395348 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.112089961 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.101036989 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.089059816 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.100211305 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.12123285 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.091602462 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.09293605 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.120153264 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.091697015 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097258435 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.120575807 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.0940758 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.10541377 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.097162442 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.113870318 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.099413603 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.100919674 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.108687778 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.093141064 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093952825 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.12539943 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.093092974 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.101488326 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.114873043 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101566622 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.097560452 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.100251694 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.121314367 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.101840135 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.088566918 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.122372863 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.097534428 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.098003802 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.113164179 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.095017878 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.089659094 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.114688615 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.102170836 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.092797571 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105325846 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.120170752 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.093129038 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.09378585 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.122225837 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094239157 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102497197 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.113495355 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.097403639 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.088684613 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.117656809 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.094357244 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.10263646 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.112291409 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.090544199 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100908655 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.09988548 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.120821318 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.097475019 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.101254137 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.110122402 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.089466052 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.097643845 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.11272886 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105552046 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.098504847 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.093531314 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.114787142 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.098743818 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.096667472 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.122284544 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.090535936 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.091923452 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.116366912 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097324759 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.093462435 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.110663842 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.099649337 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.095426039 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097010931 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.115377914 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.089717635 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.094554846 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.123716619 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.094147321 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.091281573 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.11428573 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101508817 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.095219013 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.112782114 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.089757095 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.101513339 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.118079759 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102915736 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.092959192 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.115513724 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.093725148 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.099280406 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.102295601 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.114873512 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095874374 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.09378492 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.121299359 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100840272 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.087904996 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.112535664 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105916606 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100608167 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.118014952 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.098909354 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.094626778 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103220565 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.122751822 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.098891881 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.089781331 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.111158 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.094245749 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.089837723 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.119660103 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101674528 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.094843068 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.114319534 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100182888 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.09963411 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.098482345 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.119009983 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.090103774 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105273972 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.112160118 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.099046335 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.090498157 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.109674447 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.099507101 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10043209 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094656269 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.116868602 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.098314464 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.098633065 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.111122457 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.093653976 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.098993911 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.12159087 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.10205497 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094352159 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.09362605 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.120034011 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10733276 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.097959183 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.11580586 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.103140969 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.102120947 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.116551385 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.095246231 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.098894152 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.12359073 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.099455257 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.105961132 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.113694699 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.094711361 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.102940561 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.103060722 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.127083592 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094515297 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.089691305 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.121579872 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.093925027 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.090710243 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.121900655 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102956088 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.103206914 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.117222083 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.093772707 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104258215 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.122247892 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096195683 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.09283304 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.11460588 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.100662394 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.093035434 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.099567983 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.113767186 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.103704944 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.103005454 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.123881496 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.104596001 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.090307694 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.122437089 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.097644792 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.104839122 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.095976346 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.111611419 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.090074388 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.098888514 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.123811852 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.103584937 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.099764713 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.120733418 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.10038823 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.097412651 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.0954606 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.113895432 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.103521771 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.100444058 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.117836138 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.09805335 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.093634098 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.117290045 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.097458154 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.101948271 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.123727366 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.096093196 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106250892 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.100151839 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.115234579 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.09467406 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.095593417 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.120346959 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.096438156 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100359761 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.114289861 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.090871549 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101080505 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.102468022 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.116438308 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103284611 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103006015 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.115075062 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.10012334 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103608039 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.12143961 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.097761246 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.097218143 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.119166548 seconds)
  done (took 62.432389784 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.146477913 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.104431879 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.119053716 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.097523333 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115460825 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121968236 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098328826 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099664778 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.120088847 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107611126 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.09904513 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097028754 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.134566031 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.1185121 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.136165555 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.108065252 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097004301 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.120404847 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097862087 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099105444 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.134779515 seconds)
  done (took 3.216245962 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.116664146 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.11075812 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.145908021 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.12819101 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.12785992 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.109477637 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.144442636 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.109185283 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.147685085 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106571001 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.12534655 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.130344301 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.106388172 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.105963687 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.126496356 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10928113 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.146718903 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106969661 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.129772591 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.127089885 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.108081928 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.144261443 seconds)
  done (took 3.556765851 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.127698673 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.101629787 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.095579455 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.118712001 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.100914046 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.097428235 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.121162991 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.098638084 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.106608661 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.09247801 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.109923369 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.094274987 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.097475343 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.11764143 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.093151482 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.098187374 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.126365071 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.102133164 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.104009257 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.097104861 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.11136753 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.098535664 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.099831586 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.109800905 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.103787689 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.103256735 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.100815978 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.12270078 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.091046908 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.10074215 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.118625489 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.092730987 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.089895853 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.088803365 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.109659014 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.102247999 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.100618386 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.118551049 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.099560913 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.089364014 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.097903053 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.123287223 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.090071194 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.099391364 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.118241409 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.092639995 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.102646719 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.098553098 seconds)
  done (took 5.824690162 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.128100695 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.155917702 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.102515 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.12754085 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.135785761 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.109128722 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.10140044 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.151362488 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.101889554 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.101355048 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.137214623 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.114138512 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.126293732 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.105823275 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.104570398 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.124499192 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.10414407 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102119473 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.127427317 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.102038903 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.107464407 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.125404352 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.112993994 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.11013189 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.126317192 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.10268965 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.102227994 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.125734083 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.111032482 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.108542274 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.127406347 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.108051627 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.133589749 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.365956936 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.103101987 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.101791581 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.13707093 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.103445729 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.125529423 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101218524 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.103850807 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.104778284 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.126729654 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.114994151 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.125335021 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.105662817 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.102571424 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.120741881 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.111949488 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.103844817 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.130741422 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.114327412 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.104555449 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.125607212 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108801194 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.111901005 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.124467473 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.102287494 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.103809838 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.133447271 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.103091688 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.103297545 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.134589265 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.104657332 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.106861453 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.134446813 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.105620597 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.125786875 seconds)
  done (took 9.034471973 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.133379828 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.106886769 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.135547647 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115446188 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107155033 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.12880303 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.107751311 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.106245742 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.129678323 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112287178 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.105568724 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.23785973 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.126589075 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.112170463 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.106409826 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.12991303 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.106708161 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.105494322 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.129484244 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107042267 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.105808389 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.136716937 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.108741654 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.135041827 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.11968422 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.102302681 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.128257259 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.108887177 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112669648 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.128987737 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.117935114 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.12789691 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.107767378 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.115817147 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.13890561 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.107273393 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.10062167 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.127748369 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.107004176 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.105814369 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.125374958 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.11515537 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106943525 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.12611516 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.108133289 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.10627276 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.135821152 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.116313482 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.135989929 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.112491441 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.106789143 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.135996334 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.106989023 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.105957002 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.137239353 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.122042799 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.136262622 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.115404996 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10621811 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.136480491 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.113448004 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.143387286 seconds)
  done (took 8.307609247 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100130108 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100165252 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.099181339 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.120418287 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.100555387 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098656535 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.098780863 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.121323585 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.100207921 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.099112737 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.121942368 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100672967 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10046933 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100503373 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.120991524 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101562609 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100138426 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.098684546 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.122208958 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.099855787 seconds)
  done (took 2.967402206 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.109655688 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.116135685 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.123705518 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.107358956 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.101998377 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.128754597 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.102198687 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102091167 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101098549 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.124521954 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.111929589 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108660698 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.126814347 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.108230606 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.109326182 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.131189558 seconds)
  done (took 2.679721543 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.119097793 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117896855 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.20216502 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.102704594 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.124954352 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.108731422 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.101398393 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.126201636 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.103269334 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.10671124 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.104058447 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.126739484 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.102969955 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.102892973 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.125768128 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.105486938 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.101649498 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.126478696 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.103885844 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.206405432 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.106950279 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103699662 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.125053055 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.107117658 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104334523 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.129877293 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.108703481 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102154115 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.126666251 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.103482138 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.105982745 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.108778498 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.123966875 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.10749108 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103811878 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.125670078 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.103034607 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.102842795 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.126369704 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.102257113 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.104924645 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.124147788 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.10316553 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.105981583 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.100277697 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.124856517 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.103392679 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.108012463 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.125583716 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.103619518 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.102064068 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.130096926 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.105718809 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.110047241 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.13043497 seconds)
  done (took 7.196494067 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.115319496 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103435848 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.136019071 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.100317327 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.103062148 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.104485879 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.127215002 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.105626107 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103351302 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.123632339 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.104706559 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.104300809 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.125352887 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.103929182 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.104461717 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103322541 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.123373635 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.105214089 seconds)
  done (took 2.864728005 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.114077722 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.116931002 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.132618726 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.105378435 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.103496164 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.141326389 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101509982 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.101517028 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.122845428 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.107355645 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104188327 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.130473436 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101357715 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.10696384 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.139156477 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103881925 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.109164805 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.123284846 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.106855803 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101842848 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.140330423 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101074996 seconds)
  done (took 3.389814721 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.112791362 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.228057608 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.107847092 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.237573272 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.098285733 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.122104112 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.109360714 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.099451944 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.139148101 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.099161444 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.120998934 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.097667762 seconds)
  done (took 2.44675009 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131339441 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139598399 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.127013561 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103707048 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111482348 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130364671 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108109971 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10685335 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13847709 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118753208 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128698969 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115458593 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115740439 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136629591 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112079184 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112470181 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129643679 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107913171 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.102838822 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.14428616 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107865641 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137912296 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108465974 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107757606 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12923979 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116290931 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115545176 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.140493674 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108246448 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.138362155 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112848776 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108049436 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139146215 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120222088 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103159991 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13818269 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108334624 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14393651 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114089585 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1148212 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.12616186 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112969785 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13730552 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113136103 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115217208 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130836531 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113283802 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107426052 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129917146 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128184306 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134557633 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114943089 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111526201 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136624603 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116783331 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.151823809 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119303683 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.1362228 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114184153 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118813157 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.138186562 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11425037 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136559476 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119274654 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112953999 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137180245 seconds)
  done (took 8.942583948 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142970038 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105258302 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130398191 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12103736 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1144425 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131036839 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108002112 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107533681 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131416087 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105596079 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.173220361 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108838906 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115881566 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.138523385 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108786672 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13004323 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108721279 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116933469 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126725872 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129789025 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107466554 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138447965 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115580337 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.139261101 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119191885 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112433997 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130920469 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109924138 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108315103 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130367948 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11369855 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131742975 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116645011 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104701024 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138406511 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108795463 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109232652 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136123316 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109072032 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112258244 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.138277522 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124300917 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130630092 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109119414 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119506381 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131166578 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109533662 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104434306 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130708805 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106575528 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119304041 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.141508892 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118656332 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136853358 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10935552 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107767284 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131491025 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109847219 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108095443 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13653734 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116125899 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13306157 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130781362 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107803968 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131513515 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117410974 seconds)
  done (took 8.889314234 seconds)
done (took 169.698052568 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.175684713 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.214918915 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.197193011 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.185959739 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.093511693 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.155498422 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.127442868 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.200114237 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.094339295 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.093769554 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.115939042 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.097216632 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.172710446 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.093440969 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.116321241 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.097406439 seconds)
  done (took 3.110645443 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.195841073 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.341498495 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.13192865 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.09795795 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.1007389 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.098657258 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.120887615 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.101998877 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.098789401 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.127396605 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.099619978 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.095226909 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.126804481 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.095586693 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.099652716 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.122143874 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106637069 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.09885308 seconds)
  done (took 3.149645671 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.11894571 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.150556775 seconds)
  done (took 1.157948351 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.129472641 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.212616032 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.295968622 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.171327574 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.118882977 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.140695897 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.148186414 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.13363612 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.188995421 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.133906344 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.112055531 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097138001 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.149162061 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.105725598 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.114627985 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.119909635 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.127134187 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.114005744 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.13580266 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.101674536 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.123577748 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.125604411 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.106466158 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.137429519 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.17893825 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.133637458 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.103095284 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.10210039 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.123069139 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.115110465 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.106322443 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.138197921 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.111893567 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.179126187 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.103360926 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.175526079 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.10604388 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.121811295 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.115233807 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.10023199 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.124720117 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.103615437 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.112449536 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.120317815 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.103858432 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.106507875 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.126179222 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.103321785 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.107592408 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.128317473 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.108105029 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.107259635 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.174094423 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.129574404 seconds)
  done (took 7.903811553 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.908630355 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.147714337 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.100178393 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.037205796 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.144222807 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112355717 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.90383046 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.147673225 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.249842072 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.925614365 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.116266017 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.106186745 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.260763283 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.25812059 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.266648049 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.357357231 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.764775244 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.111335742 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.131113268 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.166965976 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.105572783 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138620943 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.115150651 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.445691585 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.099871181 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.099088323 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.126575631 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.108685135 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.17675161 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.099529353 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.10338303 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.198005887 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.293797415 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.214473496 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.100468891 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.122377187 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.099115208 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.187352553 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.270262577 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.221070089 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.168634545 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119678687 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.09912457 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.103897724 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.136347683 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.097527078 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.184094415 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.191786754 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.169882617 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.126307425 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.109001047 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.105951928 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.125360192 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.179605684 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.098415787 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.358851122 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.36115787 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.12220782 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.105615732 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.113029206 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264006639 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.1247833 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.240194434 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.121918589 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.216573705 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.122473128 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.802153124 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.163764382 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.121259617 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.103903733 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.103541623 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.127946017 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.103903692 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.181537114 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.399684075 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.128496036 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.103659538 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098963351 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.236963754 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.100249356 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.123372936 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.18093056 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.101532359 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.105300069 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.129227059 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106416724 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.190091715 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.247356784 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.128861254 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.105436424 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.126746677 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.109634391 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.100931353 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.230856462 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.231400144 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.178524664 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.229646293 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.104736281 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.183551047 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.187103776 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.104348091 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.190972147 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.105571529 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.110857036 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125394754 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.230381046 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.134722124 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.125361948 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.104736063 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.104737441 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.161585787 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.102625844 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.129838374 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.168013748 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.484081236 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.189621579 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.097906168 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.126595711 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106673027 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.179536432 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107983718 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263747074 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106148212 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.188103184 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.128057858 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.098255048 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.105284496 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.181729903 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.108231287 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129054904 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.103891346 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.108718752 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.28062237 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.222033378 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.13096126 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.249943747 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.172744581 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.127880726 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.170318399 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.130031084 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.16368029 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.133390855 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.104153287 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123650819 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.789173436 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.111524849 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.106246928 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.12834977 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.183198027 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.122278442 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104611751 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.09959781 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.097711063 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.79775551 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.128350104 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.098448877 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102342212 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.127807671 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.106393408 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.10512689 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.127879695 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.157297496 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.269616682 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.108506412 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.104104155 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.122819907 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.158005758 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.124937913 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.103965575 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.101300055 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.123512737 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.106845463 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.104764006 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.125621605 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.164699092 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.18010944 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.231751758 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.579667218 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.124374304 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.101352377 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.242658292 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10031062 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.349786311 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107263052 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.237962997 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.184476396 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.098058914 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.362274698 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.18685145 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.204608372 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.104739147 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.194436125 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.098956397 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.105693717 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.180879737 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.123306408 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.107904249 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.18043338 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.10977637 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.107331525 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.284985856 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.101056435 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.247139631 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.099232328 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.189911182 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.104181422 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105335488 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.328750475 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.123035943 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.112879656 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.181771383 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.105290406 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.123348906 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.864049976 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.124573273 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.110909206 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.105030358 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.259872354 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.162166885 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.129155848 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.107320838 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.130596505 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.158393601 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.228840956 seconds)
  done (took 46.514545445 seconds)
done (took 62.724745621 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.255131149 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.167561541 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.352900036 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.149879343 seconds)
  done (took 1.886158004 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.257894152 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.165035353 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.240177179 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.097522304 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.248560177 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.098321232 seconds)
  done (took 2.023904316 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.17034038 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.163842693 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.143793089 seconds)
  done (took 1.395694501 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.208695315 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.207139273 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.344818654 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.234239571 seconds)
  done (took 1.971224802 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.273412129 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.116569175 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.127408989 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.227076928 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.242585564 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.207718847 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.122707382 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.174021475 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.130004121 seconds)
  done (took 2.571882946 seconds)
done (took 10.764321698 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.260246242 seconds)
    (2/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.132522952 seconds)
    (3/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.344019956 seconds)
    (4/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.233403788 seconds)
    (5/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.401250757 seconds)
    (6/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.332293119 seconds)
    (7/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.197842192 seconds)
    (8/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.155334671 seconds)
    (9/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.113133641 seconds)
    (10/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.271917167 seconds)
    (11/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.263866485 seconds)
    (12/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.106957269 seconds)
    (13/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.112535054 seconds)
    (14/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.194785123 seconds)
    (15/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.246020799 seconds)
    (16/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.15015237 seconds)
    (17/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.283873318 seconds)
    (18/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.154008618 seconds)
    (19/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.111850984 seconds)
    (20/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.110001763 seconds)
    (21/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.137271962 seconds)
    (22/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.264210281 seconds)
    (23/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.211669173 seconds)
    (24/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.393031235 seconds)
    (25/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.249018886 seconds)
    (26/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.117735619 seconds)
    (27/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.250587329 seconds)
    (28/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.225988017 seconds)
    (29/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.116930014 seconds)
    (30/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.123216204 seconds)
    (31/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.129020641 seconds)
    (32/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.104064747 seconds)
    (33/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.118876707 seconds)
    (34/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.262722661 seconds)
    (35/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.231149324 seconds)
    (36/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.13723443 seconds)
    (37/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.21294805 seconds)
    (38/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.194171231 seconds)
    (39/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.170713291 seconds)
    (40/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.366240477 seconds)
    (41/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.089397053 seconds)
    (42/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.200183531 seconds)
    (43/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.121658455 seconds)
    (44/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.105580527 seconds)
    (45/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.130637219 seconds)
    (46/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.111096104 seconds)
    (47/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.153696156 seconds)
    (48/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.26327076 seconds)
    (49/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.107020285 seconds)
    (50/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.133796032 seconds)
    (51/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.289233495 seconds)
    (52/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.082791134 seconds)
    (53/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.126955446 seconds)
    (54/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.208901977 seconds)
    (55/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.102211365 seconds)
    (56/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.217072406 seconds)
    (57/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.220915777 seconds)
    (58/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.081175697 seconds)
    (59/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.15067618 seconds)
    (60/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.153953604 seconds)
    (61/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.103902701 seconds)
    (62/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.151602751 seconds)
    (63/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.079367977 seconds)
    (64/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.097940192 seconds)
    (65/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.196993632 seconds)
    (66/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.104181512 seconds)
    (67/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.081789008 seconds)
    (68/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.128544881 seconds)
    (69/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.110391843 seconds)
    (70/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.082323264 seconds)
    (71/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.100680188 seconds)
    (72/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.078529644 seconds)
    (73/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.143083656 seconds)
    (74/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.191037935 seconds)
    (75/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.131501488 seconds)
    (76/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.146331596 seconds)
    (77/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.102999704 seconds)
    (78/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.104951865 seconds)
    (79/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.227648295 seconds)
    (80/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.078401259 seconds)
    (81/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.150287404 seconds)
    (82/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.141445859 seconds)
    (83/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.082174004 seconds)
    (84/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.102588931 seconds)
    (85/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.135580712 seconds)
    (86/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.230904934 seconds)
    (87/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.103527896 seconds)
    (88/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.10192244 seconds)
    (89/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.109687517 seconds)
    (90/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.127877517 seconds)
    (91/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.138341879 seconds)
    (92/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.102987822 seconds)
    (93/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.104544724 seconds)
    (94/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.084656244 seconds)
    (95/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.086956235 seconds)
    (96/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.125167243 seconds)
    (97/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.208327341 seconds)
    (98/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.228795884 seconds)
    (99/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.156210289 seconds)
    (100/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.110902896 seconds)
    (101/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.086509388 seconds)
    (102/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.200318303 seconds)
    (103/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.112772556 seconds)
    (104/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.07982841 seconds)
    (105/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.142544221 seconds)
    (106/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.131575888 seconds)
    (107/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.080066628 seconds)
    (108/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.079342023 seconds)
    (109/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.109539762 seconds)
    (110/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.13358083 seconds)
    (111/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.203458877 seconds)
    (112/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.079310796 seconds)
    (113/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.129445066 seconds)
    (114/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.08038978 seconds)
    (115/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.110166521 seconds)
    (116/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.109025271 seconds)
    (117/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.133703088 seconds)
    (118/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.132622451 seconds)
    (119/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.085913538 seconds)
    (120/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.08116251 seconds)
    (121/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.105169905 seconds)
    (122/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.0812215 seconds)
    (123/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.079147059 seconds)
    (124/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.103392347 seconds)
    (125/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.085438339 seconds)
    (126/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.147288213 seconds)
    (127/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.087171793 seconds)
    (128/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.122790768 seconds)
    (129/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.128007926 seconds)
    (130/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.083623462 seconds)
    (131/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.101245273 seconds)
    (132/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.13454936 seconds)
    (133/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.127802589 seconds)
    (134/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.104897811 seconds)
    (135/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.084621529 seconds)
    (136/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.082397009 seconds)
    (137/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.136665166 seconds)
    (138/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.080247493 seconds)
    (139/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.085853289 seconds)
    (140/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.140335204 seconds)
    (141/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.237154208 seconds)
    (142/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.085415314 seconds)
    (143/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.107571318 seconds)
    (144/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.080168248 seconds)
    (145/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.138518844 seconds)
    (146/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.140266888 seconds)
    (147/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.159783806 seconds)
    (148/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.086501526 seconds)
    (149/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.087502254 seconds)
    (150/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.152107446 seconds)
    (151/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.129879232 seconds)
    (152/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.082945252 seconds)
    (153/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.100632359 seconds)
    (154/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.127668007 seconds)
    (155/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.07943708 seconds)
    (156/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.102747937 seconds)
    (157/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.082084913 seconds)
    (158/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.086228431 seconds)
    (159/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.166064969 seconds)
    (160/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.102468566 seconds)
    (161/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.087005227 seconds)
    (162/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.157796077 seconds)
    (163/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.080081145 seconds)
    (164/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.110481447 seconds)
    (165/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.082231772 seconds)
    (166/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.133773998 seconds)
    (167/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.083128169 seconds)
    (168/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.126101284 seconds)
    (169/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.082583988 seconds)
    (170/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.128354105 seconds)
    (171/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.086489982 seconds)
    (172/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.104662648 seconds)
    (173/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.086074392 seconds)
    (174/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.081515224 seconds)
    (175/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.138621824 seconds)
    (176/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.080042496 seconds)
    (177/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.080839151 seconds)
    (178/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.085829478 seconds)
    (179/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.11109305 seconds)
    (180/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.135939976 seconds)
    (181/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.11162895 seconds)
    (182/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.100762024 seconds)
    (183/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.105457291 seconds)
    (184/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.124017949 seconds)
    (185/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.086941229 seconds)
    (186/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.113836197 seconds)
    (187/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.10731575 seconds)
    (188/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.083929833 seconds)
    (189/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.110296891 seconds)
    (190/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.10117237 seconds)
    (191/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.112065423 seconds)
    (192/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.085959841 seconds)
  done (took 27.440159075 seconds)
done (took 28.365360961 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.226183635 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.131380157 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.111501817 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.110761822 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.234721621 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.117085343 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.154994151 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.114466184 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.121030973 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.137020479 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.10196005 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123969875 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.135879184 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.218774728 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.141731679 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.102533425 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.101723968 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.147429508 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.126868699 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.126625967 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.233229409 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.129740293 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.122370324 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.10229872 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.235167405 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.103881156 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.135837715 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.113101041 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.124508187 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.110364197 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.13851465 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.102368373 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.127161261 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.152497799 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.101467767 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.110402839 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.12600331 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.08763217 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.111491941 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112057479 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.151153629 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.113563139 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.110125613 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.128727012 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.112709472 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.1119142 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.128236338 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.116236375 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.100082023 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.137416726 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.105278056 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.127167405 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.134579203 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.102319158 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.101148921 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.125647734 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.124764931 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101717865 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124034034 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.127813464 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.104576934 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.101968991 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.137598088 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.102941863 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.112158838 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.126981206 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.113088855 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.113657726 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110586949 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.129745987 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.102347299 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.11029913 seconds)
done (took 10.079089188 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.107527308 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.145788993 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.247434564 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.251630719 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.156602715 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.12005446 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.11612274 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.151408051 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.116038476 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.119975459 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.163896267 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.135533574 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.254760266 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.117115013 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.145738533 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.114673346 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.113375465 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.136522361 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.249712751 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.129378814 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.12527429 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.145014237 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.128504555 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.118243611 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.13317835 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.138974582 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.133708929 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.116937124 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.106016227 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.114243416 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.153057862 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.106846267 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.109109545 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.14852924 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.124258671 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.115342456 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.143311826 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.114352928 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.10600605 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.136608152 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.113316347 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.147629121 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.109138687 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.11873854 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.139787393 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.124901573 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.112659836 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.118273545 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.132041317 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.114113707 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.107167914 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.155861804 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.119275356 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.120967888 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.14303524 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.11951571 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.118531935 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.143754054 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.110701893 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.11825201 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.132796853 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.107650437 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.106586981 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.151438055 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.110433421 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.118183659 seconds)
  done (took 9.778720086 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.126217 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.13643159 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.142439603 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.116742021 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.11147404 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.125209863 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.101379485 seconds)
  done (took 1.833634246 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.10316305 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.268994599 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.258518212 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.259387727 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.249194546 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.26725508 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.125003672 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.102217762 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.165678192 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.112717468 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.268014909 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.322842131 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.140709523 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.118949344 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.262164375 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.101260866 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.259681591 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.129251744 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.118065289 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.261840562 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120303023 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.160065575 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.116883112 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.103791692 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.263147119 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.103737456 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.335889244 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.122107304 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.112423866 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.141938516 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.118181621 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.205852326 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.235711458 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.14514892 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.112227862 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.257965228 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.2524247 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.117317618 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.333258031 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.10877509 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.249619366 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.118272385 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.117801461 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.146391137 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.117364805 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.247538364 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.121682668 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.145872454 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.117298493 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.27345262 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.112952137 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.264392545 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.143501878 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.118019519 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.114325797 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.145794312 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.125748301 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.117185204 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.270426092 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.14967622 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.2627895 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.258927316 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.253414885 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.260329437 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128975318 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.265944713 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.240422751 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.117320921 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.111666617 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.147973148 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.261409902 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.117363227 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.114804239 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.249650911 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.148846438 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.262601625 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.233585892 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.146054514 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.117437605 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.105605669 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.14370671 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.105131226 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.252292295 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116744962 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.140855169 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.123914737 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115897872 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.14588431 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.109626476 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.127144711 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.143723638 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.11555456 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.121248923 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.143426647 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.119935776 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.262376998 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.114757686 seconds)
  done (took 17.761484765 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.106360944 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.105216757 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.108761577 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.130828165 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.106189895 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.104647753 seconds)
  done (took 1.663863103 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.142992491 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.120152009 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.152507608 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.119784501 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.165652654 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.250213582 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.259200994 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.139775376 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.138450983 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.130381009 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.252757128 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.254877308 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.255555227 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.121630596 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.256562666 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.120767803 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.260974721 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.116004485 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.154196253 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115785822 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.117695319 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.148340627 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.115598306 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.245159615 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.119679098 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.147686061 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.112473015 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.126056328 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.15394931 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.113780722 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.121159086 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.145696457 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.112390719 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.110685891 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.258617519 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.139171239 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115659648 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.120949212 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.147433613 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.119540229 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.25807849 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.116812487 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.124960112 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.14991744 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.113071719 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.137242155 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.124561285 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.111785451 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.258443003 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.121260083 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.14943986 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.120213896 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.117663213 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.150875188 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.11245229 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.112602755 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.148800167 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.261294237 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.122642825 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.110550005 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.147905946 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.120338488 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.113099899 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.151689252 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.120131338 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120056532 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.136913461 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.121242372 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.116050491 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.146001204 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.143334939 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.119315391 seconds)
  done (took 11.801975787 seconds)
done (took 43.804326792 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.744880989 seconds)
  done (took 2.743391023 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.088495359 seconds)
  done (took 2.088026646 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.187637946 seconds)
  done (took 19.21872289 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.421100844 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.349075498 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.99922257 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.173901577 seconds)
  done (took 2.944554699 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.093159456 seconds)
  done (took 2.106231446 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.4065646 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.2757098 seconds)
  done (took 1.686796519 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.725341882 seconds)
  done (took 1.737095776 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.897931506 seconds)
  done (took 2.905878266 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.27070052 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.245896028 seconds)
  done (took 1.532090767 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.669093001 seconds)
  done (took 1.686445495 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 18.868849826 seconds)
  done (took 19.891266165 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.253977102 seconds)
  done (took 1.281651405 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.292281675 seconds)
  done (took 1.315473569 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.667510708 seconds)
  done (took 4.693184646 seconds)
done (took 66.844393695 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.120709425 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.122455404 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.121219802 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.145333788 seconds)
  done (took 1.522725321 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.123525413 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.118564931 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.121048267 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.14271469 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.124639252 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.116809548 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.14240284 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.122321983 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.118583991 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.145855373 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.119331658 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.116235841 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.146698031 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.118638721 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.117163803 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.120090244 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.147923484 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.11836461 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.119245298 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.145180312 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.11957118 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.119762965 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.14785309 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.123457761 seconds)
  done (took 4.080909067 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.114233013 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.108711548 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.110055589 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.134188309 seconds)
  done (took 1.494651643 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.12655849 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.131031957 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.15483833 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.126320674 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.130677605 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.15493106 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.118053343 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.115321501 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.14385268 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.127786485 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.133516256 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.158629655 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.13064687 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.119820676 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.156776291 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.114363628 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.120101231 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.155896471 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.127214862 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.126818584 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.144985336 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.125128155 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.123274362 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.153964467 seconds)
  done (took 4.245149311 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.194470067 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.129809951 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.173751938 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.165630721 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.175540001 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.118007593 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.144395469 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.151402564 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.12454042 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.125740198 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.145789009 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.165850649 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.123643165 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.14824466 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.119457851 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.122060762 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.154761655 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.124706303 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.186701378 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.122541405 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.123947429 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.15631801 seconds)
  done (took 4.223610893 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.121480734 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.10997489 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.107349848 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.133342726 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.122350107 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.110486233 seconds)
  done (took 1.733867392 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.108572104 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.105016233 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.103534713 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.12973456 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.1085185 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.103312858 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.102271639 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.130622556 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.104633479 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.102648216 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.1294253 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.103576149 seconds)
  done (took 2.365514551 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207456151 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147655009 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250874523 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.389686638 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191244035 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161182264 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.308621953 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.186723636 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.177952629 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165959284 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183371756 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191177571 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154911825 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216238748 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142707714 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.187848178 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1724229 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237920993 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169270359 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212125932 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184544212 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180347977 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.218449015 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176041618 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141583043 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162133605 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.148148417 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128921872 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193440818 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164617708 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203685509 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177038662 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143216264 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214548923 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233140331 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204666342 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.298052965 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161055685 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.17424314 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.216495401 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.258051845 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140806901 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219459392 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179124868 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130605517 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219748294 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150885483 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.213351564 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.134096463 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144151521 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209959929 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207012887 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.170031212 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165136993 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.325068366 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135406011 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.140665933 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203742856 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214424867 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200603357 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207650539 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.121889884 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.200096723 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218480048 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242106096 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.143207861 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.190945808 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125414498 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162738591 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.233465797 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212271854 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159003636 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.219338016 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159119984 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172354839 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.193634889 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155623889 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235319844 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172214447 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.146438064 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150988342 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162146529 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126334968 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.189394711 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149111552 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243849808 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131956314 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.183711846 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205557775 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17882339 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161793378 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188474012 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161429435 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17503275 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.103223977 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142789104 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.186104576 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157216314 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155724686 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151852858 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138911008 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.154499689 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151743007 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.150298158 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170578668 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.162134005 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159474873 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198643212 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.132655392 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.205979593 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147410634 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.192502081 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16845183 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222596134 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130272926 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160999512 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218783423 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198651235 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.135313728 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.20014003 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.223668812 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.152839909 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16252214 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166923207 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222690014 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143527339 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228589282 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137052077 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16386715 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.140732616 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201580099 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158672307 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.188578046 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12740124 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.19339688 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18622802 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.154718178 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139434809 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212006783 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133702844 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151895251 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136743754 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13502944 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.170749526 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.151506416 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.166751086 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154402864 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194863172 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16714952 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184234251 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134829507 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202425415 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131910199 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.197028749 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149199793 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.117905422 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.203084165 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227096259 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128925296 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207891298 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.161414953 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207039808 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200024884 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129829421 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180431524 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157842493 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.119851916 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190351342 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168832159 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.192060657 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.213691123 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176271535 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.19296478 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.189189627 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148567983 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196057012 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.183333141 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184453068 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.139186723 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.200134421 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169559783 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.1483842 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.122992796 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.127998245 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1654078 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13076202 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135164895 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210897654 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193266039 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.202523483 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170500389 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13637059 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.218661769 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.123524428 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187222519 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.202827154 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138844649 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.21834469 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190439978 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209342243 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139057243 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192054867 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.120907212 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153787813 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.134338845 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158704136 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166682016 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135961181 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169821908 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.191484329 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197522907 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14782822 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217343558 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193206857 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.227658862 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.121553731 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.160025135 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193845799 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168819226 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.211481521 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133743441 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.185251856 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.191514934 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169813008 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190706137 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197401986 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178923121 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220877046 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.193896048 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131330333 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142384088 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187503728 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13756796 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.189483265 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140955854 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159522486 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148558949 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.165858882 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142329465 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215496221 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144301126 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204112053 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.154104247 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198921557 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123417086 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16936229 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173671934 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174356331 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.106786046 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192070882 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191809962 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177741474 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150440321 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196525289 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130007459 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.342360767 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180679623 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199762301 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135531058 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167511011 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170680826 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.184392342 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158850139 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.212989266 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140672553 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238153845 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.197000395 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.140676261 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130261185 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175668664 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148940561 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.168089367 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.151502626 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.195756185 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.143623179 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215554175 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135667698 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.200753494 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176244568 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.174198832 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.149739554 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166724315 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225260989 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198614837 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199228922 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.164835425 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.190180921 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181894823 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121139237 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158197924 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.132896831 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.213311024 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130068776 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206598007 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.164045134 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208118956 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202962802 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160530923 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169750512 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.127632281 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.194146279 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147529104 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2100244 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134534235 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.165334237 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184657032 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.156491951 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131374892 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.18660825 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.287838598 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175773175 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169418083 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.106611288 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.306885828 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155449291 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133989898 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156653594 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198709035 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.132306027 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.210680345 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174701487 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167671833 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159640936 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133818278 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.205092612 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209400738 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195360684 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1744668 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.17381771 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161131071 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185344271 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170005553 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174440045 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.147250558 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18652036 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19502418 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.203699825 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.131797914 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197471445 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169268935 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.198884528 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170999079 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167563731 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18122162 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156255168 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165945522 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16706856 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124802071 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157852771 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.193628624 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157916648 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171970899 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200768687 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131417173 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126325982 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175869462 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16585811 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170552952 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.12845189 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215391752 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.127399508 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211727562 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239476472 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130252661 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164685243 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170869794 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128849432 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166856488 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142622856 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129695728 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.201862582 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175763576 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.16071559 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172862646 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194345784 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162335274 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182491679 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141617059 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.294533382 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.126834921 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221652438 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149245817 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226063103 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147331902 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205860981 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167419506 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18115027 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162523362 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178255712 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.218740364 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195537414 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.195050073 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132224594 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140883245 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16779304 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.13449768 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178805413 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169639167 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140071681 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.167550081 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.166212085 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174961232 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.145178399 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169572473 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200542653 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180684564 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216141416 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.185570596 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16659521 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176279821 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203011328 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128139689 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.193659682 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171617241 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173745502 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153331585 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.163062092 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.13743844 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242919179 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.125958335 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15877839 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204337394 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168375114 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200983767 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.132863716 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211131468 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139813758 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206746191 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125636843 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.179765693 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168971049 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164913089 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.128068184 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.199099269 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160407076 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.194422139 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143160242 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.177142099 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222594948 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.123432123 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164202242 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2863777 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189551566 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223073497 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.13456866 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136151434 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175304911 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15885356 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.194200086 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170966332 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.163592911 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131354157 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.143232926 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.187868897 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.138185964 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.198064969 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178955076 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186435139 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183117167 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.164770962 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.251952973 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171601496 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173353221 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.147951444 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.129605519 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139146889 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163808797 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141854174 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.206528614 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245471898 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.163238394 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.175851256 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135495686 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.125084895 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159145695 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161042502 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178524871 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170160444 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175276023 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.10491657 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139371913 seconds)
  done (took 85.084286077 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.173469584 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.176002457 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.187158557 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.236689382 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.213400211 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.308893602 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.249137329 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.26502687 seconds)
  done (took 2.929806599 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.119598458 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.160523655 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.14212346 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.145366985 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.110167788 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.510679521 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.161324046 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.12134357 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.160605257 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.152380827 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.138936763 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.573301666 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.116492798 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.145678338 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.121823625 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.136944893 seconds)
  done (took 4.129636012 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.605001373 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.553394416 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.160685973 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.312579403 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.238823952 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.212805424 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.823973158 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.199609417 seconds)
  done (took 13.223216198 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.171036373 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.168915858 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.462295068 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.339560487 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.215903481 seconds)
  done (took 2.481021508 seconds)
done (took 128.530932477 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.125472507 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.123789934 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.125446538 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.157034835 seconds)
  done (took 1.642406866 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.196937573 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.092166104 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.093957698 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.121939183 seconds)
  done (took 1.626785982 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.373325112 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.092023127 seconds)
  done (took 1.609166338 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.145897305 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.134592789 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.16551802 seconds)
  done (took 1.579623679 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.137376433 seconds)
  done (took 1.261237786 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.117798593 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.116017504 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.27803563 seconds)
  done (took 1.640558314 seconds)
done (took 10.486960967 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.143161704 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.931994072 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.434960781 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.134816285 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.71259713 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.429171854 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.428118745 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.178260402 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.170769067 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.139924477 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.133282791 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.69179886 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.439498334 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.881917782 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.397798431 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.905870322 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.697138999 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.112538493 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.145557443 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.113217148 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.406632243 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.136947584 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.113903259 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.113315414 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.690575351 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.4501157 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.110501426 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.88760026 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.140065405 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.11529162 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.398972205 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.141101299 seconds)
  done (took 21.045893666 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.152354885 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.169283864 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.148306859 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.113034881 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114016096 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.142409365 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.123355529 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.122391686 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.204391815 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.111693813 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.162245426 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.111308471 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.116093526 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.141845955 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.13641824 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.11067049 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.143233905 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.1146519 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119681968 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.11307601 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.162269624 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.111127603 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.112318618 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.143327866 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.111546373 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.133912517 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.142212133 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.124244948 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.110023425 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.14530125 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.116345631 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.111484933 seconds)
  done (took 5.324481029 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.160707005 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.177562545 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.150721985 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.15069456 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.190979621 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.114672551 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.199754292 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.18172132 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.175443481 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.143900539 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.133184133 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.111752824 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.183053791 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.113315485 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.166225825 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.112837066 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.114328401 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.142263938 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120275365 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.113730933 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.162306379 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.112057138 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.113466135 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.142198286 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.112338126 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.135271912 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.140525481 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.126171726 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.110935039 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.144381931 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.117998944 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.112672116 seconds)
  done (took 5.625945895 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.12729654 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.127927416 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.135147575 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.166885868 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.122472412 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.126128128 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.157247974 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.122586832 seconds)
  done (took 2.22533895 seconds)
done (took 35.354962861 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.13551937 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.128770148 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.131829095 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.158571316 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.27594622 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.119693419 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.129555915 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.150455668 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.128170347 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.133017517 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.111895348 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.153902901 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.134712785 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.122513394 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.274915664 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.160069473 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.248921268 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.277573405 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.153603319 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.127757394 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.11964151 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.281346056 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.125577076 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.152866858 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.273271424 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.115910973 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.269555282 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.12307606 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.121616281 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.145589467 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.28173973 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.123876074 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.120048392 seconds)
  done (took 6.638899153 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.227911455 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.154446108 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.122087548 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.120007922 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.122520315 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.151035947 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.231283274 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.153961808 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.120796819 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.120024634 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.150931084 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.21335942 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.157860094 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.116723693 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.122417333 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.111872689 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.265471051 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.121655597 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.144150211 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.095724193 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.116408229 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.119410607 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.274435008 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.115434578 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.154511096 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.121217123 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.120631797 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.156738727 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.123733887 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.122322039 seconds)
  done (took 5.597268257 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.125834375 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.133291753 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.138553515 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.218904452 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.149238961 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.165852938 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.138944277 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.130603598 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.172903071 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.115287435 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.129855833 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.18274092 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.130969919 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.123471266 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.143746329 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.131396055 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.130804099 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.115529929 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.153582334 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.132542433 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.132441412 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.162583627 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.136803699 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.121079123 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.144665896 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123239912 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.124309779 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.155072926 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.122411628 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.129987582 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.146271113 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.117895462 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.116819284 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.179052464 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.116340461 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.127949628 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.164450431 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.12935485 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.128835212 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.177141528 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.116790695 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.116578164 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.170103987 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.171513166 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.115549365 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.124020149 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.147237379 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.130489748 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.110892939 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.163995707 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.157936877 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.113004007 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.165727022 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.113755267 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.111440748 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.153533844 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.115860692 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.116993085 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.157542222 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.116292261 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.134616911 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.120877337 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.156297716 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.11634871 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.124619463 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.143878482 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.115247192 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.117422683 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.171337457 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.123209943 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.149732906 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.144113564 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.12759313 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.126534876 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.125029211 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.158175471 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.112681757 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.124340752 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.156066937 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.11912931 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.126565016 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.148598527 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.116721551 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.129884356 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.165172816 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.129626615 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.125592041 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.155255833 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.118029441 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.115888432 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.130151902 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.147352258 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.118103118 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.126614577 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.145520355 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.119782895 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.124185523 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.153101012 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.112772367 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.140220993 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.116791969 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.144828288 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.140491702 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.116828631 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.149274945 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.12389927 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.155513877 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.144639404 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.125197531 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.124451143 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.144687711 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.123145168 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.114637575 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.112225768 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.160783012 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.130465667 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.121862073 seconds)
  done (took 17.032000706 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.374419213 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.364578104 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.211529667 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.408647734 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.125762392 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.284251414 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.396938514 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.36876094 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.115732869 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.148537503 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.205685413 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.329486478 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.115645195 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.176453552 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.370529252 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.44675378 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.144068473 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.184772651 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.150473586 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.127363241 seconds)
  done (took 6.216606969 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.122685204 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.151508995 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.166350917 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.133271771 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.124577461 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.130062705 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.146014291 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.13740423 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.125729994 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.156096035 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.118645787 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.12185398 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.157570913 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.130977433 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.129790193 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.178242249 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.124490236 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.118759866 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.168146767 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.121499855 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.103972803 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.170278941 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.126755928 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.136639885 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.162147158 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.126153799 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.113517186 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.11800452 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.153796284 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.124521973 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.118323999 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.154390434 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.12297026 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.1058389 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.124579814 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.162988334 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.122189402 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.117443269 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.150139248 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.118473111 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.128682014 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.156573671 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.123561607 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.101476044 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.133234671 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.142897235 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.129521337 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.1271051 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.107800592 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.166452641 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.128607963 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.128788678 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.152706621 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.137506131 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.121401629 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.16358345 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.127109214 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.128702619 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.148882746 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.114148589 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.113300527 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.116308612 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.154341565 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.129599556 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.124905599 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.152883439 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.12349463 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.114770704 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.118663399 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.146665696 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.11786079 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.126986721 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.165997985 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.124672949 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.120614129 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.155539463 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.125109878 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.095238172 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.121448241 seconds)
  done (took 11.695855438 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.141593003 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.124747801 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.131113756 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.178573572 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.127445571 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.120824899 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.156270835 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.135525204 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.128708953 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.164194557 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.130059063 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.128649131 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.167139934 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.126996632 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.124501937 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.160242978 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.12815903 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.152738475 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.157288699 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.142953235 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.128471994 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.15086416 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.128675912 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.12666319 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.173293346 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.127313252 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.14132523 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.157247899 seconds)
  done (took 5.14392458 seconds)
done (took 53.466289245 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.287648197 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.500422331 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.271319855 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.270862648 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.280935117 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.2905458 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.270635621 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.270783832 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.77608095 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.244492575 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.27029052 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.269242472 seconds)
done (took 29.173736604 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.423693331 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.412937814 seconds)
    (2/2) benchmarking "String"...
    done (took 1.581676081 seconds)
  done (took 4.166919046 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.261366135 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.261481992 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.504477998 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.261552981 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.261455622 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.261138455 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.277809006 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.267345481 seconds)
  done (took 16.259671595 seconds)
done (took 26.276533782 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.276631844 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.562853289 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.519202397 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.252577882 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.262283546 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.262658275 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.261397525 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.314691269 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.278671388 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.255900239 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.694286643 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.538191862 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.260859846 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.655058293 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.249675004 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.276000137 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.277669247 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.598876278 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.264718096 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.299434045 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.247536761 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.242341039 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.264854048 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.268574934 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.27305445 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.26416359 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.316862623 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.264005788 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.540340841 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.290724214 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.302175755 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.267227665 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.317693258 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.266431606 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.282984009 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.27008682 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.553471832 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.276196554 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.256566094 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.265616027 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.548844605 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.28535475 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.262860276 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.263023601 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.260521237 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.263737096 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.250023972 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.386021536 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.29991882 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.263864979 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.326671357 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.681361216 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.269576557 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.295623458 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.278108453 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.572569933 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.296255837 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.368915589 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.295137068 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.264007166 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.263846688 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.264731171 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.294520538 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.266372206 seconds)
  done (took 148.381119954 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.265186589 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.268976941 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.268855806 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.275753423 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.265100289 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.270001757 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.265389702 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.265301368 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.270748467 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.276020839 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.265572543 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.267883311 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.270453978 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.224736235 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.27610472 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.28955999 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.271411582 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.284320131 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.275197096 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.268074914 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.289500737 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.266637364 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.2682079 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.268375867 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.28158045 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.357891477 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.283683898 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.271310719 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.27718055 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.269057022 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.275162695 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.271521654 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.267949495 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.137222549 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.286755016 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.315008691 seconds)
  done (took 82.940262155 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.267613611 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.266705122 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.26682534 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.303379744 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.266857279 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.913890216 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.909683112 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.335414499 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.749085809 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.855143593 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.550146321 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.269269383 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.362924423 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.279572954 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.27422651 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.364907031 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.293788627 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.273606442 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.268227781 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.887892153 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.281730867 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.825182163 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.455492323 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.28651989 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.304477507 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.665353171 seconds)
    (27/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.267412348 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.268541789 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.305480807 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.612153688 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.322358903 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.268978731 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.677681467 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.91491122 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.38345275 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.270765248 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.306241944 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.270194205 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.557632087 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.27030855 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.269222515 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.270513805 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.273747701 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.965204139 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.274320455 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.918351321 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.276103251 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.279180969 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.269824233 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.270003089 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.379588199 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.123601156 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.275580015 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.270686022 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.272131688 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.27056267 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.269437611 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.306566027 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.378198897 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.188482321 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.270976119 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.273749665 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.306577036 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.27089362 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.802340714 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.271805029 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.51037877 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.328369886 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.491681067 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.891786502 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.272171626 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.370773677 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.393173074 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.271763634 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.27340978 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.271868728 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.271170666 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.385566037 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.270970133 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.005785764 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.45802483 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.290646006 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.866422452 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.377089934 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.273382515 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.696837097 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.276988023 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.271809665 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.028385791 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.372004746 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.273747966 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.273600541 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.272308345 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.008437194 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.912651521 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.592121556 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.278102428 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.101123683 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.276822527 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.273763014 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.273251445 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.181385071 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.889004746 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.002697367 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.279879783 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.388104373 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.460024303 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.291750502 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.273996268 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.869209524 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.280324438 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.332025492 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.278524924 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.677553443 seconds)
  done (took 388.309257022 seconds)
done (took 620.794627024 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.252763068 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.255520328 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.255052544 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.255119575 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.2558606 seconds)
  done (took 12.450402653 seconds)
done (took 13.624755396 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.494734558 seconds)
    (2/23) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.482722942 seconds)
    (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.481505229 seconds)
    (4/23) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.34289308 seconds)
    (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.496258825 seconds)
    (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.503028938 seconds)
    (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.401339477 seconds)
    (8/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
    done (took 1.349728443 seconds)
    (9/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.47666216 seconds)
    (10/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.50010649 seconds)
    (11/23) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.487334306 seconds)
    (12/23) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.313529995 seconds)
    (13/23) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.501867567 seconds)
    (14/23) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.466500495 seconds)
    (15/23) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.293540116 seconds)
    (16/23) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.393161688 seconds)
    (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
    done (took 1.422731402 seconds)
    (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.424061417 seconds)
    (19/23) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.365201851 seconds)
    (20/23) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.393814207 seconds)
    (21/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
    done (took 1.524426485 seconds)
    (22/23) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.314668918 seconds)
    (23/23) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.313869697 seconds)
  done (took 33.920235042 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.597906713 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.288580157 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.343868562 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.55534621 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.323601929 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.592728472 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.622088648 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.288662558 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.453833922 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.301371051 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.299153012 seconds)
  done (took 18.844092699 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.586900513 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.28918333 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.36368006 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.575635907 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.324092791 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.598472452 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.627145295 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.291365029 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.463002579 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.301643149 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.299186815 seconds)
  done (took 18.897689663 seconds)
done (took 72.83875495 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.317397456 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.38637068 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.316408877 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.297544225 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.296993446 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.296373318 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.298467591 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.296629909 seconds)
  done (took 11.683692817 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.293313616 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.294749814 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.296136649 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.295501952 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.293597659 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.295826933 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.294526292 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.295599322 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.296037941 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.29450351 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.296324403 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.296524115 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.296165439 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.295431794 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.297213181 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.295821852 seconds)
  done (took 21.906554081 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.299256431 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.295168277 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.296623726 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.294925532 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.296195479 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.297155743 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.29572338 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.296567809 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.296143389 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.295966372 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.297696824 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.296783964 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.296043512 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.296592045 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.29775728 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.298642672 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.296712885 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.29815127 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.301965946 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.296712605 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.296897319 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.296348957 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.297055823 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.298333882 seconds)
  done (took 32.309631436 seconds)
done (took 67.077885195 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.280273073 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.304384056 seconds)
  done (took 5.765453553 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.359488084 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.356114481 seconds)
  done (took 3.896571442 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.299500342 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.297907217 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.298424157 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.297996657 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.300629334 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.298010048 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.29857033 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.305512953 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.297255387 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.299356216 seconds)
  done (took 14.17508538 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.299870298 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.29887213 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.296985766 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.299813856 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.298547776 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.298544648 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.299127878 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.300193179 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.300111275 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.300360646 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.300120349 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.298381186 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.29936863 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.299877775 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.297777058 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.298288124 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.300690589 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.298554103 seconds)
  done (took 24.567439663 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.312855894 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.317285933 seconds)
  done (took 3.811956355 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.428181423 seconds)
    (2/7) benchmarking "second"...
    done (took 1.343388663 seconds)
    (3/7) benchmarking "month"...
    done (took 1.404681047 seconds)
    (4/7) benchmarking "year"...
    done (took 1.396192102 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.342363025 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.322335656 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.342321154 seconds)
  done (took 10.761219599 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.29129284 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.589311148 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.789319569 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.474768628 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.279481373 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.307665824 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.263830713 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.307319885 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.311150485 seconds)
  done (took 14.796330603 seconds)
done (took 78.952949677 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.285508586 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.313867205 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.307728641 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.300074039 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.595403598 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.346599171 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.292135905 seconds)
done (took 16.626650218 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.276398201 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.265903863 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.281544424 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.299903502 seconds)
  done (took 10.308231954 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.295142349 seconds)
    (2/2) benchmarking "read"...
    done (took 1.614453167 seconds)
  done (took 5.092583712 seconds)
done (took 16.585416855 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.30433996 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.302767287 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.302714127 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.303259794 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.303268777 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.302161077 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.302908348 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.302517192 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.303099027 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.304947702 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.302249375 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.304092675 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.303504896 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.303048211 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.302338637 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.304506369 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.303231333 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.301998268 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.30259761 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.302683006 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.302567869 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.304704029 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.303520271 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.303473484 seconds)
  done (took 32.462133366 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.30372944 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.303614945 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.303615682 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.306329436 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.302302604 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.304063706 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.304430691 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.305174786 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.305984414 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.304836893 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.304321602 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.303909244 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.303880068 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.305243214 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.305492393 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.304053064 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.30414841 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.306232486 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.306209986 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.303932812 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.303991284 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.305330759 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.304548254 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.304523162 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.306185177 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.304340257 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.305784149 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.304053679 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.304879023 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.305575862 seconds)
  done (took 40.326298769 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.309854732 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.313244166 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.306574633 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.304827596 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.304912128 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.306076974 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.30524547 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.305551872 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.30643247 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.307313635 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.306666663 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.307373109 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.305965059 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.307004617 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.307512421 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.305266412 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.306287849 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.308226508 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.306630973 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.307811818 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.306950965 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.306967791 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.306837293 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.306572246 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.306713796 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.307810213 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.307662077 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.30793055 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.308034037 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.306870375 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.307626203 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.307892011 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.308280034 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.30715815 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.309386591 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.307417296 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.312760794 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.314395879 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.30761696 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.307852613 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.30666965 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.30831399 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.307604311 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.309146367 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.307496345 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.30950863 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.308355783 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.308458743 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.309028247 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.309387006 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.308003663 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.308385996 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.308651434 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.30921081 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.310563266 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.308863777 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.309163207 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.309759874 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.309353346 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.308141287 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.308751715 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.308973547 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.310496595 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.310241583 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.309561152 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.309869508 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.31094638 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.309370872 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.309140225 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.310208155 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.310945607 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.310229317 seconds)
  done (took 95.384099904 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.310568652 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.309692086 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.31032022 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.310863722 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.311661873 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.310632822 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.309756923 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.310552728 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.311609115 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.310788756 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.310425145 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.310624514 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.311920992 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.311590072 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.310706672 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.313952117 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.312828969 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.311731962 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.312539754 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.312550441 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.311482842 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.311931488 seconds)
  done (took 30.041335713 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.312518343 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.313543364 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.312858264 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.312623076 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.314222633 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.313631108 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.311023349 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.31194358 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.310910195 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.311006581 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.311946896 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.312512293 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.314815183 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.311953673 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.31348503 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.31544105 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.311445197 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.313103493 seconds)
  done (took 24.821816997 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.312390869 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.313037435 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.31384745 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.310857897 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.31340064 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.312766804 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.311562311 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.312543536 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.314172388 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.314775998 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.313173361 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.313981215 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.314079496 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.313537255 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.313033977 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.314671327 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.313589905 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.313549369 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.31379977 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.314434242 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.313267668 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.313344811 seconds)
  done (took 30.087959694 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.315837185 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.314427261 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.314707335 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.314529662 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.314874598 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.315272719 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.313932467 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.314343303 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.315192107 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.314260349 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.313423363 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.314399832 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.318492336 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.31639098 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.316161206 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.316067812 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.31489533 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.314049272 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.314709769 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.31608067 seconds)
  done (took 27.497537952 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.314138417 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.314377566 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.315305324 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.316058862 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.316133873 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.31561685 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.315828367 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.315495548 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.316524708 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.318719681 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.317161121 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.316119983 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.317157966 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.31672104 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.317464514 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.317087463 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.316895565 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.31722636 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.317060923 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.317769644 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.319038615 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.318182611 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.31906621 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.318936265 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.317067346 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.317957852 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.318867105 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.318538992 seconds)
  done (took 38.072383938 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.31978424 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.319287077 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.31860648 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.319001451 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.317547231 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.317885751 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.318679094 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.318241482 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.31763338 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.317899017 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.320062547 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.318559529 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.319805332 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.318283825 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.319345121 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.319751982 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.317943796 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.318042709 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.318680302 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.318946785 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.318758719 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.318869053 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.319887398 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.319562573 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.320160399 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.319778177 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.31874364 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.320052909 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.318348516 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.318762537 seconds)
  done (took 40.766560386 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.338284059 seconds)
    (2/2) benchmarking "in"...
    done (took 1.339700084 seconds)
  done (took 3.877080281 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.31990499 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.319260555 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.320504896 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.321238218 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.319888048 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.319634817 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.320186062 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.320134914 seconds)
  done (took 11.761278531 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.311873622 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.320406068 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.320913674 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.321401605 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.320941867 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.312729527 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.321626715 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.325576139 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.314895478 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.315778569 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.32112848 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.320031731 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.317236314 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.314887222 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.316295766 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.316834192 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.324235235 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.323661279 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.323649822 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.322531144 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.325579524 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.317506889 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.318499579 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.326094371 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.31656232 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.327571301 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.323753088 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.327855658 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.315732677 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.321823321 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.318457647 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.32684653 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.325259378 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.324766699 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.323766671 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.323019218 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.325675566 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.324189853 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.325000848 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.327645989 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.323906891 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.323489236 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.319527886 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.320403528 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.320458895 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.328058292 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.324491176 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.325698183 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.315780565 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.320371687 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.331715466 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.315025364 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.32654345 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.320999049 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.322024845 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.327778228 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.330815617 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.318896154 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.325096278 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.328693608 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.33652968 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.334757281 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.32434719 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.329786084 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.327771842 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.342074757 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.330531921 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.332739866 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.327255384 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.324866647 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.328825211 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.338568811 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.340318085 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.330545695 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.325491053 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.32747946 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.32092666 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.329697115 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.326357426 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.330660754 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.332183752 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.326411278 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.329309296 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.340675597 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.321346176 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.330434023 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.327996264 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.327758626 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.320179793 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.331587226 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.336301053 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.327158219 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.318769493 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.323495768 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.323704438 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.330357782 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.319477788 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.323060637 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.331739227 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.328550251 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.326852739 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.321839639 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.330278679 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.333282062 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.328474338 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.330243173 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.335651673 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.321242384 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.332947105 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.336421652 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.328200405 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.321359338 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.327501162 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.331309234 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.32280893 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.332166426 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.334681854 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.324497179 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.333711802 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.330687655 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.332103975 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.349126394 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.335400018 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.329401676 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.327399832 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.341988669 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.32995775 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.327129922 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.337455374 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.329298931 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.32891207 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.32651984 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.33561531 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.323835843 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.332480248 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.325293688 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.334451602 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.330176781 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.329224613 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.327301808 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.331490483 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.326781117 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.329604807 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.334144587 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.335929589 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.32802968 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.339227824 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.331898046 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.330003927 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.332556534 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.336823953 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.33041328 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.325010452 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.33503539 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.323785512 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.332638201 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.324759203 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.333704239 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.334029507 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.330647999 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.332458018 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.325542201 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.329161634 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.335126525 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.331690098 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.332500186 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.336990502 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.33225651 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.332681841 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.322941052 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.334758315 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.323551823 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.328845195 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.340479833 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.333335431 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.332397978 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.331412751 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.340696212 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.332194208 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.332563103 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.328329922 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.335991747 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.339040998 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.33697064 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.341814558 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.333011693 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.333921328 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.326012925 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.328088241 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.335930889 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.326962842 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.343256218 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.340241303 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.347456093 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.330086134 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.337922224 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.326420965 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.339335242 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.333948247 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.342185838 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.334163678 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.332430362 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.32856012 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.339204353 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.328412756 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.339502659 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.32596661 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.33791377 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.336306921 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.334270012 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.333739534 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.328180935 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.332789691 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.339245255 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.335484246 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.334735077 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.32725828 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.340178293 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.3258272 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.330268723 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.339982015 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.33609114 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.337120985 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.342841459 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.333687149 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.340853533 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.336506059 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.331393034 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.337934479 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.335273556 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.337361272 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.3417776 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.339112238 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.332269141 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.344045727 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.339591755 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.332415699 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.338465339 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.345162233 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.338308254 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.330687164 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.344756938 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.339082549 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.336955688 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.336612791 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.331433988 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.342030293 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.341092527 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.349592997 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.33132644 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.3426703 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.332113915 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.341775753 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.332763406 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.341385836 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.337130407 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.341038258 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.347860914 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.340965753 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.333021651 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.344074917 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.338029323 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.338498202 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.333540764 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.345556808 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.341900753 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.341496188 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.336974358 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.337736621 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.343901482 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.330108652 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.340531594 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.331806983 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.35056698 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.361018129 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.342596962 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.344590532 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.342967535 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.341827556 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.342911642 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.336430765 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.336329721 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.338248937 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.335134216 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.333783872 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.343367184 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.334896349 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.343371596 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.337463091 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.343816221 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.345315449 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.340066487 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.333106061 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.344575525 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.338816873 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.341311549 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.331888998 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.343346564 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.335944048 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.343530646 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.341763463 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.33722456 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.350007764 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.345795094 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.339101776 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.338926969 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.336317704 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.335644379 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.338171815 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.346655195 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.336550053 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.349713677 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.33552499 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.344146469 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.338273295 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.350401244 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.351463853 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.337072578 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.350442841 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.343815278 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.334414994 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.336095386 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.345310605 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.347310352 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.354718466 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.336357423 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.346491498 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.342351885 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.342685444 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.344047557 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.34308325 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.343432884 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.344338008 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.350506647 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.349819143 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.341695581 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.346628675 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.354997097 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.343856912 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.343795821 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.335877364 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.345856726 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.353995527 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.339990949 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.343396085 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.340930159 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.346728889 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.343618034 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.345349517 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.346012924 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.346121622 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.35084149 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.352516113 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.348117604 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.346449962 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.350440799 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.356749809 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.35056926 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.358397774 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.340412687 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.351432512 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.345858748 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.340401916 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.341648879 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.341603867 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.350881646 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.337300172 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.351963442 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.346744399 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.341864356 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.347590326 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.353441417 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.338614875 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.350698259 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.369160582 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.338036369 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.351293172 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.346960177 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.338264002 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.349463801 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.346770588 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.337746864 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.343449329 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.347985132 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.356703697 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.342007347 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.352622714 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.342282104 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.354115309 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.34872096 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.349091024 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.34730842 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.348392098 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.340623155 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.349444858 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.347981739 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.360151762 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.342960055 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.349675426 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.344378477 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.356692996 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.360920222 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.344306386 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.354441298 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.349230956 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.341538247 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.348192445 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.355649816 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.342817213 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.353558371 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.339656815 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.346897944 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.347530566 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.35026795 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.353861262 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.352725176 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.341126334 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.344343214 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.351548409 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.34995575 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.350371673 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.345440619 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.358392802 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.341269652 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.342441774 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.353398176 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.344946253 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.356224411 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.343540396 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.350166805 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.348074358 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.354733254 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.349436713 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.350097093 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.342055999 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.345363729 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.357947869 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.357221965 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.352379865 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.34937019 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.354803578 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.344368198 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.350379877 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.352715552 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.346828034 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.34736449 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.355936718 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.345621044 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.347828301 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.347670773 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.353688568 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.355518534 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.356143892 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.346357145 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.359181998 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.362378322 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.360107083 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.344771749 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.350070999 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.348974093 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.354223421 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.352698185 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.34536922 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.360438402 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.359862525 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.355946972 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.351583482 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.354303014 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.345536553 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.356027989 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.353766845 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.34998764 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.36046855 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.348357717 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.360943578 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.353891155 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.354973909 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.344447284 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.346321542 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.350700385 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.352325231 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.356401829 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.353575249 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.359916387 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.352280477 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.359781233 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.354428632 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.356309612 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.354941807 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.344716323 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.357241608 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.345919916 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.356188906 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.358011731 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.349880126 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.358601301 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.356096458 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.350221337 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.355052728 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.362999325 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.354524605 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.349294304 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.355237993 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.361697533 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.367308265 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.356055737 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.348533239 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.354222007 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.361330122 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.357349723 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.355671866 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.349090161 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.370150806 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.370032349 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.349663777 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.353202155 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.360089937 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.368692614 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.356750394 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.35787929 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.353081858 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.356596175 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.362874961 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.357446134 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.361624692 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.363690982 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.353803512 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.361305263 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.350832543 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.355390259 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.359912517 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.368526198 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.356503177 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.352530201 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.371095591 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.37021166 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.360422235 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.387603814 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.367421475 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.35901994 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.362758488 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.35083969 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.361097507 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.354701513 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.363559164 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.35937013 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.358600038 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.357097047 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.350313882 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.361358703 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.367591553 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.369458802 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.359035387 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.349034095 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.35473771 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.362161383 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.357955302 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.360754289 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.361143003 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.359543874 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.360685636 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.352358025 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.37426177 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.381398007 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.364740766 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.359083224 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.358222757 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.358987786 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.365821739 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.361044658 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.366548754 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.360571901 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.359623657 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.35976223 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.371348952 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.36224571 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.354089398 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.35662589 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.354643108 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.363737316 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.368814887 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.384216322 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.363940093 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.364561272 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.363556608 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.361095491 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.354779894 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.365546996 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.360571029 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.355636722 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.358989366 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.365291197 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.363033974 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.361321029 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.355063564 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.370077116 seconds)
  done (took 801.07308037 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.362409777 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.360774936 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.362790802 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.362215401 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.362755621 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.361543025 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.36066833 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.363169433 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.361879342 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.362956857 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.363013129 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.363372628 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.362041401 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.362403235 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.362707927 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.364330986 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.3618187 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.362771437 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.362301917 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.362242872 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.362201331 seconds)
  done (took 29.846094228 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.364355863 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.363712733 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.364977382 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.363112019 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.364119561 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.364064031 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.363071951 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.362127579 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.364340998 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.364117532 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.366216785 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.362094901 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.36355983 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.365291761 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.363029288 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.36361743 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.364744176 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.364070296 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.364438255 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.364166509 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.363535793 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.364939479 seconds)
  done (took 31.243916014 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.364160132 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.364323639 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.357178012 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.367801881 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.363953462 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.363932021 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.365979252 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.36494741 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.364674286 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.356746603 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.357273576 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.358413844 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.362875252 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.373577301 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.361955959 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.372974749 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.365669813 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.365317888 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.366158567 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.366729607 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.369330848 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.378171892 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.364718166 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.356360976 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.368527693 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.366864576 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.365830405 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.366834474 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.358528942 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.371494965 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.365739913 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.360178064 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.370236975 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.369706177 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.361287028 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.372128191 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.367488756 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.366517531 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.366363672 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.369029795 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.390737656 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.367694599 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.371049879 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.380818632 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.367141549 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.362066449 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.37476376 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.367535791 seconds)
  done (took 66.840830327 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.368529904 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.368810568 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.367887409 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.368350045 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.3675309 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.368465022 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.369113105 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.369304827 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.368281931 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.368015316 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.369103791 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.368669392 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.370230244 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.369392538 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.369813478 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.367875224 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.369383102 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.370653742 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.369589498 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.368651572 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.368477094 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.369895516 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.369476176 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.370116497 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.368297502 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.369807541 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.369363662 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.370060765 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.369646426 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.369109916 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.370849754 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.369837618 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.370114391 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.371302871 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.370320011 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.370868179 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.370842417 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.3711717 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.369754527 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.37109276 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.371317029 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.3704424 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.370926835 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.371816738 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.370154756 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.371122058 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.369232509 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.37075692 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.371839268 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.372180591 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.372338574 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.372137508 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.370956388 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.37264752 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.37179256 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.371559231 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.370731793 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.371582848 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.372204854 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.372595531 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.371088011 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.371943639 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.371954912 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.37230332 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.372059593 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.372337964 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.371445066 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.372489361 seconds)
  done (took 94.42466988 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.372372437 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.372621061 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.373124902 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.372815754 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.372710353 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.372545696 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.372528521 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.373879493 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.373168407 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.372450546 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.373505169 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.375100517 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.372955025 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.373573929 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.373028396 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.374849816 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.374332279 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.373980421 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.373851758 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.373924466 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.372846384 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.37369311 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.373843026 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.373936677 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.373415626 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.373761947 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.373332559 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.374178115 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.37410905 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.374070327 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.375097153 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.373576092 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.375049271 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.374677936 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.377989781 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.374448535 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.374066901 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.374836716 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.375550791 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.375035637 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.374866611 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.375176362 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.375121805 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.375534444 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.375282409 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.375089019 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.374310769 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.375926323 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.377370926 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.376152604 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.376078571 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.376797065 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.376351278 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.377217035 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.37763467 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.376530493 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.377190233 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.377063281 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.377547416 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.377241348 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.376884741 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.377076636 seconds)
  done (took 86.479626534 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.376860001 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.375477668 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.377901468 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.378204636 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.376754093 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.377564403 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.377647859 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.37814005 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.377933261 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.378122222 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.379249515 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.377978477 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.378668478 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.380015216 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.378429207 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.379585376 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.378370061 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.377238404 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.378013048 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.378553868 seconds)
  done (took 28.8076554 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.378532595 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.380870326 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.378019888 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.37782408 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.379121487 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.378236646 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.379448262 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.378371748 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.379797046 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.380351008 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.379173012 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.378962649 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.379682425 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.378832104 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.380209299 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.378982731 seconds)
  done (took 23.315165339 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.380823011 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.381027059 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.380306323 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.379890905 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.380368334 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.378027885 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.380608513 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.380741147 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.379551216 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.380448688 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.379753641 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.380007087 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.378782882 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.380399567 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.381467063 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.382404201 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.380692145 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.381027242 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.382967221 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.380338697 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.381593293 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.379347324 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.381047176 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.380617536 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.379583324 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.380138202 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.381050202 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.380392839 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.380335086 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.381699721 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.380636504 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.381150692 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.382411376 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.382193657 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.382165882 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.383710017 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.382060565 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.381876861 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.380939247 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.384452813 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.382062028 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.383289847 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.381745588 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.382536796 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.381829697 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.384251005 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.38231687 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.383711395 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.382388111 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.383944563 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.38150907 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.381993765 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.384075335 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.385243469 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.382367973 seconds)
  done (took 77.231421499 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.382389155 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.383125152 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.383659829 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.382465637 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.383345243 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.383620298 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.384450842 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.388346713 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.384773586 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.384207574 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.382922231 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.386113144 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.384193767 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.383983821 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.383366065 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.384352069 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.385643545 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.384173663 seconds)
  done (took 26.168400011 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.384374198 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.385423136 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.383915465 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.384433328 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.384119272 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.38484504 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.385754352 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.384361713 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.385678301 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.386406705 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.385133414 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.387655053 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.384827966 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.385432848 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.385402006 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.385487306 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.387026572 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.386329681 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.385778624 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.385422074 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.386260023 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.385782175 seconds)
  done (took 31.73527843 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.373923156 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.374121701 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.375374518 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.393596597 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.394644012 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.375335492 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.376988237 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.375380785 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.401592733 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.428609482 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.420828783 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.394737005 seconds)
  done (took 17.94029061 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.385646448 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.388205052 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.385987225 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.386003537 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.38737231 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.386852908 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.386015737 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.387564734 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.387816638 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.387986322 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.387296185 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.387250945 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.389075703 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.388211672 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.390846924 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.387427947 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.387281406 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.387567978 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.388620305 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.386906268 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.388687089 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.389754587 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.387504547 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.387337946 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.387890903 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.388853406 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.389888701 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.388074432 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.387614276 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.388684849 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.388108722 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.388025409 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.389615295 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.388215169 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.389981545 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.388790448 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.387996198 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.387293673 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.387271818 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.389087488 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.388684194 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.389407966 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.388368698 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.389362345 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.389648762 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.389730321 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.390627362 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.391008717 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.390378185 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.391267214 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.39041862 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.390546724 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.39010098 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.390078711 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.389576417 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.389951464 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.391113793 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.389860867 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.389951086 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.390764856 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.390440212 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.39122671 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.390172057 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.390500329 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.391506218 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.390533919 seconds)
  done (took 92.921280446 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.390971302 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.39167992 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.391043809 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.390676663 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.391158901 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.391969276 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.393387844 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.391872832 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.391495752 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.393255898 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.390806025 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.393302985 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.391210583 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.39274858 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.392311681 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.392531859 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.392645545 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.393375491 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.392035776 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.392793881 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.392613117 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.39298767 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.392968225 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.392326526 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.393964304 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.393017378 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.393440408 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.393307843 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.392130804 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.394001452 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.393016485 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.392697757 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.393587733 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.393704909 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.39304104 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.392744934 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.39227617 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.394058931 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.39440266 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.3936405 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.394110701 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.395386216 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.393013971 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.393903047 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.394827402 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.39444573 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.393138657 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.394166685 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.39454501 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.394945019 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.393897055 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.393778889 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.39564543 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.395432462 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.395149093 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.395355168 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.395280973 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.394958248 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.395930294 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.395320886 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.394731624 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.393900247 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.396550791 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.394975072 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.394651865 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.395348545 seconds)
  done (took 93.231707264 seconds)
done (took 1877.543063485 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.554111651 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.508671252 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.387033655 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.44203447 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.38561177 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.385682834 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.410843212 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.386518996 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.385836211 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.386614889 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.386264765 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.587295245 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.427088919 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.385793687 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.386950304 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.484144223 seconds)
  done (took 28.154367857 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.416091002 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.395146551 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.5264421 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.390366756 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.416826374 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.612358588 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.456735817 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.390779359 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.59244243 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.412408762 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.399512247 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.414499068 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.390473549 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.382745978 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.432280592 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.608473505 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.688243447 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.383339851 seconds)
  done (took 30.57401482 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.943190007 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.421132642 seconds)
  done (took 5.62977945 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.412811252 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.390121321 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.394365386 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.388964483 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.383717548 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.384749775 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.389577349 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.390145668 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.399607224 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.540495017 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.392583097 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.405731783 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.391919585 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.39219356 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.401357176 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.440586943 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.54551573 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.401042989 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.400740383 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.399289448 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.3913689 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.49519551 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.439892144 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.40145154 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.540528062 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.385556743 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.394575374 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.4005441 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.524511538 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.403207406 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.392547214 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.392769743 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.394693008 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.397521539 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.979707878 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.386708697 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.442950622 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.401699354 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.401906007 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.550896292 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.39516849 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.402006173 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.387362812 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.971496149 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.505383704 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.527139729 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.394197386 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.394797174 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.3951178 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.465145376 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.395074611 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.396545556 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.458357494 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.245928641 seconds)
  done (took 88.971215639 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.430780829 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.387217166 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.575501855 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.414332244 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.387858014 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.419437857 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.387461656 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.731532742 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.416721405 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.388238545 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.739038389 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.065126975 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.391381278 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.456929424 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.401937671 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.444747495 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.391050918 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.387316471 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.389562426 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.390760888 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.990984597 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.396826795 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.38971862 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.543280951 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.431978323 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.99996483 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.402217356 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.387853099 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.387942818 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.390135001 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.03756599 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.393248564 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.418772093 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.388987802 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.706831449 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.848117487 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.809031719 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.390002555 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.39690642 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.392307938 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.389582279 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.997665727 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.829089962 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.392017742 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.391602534 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.000873637 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.390826127 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.393235647 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.390297737 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.663343137 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.390374917 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.391517633 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.403259289 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.390113213 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.391025169 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.419280957 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.452274876 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.000902738 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.391341223 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.391691923 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.425034883 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.391172374 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.396466405 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.393059272 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.392822744 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.832842212 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.565604295 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.392312897 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.831026929 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.030170192 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.391907379 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.125389785 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.391412968 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.396669614 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.466001458 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.403159775 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.393417347 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.99591638 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.431247231 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.392014961 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.813162961 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.394915795 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.726380461 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.412050508 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.393581757 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.012763849 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.397598218 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.438867959 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.393622386 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.397774365 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.393490478 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.397609561 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.714346878 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.471033514 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.393771903 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.392544243 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.428165086 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.393250263 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.395000235 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.40263543 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.103997084 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.396416298 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.3936405 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.394405879 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.392797279 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.395152873 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.393079664 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.396774542 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.676812381 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.3944715 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.396446115 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.396357615 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.394066322 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.397463788 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.550985543 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.404701729 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.768053379 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.398177388 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.406084041 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.396602893 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.395822114 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.434302103 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.405106658 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.402563203 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.376049608 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.713785187 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.42829664 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.395021893 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.395367805 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.394432779 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.394977856 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.394957057 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.43512533 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.400105235 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.23395109 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.404887375 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.410857659 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.396148942 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.402019815 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.397239441 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.403527524 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.395867211 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.711149403 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.714209755 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.559930102 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.399218142 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.3969101 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.252841439 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.39703427 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.585984651 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.42051908 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.398016235 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.703148457 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.619801352 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.400327951 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.398134985 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.401977155 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.680581458 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.397309942 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.735108116 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.064770165 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.398560711 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.405425224 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.234382946 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.154283684 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.400888126 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.400944132 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.726114984 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.418973133 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.399830319 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.399053031 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.399318306 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.400337721 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.400373438 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.411541606 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.399342455 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.399221006 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.513743921 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.600145832 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.419675465 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.400821864 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.004882055 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.405429024 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.398630249 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.410553465 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.400792639 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.399617136 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.447051948 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.406790087 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.437934609 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.399834994 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.404433501 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.039430569 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.399906748 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.402712182 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.598374785 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.195896953 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.401862126 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.401033243 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.399989403 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.44793502 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.036833467 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.454719217 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.776296288 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.408516816 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.443926116 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.407352397 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.49577266 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.035745385 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.403327173 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.401406192 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.195704044 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.401190659 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.086997952 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.40266966 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.402100316 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.116754323 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.401699406 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.405965344 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.402422448 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.400733459 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.707857575 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.401044455 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.44048267 seconds)
  done (took 514.249659997 seconds)
done (took 668.843258256 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.402162962 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.407156515 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.407310678 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.407599646 seconds)
  done (took 10.906087924 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.420890062 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.408405304 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.41860381 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.408666445 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.419342149 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.409984959 seconds)
  done (took 9.768689669 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.402023849 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.40956093 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.408136297 seconds)
  done (took 8.502358805 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.650435238 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.434903108 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.826127035 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.419604842 seconds)
  done (took 9.613808028 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.419786597 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.420010365 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.419796483 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.421803338 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.421946975 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.422678451 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.421228234 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.423258039 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.421472592 seconds)
  done (took 14.0719328 seconds)
done (took 54.144620126 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.495773204 seconds)
    (2/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.491421321 seconds)
    (3/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.43607804 seconds)
    (4/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.479483879 seconds)
    (5/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.384199991 seconds)
    (6/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.690397894 seconds)
    (7/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.385186366 seconds)
    (8/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.500036004 seconds)
    (9/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.463419745 seconds)
    (10/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.584558568 seconds)
    (11/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.567843969 seconds)
    (12/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.538056806 seconds)
    (13/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.444975633 seconds)
    (14/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.68025375 seconds)
    (15/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.858078217 seconds)
    (16/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.40664107 seconds)
    (17/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.96170918 seconds)
    (18/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.495207798 seconds)
    (19/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.47738134 seconds)
    (20/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.444857468 seconds)
    (21/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.481774053 seconds)
    (22/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.716713468 seconds)
    (23/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.38448425 seconds)
    (24/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.625157114 seconds)
    (25/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.503084737 seconds)
    (26/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.423743298 seconds)
    (27/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.679316973 seconds)
    (28/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.38756642 seconds)
    (29/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.475368229 seconds)
    (30/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.499249985 seconds)
    (31/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.678963959 seconds)
    (32/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.51245694 seconds)
    (33/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.572880133 seconds)
    (34/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.040541365 seconds)
    (35/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.394323311 seconds)
    (36/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.485243047 seconds)
    (37/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.034995143 seconds)
    (38/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.495426493 seconds)
    (39/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.50916299 seconds)
    (40/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.385164162 seconds)
    (41/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.391856666 seconds)
    (42/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.385619002 seconds)
    (43/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.407922297 seconds)
    (44/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.525120816 seconds)
    (45/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.535031615 seconds)
    (46/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.441971153 seconds)
    (47/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.386226955 seconds)
    (48/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.901324303 seconds)
    (49/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.623093582 seconds)
    (50/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.385636662 seconds)
    (51/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.715601132 seconds)
    (52/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.690499164 seconds)
    (53/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.537346595 seconds)
    (54/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.867269679 seconds)
    (55/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.416854648 seconds)
    (56/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.492362905 seconds)
    (57/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.385954864 seconds)
    (58/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.856621834 seconds)
    (59/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.565222182 seconds)
    (60/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.730348486 seconds)
    (61/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.501463375 seconds)
    (62/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.630793947 seconds)
    (63/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.390124852 seconds)
    (64/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.389148123 seconds)
    (65/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.591511646 seconds)
    (66/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.687725149 seconds)
    (67/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.647007621 seconds)
    (68/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.499370446 seconds)
    (69/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.041903276 seconds)
    (70/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.407643461 seconds)
    (71/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.637570231 seconds)
    (72/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.419196521 seconds)
    (73/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.520107401 seconds)
    (74/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.933936118 seconds)
    (75/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.816235041 seconds)
    (76/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.5003667 seconds)
    (77/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.430138411 seconds)
    (78/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.542794344 seconds)
    (79/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.438877012 seconds)
    (80/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.394625046 seconds)
    (81/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.497145687 seconds)
    (82/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.479058411 seconds)
    (83/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.815400312 seconds)
    (84/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.4475329 seconds)
    (85/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.448018185 seconds)
    (86/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.636501135 seconds)
    (87/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.518416913 seconds)
    (88/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.550219252 seconds)
    (89/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.446628346 seconds)
    (90/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.512153458 seconds)
    (91/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.389774633 seconds)
    (92/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.526214615 seconds)
    (93/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.413526702 seconds)
    (94/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.571305563 seconds)
    (95/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.389916634 seconds)
    (96/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.50751507 seconds)
    (97/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.394522755 seconds)
    (98/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.253608271 seconds)
    (99/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.594379924 seconds)
    (100/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.44660096 seconds)
    (101/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.936654311 seconds)
    (102/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.570149809 seconds)
    (103/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.542040005 seconds)
    (104/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.557607634 seconds)
    (105/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.572079403 seconds)
    (106/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.549018305 seconds)
    (107/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.443595194 seconds)
    (108/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.410057792 seconds)
    (109/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.455401224 seconds)
    (110/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.444929675 seconds)
    (111/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.391584221 seconds)
    (112/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.397705778 seconds)
    (113/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.619683322 seconds)
    (114/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.391116775 seconds)
    (115/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.454754856 seconds)
    (116/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.446850736 seconds)
    (117/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.453186149 seconds)
    (118/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.516908817 seconds)
    (119/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.942409973 seconds)
    (120/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.594782427 seconds)
    (121/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.49861854 seconds)
    (122/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.408056707 seconds)
    (123/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.418266429 seconds)
    (124/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.580822637 seconds)
    (125/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.810453314 seconds)
    (126/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.559831689 seconds)
    (127/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.974412338 seconds)
    (128/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.504759819 seconds)
    (129/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.536338232 seconds)
    (130/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.454563752 seconds)
    (131/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.549850017 seconds)
    (132/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.600112124 seconds)
    (133/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.547499796 seconds)
    (134/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.422651401 seconds)
    (135/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.638121666 seconds)
    (136/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.541099852 seconds)
    (137/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.495023119 seconds)
    (138/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.393363483 seconds)
    (139/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.817159291 seconds)
    (140/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.531760338 seconds)
    (141/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.707620428 seconds)
    (142/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.730782024 seconds)
    (143/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.393570625 seconds)
    (144/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.494200902 seconds)
    (145/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.445540519 seconds)
    (146/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.509555963 seconds)
    (147/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.747527558 seconds)
    (148/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.236062665 seconds)
    (149/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.783829466 seconds)
    (150/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.423523288 seconds)
    (151/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.601854612 seconds)
    (152/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.505650684 seconds)
    (153/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.488129767 seconds)
    (154/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.520656406 seconds)
    (155/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.393878887 seconds)
    (156/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.509956612 seconds)
    (157/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.502844369 seconds)
    (158/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.398578108 seconds)
    (159/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.537275312 seconds)
    (160/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.518467231 seconds)
    (161/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.403762417 seconds)
    (162/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.549828661 seconds)
    (163/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.396546353 seconds)
    (164/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.465252711 seconds)
    (165/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.748295066 seconds)
    (166/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.467587228 seconds)
    (167/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.570423005 seconds)
    (168/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.531246207 seconds)
    (169/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.81870071 seconds)
    (170/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.598600554 seconds)
    (171/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.580143909 seconds)
    (172/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.441122726 seconds)
    (173/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.753981107 seconds)
    (174/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.7177829 seconds)
    (175/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.582226621 seconds)
    (176/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.411510171 seconds)
    (177/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.401958102 seconds)
    (178/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.054285136 seconds)
    (179/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.398821957 seconds)
    (180/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.725350195 seconds)
    (181/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.463625357 seconds)
    (182/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.633358803 seconds)
    (183/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.399915855 seconds)
    (184/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.62143345 seconds)
    (185/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.753603145 seconds)
    (186/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.497283833 seconds)
    (187/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.817222804 seconds)
    (188/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.010580539 seconds)
    (189/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.454825883 seconds)
    (190/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.539678908 seconds)
    (191/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.771863149 seconds)
    (192/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.703804472 seconds)
  done (took 349.577076103 seconds)
done (took 350.860429459 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.448771079 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.51492171 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.427701475 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.428214006 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.430791186 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.419273325 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.452927203 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.428736355 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.441285428 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.442509109 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.428972406 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.433582094 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.442570827 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.438321133 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.462638268 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.429349557 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.428784258 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.438958958 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.443022757 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.444561261 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.431178009 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.431478125 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.454770873 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.42893822 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.436152083 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.437888868 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.43546965 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.424167223 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.437122937 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.444044203 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.431334297 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.435497819 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.446167414 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.441630337 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.433611654 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.439560545 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.43218119 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.516887362 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.449536136 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.440892798 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.438829807 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.44662433 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.435844264 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.434539464 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.441317628 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.456450545 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.439079531 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.446621278 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.434498643 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.437552347 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.452340868 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.443413522 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.438410762 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.435984116 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.428504248 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.446498985 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.439175602 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.452075917 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.437590332 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.43468368 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.465075716 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.451687789 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.44358241 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.439128589 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.438830311 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.447638967 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.440973657 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.446738894 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.438829166 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.434375376 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.434109867 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.440202502 seconds)
done (took 113.094086015 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.554807392 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.427617133 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.588428823 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.439087365 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.598731322 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.554107856 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.440389797 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.441048953 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.43978431 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.236041168 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.439426058 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.440713171 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.428406988 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.439801803 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.550362803 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.441758375 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.441381615 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.132265135 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.442493637 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.567254098 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.43076466 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.439765665 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.440400721 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.237502322 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.428041524 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.425419515 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.568327137 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.440896628 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.135203835 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.424382284 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.429448306 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.133157978 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.566806165 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.461409484 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.451989232 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.45063091 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.600734988 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.446132794 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.557389475 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.558715385 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.590736374 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.481839294 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.426450434 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.430428354 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.445046864 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.443107616 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.442930316 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.471370644 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.428324396 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.443866331 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.139834785 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.452274654 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.452482978 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.443424423 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.444171583 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.46250358 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.444616616 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.443419935 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.571340206 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.443267328 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.558418933 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.239916751 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.24344679 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.44508966 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.429748554 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.444998026 seconds)
  done (took 115.235805522 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.505248953 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.512445351 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.563305094 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.439183429 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.485660307 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.564158312 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.43871785 seconds)
  done (took 11.812238488 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.441834986 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.446432878 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.483322334 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.484101798 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.444831268 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.60856095 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.447413685 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.44702097 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.446915308 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.486116191 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.444874553 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.445669105 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.455057258 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.433694733 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.482188819 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.447333724 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.551992024 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.43681189 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.444556202 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.590404303 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.446814515 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.455386102 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.48704652 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.449191908 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.445828615 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.44288399 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.192046781 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.448986192 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.446329126 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.447051617 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.446806121 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.503379417 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.448832351 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.436244432 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.447037099 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.550681162 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.447747664 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.446796324 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.447668745 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.438045856 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.447497171 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.44635994 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.447478826 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.446322287 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.448246307 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.462386196 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.446948268 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.447487442 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.447440653 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.446975614 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.487638295 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.446853301 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.448275446 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.447870601 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.493109634 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.45887145 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.448888122 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.448817722 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.449058434 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.448997593 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.594750886 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.486026103 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.447611829 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.487183643 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.449078485 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.449099595 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.448415871 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.447011481 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.528313525 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.44910046 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.486266688 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.44945539 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.62044655 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.464914819 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.451997946 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.442188641 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.443064946 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.449233928 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.436842805 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.44670851 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.450484579 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.441371492 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.448040869 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.450296649 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.451186906 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.597828886 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.549382143 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.450831098 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.455166642 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.448592882 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.449857285 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.490762733 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.449920879 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.451017914 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.490183316 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.557063212 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.492651603 seconds)
  done (took 148.319986194 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.453210762 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.455258107 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.447770462 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.472005315 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.441190459 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.442552077 seconds)
  done (took 10.019569229 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.444480402 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.455782451 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.45220543 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.451338231 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.452253053 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.453709336 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.451294219 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.44537309 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.457236612 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.454585669 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.450804315 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.452792499 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.454997772 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.451367177 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.45343753 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.452232356 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.452721273 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.453408225 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.452365554 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.453503657 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.439471004 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.454116526 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.455140955 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.444963063 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.458902916 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.453915191 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.469262895 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.453220501 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.453250889 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.451313031 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.463684712 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.453064619 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.443923013 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.450869232 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.458896621 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.446453101 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.458479513 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.455067416 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.453905169 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.456165506 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.455139996 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.455994193 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.458236659 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.456203894 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.447585856 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.452169241 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.458673779 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.467901648 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.454930061 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.456164825 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.456236276 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.455925644 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.456124256 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.45627247 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.449322211 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.455852272 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.460707685 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.456848786 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.455830083 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.448954732 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.461216992 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.457388692 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.447904078 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.460759281 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.456241686 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.456707297 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.448919044 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.461620259 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.457332448 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.455959205 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.457131185 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.457034118 seconds)
  done (took 107.025836762 seconds)
done (took 393.713860475 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.963537859 seconds)
  done (took 4.278214351 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.686668143 seconds)
  done (took 4.002232146 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 25.960334756 seconds)
  done (took 27.285688279 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.512412274 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.445439103 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.464402824 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.442070723 seconds)
  done (took 11.177008635 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.007276425 seconds)
  done (took 4.322161692 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.452662979 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.468157004 seconds)
  done (took 6.238025514 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.774995006 seconds)
  done (took 4.090711454 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.400160646 seconds)
  done (took 4.724306166 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.457467089 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.452498488 seconds)
  done (took 6.232818159 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.420892332 seconds)
  done (took 3.736342644 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.747631603 seconds)
  done (took 22.064843325 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.459763768 seconds)
  done (took 3.77892348 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.485040161 seconds)
  done (took 3.799928281 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.748033182 seconds)
  done (took 7.063585808 seconds)
done (took 114.109704391 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.441560974 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.448849887 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.44905123 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.446201379 seconds)
  done (took 11.10152929 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.521894435 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.524646655 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.531610519 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.516927545 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.518168834 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.52399 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.487529895 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.48363696 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.514678638 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.510674759 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.527108877 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.51667565 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.525589311 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.485565711 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.512807827 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.528020057 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.516283545 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.53324997 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.487136292 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.517274816 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.460991145 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.51758594 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.51223192 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.459852145 seconds)
  done (took 37.552993982 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.969595556 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.523064273 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.604106422 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.501628727 seconds)
  done (took 7.914848795 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.56638296 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.565712628 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.583896058 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.63065464 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.667389488 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.579290481 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.484772767 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.484383172 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.468398363 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.56562443 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.650571272 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.565102576 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.782679536 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.461071895 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.779516724 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.462232666 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.461706943 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.566146289 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.613589542 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.648019534 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.461856573 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.566991037 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.57143862 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.56735079 seconds)
  done (took 39.073994657 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.469965824 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.479117111 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.463624252 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.478644678 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.465267319 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.464597049 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.464881838 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.469806101 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.463257174 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.462235907 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.464980238 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.47849292 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.46597161 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.465744563 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.471234363 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.466652311 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.465973996 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.470467924 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.472782332 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.46437896 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.464801741 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.469991545 seconds)
  done (took 33.622397004 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.447032537 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.446628873 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.798891587 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.703851535 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.44900008 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.447656005 seconds)
  done (took 14.612821089 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.539750621 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.705466094 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.454817382 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.89520051 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.979534696 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.455393765 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.455505488 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.747625303 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.127274092 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.151023155 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.525792418 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.541552278 seconds)
  done (took 21.902135063 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.540288914 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.460757876 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.471710798 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.536214186 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.463756262 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.460841346 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.506229696 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.99113209 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.465777316 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.737263953 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.460106161 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.544947596 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.710404218 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.474529139 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.463845138 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.428703099 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.710824418 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.035095529 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.464438434 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.460720015 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.493179662 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.464417652 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.462075462 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.713782067 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.462892469 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.460797694 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.72396238 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.461258288 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.807357463 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.785232941 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.782694433 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.464602792 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.744219572 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.957805485 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.569658846 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.709314133 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.460172549 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.463821461 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.441569675 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.464436553 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.465858958 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.464879245 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.782904174 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.464789866 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.462703707 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.463764619 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.99871176 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.473222806 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.463188482 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.462329796 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.786905722 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.548851583 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.469806309 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.464470759 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.452981505 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.463189472 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.469561936 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.590099807 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.106130744 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.462557146 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.469761626 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.466270602 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.479752215 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.47164401 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.224300984 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.471795528 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.470276972 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.469385285 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.464085865 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.463372112 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.487054193 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.463910775 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.486481018 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.464765496 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382565151 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.471502741 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.467307542 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.100206094 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.466482885 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.488801021 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.692034569 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.463825955 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.465408586 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.464440748 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.466556905 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.350160484 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.474689976 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.434627514 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.497789796 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.999142061 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.717400634 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.487767369 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.495555797 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.687847394 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.434057625 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.465656307 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.467795089 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.468741924 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.48800168 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.003210881 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.466239383 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.47380207 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.715720867 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.677767049 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.46586749 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.438010861 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.008291061 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.465340056 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.498807336 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.468747766 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.721872214 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.19470628 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.798323473 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.469567148 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.508137424 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.46713163 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.417067467 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.483946506 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.474604431 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.471814147 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.788637549 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.435399389 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.471491783 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.542904829 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.480288411 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.468839498 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.468955249 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.472349959 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.467865161 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.694564024 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.472026379 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.791460823 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.472834219 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.469123052 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.470410616 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.478765959 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.472155206 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.693509925 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.487418857 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.744395976 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.469466078 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.470122206 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.469117505 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.689642891 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.472930597 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.476738897 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.809270179 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.471094781 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.471582556 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.796213855 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.507502918 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.584168551 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.503841515 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.47208632 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.720251947 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.476917079 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.476593259 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.470013235 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.473369905 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.475876662 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.478812978 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.489170644 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.202214896 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.446049177 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.48027597 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.472126301 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.487445252 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.546324531 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.478387666 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.724265318 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.473154093 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.467350363 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.479715287 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.484463745 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.696481943 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.79542296 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.47448367 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.648300157 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.00760906 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.201652876 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.488743728 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.471172908 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.471481566 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.474662171 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.471328879 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.472255782 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.473059151 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.721717754 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.805181075 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.476370128 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.208083486 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.475018848 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.474237115 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.481816541 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.796720648 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.482848069 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.474856204 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.483019189 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.47323663 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.509563451 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.80192875 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.699142765 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.490842384 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.474509589 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.991809631 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.481132103 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.475715247 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.475171849 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.501866506 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.47433557 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.087679819 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.817019901 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.477516812 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.802743841 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.475929869 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.493711175 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.474329128 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.484291867 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.48954727 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.487653658 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.504848534 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.728675457 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.478576819 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.477102541 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.116839199 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400374473 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.154070441 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.478890602 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.492876349 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.478782003 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.017007502 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.477377634 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.476515974 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.761865073 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.016398397 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.476676301 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.013199623 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.491506314 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.393091048 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.803522529 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.706063217 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.476901032 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.510130013 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.806014759 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.691936567 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.505368113 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.484850013 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.475780023 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.446623156 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.089966555 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.484760306 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.658217786 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.018762425 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.487482258 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.48047731 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.469072517 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.487894523 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.950465952 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.477796708 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.478687687 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.488439166 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.492654794 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.092577718 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.487342013 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.476887167 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.236110499 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.488954274 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.023870867 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.478810201 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.732399588 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.806343031 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.780289744 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.479937894 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.491335298 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.727041068 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.809404176 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.480674365 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.490415673 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.158310366 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.342357321 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.488798719 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.48076469 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.439422815 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.482087575 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.827046192 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.48793962 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.491374652 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.489331062 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.480915604 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.479167058 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.479665633 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.485685736 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.452226544 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.067714271 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.48668787 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.481260722 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.487884333 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.482406959 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.729495319 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.497289867 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.214901544 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.712385242 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.496413903 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.517441271 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.488368702 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.495671358 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.452371874 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.481550782 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.482417723 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.563926973 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.704753438 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.481362035 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.45201253 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.529494807 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.695047048 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.482349845 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.495884242 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.744978002 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.482996982 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.489584983 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409740112 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.515257807 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.498174117 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.484338006 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.483523968 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.515986185 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.556722208 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.738283797 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.813878186 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.813099606 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.96137963 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.497389414 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.486939022 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.49932428 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.565013892 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.483633226 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.500233869 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.484471759 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.217814691 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410608706 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.228246748 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.815964031 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.48635363 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.494532334 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.484892598 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.725636068 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.482627437 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.760167766 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.484150259 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.484868274 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.506959591 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.501413778 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.486212006 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.702366107 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.760361628 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.483428556 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.487729432 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.490830377 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.487489332 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.820120255 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.70145131 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.089313386 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.129704435 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.490783812 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.493678986 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.037794238 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.765888065 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.486145196 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.48745205 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.487819305 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.501636924 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.500011859 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.49745405 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.504921012 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.712749623 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.815750389 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.994305847 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.813223862 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.512912093 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.364157276 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.486849565 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.758791739 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.325619034 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.745195692 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.231369794 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.361223809 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.745497516 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.562257139 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.743357164 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.49146795 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.725787459 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.49031135 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.487934023 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.486827443 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.487869075 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.488259961 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.815302684 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.229275568 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.742798234 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.494109805 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.491437075 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.519547367 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.742525067 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.714683762 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.391320938 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.713398025 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.824096323 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.498895048 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.489012343 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.23429462 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.822080426 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.491012864 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.496022515 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.753356404 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.490815111 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.526577091 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.358085359 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.492952315 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.1347009 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.704877132 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.510686938 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.490563275 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.356467407 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.235063695 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.491356317 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.080668231 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.494100227 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49135475 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.770098606 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.498201038 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.489913483 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.782870356 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.496529839 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.489426807 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.75304071 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.22830878 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.381376621 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.513723333 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49439729 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.494558674 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.491260106 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.54572914 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.491568056 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.502434752 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.957627841 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.492478299 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.491787383 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.50626198 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.503845634 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.496435935 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.517475843 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.493000947 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.500971896 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.490438805 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.462388707 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.517644296 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.622125726 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.114321684 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.497107672 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.108222076 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.829835798 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.744224554 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.492888272 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.467729951 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.500131595 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.494485341 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.495385318 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.496444431 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.513197291 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.144091008 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.495225129 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.827366884 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.503204524 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.706065449 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.705880225 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.496431637 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.756640614 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.500097243 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.518267618 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.462895091 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.494961794 seconds)
  done (took 1037.193422097 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.486175439 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.523259597 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.534916516 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.553901357 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.508245529 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.51747766 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.577287064 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.516453756 seconds)
  done (took 21.570721321 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.490326572 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.496217134 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.488605744 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.499277883 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.491414886 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.053222602 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.497737305 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.5022622 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.515612839 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.4928173 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.494692321 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.225204639 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.500232762 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.488804626 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.512736096 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.498165884 seconds)
  done (took 34.610869222 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.706528728 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.726125894 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.124432859 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.51002194 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.492745312 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.503311684 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.931469279 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.521603319 seconds)
  done (took 28.870117892 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.502282903 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.500911193 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.50401759 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.504100307 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.503116327 seconds)
  done (took 8.868555833 seconds)
done (took 1298.210470181 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.503378632 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.503510037 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.503345383 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.503107332 seconds)
  done (took 7.36668202 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.466807031 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.468588749 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.471538062 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.48458304 seconds)
  done (took 10.244895677 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.920673628 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.142510132 seconds)
  done (took 5.417880085 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.49790287 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.261271944 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.246773899 seconds)
  done (took 8.361052819 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.804615809 seconds)
  done (took 3.158579586 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.955592807 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.995535443 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.489106452 seconds)
  done (took 7.795328972 seconds)
done (took 43.698067796 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.488527172 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.257508965 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.650139493 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.489619392 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.678385701 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.6561202 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.707789013 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.491092311 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.494044567 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.494096931 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.508524518 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.659652001 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.695995123 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.257789174 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.696815003 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.253744128 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.657889767 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.497137851 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.488866873 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.509818726 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.710049238 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.505606987 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.50729226 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.501520474 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.655391631 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.648010733 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.505811647 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.256598133 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.502195842 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.505596174 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.646059632 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.491010885 seconds)
  done (took 86.425774109 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.490087488 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.490613704 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.511276815 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.511455086 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.491087464 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.492495248 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.510818953 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.490934351 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.490519481 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.49108504 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.491902101 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.491312009 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.491188741 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.490666341 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.490690741 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.492591146 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.491522664 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.511684429 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.491742293 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.491726922 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.494022673 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.506460362 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.492633736 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.521193734 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.502646276 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.492713926 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.491010737 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.512129838 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.492600977 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.491324965 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.493027231 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.491582374 seconds)
  done (took 81.245808603 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.491480717 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.492490794 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.493497338 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.493431717 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.512675663 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.515838108 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.493186293 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.492705378 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.493312118 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.492477398 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.493485002 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.49303564 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.515245678 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.50043648 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.495934984 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.498264915 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.495505574 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.492495309 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.494093108 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.514549552 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.49388053 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.507699169 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.51404954 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.507856639 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.493980985 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.494198363 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.513899373 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.493731966 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.514233643 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.494371517 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.495542591 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.515408012 seconds)
  done (took 81.364255824 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.736953387 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.510473891 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.512687024 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.503633472 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.513848609 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.511229886 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.506369315 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.743325562 seconds)
  done (took 15.898993558 seconds)
done (took 266.291209577 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.504461789 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.509759312 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.537186097 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.507509011 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.527526212 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.534409238 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.747101244 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.537157313 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.737787574 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.509941201 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.520851285 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.507212546 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.500546521 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.659180554 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.517744426 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.505583259 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.517515869 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.5056865 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.513067669 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.773473155 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.533268313 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.498565361 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.524885085 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.52493105 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.481781215 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.608730371 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.582553628 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.681250845 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.637913893 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.583243428 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.500680564 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.517029155 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.514113743 seconds)
  done (took 70.725304746 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.505141758 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.514640614 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.514606996 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.514375628 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.513842948 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.514649868 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.503966429 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.514597901 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.514774359 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.513300483 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.515785507 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.515124613 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.515529083 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.514751882 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.514419836 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.487154375 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.506361287 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.515638599 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.50515036 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.487123657 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.514958609 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.515499935 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.516097119 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.51483324 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.517233217 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.516814898 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.516254182 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.518318688 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.517299789 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.518122303 seconds)
  done (took 46.733653143 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.51689294 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.520109403 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.506255513 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.518537462 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.506226987 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.513026501 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.865823881 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.522161189 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.512675285 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.512886237 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.515571816 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.5239238 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.56626137 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.513987999 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.516337295 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.517736652 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.519433304 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.508293092 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.502903702 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.530156798 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.877341883 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.523452583 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.870307943 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.53021024 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.513370539 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.511057834 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.515510087 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.504426685 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.516104381 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.519556485 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.498056151 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.863627771 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.525253897 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.507190055 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.510769296 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.524957821 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.519846046 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.505121366 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.538853546 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.511097701 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.866493496 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.51457172 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.51668258 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.508877231 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.518764782 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.519670592 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.503929224 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.530140472 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.812385897 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.521719733 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.504275894 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.519757273 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.523111522 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.514663841 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.808234139 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.518805836 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.513604078 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.504700683 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.52307028 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.867595981 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.526489543 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.512963766 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.505296316 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.538293427 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.52322856 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.51867583 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.528688527 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.514868465 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.518293022 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.520165828 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.507918425 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.5185515 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.522514464 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.521737448 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.528009069 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.511297472 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.51893656 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.507984851 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.532371015 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.86739953 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.522419706 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.506044227 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.887457125 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.52275272 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.525657398 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.526024344 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.523621629 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.586485749 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.862374596 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.508837914 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.534987232 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.512633499 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.879499672 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.527669767 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.515122564 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.507020605 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.528367622 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.523649696 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.5125108 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.513226753 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.520622907 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.529506049 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.509314563 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.522343897 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.873857379 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.526531088 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.509019957 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.521008885 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.635659656 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.52478648 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.527874491 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.52093729 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.885500971 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.524570159 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.52412224 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.508187372 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.515187897 seconds)
  done (took 222.026416764 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.510008908 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.5147499 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.509733435 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.51472839 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.509553339 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.518382693 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.511145276 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.51320046 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.515827478 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.510961121 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.51386955 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.520680455 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.518717499 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.511788309 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.511080161 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.5378113 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.511536566 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.51289695 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.518595247 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.510856666 seconds)
  done (took 47.671259266 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.526205343 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.197336931 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.163570198 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.532029257 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.527553406 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.518838869 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.58714916 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.529072074 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.527447299 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.889027535 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.741094083 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.534318384 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.527102065 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.528317547 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.161831686 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.504599625 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.890230143 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.208870155 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.533247465 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.199090231 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.506565425 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.528150604 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.518464765 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.206009624 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.905299543 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.877486756 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.595006864 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.205009241 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.534340519 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.528395512 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.202685144 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.533859503 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.520552304 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.189671915 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.535920112 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.542614577 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.53090744 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.59174186 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.594507793 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.892472214 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.221251627 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.891762736 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.545551457 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.707088857 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.532699324 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.50020271 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.220912053 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.537132793 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.502293333 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.53211092 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.535835607 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.180060959 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.528308563 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.179615501 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.53602502 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.531469938 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.208441382 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.190054693 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.181070633 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.739516097 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.524620401 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.880472994 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.535376034 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.230990821 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.53722019 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.530753675 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.531898758 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.741545532 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.228770821 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.881460352 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.90311559 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.907331723 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.539184197 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.605231997 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.532686026 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.897799544 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.608257658 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.965491714 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.906007292 seconds)
  done (took 140.232657861 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.852277285 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.656377693 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.97586422 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.177214889 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.10557976 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.681820689 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.654518287 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.798843581 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.547268081 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.635740745 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.308646761 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.634418942 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.40277053 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.608692464 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.640131767 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.662390948 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.995480625 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.542146258 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.24845394 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.27871226 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.539240232 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.64528595 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.363992027 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.951944418 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.545932761 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.33227331 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.541956741 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.128830156 seconds)
  done (took 58.83556627 seconds)
done (took 587.585192745 seconds)
SAVING RESULT...
DONE!
