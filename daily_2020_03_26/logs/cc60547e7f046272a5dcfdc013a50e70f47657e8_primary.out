cset: moving following pidspec: 27933
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.275821444 seconds)
loading group "string"... done (took 0.621167209 seconds)
loading group "linalg"... done (took 7.513864629 seconds)
loading group "parallel"... done (took 0.156129337 seconds)
loading group "find"... done (took 1.199090426 seconds)
loading group "tuple"... done (took 1.740477383 seconds)
loading group "dates"... done (took 1.244447768 seconds)
loading group "micro"... done (took 0.215277826 seconds)
loading group "io"... done (took 0.908795826 seconds)
loading group "scalar"... done (took 37.155250018 seconds)
loading group "sparse"... done (took 12.070182449 seconds)
loading group "broadcast"... done (took 0.934852236 seconds)
loading group "union"... done (took 12.181235735 seconds)
loading group "simd"... done (took 4.536147413 seconds)
loading group "random"... done (took 8.941765342 seconds)
loading group "problem"... done (took 1.825752665 seconds)
loading group "array"... done (took 20.605315644 seconds)
loading group "misc"... done (took 1.693394876 seconds)
loading group "sort"... done (took 3.258215999 seconds)
loading group "collection"... done (took 16.991363982 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.519345077 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.123766881 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.132802565 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.119065047 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.148294146 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.117527029 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.124576614 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086855644 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.824461677 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.148150158 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.116392635 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.397217463 seconds)
done (took 5.315215321 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.174245706 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.084310987 seconds)
    (2/2) benchmarking "String"...
    done (took 0.084869861 seconds)
  done (took 1.301763217 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.068930832 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.127265634 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.070155161 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.070060456 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.069732097 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.069194162 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.069495512 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.069565611 seconds)
  done (took 1.679373696 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075761356 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.071357659 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.069347222 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.071336306 seconds)
  done (took 1.421364075 seconds)
done (took 5.790311092 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.747183356 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.212990423 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.186459788 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.38071724 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.127407707 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.169707658 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.64546929 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.313942531 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.187773461 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.078177712 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.107639403 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.336023148 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.120946563 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.647079434 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.07594176 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090872163 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.141519615 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.416798824 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.069806091 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.084922106 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.091459139 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.130822547 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.087553362 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.075887914 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.14596127 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070671244 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.132570796 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.082662945 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069434118 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.214950517 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.175201057 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.66073293 seconds)
  done (took 10.246245811 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.099682412 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.099882029 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070982762 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.127804926 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.1013681 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.072869277 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.0780413 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.070539842 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.092250017 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.131162208 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.094127306 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.107684825 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.068734059 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.071287754 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.085960065 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.210013966 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.081911061 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.084160543 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.073068133 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.080181686 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.110341963 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.079723158 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.082162331 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.082798686 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.13053272 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.183466475 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.101264387 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.100767839 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.069476173 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.084586601 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.117866369 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.129539519 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.069128678 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.070893598 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.127778108 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.097211949 seconds)
  done (took 4.717100299 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.954464925 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.140491994 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.09036948 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.131850487 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.086938495 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.067417565 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.107678238 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.068185263 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.08265965 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.204297503 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.375402705 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.570336015 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.112027774 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112701539 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.105091082 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070885509 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.070966831 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.069736545 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.433769668 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.100744524 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.107729093 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.082368644 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072961011 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.071497408 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.067413724 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069340441 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.066514696 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070275263 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.114958224 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078701331 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.302214513 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.120052676 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070686328 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.90835975 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.164626343 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.06893913 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.242701717 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.165965994 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094204615 seconds)
    (39/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.093718433 seconds)
    (40/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.138345426 seconds)
    (41/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071821041 seconds)
    (42/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068539111 seconds)
    (43/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.155482877 seconds)
    (44/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.067334227 seconds)
    (45/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.07220528 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.071693871 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.087584735 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.105540061 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.120112353 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.068211819 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068825266 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.164869624 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067994049 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.081535789 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.106006368 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.158377156 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.068796128 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.28223591 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.091784571 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073124097 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.068282968 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.167734285 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.125652322 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.070687809 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.070194061 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071402042 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.071389556 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.402802191 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.069088423 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.044968929 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.075121705 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.079111258 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.07226517 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.07183305 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07503866 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075308648 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.090512248 seconds)
    (78/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.067188529 seconds)
    (79/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.067853512 seconds)
    (80/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.068805024 seconds)
    (81/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.076329015 seconds)
    (82/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.068544869 seconds)
    (83/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.069155051 seconds)
    (84/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.069322126 seconds)
    (85/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.085570136 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.474502847 seconds)
    (87/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.069935509 seconds)
    (88/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.070586053 seconds)
    (89/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.068127639 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.091961614 seconds)
    (91/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098235648 seconds)
    (92/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.069807011 seconds)
    (93/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.068230943 seconds)
    (94/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102109287 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070105747 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.068921316 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069230394 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.085069339 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.071925393 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.115318234 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.068952693 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.08750824 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.101120044 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.071478614 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103512295 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.081295124 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070299948 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.407121704 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.068315573 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.070240872 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.067821659 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.070581771 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068633869 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.080466018 seconds)
  done (took 21.812724074 seconds)
done (took 38.863065175 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.247360698 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.075862796 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.075730964 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075808499 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.076272903 seconds)
  done (took 1.775668219 seconds)
done (took 2.989075562 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.119683986 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098564196 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.066956064 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.096993919 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.067237601 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102652501 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.099631986 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.078552598 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098853144 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.067758604 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097077271 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.067630762 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.068057816 seconds)
  done (took 2.356384802 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.085425804 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085995031 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.072273703 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.085137242 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066833924 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.085567607 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.084497055 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.093495269 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.084182999 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075059498 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066989173 seconds)
  done (took 2.094351753 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.085016696 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086094638 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.072095358 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084757631 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06663828 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084865321 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083822079 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087773813 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08407449 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076654689 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066742109 seconds)
  done (took 2.083378846 seconds)
done (took 7.735539115 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.078845944 seconds)
  done (took 1.27414886 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.523973966 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.633481314 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.082605809 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.107017959 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.186487623 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.113542699 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.247355324 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.087213259 seconds)
  done (took 8.347470924 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.091252298 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.071259054 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.072402444 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.071870291 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.084252466 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.074457723 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.072016911 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.073319089 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.074929487 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.071553471 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.07441123 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.070747964 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.073404847 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.074872442 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.071328612 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.073751628 seconds)
  done (took 2.47115551 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.093769332 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.092184677 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.076030118 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.076911728 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.075012402 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.073514479 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.076153718 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.075552938 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.073359798 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.074634357 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.077242195 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.07584849 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.074076768 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.067357124 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.076030986 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.078452058 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.07311354 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076486365 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.076888718 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.07744821 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.077142868 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.067066998 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.074030283 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.076225638 seconds)
  done (took 3.134964502 seconds)
done (took 16.433626663 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.105611259 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.070935873 seconds)
  done (took 1.379831134 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082024009 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083841629 seconds)
  done (took 1.376678587 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083098186 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.067565729 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090732011 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.079233824 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.068543282 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.067876552 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.088234534 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.069445941 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.06788038 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.068262292 seconds)
  done (took 1.962811392 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.07093083 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.078102877 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.072708709 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.082331884 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.075471617 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.066914395 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.073607594 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.069545745 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078156438 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.065645922 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.07320016 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.084566114 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.073259632 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.087069095 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.07353145 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.07125801 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.073035609 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.070015821 seconds)
  done (took 2.550926676 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.067475444 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.069109243 seconds)
  done (took 1.351910194 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068836731 seconds)
    (2/7) benchmarking "second"...
    done (took 0.0655134 seconds)
    (3/7) benchmarking "month"...
    done (took 0.06909903 seconds)
    (4/7) benchmarking "year"...
    done (took 0.06888282 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.066541794 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.065360339 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.065855262 seconds)
  done (took 1.680860566 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.3575164 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.118043538 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.301260638 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.074508486 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.083340964 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.251951603 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.068632919 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.074005006 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.073635351 seconds)
  done (took 2.654275817 seconds)
done (took 14.178398173 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081712158 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.088055295 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.097052895 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.369124149 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.093683282 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.069050973 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.115898727 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.177902096 seconds)
done (took 2.319245419 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.207723892 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.656082464 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.406384273 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.203225869 seconds)
  done (took 2.482252044 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.33137367 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.089455669 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.062017509 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.069536101 seconds)
  done (took 1.781117794 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.068958841 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071344384 seconds)
  done (took 1.366388515 seconds)
done (took 7.061689232 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069409332 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.08807071 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.06842264 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.066446073 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.066461647 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.068458315 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.066131873 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.066403695 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.068318606 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.068894251 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.066082378 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.068475631 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.068162069 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068633155 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066012827 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066332074 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069103109 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.180961743 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066539808 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.068502056 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066418764 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068285766 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065902379 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.06622779 seconds)
  done (took 3.008142463 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.085100178 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.068901704 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072893785 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.072912794 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.071595703 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.073342959 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.07314267 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068400221 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.073669307 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.07080005 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071383448 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071064618 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.070380602 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.071078356 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070261343 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.07106046 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.073313443 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068081386 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070282766 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.071127567 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.073265851 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068785576 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071455851 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073744404 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071064095 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071045113 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.070424241 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.068606843 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073598398 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.071308297 seconds)
  done (took 3.385097133 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.073274414 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.065659901 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.066768736 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072498039 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065836518 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.067135371 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.065917698 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.065845585 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.066367365 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.066325687 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.067106838 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.06551216 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.066229523 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.066755841 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.0668339 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.06984141 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.080995448 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.065999496 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.066543788 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.066471165 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.069056899 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.068382253 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.066216322 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.065831296 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.066085828 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.065811037 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.066767869 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.065924205 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.067075198 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.065910676 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.069260488 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.070392196 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.065896157 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.072858686 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.070208041 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.065745116 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.070054787 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.065466193 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.06662713 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.065899795 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.065874993 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.06636547 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.065776773 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.07274944 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.066664236 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.067505506 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065917578 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.0677632 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.066609576 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.068019431 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.065834439 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.06590553 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.068239626 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.067287475 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.070298221 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.066365501 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.066981371 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.066192113 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.066791809 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.066209176 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.065858375 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.065839841 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.068478239 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.067046472 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.080747549 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.073305085 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.066568071 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.067683763 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.066934362 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.068983483 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.06785281 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.079905834 seconds)
  done (took 6.124799775 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.090190688 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.088027093 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067741274 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068026486 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064721441 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.066671964 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.07150627 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067168053 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068199296 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.08461865 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066624175 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068018363 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068020214 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070273918 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066677792 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067970776 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.074665707 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06415001 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.066619258 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.070295221 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067245244 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071997071 seconds)
  done (took 2.806245509 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.148038139 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071854638 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105536488 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.077422018 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.07203031 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.077237291 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.072204734 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072412283 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073016355 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07001802 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070037289 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072660776 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072369067 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071196466 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07037399 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070106922 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072122983 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070038981 seconds)
  done (took 2.647509921 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078489328 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.068315676 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.088562154 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068896036 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.068864408 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070361535 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072369791 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076470702 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.070463777 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068950002 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.076168415 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070479924 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.070773054 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068803631 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071154663 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068864082 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.070481762 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068752881 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076320934 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072802055 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072460918 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075957547 seconds)
  done (took 2.835630639 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081372612 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070127273 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081858597 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069933763 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064559084 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067172152 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.072072876 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.06822053 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.072448038 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.070535832 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068178218 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.066518751 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070863058 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06824859 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.071288291 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068213336 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070455906 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068292459 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07057589 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064704743 seconds)
  done (took 2.647624201 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086702964 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07090133 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069967254 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076451561 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070444768 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.069951251 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076776018 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.070707114 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07055644 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.090069384 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070388042 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.070409567 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076521251 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076706091 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.06980372 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076362367 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076887052 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.076451395 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069992768 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070008394 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.090200213 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070352601 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.076638481 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.07079076 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.070127903 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070198162 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070397493 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.074109228 seconds)
  done (took 3.321629906 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069358434 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068172558 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.066419319 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066425066 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.066116067 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.066482258 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066342471 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.066894463 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.068594958 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066435612 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.06834728 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.068756072 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.0690295 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.068395079 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068504695 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.068914472 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068782734 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.066391253 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066659636 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066259876 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.068588604 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069006816 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.068431616 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066340046 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066307704 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.068558798 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06643756 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.0663389 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068542297 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066104844 seconds)
  done (took 3.275595753 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077406133 seconds)
    (2/2) benchmarking "in"...
    done (took 0.074658892 seconds)
  done (took 1.401712483 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065095466 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08190513 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.065799282 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.073301255 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071757931 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069576544 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074951629 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071602818 seconds)
  done (took 1.818679395 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.083033697 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.078198814 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.068880596 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.078883263 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.077913434 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084590236 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.134862132 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.069238266 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.075347637 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.067178098 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.081226483 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.068240235 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.074799537 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069622503 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.074734201 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075804954 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.066825177 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.073318505 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.069945384 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.066970009 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069405217 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076829079 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072065382 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.065101544 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.070643233 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.090924757 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.079707818 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.068181462 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072039453 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.075875847 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.074285279 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.063600738 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.068863138 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.068425817 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.066690307 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.077776973 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082892165 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071912636 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.076956165 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069040971 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076956469 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.064359198 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.073388021 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.075603282 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078895844 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.068801366 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.068955484 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.064393617 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.066981976 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.07151979 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.065051827 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069193879 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.064327265 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075723113 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.072473841 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079232112 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.067881756 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.070519734 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.072205686 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.072018317 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.075243874 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.070867447 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071670596 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.06855362 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.078585195 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.073723427 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077034149 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.063732494 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.063153221 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.066892248 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077710182 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091049273 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.07534635 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.069426292 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069504675 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.066577791 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072217142 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06987195 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074106843 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.075395443 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.068157523 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073275378 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076120755 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069771091 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.071674244 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.074880505 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.068166114 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.070217913 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.067153535 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083695046 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.067065444 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.068943433 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.066870468 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.07840749 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.071929334 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.067724119 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066736652 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075150982 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062665569 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.067607665 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068129628 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068727129 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.077356981 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071156845 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07137953 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.07597541 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074760721 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067960896 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.07054324 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.189999341 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070037933 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.069302928 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.076569936 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.064030251 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072642199 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.070409913 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.069665621 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.077587808 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.067172322 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.069026039 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076569336 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074118676 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.067153515 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.065748113 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071916703 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.068301541 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071262961 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.076768233 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.067503032 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.064047531 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.063985049 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.072109077 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.068893456 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.072593347 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073017039 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071347066 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.064167239 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.067533433 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.073639438 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.07793048 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.069175193 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.069900595 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.074745215 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069936255 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.068177125 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.075349921 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.071321622 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.068571065 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074375237 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.070942218 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.064134012 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070559343 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071731295 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.067509878 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.072406563 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070726389 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.071258989 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.069455283 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067417105 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074542592 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069220596 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.068979959 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069085576 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.067242692 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.078923301 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.071132675 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.064318155 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.065950507 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075679449 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.067194016 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.06826984 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.06794042 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.071085535 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.068855074 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066665982 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.068015996 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070844201 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076433195 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.071399181 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069259636 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.074335117 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.08057591 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.068158131 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070803652 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.068454023 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069156988 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.068925385 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.077995075 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074688299 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.07228375 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.071193683 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.06647072 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074498142 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076767686 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.068641684 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.067271649 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.068446615 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.072808423 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.075330963 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.072591945 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.069311111 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066935794 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069510698 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070776284 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.071058838 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067804557 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.068550917 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.07339721 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.066634951 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.073337006 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068105949 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.078206409 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.0713116 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.063219301 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06940759 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065513579 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.07376962 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063579845 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.066604316 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.0680998 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.068054467 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.066573218 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.198533863 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.064258017 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076518262 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.077530994 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.070702288 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.069462266 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.069347171 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076072798 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.070754653 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072698917 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.073553316 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.074815121 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079042394 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.068713685 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.072720106 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.081970888 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.068649657 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.063546068 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.07459796 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.067108472 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.067926089 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.067706757 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.067032775 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072288757 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076263754 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.074638754 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.063597939 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.071880585 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.067136615 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.068512765 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.064576499 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073409459 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.071896013 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.070678746 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076211232 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069191519 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.068760025 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.071946259 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.067895656 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.068275995 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.069631799 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071812248 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.069438001 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070864373 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.068540251 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.071678747 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.068288074 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.066660735 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070675277 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.068507327 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.069527076 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073532512 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.068052153 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069778684 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.071364927 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.069062297 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069959331 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.069592952 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.068705468 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072470634 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069717426 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.069311981 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.071754074 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.064329313 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07609994 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.068025868 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076572586 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.069563151 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.066733959 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074603249 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.071597144 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.073268852 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.069337986 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.069732813 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.071633365 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.068541387 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.071841288 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075836691 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.067792346 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.079660572 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075963716 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070150143 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071904999 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.07038857 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.070701892 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.068172129 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.070628929 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.069741641 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.069817443 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.069084758 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.073455591 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.07214055 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.069617749 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071429873 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.06860786 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.069341197 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.068979607 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.064079387 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.068342781 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.068452733 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.068581559 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077391872 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.068689032 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.068535502 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.06769783 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068329747 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.067316128 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.065454097 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074422351 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073918105 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.067808567 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074316588 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.06742711 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.069145708 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077623072 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.193444838 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.068280865 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.067424802 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.068249887 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076695427 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.069444857 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.078441447 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.070251338 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.069286327 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.066228009 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.068860619 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.067466721 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.064022868 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.067004759 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072915398 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.069503267 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068228075 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.068604828 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.071845145 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069446144 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.077375544 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.067908126 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.069724629 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.06912586 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.066255252 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.068807769 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.068624961 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.071936721 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.069124501 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.067706687 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.066700733 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.068516438 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.070113758 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.070609682 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.068742466 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.070407618 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07541775 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068392668 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.072106007 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070977413 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.063596285 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.071688314 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.068906347 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.068925234 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.068896615 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.072661183 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07532914 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069540377 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077942917 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.069048263 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069849659 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069865883 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.067568614 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.068407383 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.068766748 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.069093665 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.068869034 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.069529951 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076574382 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.06738103 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.072309801 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069433246 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.070038428 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.076159906 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.06958417 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.072654214 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.074097164 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.070133937 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070640224 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076877825 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.072431806 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072373719 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069453489 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070428188 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07501219 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.068600349 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.075488786 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.069887633 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.069314149 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070960472 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.067608212 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068606798 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.068642544 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068021058 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.075191967 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.069371851 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.068973098 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.069035043 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.067606581 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.070730773 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071425491 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076860559 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.071781779 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072576281 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.06484595 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.066738759 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069104278 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.067179564 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.07013061 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.07108084 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074112252 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.071081673 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.069767912 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.067076233 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.077908872 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073999075 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.072583684 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066657865 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.071396529 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.068502684 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070241645 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.069539931 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068877356 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068888886 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.072314091 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069215256 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.067840267 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.205604635 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.073769565 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070007348 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.072028904 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.071507641 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.070176736 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.06483086 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.069986131 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.071862691 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07408202 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.071734514 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069205488 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.0788572 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.067018108 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.06961824 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071811412 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068895993 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.074007687 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.064738685 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.071225236 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069769606 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069618067 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.064691657 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.069393803 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.067098018 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.071960369 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.068476282 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.064209082 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079556604 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.077561461 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.072130528 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068249021 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067712924 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.064792107 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.064194187 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.068481673 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069412918 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.071658797 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.079128665 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.069009071 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.06808788 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.064511591 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069842083 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072075793 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.07278218 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.065973011 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063825997 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.068601826 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.072149162 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.075127788 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067598252 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.068588789 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072269839 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.071077024 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.067464211 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071297357 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.066386136 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.072791396 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081344744 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.069179777 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070469418 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.075269573 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076222204 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.069032514 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.064201796 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.069388954 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.073128651 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069856112 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.069670996 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.069905139 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08410528 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072419962 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.06838839 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.068026218 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.071615241 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.071548604 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.076938718 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069545091 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.069769155 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.07440599 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.07103471 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.076360065 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072538201 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076550028 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.072445797 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.072800758 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.068076962 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070033136 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.067452024 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.068956528 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.06964494 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.069433085 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.073439724 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.075450704 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.06859512 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079193848 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.077193558 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.070502236 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.065709017 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.068710483 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.068057515 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.064112747 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.069469648 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.067037219 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.066604019 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.066780484 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.067678188 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069513138 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072622071 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.069535168 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.06869494 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.067389083 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062559864 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.070166893 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070410099 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068735629 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.19769483 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.06924844 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.069992091 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.0742228 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071863662 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.068248269 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.071476831 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.071565384 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07036553 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.064660049 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.076425941 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067639688 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.070528997 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.068599053 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06906226 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.070138133 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072082696 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072940937 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.070235191 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.071362481 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.073163793 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070577682 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.066545071 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.066576274 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.074294446 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.067019559 seconds)
  done (took 44.137015544 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101190359 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06586893 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064470663 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.064359959 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074175172 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065322711 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064276439 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065515759 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.065924507 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067796322 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.06513946 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.0649176 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072233608 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079157386 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074645536 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068778027 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065022402 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065506491 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.064789502 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065395138 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07268842 seconds)
  done (took 2.791814959 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.074828707 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.078491711 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.07626272 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.084175825 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073283948 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.072342977 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.076732306 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07261635 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.080065949 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074637436 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.079858049 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07223223 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.074306964 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.074320559 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07439631 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072683875 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.08006746 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072996546 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.072119146 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.077201883 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072470455 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.076778208 seconds)
  done (took 2.988511905 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.069303094 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.068449982 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.069417692 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063894185 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.068485562 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.064348365 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.071666108 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.066527511 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.070862981 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.067944131 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.067699343 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067915189 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.070336814 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.064417906 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.06925348 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.066466323 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.107239129 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.070936679 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.068501391 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.069772033 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.064577439 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.07059475 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.064405517 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.064521474 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.067871666 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.070945131 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.069086032 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.06711639 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.06828396 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.067925301 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.068229605 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.066622283 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.070229342 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.069054975 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.068017274 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.06772899 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.068077301 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.071207593 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.064326042 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.066987672 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.069141457 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.065143778 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.069232261 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.070957908 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.066920561 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.066854152 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.070863958 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.06811091 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063971409 seconds)
  done (took 4.699442026 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.079534644 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.109934073 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.069383701 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090376763 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.081397235 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.074633109 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.072759325 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.091283234 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065453238 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.066552795 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.082942974 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.080165326 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067862497 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.072763412 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.074881858 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068305395 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068982203 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06729596 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.071604804 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06788935 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.071415626 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.074906051 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.081909342 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079983631 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071992579 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067340588 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067810373 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.072511205 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.079526151 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.07215856 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.072554185 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073227016 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.082542723 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.073046731 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067369987 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.06995551 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.082908891 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.069044552 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.070798985 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.066162081 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.069608163 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.072103186 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.075137427 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.083345338 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068288483 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.073006202 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067875887 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.06579756 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.079638405 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.070544954 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.075369968 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.080742811 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.07226204 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.068238568 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.07216529 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.082147852 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.068350305 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.066655922 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.070825066 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.079254416 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.066018955 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.071349214 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.080155929 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.070035796 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.074669006 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.080454497 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.072991442 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.071841097 seconds)
  done (took 6.497864655 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.077790144 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.097011575 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084658385 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084045046 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.077371771 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.078456254 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.077637414 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.077605985 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.077498687 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.081188092 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077756904 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.116905018 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.081902898 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.080549745 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.078006799 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.077744577 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.07801515 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07804131 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.077529218 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077954072 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.077825964 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.084241583 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.078132002 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.084551814 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.081270741 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.07353373 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.077910362 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.077872097 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084745425 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.077690175 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.081291725 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.077653373 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.07814783 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.084771721 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.081323297 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.077601152 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068066208 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.077903255 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.077734879 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.07777596 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.073346042 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.084244417 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.078169746 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.073199621 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.077936573 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.077503083 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.084546338 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.080868752 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.080405097 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.081535506 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.077881164 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084428682 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077125647 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.077947226 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.084615689 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.08698776 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.084578779 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.084270103 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077417444 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.08426799 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.083924514 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.087475582 seconds)
  done (took 6.358674454 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083618412 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075140635 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.084107855 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.064648196 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.070049582 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.074700709 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067353642 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.067239761 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.075963887 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.075879412 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078368976 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.075260199 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077235935 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078499175 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.073991242 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077307125 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074663965 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.090367808 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075765019 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.074261774 seconds)
  done (took 2.873690152 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.07646741 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.08514601 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.069013382 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073781899 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.071582861 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072944206 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.07086978 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072167998 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069817642 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071990803 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07789269 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.077930132 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069691604 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073938658 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.07769246 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073319525 seconds)
  done (took 2.547116507 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.083630253 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.075275728 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080648109 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.06906905 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.069016763 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.065081381 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.068274768 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.065322769 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.065028421 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.079911672 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.06892216 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.079035041 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.068286858 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.067683958 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.065403229 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.073737318 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.065085958 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.066322944 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.068128612 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.079806485 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.071800563 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.067162207 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.071611146 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.068394061 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.070294735 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071976748 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.067326607 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.068890981 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.065923406 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.068444517 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.070759813 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.072184073 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.065350265 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.066977465 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.067747633 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.065442592 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.06875513 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.068648905 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.073279667 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.068416418 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.066765725 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.070762851 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.068504515 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.069074238 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.064518625 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.068651935 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.064857087 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.070743248 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065941939 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.070718633 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.068359649 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.070937067 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.068931008 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.075036188 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.0713362 seconds)
  done (took 5.200257196 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081278764 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071532763 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064628894 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067232488 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.071634423 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.069483178 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.07151243 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.06895224 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070046784 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.066786744 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070324834 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.071250528 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069720344 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071693244 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069760307 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07178424 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064326069 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070333637 seconds)
  done (took 2.638334843 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073757449 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068590594 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.075370172 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069108496 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.067843984 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070589996 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064478858 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.067194256 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067314739 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068582307 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068359855 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.070941988 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067160003 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.070770219 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.06848363 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068894725 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.071053763 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067372672 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06852713 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064295036 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.070625752 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067888993 seconds)
  done (took 2.883451597 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.09381529 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.084542596 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.138539259 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.08037074 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.087094957 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.073623742 seconds)
  done (took 1.926221831 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092546618 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102161237 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068190471 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072057383 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077303695 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072627366 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071822678 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07270756 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079352387 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077526764 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072430208 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082370753 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079588287 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079363909 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077432165 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078108804 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072398725 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072567878 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0684655 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084855582 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072293309 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079939364 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072620949 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072074058 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072285568 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079014236 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079446777 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077979363 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072290776 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079743645 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078057177 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07289696 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080122526 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077575454 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071482096 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07955417 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072400081 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084273788 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078125553 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07931067 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071228203 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077421215 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079889707 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076211947 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080439187 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072735952 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076144657 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072571475 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072454012 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086578231 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077797437 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078891004 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077632739 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079818173 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080145399 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086468334 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07764375 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079461714 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077689196 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077432522 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079127469 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077607315 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078715986 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077661606 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077646364 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079159223 seconds)
  done (took 6.485104076 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104641842 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069134742 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0723745 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077871004 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079077483 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072456775 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072817243 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072551258 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072499416 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069559442 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108492869 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072677922 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079413849 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079346642 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073242512 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072625681 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0727574 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078975215 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069484798 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086356523 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072607848 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079420845 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079034657 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079099175 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077924767 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077622431 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072483332 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072353202 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072599346 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072441084 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076154477 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07266538 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078681834 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069418082 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079132822 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073084446 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072030468 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077058001 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072233569 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077464126 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078976424 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084095621 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072293544 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07240157 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077907983 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072235058 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072648983 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069113787 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07220717 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069600375 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078286529 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077986509 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07800688 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078876428 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072648678 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072939492 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072562462 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072524072 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072582628 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077571211 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078682795 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072251433 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086268725 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072501897 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072628854 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079237502 seconds)
  done (took 6.408248096 seconds)
done (took 132.935117182 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.196114945 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.173590884 seconds)
  done (took 1.728773221 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.07077115 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.098865617 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.078389251 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.130643675 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.069009229 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.102476566 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.101050041 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.079168662 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.068691093 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.068807572 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.069289725 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.070875576 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.133660217 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.068886194 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.06883843 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.070941487 seconds)
  done (took 2.728400225 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.099566263 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.157270602 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102474895 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.067221743 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099556002 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.074653588 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.067337942 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.078973065 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.073364816 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.068238714 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.074420316 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.072876917 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.067847717 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.072446133 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.073004811 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.074243131 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.067772799 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.074434856 seconds)
  done (took 2.845584176 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.097852321 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.092339709 seconds)
  done (took 1.573370697 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.155888651 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.135274492 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.200848939 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.331710224 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.156467532 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.148335373 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.144247449 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.14298034 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.114947447 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.138589664 seconds)
  done (took 3.04597962 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.099770858 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.14935304 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.266668776 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.116341598 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.074694616 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.093333765 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.118881225 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.080674653 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.081601038 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.081136054 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.081558026 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.077991796 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099992112 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.076261607 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.077273767 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.07833792 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.103237223 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075681457 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.07678396 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.077817019 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.100919373 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.06903509 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.075401205 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.076001649 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.078883659 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.078714514 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.068718946 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.068825996 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.078268421 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.076864535 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.07889074 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.092144061 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.078710922 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.104166224 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.073600984 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.105413145 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.078558214 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.075408911 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.076948222 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.075369893 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.079867066 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.080145202 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.075138958 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.078522294 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.069172716 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078495929 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.069111719 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.068995873 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.079821003 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.069818092 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.07964088 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078492241 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.10427408 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.070523276 seconds)
  done (took 6.088118715 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.108501546 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.108218061 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072686461 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.114154018 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105986597 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071700907 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.106838917 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.098713592 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.109127792 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072515152 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070608981 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071757591 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081488325 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082824552 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.116575235 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.109070744 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074367892 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.072011305 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.108598104 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.108263634 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071388954 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102338195 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098064055 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.108518822 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.070443752 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071906195 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.0704407 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072247646 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078575969 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.080052537 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070796549 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080764534 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.085100065 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078832224 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069979261 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070926696 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.0709806 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.080301302 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080381636 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.0800778 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.078642801 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070493002 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070856271 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.072342755 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071730988 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069890244 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079377766 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.081025116 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078910266 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070991937 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072331509 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.070622414 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071691972 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080509049 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078157383 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.081651288 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080514868 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070767852 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07072834 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073735347 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081412602 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080499102 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080568008 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071784663 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.081046113 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.073375999 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081610225 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084672146 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070972569 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072022683 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070646493 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070616223 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071721934 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.079134206 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.078830984 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072090484 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071355536 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070977952 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080711761 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079676984 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070326054 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077642369 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069626255 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070056896 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071618804 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.07185331 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077363528 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080326269 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071481779 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070162758 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069998855 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069290176 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.069040875 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.077022327 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078888596 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078299896 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.07782599 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070505173 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077997449 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.210394257 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073152794 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.080210545 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.071849812 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072998567 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072489161 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079107161 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.07843113 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080749954 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071381934 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.070602766 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.079311502 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08216494 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.071008189 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078957025 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080630144 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079624069 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.070114788 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081847973 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071286554 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080703319 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07103163 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081818092 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07063336 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079851727 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.07061821 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.070295799 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070635282 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.080542839 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071788877 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07062453 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071533239 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071043955 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079793843 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083164538 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072131902 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.0790702 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079387557 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.07267698 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079666901 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070511462 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080147622 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071146821 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071730842 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069841507 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082184521 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.07089401 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070658707 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071269715 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081582486 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07094751 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080763197 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078740395 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069636135 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082630038 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081720539 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.078598042 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.081728229 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072245555 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.07071219 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070816521 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070963908 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078198063 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080077518 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072338754 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070471371 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078584461 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.081432988 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.070231903 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.079064065 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079163811 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.07925876 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.071110053 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070621273 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081681943 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081478166 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078955928 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.079456588 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079694743 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071828821 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078730395 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079384989 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070905883 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084866502 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070808938 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.083353798 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079558742 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077472685 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078595063 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080462002 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.080441787 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080694354 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082630396 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06889499 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069334778 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.077723536 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070158628 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069660879 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.076851127 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071240517 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070824434 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.217960272 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072038244 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.082098833 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.070419257 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.081265161 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.07077312 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072055724 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085268517 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071520777 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.07287279 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079651633 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073428343 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.078845399 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081962391 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.079821008 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070637633 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071723004 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080812113 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.080290642 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070669082 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071742103 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071967692 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.079336626 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078896219 seconds)
  done (took 19.047392489 seconds)
done (took 38.450974752 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.191535777 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.143762344 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.156612139 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.111744249 seconds)
  done (took 2.075183104 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.11240725 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.098588976 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.090758763 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.067927284 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.096759493 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.068003678 seconds)
  done (took 1.952497122 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.267808679 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.185053796 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.170013554 seconds)
  done (took 2.040524719 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.192106545 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.179124141 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.421916269 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.257313688 seconds)
  done (took 2.570829699 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.137208193 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.086269592 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.069295216 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.085422118 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.127469302 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.153933674 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.097186949 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.121659894 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.080718595 seconds)
  done (took 2.425808038 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.14140797 seconds)
done (took 12.623767702 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.180409878 seconds)
    (2/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.098494315 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.074555747 seconds)
    (4/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.078325456 seconds)
    (5/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.22889527 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.07017735 seconds)
    (7/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.168379058 seconds)
    (8/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.077730176 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.162538547 seconds)
    (10/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.241371231 seconds)
    (11/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.12333989 seconds)
    (12/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.076229081 seconds)
    (13/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.103517528 seconds)
    (14/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.177176838 seconds)
    (15/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.11084798 seconds)
    (16/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.076059745 seconds)
    (17/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.153040519 seconds)
    (18/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.157667158 seconds)
    (19/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.154604616 seconds)
    (20/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.076426864 seconds)
    (21/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.218676488 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.122387875 seconds)
    (23/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.074621204 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.101101709 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.093208647 seconds)
    (26/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.079918021 seconds)
    (27/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.199223571 seconds)
    (28/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.092635961 seconds)
    (29/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.075412703 seconds)
    (30/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.072824074 seconds)
    (31/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.066398456 seconds)
    (32/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.16715925 seconds)
    (33/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.098981328 seconds)
    (34/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.075503828 seconds)
    (35/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.081786725 seconds)
    (36/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.067198813 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.312245365 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.099197438 seconds)
    (39/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.091869558 seconds)
    (40/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.079002409 seconds)
    (41/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.07556289 seconds)
    (42/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.17212847 seconds)
    (43/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.140310756 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.093723121 seconds)
    (45/309) benchmarking ("sort", Bool, false)...
    done (took 0.145057488 seconds)
    (46/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.097190094 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.068697819 seconds)
    (48/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.075385548 seconds)
    (49/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.185827189 seconds)
    (50/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.14443339 seconds)
    (51/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.122957937 seconds)
    (52/309) benchmarking ("sort", Int64, false)...
    done (took 0.069553699 seconds)
    (53/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.084299917 seconds)
    (54/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.156291428 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.087388918 seconds)
    (56/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.054255057 seconds)
    (57/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.068000915 seconds)
    (58/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.076690004 seconds)
    (59/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.084158418 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.099729859 seconds)
    (61/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.068625631 seconds)
    (62/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.067202119 seconds)
    (63/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.16435755 seconds)
    (64/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.070350001 seconds)
    (65/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.076074882 seconds)
    (66/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.077802632 seconds)
    (67/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.139385868 seconds)
    (68/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.073161159 seconds)
    (69/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.077931825 seconds)
    (70/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.074214488 seconds)
    (71/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.074757552 seconds)
    (72/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.165443488 seconds)
    (73/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.077212326 seconds)
    (74/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.065682895 seconds)
    (75/309) benchmarking ("sort", Float32, false)...
    done (took 0.128842267 seconds)
    (76/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.176305701 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.078349697 seconds)
    (78/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.075706231 seconds)
    (79/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.097815979 seconds)
    (80/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.063784944 seconds)
    (81/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.054168739 seconds)
    (82/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.065249827 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.093415707 seconds)
    (84/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.087025079 seconds)
    (85/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.067382283 seconds)
    (86/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.076029008 seconds)
    (87/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.174864365 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.131938777 seconds)
    (89/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.360709946 seconds)
    (90/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.159871241 seconds)
    (91/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.071188559 seconds)
    (92/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.16805906 seconds)
    (93/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.083411574 seconds)
    (94/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.074309209 seconds)
    (95/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.081771304 seconds)
    (96/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.160937411 seconds)
    (97/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.069949725 seconds)
    (98/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.056426338 seconds)
    (99/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.115731241 seconds)
    (100/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.078501677 seconds)
    (101/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.126356821 seconds)
    (102/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.127306436 seconds)
    (103/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.076094436 seconds)
    (104/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.179934097 seconds)
    (105/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.103737756 seconds)
    (106/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.151379936 seconds)
    (107/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.06959295 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.091651101 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.089781049 seconds)
    (110/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.053945355 seconds)
    (111/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.07899768 seconds)
    (112/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.151226384 seconds)
    (113/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.093389391 seconds)
    (114/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.075843111 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.144720549 seconds)
    (116/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.076294665 seconds)
    (117/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.174276682 seconds)
    (118/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.142655018 seconds)
    (119/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.074804724 seconds)
    (120/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.069260066 seconds)
    (121/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.067737382 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.129251324 seconds)
    (123/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.053920144 seconds)
    (124/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.076100951 seconds)
    (125/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.075217117 seconds)
    (126/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.071391505 seconds)
    (127/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.056264809 seconds)
    (128/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.068413852 seconds)
    (129/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.074432821 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.06880206 seconds)
    (131/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.069278001 seconds)
    (132/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.069338077 seconds)
    (133/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.077049564 seconds)
    (134/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.054289543 seconds)
    (135/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.067168163 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.088384193 seconds)
    (137/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.098113846 seconds)
    (138/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.055999786 seconds)
    (139/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.068176037 seconds)
    (140/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.075065808 seconds)
    (141/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.078549776 seconds)
    (142/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.074587418 seconds)
    (143/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.054948302 seconds)
    (144/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.080407534 seconds)
    (145/309) benchmarking ("sort", Float64, false)...
    done (took 0.129083575 seconds)
    (146/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.057354781 seconds)
    (147/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.114288776 seconds)
    (148/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.145810892 seconds)
    (149/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.075962545 seconds)
    (150/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.121334706 seconds)
    (151/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.136563032 seconds)
    (152/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.069346216 seconds)
    (153/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.054659382 seconds)
    (154/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.141904895 seconds)
    (155/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.15138412 seconds)
    (156/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.069409235 seconds)
    (157/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.172571927 seconds)
    (158/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.080083293 seconds)
    (159/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.151937897 seconds)
    (160/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.067505993 seconds)
    (161/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.075620454 seconds)
    (162/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.098265385 seconds)
    (163/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.101636875 seconds)
    (164/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.1461991 seconds)
    (165/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.054855861 seconds)
    (166/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.054607441 seconds)
    (167/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.066640818 seconds)
    (168/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.056120439 seconds)
    (169/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.071684529 seconds)
    (170/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.075210064 seconds)
    (171/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.073807218 seconds)
    (172/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.066622515 seconds)
    (173/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.091301078 seconds)
    (174/309) benchmarking ("sort", BigInt, false)...
    done (took 0.187915271 seconds)
    (175/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.141839588 seconds)
    (176/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.144640243 seconds)
    (177/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.175290708 seconds)
    (178/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.068674546 seconds)
    (179/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.067607696 seconds)
    (180/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.141066769 seconds)
    (181/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.053775726 seconds)
    (182/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.055427788 seconds)
    (183/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.056101626 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.10906875 seconds)
    (185/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.068961405 seconds)
    (186/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.055320965 seconds)
    (187/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.140926066 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.067689257 seconds)
    (189/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.158765571 seconds)
    (190/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.067740278 seconds)
    (191/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.22485122 seconds)
    (192/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.103982704 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.120314438 seconds)
    (194/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.055676752 seconds)
    (195/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.072167825 seconds)
    (196/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.07560753 seconds)
    (197/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.071949463 seconds)
    (198/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.069934468 seconds)
    (199/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.079967062 seconds)
    (200/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.178307613 seconds)
    (201/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.075905697 seconds)
    (202/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.145787834 seconds)
    (203/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.072870824 seconds)
    (204/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.083540473 seconds)
    (205/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.077972345 seconds)
    (206/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.067531687 seconds)
    (207/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.076751435 seconds)
    (208/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.076253041 seconds)
    (209/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.075067859 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.09184203 seconds)
    (211/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.054982806 seconds)
    (212/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.054770949 seconds)
    (213/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.067039493 seconds)
    (214/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.175891394 seconds)
    (215/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.090141988 seconds)
    (216/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.077108996 seconds)
    (217/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.076030169 seconds)
    (218/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.054468208 seconds)
    (219/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.137424434 seconds)
    (220/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.076289262 seconds)
    (221/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.077738071 seconds)
    (222/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.066443115 seconds)
    (223/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.068075175 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.06867536 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.09121197 seconds)
    (226/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.075425869 seconds)
    (227/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.054888506 seconds)
    (228/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.089312874 seconds)
    (229/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.094512456 seconds)
    (230/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.073661989 seconds)
    (231/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.074742669 seconds)
    (232/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.080647775 seconds)
    (233/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.054590959 seconds)
    (234/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.077700245 seconds)
    (235/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.055761095 seconds)
    (236/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.079835696 seconds)
    (237/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.055659632 seconds)
    (238/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.09101853 seconds)
    (239/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.172038973 seconds)
    (240/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.056574225 seconds)
    (241/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.174982769 seconds)
    (242/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.087372286 seconds)
    (243/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.05505083 seconds)
    (244/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.054672153 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.0688362 seconds)
    (246/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.071376247 seconds)
    (247/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.072685708 seconds)
    (248/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.120871654 seconds)
    (249/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.102986204 seconds)
    (250/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.075829454 seconds)
    (251/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.055149223 seconds)
    (252/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.067082556 seconds)
    (253/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.099753199 seconds)
    (254/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.055554871 seconds)
    (255/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.079861553 seconds)
    (256/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.111477768 seconds)
    (257/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.054602354 seconds)
    (258/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.077011683 seconds)
    (259/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.091612572 seconds)
    (260/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.05765626 seconds)
    (261/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.075043884 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.08812374 seconds)
    (263/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.055130582 seconds)
    (264/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.093949854 seconds)
    (265/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.054533132 seconds)
    (266/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.055907963 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.088847203 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.111422641 seconds)
    (269/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.069534821 seconds)
    (270/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.075818538 seconds)
    (271/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.068121828 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.076416321 seconds)
    (273/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.079891058 seconds)
    (274/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.074329021 seconds)
    (275/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.068661217 seconds)
    (276/309) benchmarking ("sort", Int8, false)...
    done (took 0.145266187 seconds)
    (277/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.067470828 seconds)
    (278/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.083892927 seconds)
    (279/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.054857468 seconds)
    (280/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.066333064 seconds)
    (281/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.094536308 seconds)
    (282/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.055121563 seconds)
    (283/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.069335556 seconds)
    (284/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.070364064 seconds)
    (285/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.068496731 seconds)
    (286/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.138850167 seconds)
    (287/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.068183459 seconds)
    (288/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.053969137 seconds)
    (289/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.053926393 seconds)
    (290/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.054170317 seconds)
    (291/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.164648407 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.08626796 seconds)
    (293/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.065491567 seconds)
    (294/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.070161268 seconds)
    (295/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.056158203 seconds)
    (296/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.090975402 seconds)
    (297/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074651164 seconds)
    (298/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.066469892 seconds)
    (299/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.057342452 seconds)
    (300/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.055097405 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.068232726 seconds)
    (302/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.055384344 seconds)
    (303/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073843625 seconds)
    (304/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.057671485 seconds)
    (305/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.067564401 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.067495548 seconds)
    (307/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.075522015 seconds)
    (308/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.073587782 seconds)
    (309/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.067398929 seconds)
  done (took 31.004960004 seconds)
done (took 32.436193226 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.08884153 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094445131 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.07802701 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.096081176 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.083410115 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.077994579 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.076333537 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.081082206 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.08314011 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.084533852 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.081708699 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.058587446 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.077702113 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.078222921 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.078000006 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092746851 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.081641072 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.076512959 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.076679472 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.067799214 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.076945857 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.069003323 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.070046149 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.058683628 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.081593617 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.075019031 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.077664643 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.076912392 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.068531327 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.068773996 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.072188336 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.077227155 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.068072492 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.082321427 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.076475077 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.076261011 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.077711847 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.079274466 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.069960572 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.06845775 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.077664389 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.068486064 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.075880676 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.076511378 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.075006684 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.073890603 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.076181315 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.079962646 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092315251 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070300496 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.077826803 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.078497076 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.079622822 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.075529487 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.072628182 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.076629923 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.074361261 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092395344 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.076743057 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070781583 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.077055847 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.076379135 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.074209444 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.075811973 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.075854866 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.078971906 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.07959375 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.073540172 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.077540149 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.074562272 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.068637808 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.076335137 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.072340398 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.068204811 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.078823674 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.082565978 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.066905084 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.074094681 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.076072226 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.076544999 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.068248701 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069982725 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.069792405 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.074466241 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070261431 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.057936539 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.072435257 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.075642645 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.067362153 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.076581503 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.075102355 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.075743165 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.069880803 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.080035291 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.067960211 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.073247034 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.068868324 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.068466468 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.070825799 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.072835038 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.067817456 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069702774 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.078337713 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.069437693 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.074333103 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.080244095 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.068026163 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.0753004 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.066953918 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.067195414 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.080603464 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.077513856 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067824784 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070039913 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.066911604 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.074621288 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.066117192 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066837247 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066936124 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.067264596 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.073387091 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.067049997 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069761407 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.213545946 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.08291057 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.068815964 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.072596134 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071139852 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.068685083 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.074350897 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.068258139 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.068559183 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.070107291 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.064663749 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071127667 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.067746264 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.075373522 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069775787 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.075856957 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.069501149 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.07670463 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.073654319 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.074007133 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.073596262 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.067030535 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.063040847 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071131331 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070009851 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.070506939 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.068244187 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.069427287 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.068110453 seconds)
done (took 12.960621671 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.070158964 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.132016223 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.095341562 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.09520711 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.086146056 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.069498108 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.077437301 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.097221519 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.07063982 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.098998644 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088764214 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.087022391 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.111002478 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.068017388 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.068889916 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.073280328 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.070541603 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.082729931 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.098023033 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.088283337 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.11197098 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.068771663 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.092737313 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089357906 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.0880483 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.093582435 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.070186403 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.072955636 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.072871983 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.10159636 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.089959161 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.073171449 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.070149427 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.096742909 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.094400596 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.084613539 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.070513856 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.083888301 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.070223066 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.068835832 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.070567248 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.097749639 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.081382425 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.082573354 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.072913196 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.078642445 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.07062422 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.084052551 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.089700038 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.080368288 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086422644 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.09950294 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.071861841 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.08458543 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.067880252 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.086395219 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.078122659 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.07184012 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.069829369 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.076295865 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.069847883 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.073040144 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.082061604 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.081748848 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.073117476 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.085139296 seconds)
  done (took 6.946482333 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.086241437 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.095839237 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.085265341 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.088332614 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.068464083 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.069842939 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.069564818 seconds)
  done (took 2.092811854 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069959533 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088980102 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089593409 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.090257423 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.082897728 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.092778329 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.078567493 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.069566625 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.093639475 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.070790894 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088707218 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.099299468 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.072686084 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.082333857 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091462268 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.069783582 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.091824422 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.069812251 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072619054 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.091363342 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075240832 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.098229467 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.076210118 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.070426306 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.08316146 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.070036205 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113184 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073919362 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.071843599 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.073065625 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070844488 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.10679017 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.082815368 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.077718503 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069990209 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.083511048 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.083453401 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.072407068 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.080519585 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.077823527 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.083230118 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.070150845 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.070937251 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.070844992 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.07343759 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.078950772 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.07058452 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.073943724 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.072668574 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.088054949 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.068478644 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.082305485 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.072321096 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.074892231 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.07134911 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076067508 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.079468988 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.070726464 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.088090256 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.071133733 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.085067171 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083976574 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.083244966 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.083865196 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.071616447 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.082134402 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.082392455 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.072501638 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071798121 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.073534999 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.084142741 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.068360487 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071763991 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.079663216 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071668743 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.09117099 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.090885121 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071518888 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.082329633 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.069814379 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.06982623 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.070035309 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.090870462 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074892464 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069675202 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073898534 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073526806 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.073025158 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.0694065 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.074290195 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.067807434 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.075515385 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.072998922 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.072652873 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072530796 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.084447578 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.072394458 seconds)
  done (took 9.115749895 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.072428595 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.071399692 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.072046542 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.070662807 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.071260378 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.070994341 seconds)
  done (took 1.98957334 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.091369202 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.07113901 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081149783 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.074380374 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.102825269 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.087593722 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.088312952 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07927889 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084709108 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.080042944 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.088231138 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.089304642 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092781482 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.074843273 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.08825349 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.073896547 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.088598007 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076816717 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.08023446 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.075004055 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.087414292 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.074644046 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074648176 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.083109869 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.07766354 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.074150123 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.080683011 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.080524715 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.080228256 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.07980032 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.074290547 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.077831286 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.073342829 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.079433402 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.088337738 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.073249984 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074230991 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.078935157 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.073950451 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.08023877 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.089280524 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07472925 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.076434981 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.079054774 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.079710315 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.072572756 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.078985258 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.080854326 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.088690051 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.078786351 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.078731214 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.073463481 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.077340697 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.079003382 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.073184753 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.079395058 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.079628349 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.088554068 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.074747815 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.073368334 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.071048486 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.077828364 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078861774 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.078237798 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.079389328 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.079021627 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.073221702 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.0744842 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074806052 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.074018603 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.078715887 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.071780833 seconds)
  done (took 7.250734504 seconds)
done (took 28.9220401 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.535145216 seconds)
  done (took 2.049566394 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.597756679 seconds)
  done (took 2.143697957 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.492274623 seconds)
  done (took 8.030814398 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.362736618 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.466596023 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.700101737 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.136618212 seconds)
  done (took 3.241132237 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.717124395 seconds)
  done (took 2.265073113 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.229299419 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.220783103 seconds)
  done (took 2.013190023 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.37623192 seconds)
  done (took 1.919534304 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.075831979 seconds)
  done (took 2.620173852 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.230986789 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.175874976 seconds)
  done (took 1.961060208 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.450721804 seconds)
  done (took 1.999771582 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.813606407 seconds)
  done (took 6.365554296 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.221052868 seconds)
  done (took 1.806013898 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.235831086 seconds)
  done (took 1.779795812 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.716777919 seconds)
  done (took 3.262995559 seconds)
done (took 43.014326623 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.087016575 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.086691535 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.086729385 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.083786685 seconds)
  done (took 1.865255828 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.079495746 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.074777194 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.078160395 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.07476163 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.078241792 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.075423271 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.076413954 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.077624808 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.07497887 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.075519107 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.075214703 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.075157917 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.077077197 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.076433541 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.073623314 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.077319016 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.077986265 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.074843433 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.077618968 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.074789448 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.07361365 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.076984805 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.077574346 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.074128956 seconds)
  done (took 3.375322532 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.081332799 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.075127145 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.077077412 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.074380631 seconds)
  done (took 1.865049868 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.080672729 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.091347399 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089550026 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.081180058 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092047589 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.087504152 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.071439916 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.071548935 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072804445 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.080251527 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.070824359 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.09631157 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.089388021 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.080120275 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.082246631 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.068331182 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.070491515 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.088755864 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.081447929 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.081003559 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.073180622 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.081012371 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.070723486 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.090367019 seconds)
  done (took 3.496067278 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.088371843 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.101999046 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.082273729 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.091899175 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.093273365 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.067820646 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.088243872 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.093481463 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.124737737 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.068103328 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.073975029 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.068614829 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.076119904 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.068069322 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.083241709 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.11082728 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.111772345 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.071711886 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.099230704 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.068859339 seconds)
  done (took 3.293154718 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075308788 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071681178 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.07314213 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068606563 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.079185643 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.075750426 seconds)
  done (took 2.007658394 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.071691661 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069852213 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.070077835 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069757372 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.074233355 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.069989517 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.069049336 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.070626237 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.06967621 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.06978386 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.069167674 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.068155785 seconds)
  done (took 2.400756995 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.183785351 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.07094047 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.070809191 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.067912289 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.072879473 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.069651598 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082986079 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.070514654 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.092728905 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.06924828 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.069138665 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.071069948 seconds)
  done (took 2.553268691 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195573456 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077471808 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22256598 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148394871 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10848035 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111929044 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111220103 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111220933 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.135214307 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099282058 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158943338 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160799176 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105781812 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133937894 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089812442 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.100926636 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148628284 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159540018 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105497934 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158953051 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139666281 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123835706 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142753035 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100844716 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105174567 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11835032 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.074096011 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081305019 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162840957 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129050197 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139937923 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110821913 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096734949 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169675654 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162597565 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136414085 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144346181 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085001285 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.103896166 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.129582942 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187185919 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088582248 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.300019292 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111004139 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082290855 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129949755 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116290533 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.118136647 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.103870164 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090835379 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141131108 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174111108 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.130681559 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088000505 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121129558 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111354742 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.110026608 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110690986 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170561619 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153893457 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124698976 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.073498298 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110632862 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146442263 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129068806 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.106282995 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.120875612 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094604836 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129575894 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148966512 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120219317 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138298215 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.114112858 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089676986 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118137736 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133839584 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124842094 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155180493 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121956857 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.074920109 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120294858 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099911933 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082365871 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.143847584 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076647148 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166853581 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099398615 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.105573104 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.121020709 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105923635 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10609462 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149405684 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.285655832 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103635206 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.06902983 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104954793 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.117947602 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141166268 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088716438 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106375446 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115081076 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.079989294 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131891399 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.077903153 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121179876 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.077971442 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121341287 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126349509 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.078990369 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119956883 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102678956 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100451229 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129278919 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152664279 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088919664 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082421387 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159878924 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120266733 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.101960299 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137942679 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150384753 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.100132667 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099108527 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143062025 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16488487 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090083032 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157545866 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104958103 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084599126 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087731089 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120993302 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110015632 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.121207457 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082825791 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.116723124 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158482934 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.076084617 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095535197 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13088524 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080063466 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081529772 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104434423 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104001948 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.09602223 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.097768733 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.100823188 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131612821 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.270312671 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107154364 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122123265 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099759596 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160995142 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088873281 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.102466942 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10284775 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.07229761 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.129004524 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1485118 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079729603 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154010384 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.1192917 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114139603 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117093133 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084937837 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133794843 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080407326 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.072491521 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137296853 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108805147 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107808537 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.144958744 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114373979 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.12149056 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.116073303 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1285164 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127098353 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.127143372 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106048292 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.089066689 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110777698 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12520382 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.075496478 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.091192048 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.081589699 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105128868 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096199997 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085059152 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137853095 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120869461 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111853811 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110648769 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096714594 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14102863 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.077696539 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123721244 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.117083543 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095467959 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.145411456 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145088477 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128139265 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.245510636 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134916968 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.073365612 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077142925 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.088922237 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119131254 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085034775 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084175062 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113501144 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141283278 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12565506 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132258085 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120641027 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117939883 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149206267 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.072294963 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.118057345 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140230719 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119012049 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.104335038 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09102838 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098228441 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136925074 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104860314 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170754305 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112116067 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122168344 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149855003 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.101707121 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080622175 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101757507 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12931296 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102910376 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137643236 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098300802 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08896017 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10739081 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.079286468 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098365622 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124379648 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116555758 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132032963 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.113006668 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130627206 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079330366 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112385901 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119010574 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118554799 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.066603168 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116078878 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152645049 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094665141 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114565885 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.296110257 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080931142 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.13465624 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165087679 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139129678 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08619356 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106914308 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119110284 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124417539 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116933826 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133679453 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104317693 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132755498 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107824438 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.085869264 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088069085 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095912482 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102643795 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.093814278 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.103854301 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.111876448 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.09600311 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128040864 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103474317 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108646917 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115776218 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.099072249 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.092861393 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097181287 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167645989 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116348755 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163146988 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.09991437 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.137392034 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155542391 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.0774697 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080810093 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.079936387 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134539214 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086332534 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128147142 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.110316376 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116265215 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121534274 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134692386 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095785274 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.070975219 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107036916 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130304383 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121022756 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098349345 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.101004637 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15313201 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.096364867 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.22915388 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110335945 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114260665 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102909699 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163422163 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.064445533 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105719441 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078459354 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084425947 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122588586 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14555017 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.082339453 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.100024997 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117254897 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111282067 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12333382 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099712828 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110212691 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122527355 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142560481 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123956884 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.091262671 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109234258 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124508025 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150546422 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10204149 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.097722688 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167691154 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146490277 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.152944283 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.087229062 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112194192 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113151351 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107449247 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134913156 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084661756 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156509118 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083444763 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132931284 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102975041 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089635429 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12633931 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.110236437 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089014781 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139924176 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114346296 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083158323 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078789186 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113914234 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116372717 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103048081 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.076102139 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.28674161 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.076857853 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130744736 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154474807 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083053506 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104323561 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095432204 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081221951 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10435522 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101739488 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088162599 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.100239444 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164058461 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.086660498 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142046533 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129867871 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109387004 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131019015 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101491517 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.638956464 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.079054546 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145404278 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113277018 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163716651 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099564334 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115463556 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108405063 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119116754 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139736822 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10243862 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.178154607 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128764671 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.11436252 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080407888 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102354104 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103523685 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088120403 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106647819 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112311976 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11407624 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093393795 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.114328095 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122296443 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.083170672 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096108003 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148954859 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113512375 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138472099 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133526822 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085632092 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115255697 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.288215192 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082130649 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.117009389 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144573359 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105047205 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100126027 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.082780262 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.099107565 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153368655 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.07626329 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1527286 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120689572 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108463194 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110885717 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.108481004 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126932618 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10450464 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119619796 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091646041 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.106120963 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11181251 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08251441 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.078743175 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103972227 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109527635 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.098404069 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097077871 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.100082543 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145444238 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.075368178 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09887643 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113454196 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139030813 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165816809 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.087785476 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083815125 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11860169 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115235873 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.111591955 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119434679 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.081116563 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083463026 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081523413 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.083631342 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.106847707 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112189992 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11334498 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108492291 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154272327 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.08351928 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.223649249 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094707749 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102722941 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.071033398 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078823792 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095465447 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.25065894 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105668331 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111378744 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153719031 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.095926265 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.091142607 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091706533 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.077373763 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084232175 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124264537 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107996856 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116169268 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100847991 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.065540018 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105391008 seconds)
  done (took 58.082661701 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.109722344 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.0844084 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.097470259 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.145304851 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122969879 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.200568902 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.156980411 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.189595788 seconds)
  done (took 2.781443723 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.071075625 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.095639527 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.1040022 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.084839932 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.068756132 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.071067418 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.219088381 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.082730268 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.069428877 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.094803301 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.081159323 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.071910518 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.41595058 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.069096114 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.070419908 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.065527293 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.069914622 seconds)
  done (took 3.469271523 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.377318879 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.6193821 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.333137661 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.079155241 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.98972393 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.092039557 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.222316442 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.136206517 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.079967084 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.544635546 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.408483515 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.131001309 seconds)
  done (took 18.688982383 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.08539362 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.078789946 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.091177939 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.09182283 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.081733814 seconds)
  done (took 2.171017037 seconds)
done (took 107.651917717 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.085072269 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.595410246 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.057554692 seconds)
  done (took 2.3539875 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.089642783 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.087735812 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.087643087 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.085080224 seconds)
  done (took 2.0317196 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.077118358 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.07867362 seconds)
  done (took 1.831215559 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.225275442 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.168373349 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.098245088 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.085161875 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.082510593 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.082887967 seconds)
  done (took 1.934390851 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.075809045 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.078251365 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.075829452 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.078852231 seconds)
  done (took 1.986187265 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.079462349 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.056238014 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.058086427 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.061600722 seconds)
  done (took 1.93462869 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.089160931 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.084815607 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.081948163 seconds)
  done (took 1.93577689 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.101210414 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.089944471 seconds)
  done (took 1.8701632 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.084222166 seconds)
  done (took 1.76501208 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.095000108 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.100049115 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.129101647 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.110551283 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.136309847 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.107635318 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.086473625 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.087139483 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.078823855 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087877487 seconds)
  done (took 2.699154151 seconds)
done (took 22.591285403 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.08045646 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.375352659 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.362750973 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.092173401 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.673024605 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.359634856 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.984679881 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.095609829 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.141035766 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070572851 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088010347 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.653410499 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.97756085 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.33266633 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.965173651 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.332411624 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.653496802 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071820205 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071113029 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071631865 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.971110453 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071342735 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071438338 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072732767 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.654087745 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.375856122 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072292514 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.334086689 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072014734 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073773181 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.359660323 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.090130274 seconds)
  done (took 16.325526291 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.073311694 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.121086384 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075557839 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.086858855 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.073334972 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072673556 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.074489927 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.072221545 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.122584711 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070788562 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088052615 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071010443 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.075112526 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071812586 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090749536 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071333929 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072421661 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072011498 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.0741803 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072178993 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090727227 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071352871 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.07213021 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072176665 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071674638 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083858383 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.07299658 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.072509628 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072828158 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073791787 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075453822 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072808118 seconds)
  done (took 4.205573938 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116546172 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.126108104 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076583178 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.10688699 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113339053 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073333185 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.143809785 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.096416699 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.129455088 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071428741 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088396377 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071489439 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.10451208 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072550348 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.09178012 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072103858 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.073391989 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072417708 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072116823 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072566428 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090829132 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071738083 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072203224 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072690138 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.072109469 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084930337 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072253531 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.072498416 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072269688 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073726189 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075502066 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072631522 seconds)
  done (took 4.45265595 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.075925532 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.077967721 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.086021238 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.087969048 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.072669005 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.075663043 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.076012656 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.072995379 seconds)
  done (took 2.331783443 seconds)
done (took 28.998853146 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.082225972 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.072198342 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.075722026 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.091396569 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.076634246 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.080023492 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.070386093 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.07813217 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.076239092 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.076584853 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.077826937 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.070671648 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.074921205 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.0707137 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.077329395 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.071492491 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.081998461 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.075527352 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.082447152 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.082427482 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.073754487 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.076614606 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.078503774 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.082124236 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.082144859 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.081858957 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.080478942 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.076455738 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.07216593 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.07457899 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.080948474 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.087222538 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.072155991 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.082203011 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.071325464 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.071405085 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.075124561 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.071615872 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.081908933 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.079832735 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.073074639 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.080342694 seconds)
  done (took 4.926306279 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.090692313 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.093403054 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.087363352 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.064711987 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.068563559 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.068351617 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.090985283 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.063034931 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.063201963 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.090248719 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.059734812 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.062780921 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.065904271 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.057750194 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.063381382 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.060856491 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.064939086 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.059389587 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.063599264 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.06336836 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.09116241 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.057853032 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.080149045 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.066348897 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.060224238 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.065395646 seconds)
  done (took 3.537665649 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.077947862 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.086157942 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.091597913 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.144190505 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.113935943 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.080821371 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.081618215 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.095359163 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.096932394 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.070277925 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.074459241 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.095635896 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090367997 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.076766648 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.071302169 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.087604478 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.088365297 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.072568437 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.076082265 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.093678483 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.088670072 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.088354389 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.094056428 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.086733878 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.070550499 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.073242582 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.074765805 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.084771296 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073373124 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.079681043 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.073661029 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073890854 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.072723177 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.0821229 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.073531399 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.072912617 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.096587482 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080835804 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.081818173 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.071839137 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.078314703 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.072285848 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.094969929 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.125941988 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.070422589 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.07651514 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074754973 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.079966601 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.070370767 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096314837 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081797648 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.070778052 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.073904772 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.070399578 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.070599469 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.073607566 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.07278394 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.073192843 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.079416244 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.076860484 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.094829542 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.075890906 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.087136606 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.070843433 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.078942387 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.070203843 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.071781674 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.070233101 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.095714283 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.072653477 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.110618442 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.071829504 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.07179072 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.079330988 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.078508135 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.076993925 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.070895042 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086736418 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.081174582 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.075445155 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078695333 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.074111339 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.07329675 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.099040646 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.073401006 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.072474244 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.071835637 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.076392853 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.073462056 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.071953152 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083151467 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.070375125 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.073561086 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.087192119 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.070609165 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.072289559 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.076188996 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.075212413 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.070593487 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081504183 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.074647691 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.071230672 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079734106 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.070801995 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.073244331 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.081833045 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.076700708 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.069613504 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.074650128 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.075594583 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.071607545 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.071553281 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.072588655 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.072164212 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.078904404 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.076585643 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.074377103 seconds)
  done (took 11.039308634 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.16221069 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.152356906 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.074793843 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.144540981 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.080506344 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.082213288 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.145463166 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095229383 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.071505419 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.071862728 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.071603868 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.110748912 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105800033 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.117081913 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.081294936 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.071366653 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.093535007 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.114825575 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.147811174 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.143548358 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.093495906 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.079336326 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.074882396 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.072621581 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.073211711 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.08084583 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.088026283 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.079903158 seconds)
  done (took 4.538520994 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.08274426 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.103538888 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.077785519 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.092463777 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.092181294 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.070955589 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.073441119 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.073520872 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.087909663 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.081024259 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.071060541 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.075995661 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.078310119 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.074372581 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.072620309 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.078468878 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.078080046 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.072565117 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.074732063 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.076428931 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.082094792 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.09487481 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.075068842 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.073142753 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.07599248 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.070530349 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.06702812 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.086856928 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.072037357 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.094838647 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.068948619 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.076117958 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.084241945 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.072135015 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.071349516 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.071515518 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.070794981 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.070966667 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.073293081 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.069859521 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.069336375 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.061376811 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.070764606 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.081780913 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.083917219 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.060637969 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.075319578 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.075935464 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.076215439 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.068981646 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.073918506 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.074254225 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.07359286 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.07789694 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.07519284 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.076830177 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.072388254 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.076699005 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.079001379 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.071092917 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.068889769 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.069950671 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.075908894 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.06844754 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.08590572 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.075614174 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.069800298 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.070891373 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.072896507 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.084275863 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.071468223 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.075787296 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.068652411 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.073091629 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.075964976 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.073075691 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.072424966 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.069808731 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.071863403 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.071827433 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.059202705 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.071263028 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.057273943 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.073919737 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.069337779 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.069852457 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.070877087 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.075905255 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.081979675 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.072772993 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.07711154 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.072265691 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.070538437 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.074088421 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.063628987 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.073836305 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.08147129 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.084991526 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.07154807 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.069366806 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082805716 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.075765232 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.070724655 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.060046835 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.07520446 seconds)
  done (took 9.595430063 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.092682127 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.072624683 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084955115 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.091268697 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.08893937 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.077964627 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.080198805 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.072594036 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.086623278 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.076963861 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.07965202 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.071157043 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.081118501 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.080441638 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.072837359 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.080771355 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.074709554 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.085863698 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.085099663 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.071385129 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.079614566 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.083315908 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.092167289 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.083438969 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.08196177 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.08367126 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.092869697 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.080395237 seconds)
  done (took 4.038904684 seconds)
done (took 39.377924414 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.815460987 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.9562775 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.784678337 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.11773052 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.868869572 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.980989327 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.866970407 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.786435845 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.967354532 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.817614435 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.114227266 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.849472202 seconds)
done (took 65.772427861 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.845632567 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.924020168 seconds)
    (2/2) benchmarking "String"...
    done (took 2.019723238 seconds)
  done (took 5.65307226 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.005939825 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.352979597 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.025082633 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.777280598 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.78391811 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.076240559 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.583180362 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.302858098 seconds)
  done (took 30.612819258 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.934230839 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.00293464 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.47611273 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.514759241 seconds)
  done (took 15.689706683 seconds)
done (took 63.604865595 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.769088216 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.796700388 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.815834555 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.766149197 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.837091642 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.797441982 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.295843578 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.874949647 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.780045056 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.765434822 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.780986148 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.206158484 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.797593591 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.27049813 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.777337643 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.789143848 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.817959697 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.305684609 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.935909768 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.798343543 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.792900858 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.922092209 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.783976363 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.786833867 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.787004143 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.780291467 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.18614442 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.782376484 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.402285192 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.776546762 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.812450063 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.26986687 seconds)
  done (took 204.772795289 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.780827219 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.771385531 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.836623926 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.791454456 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.236626509 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.961645459 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.883263277 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.281129147 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.786629709 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.798116652 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.007315474 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.785629786 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.037007172 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.728604306 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.805150148 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.779240464 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.016619281 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.055500396 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.818834792 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.94556171 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.805631969 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.882828427 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.814404211 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.950469036 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.790855849 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.778067717 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.792209966 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.800963499 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.97280133 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.910372796 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.821084846 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.815744763 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.97244463 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.639598087 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.781403215 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.790196984 seconds)
  done (took 170.138433558 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.971504052 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.769456272 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.7675151 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.768347811 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.770020676 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.775541262 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.773861775 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.891981226 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.895100255 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.385416073 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.39393092 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.820993253 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.768539169 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.571343703 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.766790535 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.839379571 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.781986314 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.77023647 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.783208055 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.795182043 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.772622887 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.770954478 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.895353224 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.784052017 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.768640155 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.776731914 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.770212411 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.777254446 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.14117927 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.771585876 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.762070621 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.770710234 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.777306215 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.011975337 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.772102848 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.771489907 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.621803851 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.303884593 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.860690022 seconds)
    (39/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.768081909 seconds)
    (40/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.769469865 seconds)
    (41/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.77353838 seconds)
    (42/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.767473442 seconds)
    (43/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.983811937 seconds)
    (44/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.769368008 seconds)
    (45/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.767986377 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.769165869 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.770571254 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.914698916 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.763260102 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.890040967 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.765647831 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.248735306 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.763684469 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.764066064 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.607686051 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.593700798 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.759205468 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.763155721 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.758381529 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.759929862 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.773107444 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.683770719 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.837983931 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.761854079 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.759660269 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.764865794 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.756488684 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.874569112 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.762152552 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.07444 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.812859482 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.881040664 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.878321865 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.758094117 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.82159934 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.849449696 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.755315347 seconds)
    (78/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.75562695 seconds)
    (79/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.753775488 seconds)
    (80/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.753827977 seconds)
    (81/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.755283634 seconds)
    (82/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.755000757 seconds)
    (83/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.834200703 seconds)
    (84/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.752793956 seconds)
    (85/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.917858774 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.762857656 seconds)
    (87/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.752459502 seconds)
    (88/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.80395455 seconds)
    (89/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.821082229 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.751725482 seconds)
    (91/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.60232699 seconds)
    (92/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.75383523 seconds)
    (93/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.754802242 seconds)
    (94/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.020450309 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.815035972 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.753127598 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.750632151 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.892260912 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.873826766 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.453037853 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.752957948 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.523702364 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.899104438 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.749259974 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.895994698 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.751764936 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.828819618 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.752459416 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.751141599 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.779399049 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.747729475 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.806228832 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.748102466 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.119172019 seconds)
  done (took 400.933342257 seconds)
done (took 779.583098656 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.336426155 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.312008861 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.413077017 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.329787701 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.299834091 seconds)
  done (took 13.371229173 seconds)
done (took 15.05266785 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.839630418 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.841534641 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.771611754 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.838701202 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.768270837 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.838207321 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.822712759 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.772463746 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.805231468 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.772863601 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.808896103 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.772381871 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.761048329 seconds)
  done (took 25.09380604 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.984142974 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.998927675 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.819548074 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.320599442 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.796186901 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.99127024 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.914769401 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.913423793 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.90320178 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.763865978 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.759977387 seconds)
  done (took 22.847086516 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.989161158 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.996712946 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.82588282 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.993769467 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.797814305 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.989097893 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.913593657 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.907676338 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.902759213 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.764509263 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.760231434 seconds)
  done (took 22.521328072 seconds)
done (took 72.142456879 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.756457265 seconds)
  done (took 3.436580879 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.782021127 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.948768996 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.760823281 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.758386278 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.754414108 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.755563562 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.758753761 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.755435434 seconds)
  done (took 15.955300665 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.751608791 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.750935791 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.750486624 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.752889035 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.754511911 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.753301496 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.752262688 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.753691966 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.754567269 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.751231604 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.754982257 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.75312185 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.753874914 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.753653348 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.752112603 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.754837682 seconds)
  done (took 29.728661546 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.753426002 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.751526597 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.752200188 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.752032017 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.751165965 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.752789206 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.754058504 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.75244987 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.751979175 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.751690673 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.751851031 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.751833591 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.753313603 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.751325308 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.752556096 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.752544183 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.75203768 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.752631502 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.756665855 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.752378595 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.752441225 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.751228315 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.751918227 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.753181612 seconds)
  done (took 43.741569476 seconds)
done (took 94.541075476 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.52204254 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.386208096 seconds)
  done (took 9.588380316 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.757661472 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.754098736 seconds)
  done (took 5.257654046 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.756444303 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.753904398 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.75557235 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.754619612 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.754015814 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.754063478 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.755561278 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.754878624 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.75418723 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.754640753 seconds)
  done (took 19.228168645 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.755353406 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.754677695 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.7529893 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.755112221 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.754940904 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.75258081 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.75578784 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.755685643 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.755365035 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.752071105 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.755504814 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.754369513 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.757151872 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.753908953 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.755173954 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.752899407 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.752513366 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.753158882 seconds)
  done (took 33.260988105 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.755304693 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.755410999 seconds)
  done (took 5.193729805 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.752690335 seconds)
    (2/7) benchmarking "second"...
    done (took 1.754258106 seconds)
    (3/7) benchmarking "month"...
    done (took 1.753180194 seconds)
    (4/7) benchmarking "year"...
    done (took 1.752901053 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.752558979 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.753686211 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.753067711 seconds)
  done (took 13.953888931 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.757687178 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.897842528 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.964833216 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.411593204 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.756962514 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.758360656 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.718896118 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.759354233 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.760606223 seconds)
  done (took 19.468986868 seconds)
done (took 107.631636437 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.62711848 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.752938413 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.007728316 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.807543224 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.806296709 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.095733899 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.768131088 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.037527866 seconds)
done (took 42.586992623 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.830819708 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.430090268 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.479186641 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.779669215 seconds)
  done (took 15.373475763 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.735253774 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.043074091 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.759539279 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.60888535 seconds)
  done (took 21.833264836 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.121546563 seconds)
    (2/2) benchmarking "read"...
    done (took 2.101239387 seconds)
  done (took 5.908912763 seconds)
done (took 51.629015008 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.756714999 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.755853643 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.757760944 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.754294427 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.754240309 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.756627049 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.754807685 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.756425608 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.758080285 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.757128795 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.753903695 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.756410098 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.756368614 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.757725345 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.754107267 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.7550771 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.75678055 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.754597566 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.755094254 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.757616472 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.755757034 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.758406518 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.756017843 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.755804023 seconds)
  done (took 43.828471774 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.757988315 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.755890641 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.758740777 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.757833922 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.755517427 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.757146805 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.757432382 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.755976911 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.758125566 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.758008376 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.757296779 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.756967801 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.758269041 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.756922702 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.758795447 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.757048971 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.75871134 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.757781691 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.75832199 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.756289889 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.75855497 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.756325674 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.757955065 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.759050729 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.756791038 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.756441462 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.759107498 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.757720235 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.759484236 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.756595298 seconds)
  done (took 54.412384612 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.761745665 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.764469574 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.760057501 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.75944301 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.759464533 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.759222116 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.760052906 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.761425101 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.76050803 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.759761752 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.759762472 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.75927963 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.759663391 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.759495142 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.76118427 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.759625022 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.759968312 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.759684497 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.759835857 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.760407607 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.761695457 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.760198656 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.76062981 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.760912278 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.760040348 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.762313919 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.761699332 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.76057037 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.76128704 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.761870584 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.761575819 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.762078959 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.763112639 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.762633802 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.761937459 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.761650805 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.765810458 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.769149937 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.762225749 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.76268103 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.760811837 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.763164637 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.762682548 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.762009977 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.762280918 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.762648308 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.763013872 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.762139386 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.763009858 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.762470063 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.762357483 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.763474964 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.762283734 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.76234848 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.763900594 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.761112462 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.763144845 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.762867591 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.762946452 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.763715465 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.763305879 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.763087065 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.76351083 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.763127966 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.764119272 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.764116229 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.762842266 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.762243463 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.764010364 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.763195524 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.763176294 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.765063856 seconds)
  done (took 128.550431874 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.762858267 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.761199777 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.761751844 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.760263081 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.761449359 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.763577618 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.762142071 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.764313206 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.760908858 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.765259046 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.764688951 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.760917076 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.761507448 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.765094693 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.764091637 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.76413894 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.764354043 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.7618936 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.764118663 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.76443498 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.765067203 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.764939308 seconds)
  done (took 40.479146118 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.764192291 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.764361664 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.762788646 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.765612377 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.761166164 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.764251051 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.764481135 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.764410679 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.766026533 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.76386507 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.763096635 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.763805155 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.763070311 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.76259388 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.762257617 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.764079992 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.765469868 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.762598071 seconds)
  done (took 33.438796099 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.762496507 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.764265876 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.765657295 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.763350455 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.763782245 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.766561054 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.76318833 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.767217231 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.765606407 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.763031482 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.766841516 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.766176465 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.766488471 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.76388981 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.766812346 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.762353629 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.76640089 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.763731277 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.767644366 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.764454834 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.76508592 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.766708567 seconds)
  done (took 40.523702627 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.765647715 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.768325682 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.763760885 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.764118926 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.763131065 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.767464542 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.766952104 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.766643527 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.768140264 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.767151158 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.764401082 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.766681063 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.766750689 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.766845337 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.764822413 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.765092749 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.768135214 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.764671684 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.768976551 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.764590728 seconds)
  done (took 37.015831708 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.768317101 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.768897024 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.768772379 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.769740491 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.769503765 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.76994734 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.769225451 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.771166208 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.770495744 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.771213141 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.770770657 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.77060498 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.770170297 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.770961436 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.771944603 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.770984932 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.770836166 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.771860125 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.770404623 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.770813332 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.772967395 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.771155994 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.77117024 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.770623034 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.771511866 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.771894371 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.770554281 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.771047887 seconds)
  done (took 51.272140031 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.769981593 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.770935389 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.768162794 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.767256019 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.767723415 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.768554602 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.76914044 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.768721952 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.77100516 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.768866788 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.771329631 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.771156347 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.770743081 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.771020704 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.770464111 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.770980981 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.771319892 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.769402813 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.770699924 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.769892026 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.771004081 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.771291168 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.772433503 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.768865257 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.769731759 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.772004338 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.769088265 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.769347541 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.771812648 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.769575568 seconds)
  done (took 54.799235861 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.790478645 seconds)
    (2/2) benchmarking "in"...
    done (took 1.789280295 seconds)
  done (took 5.278445832 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.769340742 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.772287383 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.772701821 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.768526168 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.769610963 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.771779628 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.772177609 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.770193212 seconds)
  done (took 15.864051223 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.771886356 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.772507868 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.772133271 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.772025278 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.774513244 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.772972852 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.779955491 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.77307419 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.775102355 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.773318022 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.779570597 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.778437888 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.775885678 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.773489565 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.77368006 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.775620715 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.774047008 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.773745228 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.774614725 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.773781799 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.775097158 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.776826725 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.775777969 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.771423516 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.775250196 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.783080081 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.777844986 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.773998145 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.774507866 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.778358186 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.774025575 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.770829636 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.776008848 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.775535836 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.773701518 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.774615541 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.783033254 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.775025915 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.782400997 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.776689406 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.774695573 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.771650034 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.776265613 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.776911603 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.776912583 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.775942205 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.775380567 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.772250692 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.776741165 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.778674029 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.779167865 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.775266594 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.772536042 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.77998167 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.777172325 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.784942956 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.776719858 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.778260822 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.782186575 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.784510204 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.789020489 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.782940692 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.777637052 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.777504899 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.785851557 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.794543624 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.783551199 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.774095966 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.774053494 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.776431993 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.783977828 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.788466225 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.785715919 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.777372448 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.778108764 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.776825876 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.777970428 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.778523442 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.783774883 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.781162063 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.778850325 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.778208382 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.787200375 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.795583533 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.775921405 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.7788065 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.778379435 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.779672461 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.77783485 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.788761581 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.779002444 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.776806858 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.778399236 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.778243078 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.78000736 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.778914943 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.77584385 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.777918971 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.776249364 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.7781923 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.779013534 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.780698057 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.784132736 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.779077114 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.778560047 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.785970045 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.779233086 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.778581131 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.785309354 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.777948132 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.780608052 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.781147794 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.78313519 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.775367297 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.780204789 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.7855241 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.778846248 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.781004264 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.78076909 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.778007996 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.7880288 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.800062609 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.779959152 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.778606909 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.783587228 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.788707965 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.779907975 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.78312526 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.781399135 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.777422908 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.776317234 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.781434846 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.781170625 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.780734108 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.781583869 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.781786325 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.78070057 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.781163451 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.780424636 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.782565367 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.782342887 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.780754945 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.783107796 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.782607751 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.783302349 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.783471062 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.787734977 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.781386683 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.781790205 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.781912377 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.779659041 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.780533473 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.782154912 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.781874844 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.781853587 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.782347626 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.782499978 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.782446321 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.781284506 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.782274956 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.780972182 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.781963015 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.786452294 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.783150576 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.784698835 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.782375654 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.780166184 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.781821985 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.780857061 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.783200381 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.781764961 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.781974186 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.784596042 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.790490202 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.782211314 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.782638005 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.784721038 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.78464666 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.784156437 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.782626642 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.784327997 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.790051688 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.78338359 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.789491213 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.784638624 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.782886669 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.78263557 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.782839188 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.781996 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.783305343 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.786472515 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.788385364 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.794702212 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.789294673 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.784549957 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.786992277 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.783616919 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.788325586 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.787402104 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.784361717 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.78423079 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.78649929 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.784394312 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.783937413 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.785732649 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.785833183 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.784009828 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.784945857 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.784009894 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.78529713 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.782958781 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.784769729 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.785545248 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.781899816 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.78500309 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.785560176 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.785469738 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.782225644 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.785368093 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.784934427 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.784376921 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.785516491 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.79198468 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.782269219 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.785966732 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.787384577 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.785968748 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.785603546 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.785578146 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.788216938 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.784631666 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.792341865 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.786630077 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.787499585 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.792799074 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.785834137 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.784505192 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.78791897 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.786213588 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.782695237 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.789207358 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.791398613 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.785017104 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.786819881 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.787219721 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.786079914 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.786040931 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.792329295 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.784049416 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.785753442 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.786504243 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.790107953 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.784922295 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.788351026 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.787239901 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.787033713 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.789299968 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.788724221 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.78735022 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.787361124 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.78803307 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.788391763 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.788195741 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.789569099 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.79362377 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.791714222 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.787756817 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.789734368 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.788570699 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.790856871 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.787603395 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.788583224 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.789829637 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.799795059 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.795403476 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.795620678 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.789205828 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.787788747 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.793915189 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.79053728 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.791065082 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.788724573 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.788921297 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.787674548 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.787523871 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.785582139 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.789148542 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.788592369 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.789646137 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.789364046 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.791205857 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.788655144 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.789933454 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.788249798 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.790021296 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.788096204 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.790006473 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.789172163 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.791279179 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.790456498 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.788598066 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.789069729 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.795323103 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.790278081 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.791153608 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.789683922 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.789864606 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.790517163 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.791096238 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.790740337 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.792288369 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.796017132 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.793405239 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.798887099 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.790953324 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.799902001 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.790984511 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.793487165 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.796675705 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.786959333 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.789497928 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.791493711 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.792210222 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.798898469 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.793384902 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.791661065 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.795076309 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.790856594 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.791466794 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.790074033 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.790646407 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.791428293 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.792131634 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.799995145 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.793206356 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.794606752 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.793696833 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.787962366 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.791652379 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.791198134 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.792186124 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.795374953 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.792486213 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.791851866 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.790962497 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.792511938 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.791576191 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.791908765 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.793353239 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.789779887 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.790630572 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.799285601 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.794076836 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.796613381 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.791398637 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.800777102 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.793359547 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.798914023 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.796008884 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.791788195 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.795134703 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.794084806 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.795923477 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.792607578 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.794523592 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.794573669 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.79382407 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.795324232 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.795045128 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.795480956 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.793039035 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.794055389 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.792579769 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.801382071 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.81494013 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.794223898 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.797136568 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.791130137 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.794409961 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.796918168 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.79388728 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.79344073 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.795243245 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.801799456 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.799954907 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.794519509 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.796754555 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.795289648 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.796701056 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.792292968 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.794957244 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.796922751 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.794939668 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.795419578 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.797315737 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.800154247 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.79576076 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.795560218 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.795527768 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.794955757 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.802947026 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.796092462 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.797708578 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.797091637 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.796527523 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.797460746 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.795714982 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.795958015 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.7979346 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.798125977 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.79748443 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.802095223 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.801330072 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.799509193 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.797977634 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.797566665 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.796251074 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.797778233 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.798319713 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.798974687 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.796258891 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.798446726 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.797298638 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.799232013 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.796833104 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.796483742 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.79813432 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.796554775 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.799488328 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.802896153 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.797272196 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.795400225 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.796179197 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.798234616 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.795354787 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.797338702 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.8045293 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.800683141 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.805837191 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.804035193 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.802287456 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.798502757 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.800068734 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.804977575 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.798335453 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.798646407 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.798090798 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.798673718 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.799472905 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.800078139 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.800107675 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.805255197 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.799163443 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.797956077 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.805740865 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.79881587 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.79936916 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.799531314 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.801266568 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.799081941 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.795838218 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.798210157 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.798327078 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.805454224 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.798746858 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.800947093 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.802196694 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.797912751 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.801477495 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.801995639 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.798076573 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.799697484 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.796740762 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.800553649 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.800390889 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.79969314 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.796370865 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.79898455 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.799571731 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.801507013 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.805456432 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.797037668 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.802375952 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.80015398 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.800716475 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.800987774 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.798904868 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.799287891 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.796931966 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.799578275 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.801505428 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.800660049 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.802657188 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.799818221 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.80078224 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.801237215 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.803665657 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.802441742 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.807882305 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.805039452 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.797777273 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.800988661 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.802148132 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.804289426 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.802892625 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.802722248 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.800876444 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.805195505 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.801651536 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.801415517 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.800328605 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.803621867 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.816781391 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.80135274 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.800859668 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.801486922 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.806505725 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.801386161 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.79776097 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.801979873 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.804325291 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.806059612 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.808628302 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.803089055 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.809634868 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.801662384 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.803141414 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.805065201 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.805613298 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.808888215 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.804725724 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.80184868 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.802314661 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.805621832 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.816820011 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.804358548 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.811499621 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.827064964 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.802830201 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.805122061 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.803907114 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.802181242 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.803985645 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.805607142 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.805321408 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.80187768 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.803326574 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.804051815 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.80331825 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.808657072 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.805723638 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.802290866 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.802569278 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.802916447 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.805441329 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.799183537 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.80412066 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.804877741 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.804964101 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.803543752 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.80437063 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.804870537 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.816344753 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.811935633 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.80493207 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.806166127 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.800588822 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.807068805 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.807107316 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.81283987 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.808984341 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.805398689 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.80579266 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.80715713 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.807221794 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.801837546 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.807385079 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.804682046 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.806337363 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.802262579 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.818520327 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.812783309 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.81034309 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.80644936 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.80700629 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.805663317 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.805918049 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.807265841 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.806736555 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.806929173 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.806219819 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.807945659 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.803827333 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.806139325 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.808561016 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.811216175 seconds)
  done (took 1069.280767744 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.803230615 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.803249877 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.803323902 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.804392561 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.804746249 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.80396926 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.802754917 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.803427504 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.803181362 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.803871246 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.803096871 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.80283963 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.803486821 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.80278271 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.804050674 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.802993687 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.805456815 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.803359802 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.804892049 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.803590299 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.804379607 seconds)
  done (took 39.606618968 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.806048066 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.805105691 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.803112779 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.806651831 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.805497748 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.806718059 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.803844728 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.807797824 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.806337621 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.804529732 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.807010223 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.80842459 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.806125215 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.804929754 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.803614626 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.806583393 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.808871263 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.80538165 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.807322807 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.804359186 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.806969825 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.804313474 seconds)
  done (took 41.460769249 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.808351645 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.808944334 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.810128747 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.807773334 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.807780861 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.807159194 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.807056332 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.807253233 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.807449048 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.809491353 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.807731884 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.810229394 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.813413021 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.812639547 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.8114299 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.810075477 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.950777051 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.808943682 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.809805539 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.809310205 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.807965879 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.814160908 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.805221039 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.806858329 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.807602502 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.810101861 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.81017259 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.808867908 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.810556576 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.811100891 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.81300304 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.809843456 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.810465481 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.812067173 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.809466778 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.810182915 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.814014814 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.810890031 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.807681322 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.811123111 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.817785132 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.825028277 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.810657286 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.81612708 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.809945025 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.810530551 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.812105208 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.816683515 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.810233103 seconds)
  done (took 90.589682824 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.810442243 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.810792003 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.809120757 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.810528949 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.811210569 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.810846911 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.810975588 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.813107012 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.808167142 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.809373872 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.811251485 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.808894166 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.80814317 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.811195416 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.811900941 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.808686541 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.808706559 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.808188573 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.807759197 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.80817195 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.810120258 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.811536618 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.810182374 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.809191766 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.81081244 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.809740051 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.808868572 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.811110739 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.808123594 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.808602088 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.812051884 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.813944263 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.810895554 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.808859031 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.810912405 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.812747288 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.814548495 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.811662702 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.811994527 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.809429327 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.812906688 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.814081919 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.812698209 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.812544157 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.809338951 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.810839985 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.810156552 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.811514867 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.812074864 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.813135011 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.813499328 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.810641302 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.81290903 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.809698034 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.812632499 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.814228437 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.809778157 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.81085749 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.81392535 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.813199208 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.809563237 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.81247916 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.81065972 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.813572381 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.815850842 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.811504157 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.811653602 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.815013496 seconds)
  done (took 124.890751899 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.815366021 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.815623007 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.814436548 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.815183242 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.815372047 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.815904524 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.816424373 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.814793571 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.815994818 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.814624977 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.814743609 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.814328091 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.817448363 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.81487724 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.81553104 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.815515964 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.814921951 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.817049188 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.815728303 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.815533442 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.817099232 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.817004629 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.816428317 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.8161221 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.817663928 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.816681883 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.816963651 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.815449474 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.815851042 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.817547072 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.815831917 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.817301014 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.81687969 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.817522169 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.818416022 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.81704409 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.816555542 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.817424736 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.816443765 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.819707172 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.816691756 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.815996975 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.816822794 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.817342493 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.816838677 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.818198321 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.817696418 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.819638395 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.816942451 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.819204955 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.819280879 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.818221444 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.817520377 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.817299771 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.817881686 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.818655602 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.819650897 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.818683399 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.819003537 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.818869193 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.819314342 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.818338258 seconds)
  done (took 114.38719732 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.818316373 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.817592767 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.813578291 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.815954581 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.819281966 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.814626613 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.818038072 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.817363253 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.816720568 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.818240008 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.817703469 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.815372878 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.816023358 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.817976677 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.814024699 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.81678084 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.816557809 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.813933563 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.818557504 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.815925123 seconds)
  done (took 38.074203455 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.81770412 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.817261949 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.815031848 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.815324083 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.817871807 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.817358686 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.818734733 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.820848585 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.815758471 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.818123085 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.818415973 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.819525914 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.815915278 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.817959884 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.819449857 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.81686496 seconds)
  done (took 30.823595048 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.817321166 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.821258727 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.819056212 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.819994065 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.817502047 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.818316949 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.81935908 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.81633717 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.816483187 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.820247514 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.820128157 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.81857718 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.819391245 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.82179812 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.818066331 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.820787157 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.816986364 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.819052146 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.818804063 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.821040831 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.819580285 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.818470727 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.8207593 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.819791911 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.817060195 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.81835814 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.816795344 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.816870357 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.816953735 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.821009033 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.818600067 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.818460322 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.817396367 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.81786726 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.821220065 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.818909313 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.82046299 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.820675841 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.822430454 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.820062864 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.823447909 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.81876871 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.820401508 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.822931668 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.819338678 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.820316214 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.818233107 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.819880236 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.818115979 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.820709751 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.82014225 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.823558634 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.823172192 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.821908675 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.82259056 seconds)
  done (took 101.822273842 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.82141683 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.823775032 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.820303467 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.821444082 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.824489221 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.820242148 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.822020502 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.821427643 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.81993291 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.824183496 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.822335011 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.822754117 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.820174824 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.823005986 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.821031682 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.824639185 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.820296154 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.821503804 seconds)
  done (took 34.541371668 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.822258188 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.823861892 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.823890629 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.820826344 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.822824506 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.824579074 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.823190096 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.825539979 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.825225203 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.824697916 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.822799855 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.82811456 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.825861623 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.82690078 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.822864846 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.824476807 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.825880338 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.824434548 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.823025636 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.822176978 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.826439927 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.825083701 seconds)
  done (took 41.882245846 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.824205274 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.824246252 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.841463169 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.842936645 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.846312224 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.85604059 seconds)
  done (took 12.785353988 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.821440573 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.827306762 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.822766335 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.825270644 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.825022296 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.823926037 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.822888082 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.82270947 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.829368947 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.823655138 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.824577132 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.826944161 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.826138103 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.826491903 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.828418704 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.826269621 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.826790037 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.824748869 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.825425544 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.828962018 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.826132497 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.829287794 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.824229418 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.824609878 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.822830097 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.825538264 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.825506703 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.825681267 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.823726916 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.826132257 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.826633329 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.825475483 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.82912022 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.826704934 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.825699995 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.827801901 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.823143155 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.827239784 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.829117022 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.825057274 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.82717395 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.828681086 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.828718924 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.825044625 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.826607138 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.825965898 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.824940631 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.824589798 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.826817889 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.828333963 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.827184676 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.824518984 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.828537962 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.828596194 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.828636428 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.831018576 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.82557429 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.826911663 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.831824661 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.826436608 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.82567405 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.829396721 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.825827028 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.828211478 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.832195308 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.826749237 seconds)
  done (took 122.294819868 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.826780279 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.829287915 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.826379165 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.831683167 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.8275007 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.829193902 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.826172711 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.827045453 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.829427732 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.828224813 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.829585828 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.828518811 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.827493869 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.826960682 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.827782175 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.828723055 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.829764325 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.827921728 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.827492282 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.830803301 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.829179295 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.827896255 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.828763433 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.828119935 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.828163762 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.83054563 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.828026066 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.826801784 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.829570896 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.827375401 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.828048954 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.828161721 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.827259464 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.82782759 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.82978176 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.82910295 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.829291591 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.830023316 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.82683281 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.830496241 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.831047344 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.830783515 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.829892171 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.829232442 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.829293462 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.830272226 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.830528992 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.828087572 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.829627832 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.830292579 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.829001917 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.831157425 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.830914662 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.831379773 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.829438023 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.830145121 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.830306456 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.83184696 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.830471082 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.832278658 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.829822998 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.830857419 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.834336252 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.829956821 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.829996618 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.82982883 seconds)
  done (took 122.483488571 seconds)
done (took 2492.071366414 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.874909913 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.844063264 seconds)
  done (took 15.476248629 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.99619209 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.94875542 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.830388326 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.844076955 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.83071495 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.854345433 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.827349464 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.831970571 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.831872163 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.830473496 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.833182483 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.016673816 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.886187602 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.832616904 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.83299908 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.925547604 seconds)
  done (took 51.710733269 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.836125845 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.839443816 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.849457759 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.840116708 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.834338572 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.847161321 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.868066845 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.840524649 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.869214089 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.84780851 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.901235022 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.844407882 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.835803586 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.885309795 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.847822974 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.851254636 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.92551046 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.90669012 seconds)
  done (took 35.228974206 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.909112956 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.837459911 seconds)
  done (took 10.510018259 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.855232283 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.857109237 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.897299472 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.86445324 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.848514407 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.845056145 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.856307624 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.858721593 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.845087295 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 7.044543716 seconds)
  done (took 70.53106196 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.850845215 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.843708821 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.845909172 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.842336106 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.837976392 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.840640808 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.844063738 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.838837455 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.521160742 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.896154247 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.851557293 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.848910199 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.843670978 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.847319506 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.841725727 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.868933593 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.963798148 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.842867937 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.840615517 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.849023046 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.845612267 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.900990667 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.861058435 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.847575571 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.874047818 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.513162953 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.855087098 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.851805256 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.94280386 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.842885438 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.844659789 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.845297493 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.848241025 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.240812851 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.108326954 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.845989645 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.859685972 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.852469842 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.843743675 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.959091771 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.846459153 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.851697807 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.619371766 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.086958657 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.94510367 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.887442489 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.164151923 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.864678891 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.848845036 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.875292665 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.849067212 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.846149363 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.857045023 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.340217196 seconds)
  done (took 130.997953619 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.842356046 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.193695751 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.011156227 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.843012422 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.13122172 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.05162428 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.84539617 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.890511441 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.846315742 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.078268052 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.097945856 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.951079306 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.84577741 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.843162708 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.842571808 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.840091062 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.002780049 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.920882916 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.845042276 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.839518306 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.872397433 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.091616875 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.967587109 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.847044414 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.87356208 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.05994668 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.969287801 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.952193054 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.626637901 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.841093508 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.909337646 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.845037774 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.841097817 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.841646779 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.004668343 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.943724783 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.934193194 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.84580696 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.846171206 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.844128118 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.518128398 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.047273344 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.945041894 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.989166406 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.047337006 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.05553171 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.628699126 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.843480816 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.595013227 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.014480667 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.075687484 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.082900647 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.970773113 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.849969272 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.096413737 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.843920182 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.841766399 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.099476801 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.994273784 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.946985675 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.848727977 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.846113846 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.842558546 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.096621439 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.847934981 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.94623821 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.84694753 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.846213618 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.945662844 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.95076269 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.986049727 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.062871914 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.879954225 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.800479848 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.383636161 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.0982118 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.915788344 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.101118686 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.851861519 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.847640667 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.928552361 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.68638603 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.103478576 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.102558828 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.101720016 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.886217414 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.569665189 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.84577885 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.079079486 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.076333304 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.110663064 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.056439927 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.093938421 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.166714612 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.84860351 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.847793121 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.081475023 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.98578218 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.853263679 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.194602561 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.082584583 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.39760719 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.868472844 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.158005212 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.981719701 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.850641375 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.49126214 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.845659391 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.081428692 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.891412492 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.850069755 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.848956414 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.074480533 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.842095195 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.84641196 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.504747613 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.911659028 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.853744273 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.086408912 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.852697026 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.12068924 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.853654828 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.091736674 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.280123846 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.884482572 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.026700355 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.057479251 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.852233565 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.094081274 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.098648707 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.968338984 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.07342986 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.554456433 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.851012539 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.140188374 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.852442261 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.848865849 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.021960566 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.852779062 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.998120155 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.85460198 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.145860622 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.877893391 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.093194114 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.854092592 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.11434616 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.889743688 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.904642274 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.853677274 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.984865155 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.850734765 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.677304042 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.00966141 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.856127296 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.851587996 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.414787484 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.850230035 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.003439962 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.087624328 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.877680354 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.926045907 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.521851419 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.851811105 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.933911774 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.87758257 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.246988463 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.851983027 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.106897788 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.85658322 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.85015936 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.8527281 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.097803492 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.039452803 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.855851852 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.852079795 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.760178138 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.851950627 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.852371216 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.03563987 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.182330774 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.852386999 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.056244537 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.856594018 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.982427721 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.857959924 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.929948048 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.185670047 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.848722454 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.85184576 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.853353019 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.85358127 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.849456043 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.063814166 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.882407139 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.371862899 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.993108761 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.13274785 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.16718005 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.105185265 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.900771517 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.853717396 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.111718038 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.855996188 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.919748768 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.855047116 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.877509045 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.08735573 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.855285713 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.066006529 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.139808704 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.704974481 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.903984831 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.855323594 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.854314642 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.85310517 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.999681662 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.94162559 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.856629934 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.853385966 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.971748417 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.977918408 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.066439974 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.856159444 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.904708783 seconds)
  done (took 897.66591169 seconds)
done (took 1213.876891622 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.854538728 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.855636715 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.84568188 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.855710943 seconds)
  done (took 29.192534459 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.859416654 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.861557454 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.860405623 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 2.300423049 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.861582873 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.860620934 seconds)
  done (took 13.386635284 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.894737751 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.853599822 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.853991245 seconds)
  done (took 21.38334946 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.927694226 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.24852344 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.964619291 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.294152575 seconds)
  done (took 10.218397659 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.862228578 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.860722123 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.85927876 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.862094286 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.859347646 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.862422804 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.860605003 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.859933417 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.861937768 seconds)
  done (took 18.531352722 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.856225598 seconds)
done (took 98.349025673 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.133102948 seconds)
    (2/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.941623572 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.920674757 seconds)
    (4/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.873841499 seconds)
    (5/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.912153729 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.99545544 seconds)
    (7/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.087310586 seconds)
    (8/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.876798135 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.980150067 seconds)
    (10/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.142425161 seconds)
    (11/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.511110601 seconds)
    (12/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.030321724 seconds)
    (13/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.693735295 seconds)
    (14/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.016453192 seconds)
    (15/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.87885375 seconds)
    (16/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.87944235 seconds)
    (17/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.123222193 seconds)
    (18/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.080850743 seconds)
    (19/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.927301616 seconds)
    (20/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.880346898 seconds)
    (21/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.840459622 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.105652298 seconds)
    (23/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 3.160494703 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.104355182 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 3.242893108 seconds)
    (26/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.877804332 seconds)
    (27/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.222164772 seconds)
    (28/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.871006543 seconds)
    (29/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.124209749 seconds)
    (30/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.924027216 seconds)
    (31/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.965422492 seconds)
    (32/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.223503437 seconds)
    (33/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.927640273 seconds)
    (34/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.03415759 seconds)
    (35/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.991658212 seconds)
    (36/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.963646782 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.197084087 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.202073064 seconds)
    (39/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.876928868 seconds)
    (40/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.935389779 seconds)
    (41/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 3.10684162 seconds)
    (42/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.049154133 seconds)
    (43/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.91867488 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.570940332 seconds)
    (45/309) benchmarking ("sort", Bool, false)...
    done (took 2.098673765 seconds)
    (46/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.861103347 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.230111123 seconds)
    (48/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.020741036 seconds)
    (49/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.847692326 seconds)
    (50/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.049962115 seconds)
    (51/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.848276048 seconds)
    (52/309) benchmarking ("sort", Int64, false)...
    done (took 5.611906485 seconds)
    (53/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.112466743 seconds)
    (54/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.860392043 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.813004748 seconds)
    (56/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.164228234 seconds)
    (57/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.026374964 seconds)
    (58/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.885421722 seconds)
    (59/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.243703764 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.803684352 seconds)
    (61/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.269238145 seconds)
    (62/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.954041851 seconds)
    (63/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.478784484 seconds)
    (64/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.998559681 seconds)
    (65/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.858446897 seconds)
    (66/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 8.102664501 seconds)
    (67/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.035135982 seconds)
    (68/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.244324644 seconds)
    (69/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.886089487 seconds)
    (70/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.077206028 seconds)
    (71/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.890708871 seconds)
    (72/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.929587899 seconds)
    (73/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.02601709 seconds)
    (74/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.898893968 seconds)
    (75/309) benchmarking ("sort", Float32, false)...
    done (took 5.569220845 seconds)
    (76/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.865394718 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.17019945 seconds)
    (78/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.00069205 seconds)
    (79/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.925489535 seconds)
    (80/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.307588413 seconds)
    (81/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.221458518 seconds)
    (82/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.994281006 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.527081999 seconds)
    (84/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.805795903 seconds)
    (85/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.265590169 seconds)
    (86/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.880629241 seconds)
    (87/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.42359542 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.957621821 seconds)
    (89/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.818091592 seconds)
    (90/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.317153266 seconds)
    (91/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.983555401 seconds)
    (92/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 7.729939902 seconds)
    (93/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.381058106 seconds)
    (94/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.890698205 seconds)
    (95/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.036824422 seconds)
    (96/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.287709471 seconds)
    (97/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.881477587 seconds)
    (98/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.259414727 seconds)
    (99/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.852450628 seconds)
    (100/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.009169174 seconds)
    (101/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.040037299 seconds)
    (102/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.863947706 seconds)
    (103/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.866301874 seconds)
    (104/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 3.665457345 seconds)
    (105/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.110469683 seconds)
    (106/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.9797571 seconds)
    (107/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.065878276 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.719170738 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.800141917 seconds)
    (110/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.009769324 seconds)
    (111/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.87375314 seconds)
    (112/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.162976665 seconds)
    (113/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.889710701 seconds)
    (114/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.067987323 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.866592133 seconds)
    (116/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.893086277 seconds)
    (117/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.850083156 seconds)
    (118/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 3.1966167 seconds)
    (119/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.123053009 seconds)
    (120/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.866533789 seconds)
    (121/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.882503314 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.885166381 seconds)
    (123/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.957922831 seconds)
    (124/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.893186201 seconds)
    (125/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.967469189 seconds)
    (126/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.928009914 seconds)
    (127/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.273268847 seconds)
    (128/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.414554457 seconds)
    (129/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.892537963 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.203926944 seconds)
    (131/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.008544257 seconds)
    (132/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.949975594 seconds)
    (133/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.898370458 seconds)
    (134/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.043679918 seconds)
    (135/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.857858932 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.256130609 seconds)
    (137/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.859453244 seconds)
    (138/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.369279533 seconds)
    (139/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.270075064 seconds)
    (140/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.121853184 seconds)
    (141/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.870405989 seconds)
    (142/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.227497274 seconds)
    (143/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.153485957 seconds)
    (144/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.387520243 seconds)
    (145/309) benchmarking ("sort", Float64, false)...
    done (took 5.651557005 seconds)
    (146/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.291551251 seconds)
    (147/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.040126233 seconds)
    (148/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.022900907 seconds)
    (149/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.903732736 seconds)
    (150/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.990983999 seconds)
    (151/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.870380306 seconds)
    (152/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.87246506 seconds)
    (153/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.137094252 seconds)
    (154/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.195114816 seconds)
    (155/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.070639341 seconds)
    (156/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.86986547 seconds)
    (157/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.468887755 seconds)
    (158/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.875846386 seconds)
    (159/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.919692814 seconds)
    (160/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 2.463130711 seconds)
    (161/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.882259515 seconds)
    (162/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.937967391 seconds)
    (163/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.963693235 seconds)
    (164/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.111455812 seconds)
    (165/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.10404097 seconds)
    (166/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.056679237 seconds)
    (167/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.995075243 seconds)
    (168/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.841112678 seconds)
    (169/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.934002634 seconds)
    (170/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.950219787 seconds)
    (171/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.336096472 seconds)
    (172/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.858355634 seconds)
    (173/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 8.364264034 seconds)
    (174/309) benchmarking ("sort", BigInt, false)...
    done (took 6.958418887 seconds)
    (175/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.869634285 seconds)
    (176/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.95023576 seconds)
    (177/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.872104924 seconds)
    (178/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.870176099 seconds)
    (179/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.164787262 seconds)
    (180/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.147406623 seconds)
    (181/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.973459107 seconds)
    (182/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.856026194 seconds)
    (183/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.926268103 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 2.528364233 seconds)
    (185/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.959876653 seconds)
    (186/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.297119548 seconds)
    (187/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.976707914 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.182789461 seconds)
    (189/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.785354688 seconds)
    (190/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.191905462 seconds)
    (191/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.970162991 seconds)
    (192/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.961467064 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.898748646 seconds)
    (194/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.098287286 seconds)
    (195/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.009967841 seconds)
    (196/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.319444818 seconds)
    (197/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.330848245 seconds)
    (198/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.962203076 seconds)
    (199/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.952286859 seconds)
    (200/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.868751772 seconds)
    (201/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.939526066 seconds)
    (202/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.868223518 seconds)
    (203/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.892633177 seconds)
    (204/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.76917972 seconds)
    (205/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.00926247 seconds)
    (206/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.948771639 seconds)
    (207/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.893533409 seconds)
    (208/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.893524061 seconds)
    (209/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.108306345 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.982501288 seconds)
    (211/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.776782781 seconds)
    (212/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.855617279 seconds)
    (213/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.224058638 seconds)
    (214/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.441154284 seconds)
    (215/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.203888221 seconds)
    (216/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.718276714 seconds)
    (217/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.091518249 seconds)
    (218/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.00409632 seconds)
    (219/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.725318467 seconds)
    (220/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.902830331 seconds)
    (221/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.961312846 seconds)
    (222/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.325144015 seconds)
    (223/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.209619824 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.178516058 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.560582643 seconds)
    (226/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.897724672 seconds)
    (227/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.23366248 seconds)
    (228/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.015835163 seconds)
    (229/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.919709715 seconds)
    (230/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.954273647 seconds)
    (231/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.010464091 seconds)
    (232/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.459345811 seconds)
    (233/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.182426365 seconds)
    (234/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.97170068 seconds)
    (235/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.856425341 seconds)
    (236/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.646196761 seconds)
    (237/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.305954079 seconds)
    (238/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.688885649 seconds)
    (239/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.875858155 seconds)
    (240/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.328404592 seconds)
    (241/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.875680305 seconds)
    (242/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.007567807 seconds)
    (243/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.011954767 seconds)
    (244/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.053847644 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.565572033 seconds)
    (246/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.936562238 seconds)
    (247/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.97168322 seconds)
    (248/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.870969214 seconds)
    (249/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.943917838 seconds)
    (250/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.895275878 seconds)
    (251/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.160176804 seconds)
    (252/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.980217628 seconds)
    (253/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.939034594 seconds)
    (254/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.97584991 seconds)
    (255/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.88404012 seconds)
    (256/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.116095036 seconds)
    (257/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.055228742 seconds)
    (258/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.883087235 seconds)
    (259/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.060073065 seconds)
    (260/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 7.779116642 seconds)
    (261/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.096576888 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.890033632 seconds)
    (263/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.990305089 seconds)
    (264/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.995774337 seconds)
    (265/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.974220436 seconds)
    (266/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.172183901 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.853260414 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.974899428 seconds)
    (269/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.871775572 seconds)
    (270/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 2.079037096 seconds)
    (271/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.055870546 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.235421685 seconds)
    (273/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.584378022 seconds)
    (274/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.897884846 seconds)
    (275/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.874861999 seconds)
    (276/309) benchmarking ("sort", Int8, false)...
    done (took 4.875941068 seconds)
    (277/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.060387804 seconds)
    (278/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.719880831 seconds)
    (279/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.058048156 seconds)
    (280/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.431293262 seconds)
    (281/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.88943881 seconds)
    (282/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.22163624 seconds)
    (283/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.874461534 seconds)
    (284/309) benchmarking ("perf_sum", Float64, false)...
    done (took 3.098436824 seconds)
    (285/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.527893034 seconds)
    (286/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.875650302 seconds)
    (287/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.212299664 seconds)
    (288/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.302047076 seconds)
    (289/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.185745664 seconds)
    (290/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.315507754 seconds)
    (291/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.0238312 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.817378811 seconds)
    (293/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.005395742 seconds)
    (294/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 7.115329161 seconds)
    (295/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 7.044389423 seconds)
    (296/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.962825428 seconds)
    (297/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.749005135 seconds)
    (298/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.067317252 seconds)
    (299/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.867266556 seconds)
    (300/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.364483665 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.141963057 seconds)
    (302/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.396072675 seconds)
    (303/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.914316238 seconds)
    (304/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.355082012 seconds)
    (305/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.325502844 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.974063787 seconds)
    (307/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.888231956 seconds)
    (308/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.95933187 seconds)
    (309/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.092680891 seconds)
  done (took 1007.021138481 seconds)
done (took 1008.862189329 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.908974924 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.907072617 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.885040733 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.908012 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.002248275 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.912105154 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.8970003 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.888161222 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.93328197 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.935191893 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.888882849 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.911230575 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.894445595 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.892643605 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.884904845 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.906285092 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.206595655 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.92561226 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.910177628 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.896419659 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.909992886 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.890235188 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.93637696 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.912112277 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.890411698 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.88860956 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.896311141 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.911995776 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.004790557 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.89577316 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.889460746 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.903849985 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.208752656 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.917894534 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.881685313 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.913370788 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.904650018 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.896871952 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.891879883 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.92561091 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.292305059 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.93187041 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.896070081 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.88760018 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.887792745 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.892324663 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.896354473 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.893542771 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.908369395 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.909332551 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.284778438 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.950325428 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.897754833 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.888947762 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.898359905 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.894648185 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.891320588 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.911757573 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.914385139 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.910835479 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.191580131 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.92559723 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.890545174 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.912229848 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.903283255 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.322728807 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.923436989 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.894417515 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.293592964 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.933179738 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.318619287 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.943807204 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.890485931 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.909779002 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.927384907 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.207832638 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.915640842 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.888783605 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.903355792 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.893219229 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.89910695 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.909183212 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.895804621 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.890763122 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.910473565 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.917830694 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.900835351 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.897441023 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.89912901 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.916308704 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.9043669 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.908143923 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.894182014 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.887303586 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.899805039 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.893157646 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.899976139 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.900165701 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.896023064 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.901590091 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.291410287 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.954700716 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.888672981 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.8877362 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.891351393 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.912104311 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.292500931 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.938143712 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.913318149 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.937337942 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.892886707 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.193000544 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.931561265 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.913527281 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.900407689 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.894453606 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.887495776 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.193694659 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.321180063 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.953557444 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.893825394 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.894658635 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.914820038 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.89373471 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.88875657 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.211556113 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.923558687 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.910791719 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.017869077 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.899478426 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.927364062 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.893136334 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.893463582 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.920682808 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.910519414 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.927016744 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.892283529 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.912013094 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.911115323 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.886209492 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.906082721 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.899795279 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.892251586 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.894794382 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.885715576 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.920175665 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.907351175 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.908081683 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.911462814 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.017612993 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.887541328 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.189746943 seconds)
done (took 297.357997489 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.959257906 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.881030829 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.985888192 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.886198051 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.968223226 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.973427519 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.88403491 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.884034738 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.883328105 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.25965647 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.88500395 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.884426474 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.887302414 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.884282954 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.967785841 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.886803244 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.884786403 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.223235299 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.889025926 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.95987572 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.883090759 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.885662165 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.887685361 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.265989422 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.881146903 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.88871977 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.959793947 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.889934851 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.230558111 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.891346764 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.887197787 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.229913349 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.978629747 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.907309413 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.898890928 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.895763918 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.969596809 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.892047356 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.969749148 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.969863342 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.987540185 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.929292464 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.882208918 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.884371308 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.89280675 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.890888094 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.88540866 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.91675578 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.881351696 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.89583956 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.224168499 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.889060136 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.896070378 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.88865787 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.888318444 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.9228597 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.886966549 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.890914421 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.979941821 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.891457509 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.952254977 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.268073168 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.263364334 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.889859656 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.891280308 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.888428276 seconds)
  done (took 185.547895557 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.956168827 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.970121098 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.956205129 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.894718196 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.941380197 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.957102054 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.894148681 seconds)
  done (took 15.379951366 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.896888925 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.888995328 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.943925098 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.941725711 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.890723683 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.044127691 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.890484924 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.901913167 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.88838566 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.943416885 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.891618644 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.889521395 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.897572801 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.891856916 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.940917519 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.900614572 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.005946922 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.892600042 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.893166334 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.043341035 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.888588387 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.897202084 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.923768969 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.901126585 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.892498201 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.897041412 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.477283982 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.891884555 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.888022534 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.889816576 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.888423823 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.931750135 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.890700785 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.894017415 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.888509515 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.006663548 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.892874234 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.889444421 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.891184079 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.894011668 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.891180056 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.892037274 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.891776966 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.888924689 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.89149442 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.913856862 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.891944569 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.891183493 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.891759476 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.891919851 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.926247373 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.89324963 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.88935159 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.890282611 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.947852415 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.899068612 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.894644178 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.888428769 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.891675679 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.889178716 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.043799861 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.94319987 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.891753846 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.941717649 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.893145226 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.892336908 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.892794013 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.892193769 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.987998437 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.893362683 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.942823854 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.890574839 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.052535274 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.916364197 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.89377063 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.895585169 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.896626982 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.89539223 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.892236076 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.901446573 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.890632597 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.89427882 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.900041789 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.891518796 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.89201965 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.007139716 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.001553274 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.890954846 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.907894647 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.90156084 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.892535762 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.929217137 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.89360688 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.891103463 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.950615068 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.009117382 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.948934728 seconds)
  done (took 207.994365764 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.897953638 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.900429134 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.895636275 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.910485629 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.894140115 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.89408084 seconds)
  done (took 13.20650012 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.895459519 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.894640324 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.893796182 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.893825363 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.895664824 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.8950875 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.896143085 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.895343696 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.899517244 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.894218982 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.894865625 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.894716418 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.895714766 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.895663788 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.896619124 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.895742688 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.896395464 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.892861038 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.895365058 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.896163161 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.040255473 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.896800362 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.89607039 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.89660455 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.900280833 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.895080223 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.903448072 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.89512355 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.896063274 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.902153709 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.901243339 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.896549975 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.896733383 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.901273345 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.902176949 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.897812157 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.900895419 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.897072467 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.893562779 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.897632668 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.897596646 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.897300784 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.895992952 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.898110481 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.897634719 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.902883189 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.902123987 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.904336908 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.897613218 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.898630793 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.898583672 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.896828 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.898130828 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.898106447 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.899795094 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.903258523 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.901707128 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.897983088 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.898486105 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.898871957 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.899241558 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.897379966 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.899178319 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.903441863 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.904350182 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.899558057 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.899039904 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.90218016 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.898811968 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.897766539 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.898997726 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.894786137 seconds)
  done (took 139.609689953 seconds)
done (took 563.563721429 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.066727618 seconds)
  done (took 8.884708161 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.03367466 seconds)
  done (took 8.893584935 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.355394241 seconds)
  done (took 10.175897673 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.916647327 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.921344725 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.905895028 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.903236516 seconds)
  done (took 29.490215452 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.001454087 seconds)
  done (took 8.820912222 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.917445198 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.893677672 seconds)
  done (took 15.663847643 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.941579803 seconds)
  done (took 8.761948717 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.966423862 seconds)
  done (took 8.810897983 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.908138145 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.932465508 seconds)
  done (took 15.677747682 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.879297632 seconds)
  done (took 8.698529335 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.563973779 seconds)
  done (took 11.477017224 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.904369313 seconds)
  done (took 8.827389871 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.943556423 seconds)
  done (took 8.761302352 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.953618728 seconds)
  done (took 8.771333742 seconds)
done (took 163.533531885 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.892380781 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.890284711 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.889988364 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.891125057 seconds)
  done (took 29.382690599 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.930229518 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.931514184 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.932467208 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.940743018 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.93206335 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.928117266 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.922751747 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.923862543 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.937995866 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.931999526 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.928297442 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.932442617 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.927054748 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.921670783 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.929293002 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.929169313 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.932833409 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.927572282 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.919298643 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.926213128 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.889770471 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.93529158 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.929525091 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.893820381 seconds)
  done (took 48.053606162 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.085244766 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.962271513 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.041740461 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.940572308 seconds)
  done (took 9.838985423 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.93560482 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.93666149 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.948928896 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.988598737 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.01385645 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.944137455 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.909621915 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.902501378 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.892392368 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.934967675 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.004370253 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.923196878 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.017064022 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.876881673 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.05947962 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.867833975 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.867020317 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.920094381 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.974906206 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.987358113 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.868984578 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.918774968 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.922949666 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.917051664 seconds)
  done (took 48.343988515 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.869780372 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.876485799 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.874974384 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.868794446 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.869397059 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.868824227 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.873488928 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.869004369 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.889940434 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.870432293 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.868735307 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.866716017 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.867107697 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.867002594 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.866729604 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.88073585 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.881715293 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.867838269 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.872861172 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.87316746 seconds)
  done (took 39.235431165 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.862043638 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.713578507 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.211570199 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.11670727 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.859440777 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.859784288 seconds)
  done (took 31.412758681 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.878671513 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.871098365 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.864582744 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.922584138 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.00836669 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.873387375 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.864757393 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.876283294 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.913631008 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.931363299 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.8846381 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.89474057 seconds)
  done (took 24.570960375 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.861092067 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.871243975 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.863407166 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.886736696 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.876650703 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.874453129 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.872246699 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.859011267 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.879671443 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.883250225 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.871908558 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.876402095 seconds)
  done (took 44.266420271 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.947234437 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.743112709 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.518004642 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.581532871 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.391470145 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.065944485 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.37727438 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.027539521 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.858434036 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.128967832 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.406882151 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.146751453 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.153758601 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.901694212 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.968582478 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.367826192 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.195714733 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.133410702 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.929037999 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.627621029 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.021560541 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.465728449 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.628133303 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.028734011 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.10985342 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.033906684 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.159102526 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.854639183 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.038369304 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.935897593 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907173514 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.898727532 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.169285326 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.114642859 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.027430131 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.905564263 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.546448191 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.608004851 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.96213247 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.590335565 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.615473213 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.037171536 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.906630123 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.898675663 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.828987783 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.322288555 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.174425139 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.898613043 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.595686956 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.894932368 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.901121189 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981788982 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.89528091 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.702757102 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.843770179 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.16572402 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.88478154 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.891677426 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.457514505 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.995907874 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.43592205 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.941748695 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.996037028 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.61917177 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.387074186 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.061589343 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.905987141 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.906481864 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.836054961 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.662860012 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.029773696 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.046912875 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.9223765 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.551642278 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.207061254 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.603700979 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.988357967 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.206017285 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.588745012 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.943051806 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.132617386 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.858389239 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.835370009 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.763056991 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.831950618 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.179410007 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.939460626 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.574078289 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.943962703 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.07296257 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.910718909 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.921283931 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907660091 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.123202946 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.781972748 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.902046206 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.47212527 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.187154518 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.921819692 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.073599095 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.833857236 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.90457749 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.153759783 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.111376403 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.043075451 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.477803413 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.074076318 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.901962557 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.988434296 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.726587363 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.016186169 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.185959891 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.968318289 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.023269714 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.037716648 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.864583466 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.21872518 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.937405341 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.079723061 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.549013472 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.172961003 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.24614805 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.160567516 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.990888044 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.908274662 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.907051534 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.683070236 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.533727399 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.130217136 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.907518843 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.302161272 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.021118419 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.909074527 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.841525393 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.567113912 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.55187539 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.018609458 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.130055233 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.771554318 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.287391601 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.840758409 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.053417371 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.016287843 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.127016367 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.55933732 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.990300479 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.164100835 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.305901593 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.147074052 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.018438882 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919990592 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.020321218 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.923157647 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.216866558 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.26260921 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.906315222 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.906689855 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.669501215 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.979355246 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.914631923 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.915280608 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.706163152 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.205532442 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.944430565 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.912095811 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.844947273 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.924175454 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.993200474 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.913624595 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.916577983 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.432401762 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.659873611 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.918704308 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.579589587 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.14114934 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.916023443 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.686764812 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.104944911 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.992243606 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.190598513 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.980878391 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.843917685 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.61185769 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.612431112 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.911145989 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.84421157 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.912002805 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.920565808 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.921489062 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.131847235 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.198408474 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.965730701 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.629172488 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.030652095 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.921117995 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.916454431 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.912571837 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.409787667 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.034028607 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.43660222 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.025387087 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.047319185 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.924823031 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.844216578 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.914758732 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.916684001 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.912938741 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.872715691 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.964388375 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.669578439 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.246698666 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.170236918 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.563492535 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.928331847 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.726693875 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.044981149 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.932741037 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.538503106 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.919478852 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.01213813 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.974992169 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.92305762 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.688270766 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.684620996 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.49034008 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.235707399 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.246428655 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.370663634 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.30871486 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.238991525 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.095375937 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.147062629 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.441086666 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.975715899 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.08930678 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.855874012 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.997844471 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.567924943 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.276519907 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.928690837 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.139484335 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.309788831 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.575020062 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.077743475 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.122414843 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.948298096 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.750861143 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.946118526 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.436395638 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.069020054 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.542015819 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.149390654 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.0878163 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.510581187 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.026791221 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.9153006 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.396937617 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.002274215 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.623170365 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.275033747 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.348706763 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.665506467 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.290565567 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.916487333 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.359090184 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.279455166 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.155849801 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.106906184 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.849575737 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.925335327 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.925095308 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.915122953 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.894326612 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.841756624 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.194386052 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.92718517 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.149901191 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.090195515 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.296450702 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.82972111 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.921173811 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.916883963 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.229313517 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.679123002 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.160128425 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.267116696 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.496191659 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.928579978 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.850322578 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.849817249 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.618659944 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.918881421 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.891711064 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.1535516 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.061170297 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.870462418 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.328387125 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.231125909 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.171045156 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.930934299 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.201956646 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.20228139 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.652736509 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.945700132 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.017380772 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.507020178 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.669012638 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.139522498 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.152094675 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.717663194 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.147349389 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.579069219 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.900128607 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.919225982 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.130311355 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.144432462 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.571450072 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.177447412 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.643848666 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.930496888 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.291325799 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.98320878 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.572004232 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.134201238 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.005570479 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.923388123 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.992965469 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.922896099 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.930341583 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.922624967 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.958149199 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.570124681 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.0538512 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.923464227 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.00284465 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.0381727 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.500562872 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.917656419 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.199184248 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.278965202 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.25820305 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.975449025 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.908493074 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.911252951 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.839248466 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.045543489 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.351859782 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.17962355 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.037055285 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.047732354 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.929966834 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.502897191 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.214785313 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.215104247 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.178792696 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.796734372 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.903941439 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.990785794 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.125462849 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.91418794 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.113202148 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.146123762 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.238304286 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.37761005 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.061286313 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.181039023 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.178645498 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.271972692 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.906376425 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.492642072 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.910417992 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.441361402 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.953844339 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.561701876 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.194946249 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.913572468 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.124006245 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.921920998 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.096446693 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.349719963 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.622963378 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.265046136 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.902719729 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.961068493 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.182882387 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.312805371 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.220666034 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.974394995 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.902159842 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.616000586 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.030846361 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.850593202 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.157783016 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.894115067 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.102396215 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.604374736 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.901060021 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.181463698 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.212146241 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.890851039 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.877797458 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.957767838 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.901785083 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.115549433 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.174821957 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.148476621 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.902453233 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.894689135 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.709099117 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.182207666 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.96116751 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.826471584 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.897755251 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.99553986 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.141197557 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.913582284 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.410289166 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.596684068 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.206644899 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.815795471 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.915859721 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.3250711 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.353288646 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.247422867 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.441171403 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.13789711 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.456018283 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.771220839 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.271299132 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.899031386 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.309656736 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.274270554 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.899205207 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.413876047 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.008972188 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.178659384 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.22836893 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.91173467 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.720165189 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.94609705 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.122639645 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.499880834 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.839964121 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.905417028 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.96060292 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.900375191 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.030348057 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.911162073 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.907786405 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.804166062 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.741631507 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.390339724 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.905112366 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 7.081605198 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.486894801 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.484737734 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.009573639 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.055332036 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.905536783 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.598968266 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.193490007 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.15449047 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.431421574 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.97403798 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.905292923 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.901782623 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.827907113 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.096352737 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.098508176 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.211958109 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.261646095 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.01267104 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.904877267 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.115437927 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.111035203 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.548832123 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.065128029 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.304661881 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.015105984 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.829504032 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.613872464 seconds)
  done (took 1697.004259324 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.917014481 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.911617552 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.906136616 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.920484512 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.924383186 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.92095206 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.929327217 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.90703305 seconds)
  done (took 57.163439488 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.903206629 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.096954145 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.912234976 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.904559606 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.932684801 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.902870021 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.100452488 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.916078444 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.924695865 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.912988821 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.905384838 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.903833933 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.664480805 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.932545862 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.906737168 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.916993334 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.913660351 seconds)
  done (took 75.486502044 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.907245745 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.285370385 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.927407896 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.927030519 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.924637504 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.908722103 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.974016131 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.929516494 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.89876613 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.068655861 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.231221188 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.904172143 seconds)
  done (took 90.715797327 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.91172555 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.902194768 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.901286412 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.902828499 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.901582851 seconds)
  done (took 11.346772351 seconds)
done (took 2208.650689047 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.181601191 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.083375826 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.129156852 seconds)
  done (took 6.032105461 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.045432076 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.094458309 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.212786974 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.220001527 seconds)
  done (took 10.398706542 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.199715539 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.269734683 seconds)
  done (took 6.292909357 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.227633141 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.939861687 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.28557886 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.898859396 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.900553524 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.900905706 seconds)
  done (took 22.528114004 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.902847036 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.905852636 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.903288512 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.906045196 seconds)
  done (took 9.442385533 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.884746602 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.604091935 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.887559882 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.90597897 seconds)
  done (took 21.106386739 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.650881086 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.02681748 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.645796662 seconds)
  done (took 9.147149317 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.507262717 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.137589828 seconds)
  done (took 9.467726073 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.059408177 seconds)
  done (took 3.883362035 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.931046749 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.173985434 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.422869825 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.43096412 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.525890011 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.727329739 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.230192197 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.137095296 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.352991952 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.361038786 seconds)
  done (took 25.117157837 seconds)
done (took 138.870125573 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.25037282 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.932242309 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.104619427 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.26173377 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.139541058 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.102359127 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.123002343 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.257693859 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.952689148 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.938806121 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.262056888 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.141002566 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.070128934 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.92355131 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.075481447 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.924839402 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.134855188 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.273256685 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.952546623 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.186328505 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.122355142 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.909804608 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.103299127 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.927110678 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.140301307 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.053650915 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.456527197 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.928378274 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.091364293 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.468740987 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.05719109 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.331344251 seconds)
  done (took 169.422417424 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.904633101 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.904264277 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.903976602 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.903710959 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.426626653 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.906819848 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.903933099 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.904919676 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.328770886 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.325689419 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.905969522 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.416060126 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.907341188 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.903950049 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.90603618 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.904339906 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.494415986 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.905934572 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.904315897 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.903569334 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.904178333 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.257335806 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.905862224 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.267046874 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.483232998 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.906917896 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.904525505 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.90636075 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.904827825 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.904344901 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.90648418 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.905201 seconds)
  done (took 210.550439271 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.904315162 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.907619995 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.90782552 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.906304972 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.908667031 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.906660017 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.909354685 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.906894015 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.673362018 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.668683405 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.906020869 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.907485713 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.907904483 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.906045189 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.907613352 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.905877674 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.906755862 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.907698792 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.90765035 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.907824677 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.909035721 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.651599574 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.907073433 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.65677119 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.907775021 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.908910437 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.908001022 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.906468634 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.909597931 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.911332847 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.916339951 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.906620768 seconds)
  done (took 221.899396387 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.167311565 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.911749015 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.912708011 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.822901537 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.912366775 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.911616824 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.919042916 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.159207423 seconds)
  done (took 19.558540686 seconds)
done (took 623.263096172 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.410974965 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.257572982 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.092999021 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.936303654 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.183158199 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.969974169 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.931833944 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.99801721 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.555537315 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.004183934 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.622140024 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.955510318 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.70899871 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.961971909 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.054479607 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.99154574 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.479380828 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.565849638 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.108225262 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.990621633 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.106562914 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.855130982 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.016772522 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.57777444 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.730652319 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.904140941 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.999393995 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.485588011 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.944693487 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.091663209 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.65497342 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.232041153 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.947099085 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.930662829 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.988012835 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.965860252 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.201257805 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.944233914 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.056454189 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.664738519 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.002687582 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.45941727 seconds)
  done (took 104.369839962 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.90354084 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.901963855 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.901428691 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.901220432 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.900736295 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.901688956 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.900359134 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.901494277 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.903212156 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.900967524 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.90115004 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.901970755 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.900404882 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.901621254 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.900137369 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.900912181 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.903139439 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.90272246 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.900640954 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.902370308 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.902140737 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.901350006 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.917058458 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.901575578 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.903216198 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.903257564 seconds)
  done (took 51.300677017 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.916552857 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.064680442 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.153653648 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.937717638 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.915729008 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.91916678 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.934279844 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.921106784 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.918020572 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.917781159 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.022909621 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.922842784 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.934179968 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.155665048 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.935339845 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.916147321 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.917075363 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.917719692 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.071823523 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.934125335 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.935491676 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.921952169 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.935960578 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.930682897 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.918830471 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.917223718 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.919525732 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.354083359 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.926884787 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.020939459 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.964472677 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.942785655 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.284776986 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.164014812 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.975654253 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.928414553 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.917404563 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.026444944 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.924349505 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.918300293 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.934938223 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.923373313 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.152885417 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.411682354 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.933687173 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.918285962 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.365838587 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.035238549 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.959104814 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.927692154 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.157604453 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.93641895 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.919953854 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.919834921 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.954500224 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.922938201 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.918296755 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.222263371 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.931936743 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.936397069 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.923366553 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.919003512 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.07665893 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.928624513 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.067284912 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.928928884 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.924636468 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.92032408 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.15684689 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.937627035 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.406827908 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.932895489 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.917126557 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.022406151 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.070564288 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.392384341 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.931529508 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.078154349 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.303918236 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.94243412 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.924740983 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.344838618 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.946478196 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.925949971 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.920773377 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.919762175 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.918833854 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.963059652 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.934725581 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.345871321 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.416897948 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.239211866 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.94646813 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.933238007 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.918947251 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.222349016 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.927993543 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.919225554 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.147390473 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.424195384 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.934763524 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.925463132 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.397089472 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.936575023 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.938437284 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.928232357 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.158434256 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.940327428 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.968199773 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.921414008 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.928764733 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.92403438 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.940113817 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.928528627 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.919757301 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.39655012 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.048653237 seconds)
  done (took 237.534086629 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.918189669 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.926870536 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.918393706 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.921427753 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.916279582 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.920585532 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.915467263 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.916628912 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.920940551 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.917115348 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.916675118 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.917034843 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.918262335 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.91605667 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.92680705 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.923333596 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.522696892 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.918301537 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.916006793 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.921059073 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.575159258 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.92481057 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.917337326 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.921580994 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.918305753 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.916591679 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.925692166 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.921605736 seconds)
  done (took 168.85144245 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.923396044 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.037643487 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.944798709 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.952151963 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.931318385 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.920922485 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.946348256 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.939171257 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.929489121 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.920262727 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.92160293 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.984929498 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.933800424 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.019389424 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.955264672 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.954574167 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.025465376 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.931648886 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.922119809 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.921355932 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.951987532 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.918466059 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.984932318 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.050964962 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.945348269 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.039832817 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.93344503 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.926285 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.924629917 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.044021089 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.942864062 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.985384436 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.954045262 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.942516979 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.046252658 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.044108929 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.027601661 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.954298202 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.929574113 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.922045095 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.922982849 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.911725844 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.040928121 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.947279116 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.926054301 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.031542455 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.945084752 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.926334514 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.933951029 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.923443028 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.93855958 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.943293705 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.993819203 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.058583356 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.962962568 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.950205746 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.949429043 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.210085712 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.934030532 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.023088971 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.91878367 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.042515676 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.948196798 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.913314928 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.925698408 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.93645938 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.95526808 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.956887285 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.029480465 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.933890163 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.023880881 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.960329939 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.932104902 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.924893945 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.928220367 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.041930754 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.044077345 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.960303512 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.964294642 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.958833294 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.922392259 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.926625183 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.915197669 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.944160325 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.929938896 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.043475855 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.047997352 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.933863576 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.927897918 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.928593989 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.928891155 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.954091921 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.051527814 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.965865394 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.018951625 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.994426938 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.001827931 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.942740272 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.940013822 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.930813041 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.990308372 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.943260198 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.940042423 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.259455546 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.997666348 seconds)
  done (took 208.481374848 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.386515355 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.982010499 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.984083963 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.26518344 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.273569138 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.855947762 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.975385107 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.976542527 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.999629165 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.165945583 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.049462921 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.996770643 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.963727399 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.949954296 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.975277093 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.000279547 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.987472095 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.282088549 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.081955254 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.088050389 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.958763704 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.285535521 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.253604815 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.357780652 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.012544534 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.312074122 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.62355786 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.121989282 seconds)
  done (took 63.017900142 seconds)
done (took 835.38567329 seconds)
SAVING RESULT...
DONE!
