cset: moving following pidspec: 26920
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.268479148 seconds)
loading group "string"... done (took 0.560948258 seconds)
loading group "linalg"... done (took 7.015563541 seconds)
loading group "parallel"... done (took 0.162444127 seconds)
loading group "find"... done (took 1.127800963 seconds)
loading group "tuple"... done (took 1.956446604 seconds)
loading group "dates"... done (took 1.247005407 seconds)
loading group "micro"... done (took 0.233500209 seconds)
loading group "io"... done (took 0.947982679 seconds)
loading group "scalar"... done (took 38.40311174 seconds)
loading group "sparse"... done (took 12.3895129 seconds)
loading group "broadcast"... done (took 0.979509774 seconds)
loading group "union"... done (took 13.3045941 seconds)
loading group "simd"... done (took 4.524694869 seconds)
loading group "random"... done (took 9.129084514 seconds)
loading group "problem"... done (took 1.941996029 seconds)
loading group "array"... done (took 21.653314911 seconds)
loading group "misc"... done (took 1.946083768 seconds)
loading group "sort"... done (took 3.318378155 seconds)
loading group "collection"... done (took 18.436225231 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.537300755 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.139144216 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.116279653 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.136903566 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.182065589 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.129860578 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.139927758 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083916455 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.868732392 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.157546229 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.137637534 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.471598278 seconds)
done (took 4.834444812 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.194528506 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.085321032 seconds)
    (2/2) benchmarking "String"...
    done (took 0.094858548 seconds)
  done (took 0.860796142 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064403149 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.125217881 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.078726037 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066443324 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.065610024 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.07953769 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066009922 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.064877494 seconds)
  done (took 1.234781095 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072624244 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.066872676 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.082945114 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.065963248 seconds)
  done (took 0.976396812 seconds)
done (took 4.027820984 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.897355654 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.233705158 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.187168712 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.447553988 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.146536292 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.183430391 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.687575307 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.32401056 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.208256477 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.098889649 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.10293738 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.373565188 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.104746032 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.691728598 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.074638581 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.104283903 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.191531858 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.434955254 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.079456772 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081564688 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.102307737 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.146790903 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.098782311 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.075960719 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.166059422 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.069985195 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.145400493 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.093521185 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066690339 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.238754994 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.188205324 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.697624196 seconds)
  done (took 10.467916936 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.095585922 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.114818011 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.067953824 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137070641 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.114838919 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069225251 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070133647 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.081371774 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.089503409 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.155624669 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.11207171 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.102654337 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.080216761 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068404527 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.098670169 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.209599247 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.107743283 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.083345479 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.085221448 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.074294444 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.120142247 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.082317088 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.092218482 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076568827 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.15003487 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.192979825 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111000248 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.109362714 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067272858 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.094487388 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.127884419 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125466329 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067713794 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080549777 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.150300353 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094993645 seconds)
  done (took 4.459560585 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.047209414 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.170584917 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.089725945 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.150845567 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.084147836 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.123844188 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065761586 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.097852075 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.242694439 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.086605782 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.474822673 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110713607 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.101559349 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.065895741 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.084426369 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.065893096 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.5301003 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.108721855 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.134758398 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.083514752 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09052308 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.069163071 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.772011457 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.081043754 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065678651 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066998143 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.074276155 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.142999795 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06759248 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.202682683 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.087132625 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.086017218 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100238388 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.198743629 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.093046535 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.119882037 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081608435 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.06605042 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.167901418 seconds)
    (39/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.113239592 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.071572173 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.082355227 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.088044156 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118935856 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.103506816 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.08393948 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.080172108 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.178392761 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066175838 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.081159207 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.893857147 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.164539007 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076183049 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065103389 seconds)
    (54/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.107449304 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.283105276 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.083761591 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.064198561 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.081313148 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.247486034 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.149537497 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.065996339 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.082385247 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06481268 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.070835333 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.801890566 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066607961 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.765711344 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070581059 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.075927253 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.08457468 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066199747 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088022618 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071991828 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.099842884 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066487722 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.066819836 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.082649809 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065078901 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.08319527 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083994722 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.200652405 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.082340414 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.069444674 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.06292008 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.080747428 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.084741851 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112330332 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.068361181 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.080992351 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113332852 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068587725 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066645696 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.118705058 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.06634563 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.101115047 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083501974 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113785622 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.080787307 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.117901287 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067792344 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.109880457 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.071320164 seconds)
    (103/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.078876057 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112539928 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.078596106 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070408657 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.150948751 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.080986986 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064301612 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.064966079 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.081238863 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.066296733 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.08433709 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.08054953 seconds)
  done (took 21.589380959 seconds)
done (took 38.250336508 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.296751759 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.089780234 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.089288822 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.072719929 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.089855594 seconds)
  done (took 1.398220525 seconds)
done (took 2.133472528 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.144895283 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098546624 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.07856134 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.093920789 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06243956 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.115505649 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.112408215 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.079799955 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.113546359 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.06326546 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110092268 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.062869583 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.077078447 seconds)
  done (took 1.973235134 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081423947 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083066412 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083870719 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080153443 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077139468 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080993428 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.078278007 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102954496 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.078968001 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085837845 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063911794 seconds)
  done (took 1.624251105 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.079452529 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.081218663 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083691695 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.079370735 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076665302 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.079790057 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.077834674 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099714696 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.078810067 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086294388 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063808633 seconds)
  done (took 1.62012184 seconds)
done (took 5.93943824 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077765353 seconds)
  done (took 0.802534561 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.694914076 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.378429219 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.08136834 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.130804206 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.229181779 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.150782065 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.435722502 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.10813455 seconds)
  done (took 10.115684039 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.099652304 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.082912332 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.082341573 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.086024397 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.069923472 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.085244555 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068284142 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068045421 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.085170269 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071982973 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.083315917 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.0706011 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.086004379 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.070629453 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.068815396 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.082777768 seconds)
  done (took 2.063526615 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.103344725 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.101078512 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.089074425 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075137529 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.088146899 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072342018 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.089874216 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073465723 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.085411983 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071960878 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.088566112 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073279762 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.086182777 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065198565 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.088541094 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075983181 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.085131425 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074605819 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.088768982 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074900092 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.089919218 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064908387 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.086148801 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074213748 seconds)
  done (took 2.806760165 seconds)
done (took 16.519233308 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.12946866 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.074545541 seconds)
  done (took 0.946769268 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.080638663 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.095919389 seconds)
  done (took 0.917521289 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.080514908 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.079534818 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.086658005 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.090509847 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065567255 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.080263316 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.09917762 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065969704 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065145936 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.081037583 seconds)
  done (took 1.536375345 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.06716924 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.091562518 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.06859075 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.095283069 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073754485 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.07915803 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.071595759 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.082549352 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077079924 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.077445104 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.069663337 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.096795688 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070632252 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.098462752 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072099791 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.08185343 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.085389099 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067143571 seconds)
  done (took 2.169850436 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.06506325 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.065873517 seconds)
  done (took 0.877474862 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.065544058 seconds)
    (2/7) benchmarking "second"...
    done (took 0.06309772 seconds)
    (3/7) benchmarking "month"...
    done (took 0.07984722 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066121145 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.077113076 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063785044 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.077684329 seconds)
  done (took 1.237270006 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.391629988 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.107820847 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.257153041 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070203341 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.101558508 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.270023828 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.082467831 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070287674 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.086087067 seconds)
  done (took 2.218910263 seconds)
done (took 10.649439277 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.079422995 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084544618 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.108593642 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.417167568 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.103735574 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066294847 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.142572783 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.201334247 seconds)
done (took 1.951478447 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.124731247 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.594999993 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.393988263 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.210090763 seconds)
  done (took 1.952279242 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.370977769 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.089237631 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.073490592 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.065983118 seconds)
  done (took 1.352839863 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067319612 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069394423 seconds)
  done (took 0.893630662 seconds)
done (took 5.076469408 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067404282 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.111576699 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065508095 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.063446649 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.082748927 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.063395509 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063325485 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.082435453 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066072024 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.065600658 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.081848721 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066186108 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078652961 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063299205 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065332757 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.078237948 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062810356 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.066190848 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078776934 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.065809858 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.064635141 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080274505 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.064074905 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.078927888 seconds)
  done (took 2.518795263 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.085004653 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.081731192 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071719434 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.087304845 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070130398 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.087297993 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.073581701 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066738646 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.085866189 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.06883015 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085027006 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071170537 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.082694435 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.070582682 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083532932 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.07045102 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.086780051 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066656819 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067972749 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.086060212 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071811361 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081612244 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069821852 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08658404 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069935981 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.085024747 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.069324857 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.082207729 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071153745 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.085228382 seconds)
  done (took 3.077164901 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.070707607 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063474404 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.07974875 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070382531 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063625558 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.08136162 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.064104475 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.08065 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063913969 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063955842 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.080537438 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.064088774 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063718632 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.080335759 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064914496 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.083103819 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.081003954 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064409079 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.079678419 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.06431379 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067038171 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.079443904 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.064689057 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.079269616 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.06390948 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063427177 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.078991997 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063523859 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064199137 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.079401739 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066738552 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066983371 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.079292609 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070622265 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.082921992 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.064239428 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067450122 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.078351917 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064483836 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063295381 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.078815534 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063980668 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.07907223 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069877923 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.064534749 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.081143382 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.064218273 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064895452 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.079688083 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.066670994 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.078916135 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.06342915 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065581715 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.080027966 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067606148 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.063497071 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.079615918 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063460923 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.07996582 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063395328 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.064019546 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.0785975 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065755781 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063720527 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.093653234 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070379469 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.079244335 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.065144817 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064747974 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.08106939 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.065340226 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.092819941 seconds)
  done (took 5.89683635 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.114488039 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.089221739 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.081277155 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065702584 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078506731 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063591718 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067508658 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079384515 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065545179 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084806105 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064371437 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064768453 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081452626 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076375736 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079553415 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065896978 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085200268 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062145636 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.064558899 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.082418217 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064619346 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.082630479 seconds)
  done (took 2.424850535 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.184176821 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.088071963 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.107260622 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.088691931 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06725806 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.089111635 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069598949 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.085311072 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070129191 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08329042 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067727265 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085476711 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06856456 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083207387 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068885044 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.083487505 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070278792 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084308611 seconds)
  done (took 2.305194995 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078963138 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.06560112 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.104453339 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.0654363 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.082683522 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068481707 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086248475 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074689647 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.084147742 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.066071775 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.089947844 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068278105 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.083625918 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.175360874 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068513849 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081666351 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068890199 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081705376 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074416283 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.086116575 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071298434 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089820232 seconds)
  done (took 2.577679139 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.0820013 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067793938 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.098813054 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084133766 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062589773 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064988281 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.087684898 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066010872 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.087318357 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.068067795 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065980322 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.08195595 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070991338 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.08142046 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.070157807 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081630027 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06835221 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.082176957 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067763881 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062829773 seconds)
  done (took 2.266923154 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08739152 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083716507 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067101193 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09084181 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067269636 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.083353054 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075628328 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.083172375 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067861782 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.106675344 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067713685 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082836681 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075861588 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.08759857 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.06782607 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.090395369 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074484714 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.090240858 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068115545 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082972477 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.10685506 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067438096 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.090574676 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.068029369 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.068263834 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.083633996 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067732244 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.08741886 seconds)
  done (took 3.010638523 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067598692 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066809247 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.079895214 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.064105452 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.0641788 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.080242117 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.064486706 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063567456 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082645942 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06421244 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066556554 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.08254573 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066729886 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.082696493 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065745528 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066750965 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081718847 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063792971 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063919762 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079335633 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066518438 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065723402 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.081201188 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.064312755 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079796935 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.066137607 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064056726 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.079242028 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066190314 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063947607 seconds)
  done (took 2.881393984 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077042845 seconds)
    (2/2) benchmarking "in"...
    done (took 0.090072721 seconds)
  done (took 0.93784542 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.064474327 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080031636 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.079315256 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069907675 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.085813536 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067276049 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.090291963 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070612857 seconds)
  done (took 1.372482026 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.082313273 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076856747 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.083270487 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.077411211 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.093322535 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.083131135 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.153042497 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.083306663 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072852092 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.080772789 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079887297 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065686987 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.088193708 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066437293 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.087900181 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072942247 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064196941 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.087272069 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.069058898 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.080938866 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067734938 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.093838969 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068898407 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.06307311 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.083776418 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.075018848 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.093543748 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.067540459 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.08549417 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073549056 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.088068064 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.061419815 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.066663542 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.083082541 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064624391 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.092328818 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081353832 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085445037 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.075362558 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066708347 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.091395719 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061775664 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.086616848 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.073637363 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091933505 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.067547609 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.083490546 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061889592 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064313276 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084295475 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.062443558 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066261365 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.077577522 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073473141 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.085051013 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076828792 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.081360087 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067685534 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069161646 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.085000176 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.073347633 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.084513055 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068915851 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.066189747 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089228658 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.07179739 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091016813 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062485518 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060472159 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.080644858 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075547296 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104687609 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.071764813 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.083321444 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067633323 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.080670649 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069521212 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067354835 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.087981891 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.073129152 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.082468055 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072418989 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089949416 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06682156 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068267699 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.090075577 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.065065851 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.083893265 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.0648977 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09845122 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.066061535 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.080881211 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063677611 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076640308 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.086054682 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066111754 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.080785703 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073651438 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060711541 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.083277142 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06800928 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.083125026 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076142205 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087577768 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072034999 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.091203543 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074582571 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066048937 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.085734279 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.063669464 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083092337 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.065576958 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.07295817 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.077198668 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069549041 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.083626217 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.067352141 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.091213726 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.064537858 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.066374879 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089845802 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072074686 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.081140149 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063103685 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069062613 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.083110464 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069886142 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.090459974 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065634979 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.078382136 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061930708 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070295348 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.082388862 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070092497 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087784184 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069732333 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061526581 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.081425387 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.070851581 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.090715131 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067391788 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.083080619 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072252807 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068020949 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.081315072 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072526521 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.085389323 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065952194 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.088380307 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067240856 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062070141 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.0864684 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069235074 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.081906563 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069926913 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069700497 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.085180349 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.068293719 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082105841 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.072363178 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.083850728 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065535941 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067145409 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.08142796 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077661704 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.084886415 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062729954 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.064134663 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.089072441 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065245664 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.082480228 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065213425 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.06849244 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.082974796 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.065443324 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.082086476 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068110439 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.093176666 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.07015203 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067397525 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.087807949 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077167446 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.082725842 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069356383 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.082463191 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067569585 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067386413 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.091927875 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071724087 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087372076 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.069503675 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.080032642 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071909359 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072737161 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.082282494 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064639386 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.081970384 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070318981 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071200405 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.086711028 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.067391776 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081223813 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068174111 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086623087 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068693174 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.066766172 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.081950753 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.071139598 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.082049856 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.073287535 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.083895021 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.076312412 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.085588639 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.062054978 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070338309 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082049182 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072553136 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.078586211 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063835046 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066387416 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.084731314 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.065367808 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068769753 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.076910212 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073855238 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089639374 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.067155973 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065252909 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.083136719 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073205007 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.0844193 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070496453 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.086571083 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.072525614 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092923402 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.066073797 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.069610885 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.093934562 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.067006576 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.077169774 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.071794782 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.064808178 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.082549311 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065864738 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.08174289 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069361926 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.090178631 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073416566 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061348575 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.08495527 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065617678 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.064787097 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.07859046 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.07084005 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.08519634 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067171472 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.089132659 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067400541 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067026171 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.086213758 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066601813 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.083933268 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067645033 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068651141 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.0841892 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069179218 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.082578075 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069304681 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066011839 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.081272757 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068109846 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.082709431 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067225635 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071320257 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.083294193 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067243701 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.085021902 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067590074 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083875595 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067312424 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066056395 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.086171308 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067927586 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.065920965 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.08588894 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062103869 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090808944 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066630405 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090261651 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067152768 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.064709526 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.087399657 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069376488 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.087920207 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.068087211 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.084292778 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.06812249 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.067226784 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.086109853 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074337162 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.081727736 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.077643115 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091046572 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067820115 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069629305 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.083909156 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068975649 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.06516815 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.084964867 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067681476 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.083828209 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066926123 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.088210579 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.06907688 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066664803 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084995912 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.0675582 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.082742011 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067881776 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.06157022 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.082420908 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.066631138 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.066708162 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093049976 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066683453 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.082935299 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.06564112 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.084598381 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.066260243 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063386637 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.090894108 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07546137 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.083741711 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07357843 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.082324531 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068749062 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.093696216 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.063994739 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064505152 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.081272873 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.06495298 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090458829 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.067527543 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075564518 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.083221161 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066127809 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.08068629 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.067513598 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.065545083 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.078168839 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.064829044 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086888353 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.066544216 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066072224 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.083393318 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.070724246 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.084400155 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076062563 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.065856165 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.085211806 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.067187822 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.080657847 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.066520551 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.065979935 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.085866786 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.068246944 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.081403409 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063919243 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066134283 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.084737264 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.068436295 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.083145021 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.06849093 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073167164 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.083104172 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069683403 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086313374 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061915879 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069229564 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.083484811 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.067282944 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.082465924 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070096097 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069493305 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084268938 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075330051 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.083224404 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067287907 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.08335102 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.065036932 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066631572 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.082896669 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.067317091 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.082577993 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.067360419 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074031546 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.081314674 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069664915 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083078931 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067666371 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073240615 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.084677634 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069662098 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.089592749 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.068021141 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.085005634 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074519014 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.086839667 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070105975 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067320027 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.085039982 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072676183 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.082605769 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072769177 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066617264 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.083935138 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068388245 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.081317929 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066321824 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066309275 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082443651 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.0726403 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.084411348 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.066296538 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065804792 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.081827393 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.06818752 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086631652 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07402444 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.085456225 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070047301 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.06226834 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.081114795 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068273291 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064873762 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.084889485 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070981489 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088930594 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.069059048 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.083579143 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.066466016 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075464297 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089723998 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.071116453 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.081928739 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.070667046 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066949734 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.085893016 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.068151097 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.084183106 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068229129 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070632829 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.085670837 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065885114 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090111608 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.070349725 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084619516 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.068798968 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067077351 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.08396445 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.062788622 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.084433635 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068689768 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071042503 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.085699248 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066891523 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.094049538 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065158518 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066851972 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087164174 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066374256 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.087836284 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.062826295 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.084459704 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067558838 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067714635 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.079269416 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.066732847 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.06455058 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.085926486 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.066601999 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.079372766 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07709584 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.093260641 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.06975642 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065330048 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082453634 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062640602 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.079294734 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066262415 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067786627 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.08573605 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076857887 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.083280101 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.06605915 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061540927 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.084381845 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070099083 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.086794073 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.064571234 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.06220385 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.083280369 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.070342441 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.089135462 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06590084 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066060955 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086942108 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.069577583 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.081856843 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069970364 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063250432 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.087522293 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079939204 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.084995473 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068336378 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.090318435 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074650364 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.084699529 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062571304 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067954447 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.087234132 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067387451 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.085086649 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.068126622 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.09911487 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070202776 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066408784 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.083198015 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.0689687 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.082939051 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074735946 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067426577 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.084600127 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071768523 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.085338804 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075451569 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086626295 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073973375 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.086920392 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069736146 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065487832 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084152428 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.065081957 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065267354 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.085917478 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067785146 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088211331 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074168084 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.083492165 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078394658 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.091975689 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.06981996 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063194464 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.08398376 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066775592 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.079726375 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067805995 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064855319 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.082116779 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.065831632 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.082817801 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067738687 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072321976 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.085101305 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067467825 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.083929248 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.061059752 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068235664 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.086315655 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068312929 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063361706 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.084895218 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.06716573 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.087911012 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070126941 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.081569883 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.069062716 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068518928 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084807461 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.062856008 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.089971514 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066325834 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.069000755 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.083566812 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067462387 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.067525757 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07096432 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070902596 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085573431 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.069567362 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.092487027 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069743409 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.081266985 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.0643046 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.072346879 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.08309797 seconds)
  done (took 45.833380858 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.107963803 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082684622 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062815613 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07986781 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074217592 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081206575 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062605687 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063268986 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.08069088 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066134987 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079883591 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06227785 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.088763823 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.085671669 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091574774 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066298587 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079595688 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063739887 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.079916211 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063285758 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088915619 seconds)
  done (took 2.424866416 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.0764922 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.091213021 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.074250531 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.093991252 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067533627 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.088331626 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072559366 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088760404 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.093450163 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067944758 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.09305521 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071273569 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.085728896 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.067400294 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084522118 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071344624 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.093393048 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068013084 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.088473067 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.072648161 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.088525354 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073015615 seconds)
  done (took 2.584481943 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.0686134 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066522395 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085170727 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062945614 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065161115 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.078728594 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069562766 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.082083471 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069646019 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.06477057 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.082748827 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065692242 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.085289287 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.064503905 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066712617 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.082001258 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.138434285 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069844899 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065128635 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.086354862 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.06171832 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.085477276 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.062850325 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062264177 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.082845039 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.070445738 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.084982451 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064303381 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.066100302 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.083132758 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.066066307 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.082012958 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067569435 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066383104 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.082748741 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065162176 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065604055 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.08401917 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061976024 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.081803644 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066740121 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.062435805 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.084366457 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.06817585 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.064257506 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.081914447 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067935322 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.083969621 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.062230613 seconds)
  done (took 4.429256425 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.086088811 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.138783041 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.087352033 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.122359837 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.08085641 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.091551274 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069904214 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.120018469 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.06357935 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.08379671 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.101211261 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.080378424 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.085063248 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070841714 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.090803863 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066754917 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085260034 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066072551 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.08720561 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066033366 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.08782542 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.073397137 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.098082584 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079865534 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.088373488 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065761521 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.083270849 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.071234296 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.095939287 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070959853 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.088300855 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.07148333 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.098270377 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.089818942 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066444287 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.068152566 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.09969441 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.083833918 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.069101117 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063692361 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086529974 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.070524871 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.091384032 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.100194327 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067363766 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070761076 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084190175 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063630581 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.097574878 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.068301658 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.092111831 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.098942263 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070437547 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.084637882 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070423686 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.098938311 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.066312177 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.082788831 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.069887086 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.096573341 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064259689 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088136069 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.080468248 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.085826183 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.07372834 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.099003678 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071786417 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.08757033 seconds)
  done (took 6.581085845 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.077454611 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.091144103 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080621929 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098328896 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.090780797 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072926917 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.089897849 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072648261 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.090067616 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076953618 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.090042481 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.111356127 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.068789266 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.092873837 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072888734 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.090550083 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.07263391 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.090257163 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.07156316 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.090904452 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.090503697 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.080873231 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.08993275 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079829411 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.120155278 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.086413758 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072782276 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.09058617 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080039206 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.09102638 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101401915 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.073181972 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.090145925 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080094735 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.102967903 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.090230897 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06645892 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.090494946 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.07323841 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.090995001 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069177414 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.098964023 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071992431 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.086418547 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072868341 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.091012719 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.098279859 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.084944738 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.093462631 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.095249483 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.0729597 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.098248577 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072469964 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.090796176 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.098924093 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.106051505 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098908188 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099018654 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072788121 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.098292049 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.098498125 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.087728581 seconds)
  done (took 6.216181087 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088800694 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.092721792 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.076155192 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.080890079 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064853717 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.088993033 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065721935 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.08224761 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074472296 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.092188261 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078262069 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087342178 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072921924 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095049575 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.087668004 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07300259 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087868612 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070434263 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.091751023 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070350077 seconds)
  done (took 2.448488136 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.07802026 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.102623585 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067845464 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071361173 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.08863518 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071707683 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.08840042 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069930594 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085093328 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070130957 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.09418479 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076917146 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08589955 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072617592 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.093451161 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072183505 seconds)
  done (took 2.117757372 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.079954828 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.095620313 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.081379165 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.085532803 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.065953369 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.08266698 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.066788224 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062204563 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.082079005 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.080697229 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085993547 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.069392723 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.085352875 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.065419272 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062939531 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.0879855 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.063811287 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082680426 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.067719191 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.100157977 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.077999906 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.08396366 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068343103 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.068095883 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.086405727 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071078044 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.085880779 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.064786678 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083790397 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.067981738 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.084860188 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.074961544 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.082342295 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065704948 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064822161 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082358876 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.067235925 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.084832083 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.069472505 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065812915 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083938468 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.066493255 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.084504088 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.067534619 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.080598279 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.067092544 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.063102284 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.091159838 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064684238 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.084782418 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.066872419 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.086776581 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.06800569 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.076585483 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.088717293 seconds)
  done (took 5.02672898 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081988424 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069869976 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.08150695 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064734359 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087616335 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.068612702 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069780318 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.086941752 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068734205 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082532371 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068795039 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.087757635 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069297239 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06986948 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.086725512 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070258295 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080446901 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069314569 seconds)
  done (took 2.196700798 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.074192485 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066931512 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092413774 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067137582 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.085058805 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.06966778 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062598265 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.084117288 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066318971 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084766638 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06677273 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068376256 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083889089 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.069361852 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.085140937 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066992836 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.06853882 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083575542 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067290381 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.081017911 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068621385 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065520357 seconds)
  done (took 2.464738442 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.07471061 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.093087123 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.161923794 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.10677024 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.081877608 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.098185443 seconds)
  done (took 1.453600413 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090805382 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097341377 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067496176 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106112073 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073616745 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086773201 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068376449 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087069368 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076989564 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099705953 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068835655 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095111146 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095058409 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079834256 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091990682 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07342299 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08698483 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068904941 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085129773 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085991585 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087670748 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094828432 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068425107 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086191584 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068385453 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093729749 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076516514 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10028855 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086689832 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076406451 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092528956 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069011115 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095303739 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100082895 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070383562 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095409446 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069332435 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104641207 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074675403 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094857349 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069758397 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093796293 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094885711 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073265176 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093895959 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068474515 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091103368 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068553445 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08736895 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111380325 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07354599 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094768969 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073639184 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095556541 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09500484 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111527327 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081792315 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09531 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073092886 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099993415 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093997461 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073935897 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095511465 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100066899 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074037638 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095260394 seconds)
  done (took 6.501873724 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08204874 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105100325 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069383785 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100617723 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09592291 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06869113 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087197298 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068983572 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086904247 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068596294 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127022893 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068525811 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094769692 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095134697 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069572837 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086696928 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068978472 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094797083 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069345978 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110345604 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086314628 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076940797 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095305385 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09491835 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081993436 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092057513 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068798912 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08675985 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068755721 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087104607 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073026568 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087272167 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094520642 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068388269 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094888426 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068385728 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086576387 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073199857 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086615133 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074805418 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095329905 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.103504338 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069710821 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086159343 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081106172 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087266169 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068547129 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087426638 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069672118 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086680038 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081548718 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10008765 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099335843 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076078228 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088177557 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068198562 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087505276 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067390156 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088291986 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092428208 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076449434 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08607151 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111001445 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068670845 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087125009 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076587089 seconds)
  done (took 6.388797479 seconds)
done (took 126.694255234 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.201964146 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.184998999 seconds)
  done (took 1.224876079 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.070204487 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.095677184 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.09755382 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.127541942 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.085615089 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.099909972 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.11786125 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.079363247 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066396245 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085670776 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.067723316 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087522854 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.130936868 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066721893 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.085946143 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.069119155 seconds)
  done (took 2.275120835 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.103418959 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.192819368 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108393275 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065324583 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.098450179 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.078363943 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.084592207 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.078198064 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.090482876 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.066255998 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.076844305 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.094192935 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065312712 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.094278129 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.071753965 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.096623286 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.06562069 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.097085583 seconds)
  done (took 2.474127187 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.10537102 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.141294822 seconds)
  done (took 1.086791022 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.199057948 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.121451187 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.200297787 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.411082595 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.203358137 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.276283961 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.172381852 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.171419352 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.153466903 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.167595214 seconds)
  done (took 2.913209456 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.100211107 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.168434226 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.309369759 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.1367596 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.087717262 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.114126285 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.137485195 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.108166075 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.081369414 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.100692355 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.08037819 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097087361 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.11720517 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.074946781 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.094588486 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.077928523 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.119207735 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074773476 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.096783516 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.075907259 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.117372167 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.06697955 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.093502914 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.074246564 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.096683137 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.078954332 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.084975639 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.06748984 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.074613608 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.094829884 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.07816622 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.111823325 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.097203935 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.128404872 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.101452177 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.129757223 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.079021021 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.091635634 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.075527793 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.090570019 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078058219 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.095242761 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.083855235 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.095557014 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.066540042 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.096460844 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.066973854 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.066539055 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.098742114 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.076863009 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.098108255 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.097005273 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.129138182 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.078450028 seconds)
  done (took 6.157076909 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.738279809 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.131022298 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071688743 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.793841995 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110191522 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.0839016 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.703712828 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115961235 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.206813042 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.756735914 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.087152042 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.098306866 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.196966428 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.212804161 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.923853258 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.262181681 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.623890461 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.102941788 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.128881781 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.129456615 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.137213168 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.150998573 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.144160968 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.430606543 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.095437496 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071157394 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.134337386 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.096430212 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.137329219 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.10310161 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073895287 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.151630295 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.224062767 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.175688451 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.074906598 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.091419557 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071045475 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.145339531 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.239238339 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.186059877 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.135903735 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.088664307 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070705291 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.136381582 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.127398818 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.088714011 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.138998818 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.150759574 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.145604444 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093294205 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.076494004 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.138675678 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.157617942 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.140390026 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.080028624 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.291646952 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.2781434 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071051504 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120175303 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.102461804 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.216711155 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.101623844 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.175374278 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.135592093 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.18350021 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069808483 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.746450657 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.145589494 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069365925 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.095634802 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119002331 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073937545 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.157447169 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.121548937 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.367099265 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.138680121 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.093834016 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.0700762 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.221368297 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.0833541 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090707041 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.139247284 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.075983581 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120095792 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.141067634 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.163488873 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.145850951 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.204749834 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.141821313 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.136232148 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.095847368 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.123339152 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.07511852 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.188816947 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.189165515 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.137501885 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.182629164 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.157782265 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.139097509 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.14614208 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07598084 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.168173093 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.096912905 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.100307178 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136700128 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.18789988 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.121377226 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082251455 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093635097 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.139472887 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.123592771 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084990458 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.159218512 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.146665708 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.45122401 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.145378846 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.087896322 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08585969 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.135585717 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.159124962 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075816782 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.228188809 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100837608 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.165791417 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119419911 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068796716 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.119391013 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.139204134 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.097992085 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.099799646 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.156940816 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.077519978 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.210974339 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.187199268 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.077595116 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.212674571 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.160026174 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.075373905 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.146273214 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.119520526 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.143102682 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.098301087 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.137222501 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094842177 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.743130906 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.141587376 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120435569 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.094015563 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.170077147 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071114588 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080864451 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.103619377 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.066816717 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.752358701 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.104519876 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.080292536 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102971555 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074475241 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120830836 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.134394296 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.094153535 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.137497645 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.198101708 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.076605075 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.11786318 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.1018238 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.136264986 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.076335959 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.103595091 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.081888499 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.103965449 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120845513 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.072433563 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104569151 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.144622308 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.138030259 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.189426862 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.538890722 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.091717826 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.082036489 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.197740657 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070300545 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.258622398 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.13466654 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.194340352 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.139960591 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.099838998 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.25654888 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.139725654 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.171493664 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.105445867 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.150970621 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067387591 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.15674425 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.140840153 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071260413 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095271825 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.138942107 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.144220046 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.139340427 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.952486897 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070083156 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.200369389 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.089957036 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.148206593 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.094937477 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07752423 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.263397201 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071982455 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.143303811 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.161078692 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.074556559 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.102446221 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.674769205 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.102660711 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.137127469 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.075597936 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.192433034 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.139973761 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.134411458 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.135510958 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.096184183 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.138118334 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.183023995 seconds)
  done (took 39.986003357 seconds)
done (took 56.959164786 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.268640027 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.187005825 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.240456994 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.143423625 seconds)
  done (took 1.7772395 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.144236299 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.104603889 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.122493798 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.085690488 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.103010057 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.086179889 seconds)
  done (took 1.514149866 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.404368764 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.265727103 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.231588931 seconds)
  done (took 1.769918756 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.293012047 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.226812734 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.44306511 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.292911976 seconds)
  done (took 2.232932787 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.188768318 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.112224974 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.06724639 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.105847751 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.156573928 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.250430459 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.127386454 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.186299121 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078663692 seconds)
  done (took 2.191336785 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.194924438 seconds)
done (took 10.545280382 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.108869283 seconds)
    (2/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.360533477 seconds)
    (3/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.296688588 seconds)
    (4/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.280097243 seconds)
    (5/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.105150849 seconds)
    (6/309) benchmarking ("sort", Float32, false)...
    done (took 0.127865295 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.155897314 seconds)
    (8/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.276814543 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.133085931 seconds)
    (10/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.292005406 seconds)
    (11/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.242532732 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.078635241 seconds)
    (13/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.074814366 seconds)
    (14/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.301477801 seconds)
    (15/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.077966841 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.098736157 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.172394898 seconds)
    (18/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.144321931 seconds)
    (19/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.109848786 seconds)
    (20/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.096866794 seconds)
    (21/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.176796018 seconds)
    (22/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.072479567 seconds)
    (23/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.172164256 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.144799297 seconds)
    (25/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.074104568 seconds)
    (26/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.156957695 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.107649442 seconds)
    (28/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.222560951 seconds)
    (29/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.243553134 seconds)
    (30/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.07886776 seconds)
    (31/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.063578479 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.138692281 seconds)
    (33/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.130093238 seconds)
    (34/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.0727248 seconds)
    (35/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.181226567 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.172520968 seconds)
    (37/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.07465789 seconds)
    (38/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.124034906 seconds)
    (39/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.067298396 seconds)
    (40/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.094292725 seconds)
    (41/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.076747292 seconds)
    (42/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.097217447 seconds)
    (43/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.089723426 seconds)
    (44/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.144328669 seconds)
    (45/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.075909286 seconds)
    (46/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.096617573 seconds)
    (47/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.257736407 seconds)
    (48/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069338296 seconds)
    (49/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.071219206 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.088459206 seconds)
    (51/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.074069836 seconds)
    (52/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.144539473 seconds)
    (53/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.073803198 seconds)
    (54/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.085607527 seconds)
    (55/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.232095849 seconds)
    (56/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.177015367 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.146268475 seconds)
    (58/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.151179386 seconds)
    (59/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.089397357 seconds)
    (60/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.238593871 seconds)
    (61/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.078528097 seconds)
    (62/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067634008 seconds)
    (63/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.167874577 seconds)
    (64/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.247701992 seconds)
    (65/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.104721153 seconds)
    (66/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.067097201 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.164288011 seconds)
    (68/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.078866599 seconds)
    (69/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.071176588 seconds)
    (70/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.121792363 seconds)
    (71/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.079213913 seconds)
    (72/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.198227304 seconds)
    (73/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.256210277 seconds)
    (74/309) benchmarking ("sort", BigInt, false)...
    done (took 0.212914721 seconds)
    (75/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.095416804 seconds)
    (76/309) benchmarking ("sort", Float64, false)...
    done (took 0.126764715 seconds)
    (77/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.174334687 seconds)
    (78/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.073125227 seconds)
    (79/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.159580037 seconds)
    (80/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.053314932 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.086907216 seconds)
    (82/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.199689781 seconds)
    (83/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.224325086 seconds)
    (84/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.102861031 seconds)
    (85/309) benchmarking ("sort", Int64, false)...
    done (took 0.067928038 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.112940166 seconds)
    (87/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.077670167 seconds)
    (88/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.101941305 seconds)
    (89/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.098125549 seconds)
    (90/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.074171079 seconds)
    (91/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.066475367 seconds)
    (92/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.068419364 seconds)
    (93/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.095179553 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.093564961 seconds)
    (95/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.09660708 seconds)
    (96/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.201694601 seconds)
    (97/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.189890649 seconds)
    (98/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.213705404 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.11795977 seconds)
    (100/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.067644815 seconds)
    (101/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.052094848 seconds)
    (102/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.074368428 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.092960911 seconds)
    (104/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.09589191 seconds)
    (105/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.109585806 seconds)
    (106/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.126030361 seconds)
    (107/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.052473268 seconds)
    (108/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.052362915 seconds)
    (109/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.115397924 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.097505024 seconds)
    (111/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.072804443 seconds)
    (112/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.07379338 seconds)
    (113/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.235850194 seconds)
    (114/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.170102218 seconds)
    (115/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.100253062 seconds)
    (116/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.165979024 seconds)
    (117/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.278459172 seconds)
    (118/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.067535346 seconds)
    (119/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.245841842 seconds)
    (120/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.092339433 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.108343345 seconds)
    (122/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.136559467 seconds)
    (123/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.073461573 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.06718296 seconds)
    (125/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.101728661 seconds)
    (126/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.052668809 seconds)
    (127/309) benchmarking ("sort", Bool, false)...
    done (took 0.156684275 seconds)
    (128/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.07452869 seconds)
    (129/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.093340608 seconds)
    (130/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.053070993 seconds)
    (131/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.198203855 seconds)
    (132/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.06297587 seconds)
    (133/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.052090454 seconds)
    (134/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.094781035 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.086824946 seconds)
    (136/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.073629801 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.066711778 seconds)
    (138/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.193162864 seconds)
    (139/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.214990109 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.093754013 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.074110841 seconds)
    (142/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.11222375 seconds)
    (143/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.087755194 seconds)
    (144/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.291214494 seconds)
    (145/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.053518337 seconds)
    (146/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.053424243 seconds)
    (147/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.051602515 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.088794192 seconds)
    (149/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.07517602 seconds)
    (150/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.06579056 seconds)
    (151/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.095444687 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.097165187 seconds)
    (153/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.105829464 seconds)
    (154/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.07436569 seconds)
    (155/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.098895136 seconds)
    (156/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.052670114 seconds)
    (157/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.066073546 seconds)
    (158/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.107573478 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.06742945 seconds)
    (160/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.053112664 seconds)
    (161/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.129768499 seconds)
    (162/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.073461185 seconds)
    (163/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.087989048 seconds)
    (164/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.068372174 seconds)
    (165/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.094337089 seconds)
    (166/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.071292085 seconds)
    (167/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.073164924 seconds)
    (168/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.191981404 seconds)
    (169/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.062581297 seconds)
    (170/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.075282631 seconds)
    (171/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.147985255 seconds)
    (172/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.141262159 seconds)
    (173/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.124954386 seconds)
    (174/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.0659299 seconds)
    (175/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.074920701 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.108579091 seconds)
    (177/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.063651564 seconds)
    (178/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.248826237 seconds)
    (179/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.068160173 seconds)
    (180/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.072494335 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.115701256 seconds)
    (182/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.071765625 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.137972121 seconds)
    (184/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.05255495 seconds)
    (185/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.236756554 seconds)
    (186/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.065323585 seconds)
    (187/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.095620969 seconds)
    (188/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.052558324 seconds)
    (189/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.07068741 seconds)
    (190/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.094041239 seconds)
    (191/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.158706044 seconds)
    (192/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.09877431 seconds)
    (193/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.067490358 seconds)
    (194/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.094576697 seconds)
    (195/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.090668885 seconds)
    (196/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.089107432 seconds)
    (197/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.213284325 seconds)
    (198/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.074871788 seconds)
    (199/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.083217594 seconds)
    (200/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.07338237 seconds)
    (201/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.13439593 seconds)
    (202/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072181971 seconds)
    (203/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.092107278 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.06659464 seconds)
    (205/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.088459313 seconds)
    (206/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.089194794 seconds)
    (207/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.067208341 seconds)
    (208/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.089524244 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.093102659 seconds)
    (210/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.096755891 seconds)
    (211/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.105855572 seconds)
    (212/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.07339099 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.066551741 seconds)
    (214/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.079373285 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.126942513 seconds)
    (216/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.052455805 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.14959684 seconds)
    (218/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.068425876 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.087778293 seconds)
    (220/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.102343972 seconds)
    (221/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.097545885 seconds)
    (222/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.053383896 seconds)
    (223/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.065725375 seconds)
    (224/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.053069925 seconds)
    (225/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.086237128 seconds)
    (226/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.070134347 seconds)
    (227/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.069315287 seconds)
    (228/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.074249173 seconds)
    (229/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.053089704 seconds)
    (230/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.112687067 seconds)
    (231/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073521925 seconds)
    (232/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.07497031 seconds)
    (233/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.074211756 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.088850668 seconds)
    (235/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.071795372 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.087837572 seconds)
    (237/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.06419276 seconds)
    (238/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.169495753 seconds)
    (239/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.068280071 seconds)
    (240/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.089260765 seconds)
    (241/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.052623122 seconds)
    (242/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.07117022 seconds)
    (243/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.097661639 seconds)
    (244/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.055005432 seconds)
    (245/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.170902585 seconds)
    (246/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.075426115 seconds)
    (247/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.088527409 seconds)
    (248/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.065257225 seconds)
    (249/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.052320422 seconds)
    (250/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.248115279 seconds)
    (251/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.112760816 seconds)
    (252/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.13940937 seconds)
    (253/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.074373886 seconds)
    (254/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.065967952 seconds)
    (255/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.053012364 seconds)
    (256/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.095283453 seconds)
    (257/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.066818153 seconds)
    (258/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.080818326 seconds)
    (259/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.092379711 seconds)
    (260/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.090061512 seconds)
    (261/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.090769996 seconds)
    (262/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.066828356 seconds)
    (263/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.072733333 seconds)
    (264/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.07751891 seconds)
    (265/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.071252489 seconds)
    (266/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.063575596 seconds)
    (267/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.095283335 seconds)
    (268/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.05301004 seconds)
    (269/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.053905536 seconds)
    (270/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.084744459 seconds)
    (271/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.094781734 seconds)
    (272/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.052822751 seconds)
    (273/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.09556295 seconds)
    (274/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.089298297 seconds)
    (275/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.239992927 seconds)
    (276/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.052467208 seconds)
    (277/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.075980136 seconds)
    (278/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.054606606 seconds)
    (279/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.105110608 seconds)
    (280/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.091805986 seconds)
    (281/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.053800088 seconds)
    (282/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078055101 seconds)
    (283/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.167910778 seconds)
    (284/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.052581143 seconds)
    (285/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.088200038 seconds)
    (286/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.188142147 seconds)
    (287/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.066402395 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.074088381 seconds)
    (289/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.087122965 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.066507719 seconds)
    (291/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.053055537 seconds)
    (292/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.085249684 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.073993154 seconds)
    (294/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.067319042 seconds)
    (295/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.076284662 seconds)
    (296/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.053400422 seconds)
    (297/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.15500451 seconds)
    (298/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.052880047 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.132709516 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.072748105 seconds)
    (301/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.052062228 seconds)
    (302/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.075133944 seconds)
    (303/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.073431443 seconds)
    (304/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.053107248 seconds)
    (305/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.111888812 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.072566448 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.112469057 seconds)
    (308/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.069245709 seconds)
    (309/309) benchmarking ("sort", Int8, false)...
    done (took 0.165452059 seconds)
  done (took 34.725422273 seconds)
done (took 35.605150233 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.083681768 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.114735292 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075492679 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.114709702 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081852595 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.100530862 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.073490799 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.101156842 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.08159487 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.104537158 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.079801959 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.055624878 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.097120208 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.07575441 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.097392988 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092936543 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.101065753 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073705641 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074710489 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.087855099 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.074308759 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.088008213 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.068311963 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.055564416 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.100050136 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.074020365 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.094886384 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.07521705 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066130994 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.088436002 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069867535 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073202509 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.088381429 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.080158237 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093803262 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074293652 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.075032939 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.099305551 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.068434074 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.088526464 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074429253 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066634034 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.094881984 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.074158467 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.093219271 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.07213944 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.074991909 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.102117809 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093646737 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090598767 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.0756471 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.098986528 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.077635681 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072689093 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.092322057 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.075692021 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.092926436 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092819814 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.096650797 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069364824 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075269845 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.097453264 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072238107 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.095823939 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074611532 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.076626963 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.098447759 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.072727814 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.097499411 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071950254 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.067254716 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.096556475 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.070667496 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.087622829 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.076281808 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.077144546 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.086766457 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.072595993 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.073159233 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.094289906 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.066533578 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089686408 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.068894155 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.073629049 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09072833 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.056058742 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071049709 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.093948194 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.066388507 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.07455516 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.094393469 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.073608218 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.089565313 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.076941773 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.065783014 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.093792258 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.067354036 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065727798 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.089412449 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.070929967 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.088295462 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06814146 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.075340529 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.089240468 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.07259078 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.101689713 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.06642144 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073094404 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.087272402 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.066183634 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.103478065 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.076250773 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.066552657 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09057744 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.066236766 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.07390877 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.087248427 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.067271256 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066036359 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.088623186 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.073709906 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.087767495 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068769369 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.07398444 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.101460003 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.069360668 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.069695176 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090097465 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.066910566 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.093093711 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.066983375 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.066710546 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.089623821 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.063977465 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068785409 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.088623497 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.074450691 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068235452 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.096632932 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.06882386 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.096880833 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.071378964 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.07271245 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.093810107 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.066205886 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059491284 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090949036 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06889765 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.068167521 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.088732788 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.06900234 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.087896395 seconds)
done (took 13.199922412 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068922558 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.16926718 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.125131413 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.097508719 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.110032582 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.06717961 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.099493359 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.126292432 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.06873059 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.126560402 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088731264 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.107522723 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.115184443 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.087804209 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066816694 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.07013533 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.091002118 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.089222379 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.124747902 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.108599525 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.139334226 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.066294578 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.119829338 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090916442 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.111388304 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.126264314 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.067637385 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.07118898 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.092162833 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.094223788 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.108693917 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070416129 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067423137 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.121899371 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.115782526 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.085804033 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.088553516 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.085128891 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.08878852 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066718121 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.114308302 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.09972146 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.104000198 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.104292601 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.070285004 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.06968578 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.090105242 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.085950606 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.113403812 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.103232617 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.088980388 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.131433551 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.09135717 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.083144144 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.065343731 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.110283554 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.103885503 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.070023493 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067601572 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.091174702 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066863038 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069832987 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.11138481 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.113896893 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.071601584 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.10431526 seconds)
  done (took 7.207855119 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.087695448 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.115746055 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.084696676 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.106927751 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.067386115 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067592171 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.089387904 seconds)
  done (took 1.551644929 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069485711 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.091125897 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.11231921 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.090170492 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.108918099 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.088726927 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.098783163 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.068059734 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.106362666 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.069236704 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.110259425 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.104763224 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.091346799 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.074070228 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091516539 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.090742614 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.092267633 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.089819318 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.07123209 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.113861323 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070346985 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.110277655 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.06931802 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067596938 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.104931602 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.068495747 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.138236546 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073077592 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.090721573 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.070941583 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066403938 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.138683142 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.104358045 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.078663023 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067423104 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.105354969 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.083201604 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087906303 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.084363793 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094858978 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.08282284 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.068373167 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.092010752 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.066744038 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.071936233 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.101330254 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.069195844 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.091270046 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.070654836 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.110076865 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.068794135 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.082692207 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.090478209 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.07235549 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.068732738 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095835155 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.077872854 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.091290396 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.088100588 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06921125 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.107459687 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084690168 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.105067677 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.084571371 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092964551 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.083162563 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.103997819 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.070666703 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069784834 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.093992162 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.084730476 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.08850336 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.06926569 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.078734392 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.092280008 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.09144036 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.113924044 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069582242 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.100008033 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.068243712 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.068311741 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.090612495 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.092396453 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.093373213 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067872432 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071733081 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093481828 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.066534916 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.066029818 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.0943284 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.066678541 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.091832891 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.071220389 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068421378 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092532012 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.085319378 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.090788829 seconds)
  done (took 9.297959033 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.071521569 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.06911959 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092621066 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068961646 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068861812 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.090978103 seconds)
  done (took 1.403282827 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.099237832 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.092802373 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.082649083 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.095313758 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.107723502 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.105086898 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.0831056 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.105218285 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.08571142 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.102141801 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.083277321 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105788157 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.088428756 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.09606817 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.083159146 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.095064919 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.083677702 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.099444202 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.080161972 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097033209 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.08808412 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.096469837 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07450204 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.107141497 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.071859455 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.073901748 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101330008 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.081387131 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.102378279 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.083183245 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096413594 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.071462352 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.095330856 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.083700208 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.105655978 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.073092364 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095842436 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.072494041 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100439954 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.071241129 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.10694222 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075107509 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.078762125 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094502061 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.106786381 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.072628266 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.072101504 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.099120499 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.082565396 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.095066251 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.072310084 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095777987 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.071459162 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.095064438 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.072581852 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.105725297 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.072632476 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.106039526 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.074347618 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.072292295 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.093635068 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.071929735 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.105566597 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.071360696 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.103428791 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.072197434 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.09592543 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.074364487 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096552524 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.073891733 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.094780627 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.071423757 seconds)
  done (took 7.306946249 seconds)
done (took 27.692289156 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.653384859 seconds)
  done (took 1.594223897 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.793734057 seconds)
  done (took 1.737071819 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 14.808217871 seconds)
  done (took 15.754407985 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.612550688 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.762408534 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.808646962 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.156572646 seconds)
  done (took 3.283469494 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.879762831 seconds)
  done (took 1.843853295 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.239677001 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.245443804 seconds)
  done (took 1.435174874 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.732106077 seconds)
  done (took 1.684934514 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.289218192 seconds)
  done (took 2.241057081 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.327794312 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.181686491 seconds)
  done (took 1.467073329 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.513331965 seconds)
  done (took 1.46567291 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.531700236 seconds)
  done (took 7.492388689 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.231527243 seconds)
  done (took 1.197717759 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.268815748 seconds)
  done (took 1.222750748 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.141607352 seconds)
  done (took 4.099554644 seconds)
done (took 47.467681786 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.080712802 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081679738 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.104760116 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.079150875 seconds)
  done (took 1.299724929 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.080321771 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.073983327 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.10118624 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.073691103 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.101737374 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.074089523 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.098920518 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.078496796 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.073409134 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.097504494 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.073645565 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.096676995 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.076385531 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.098223247 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071631542 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.076345301 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.1003993 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.074402079 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.099773389 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.074247128 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071979511 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.099281186 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.076839042 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.096291183 seconds)
  done (took 3.005261748 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.080341194 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.074256217 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097742459 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073318026 seconds)
  done (took 1.286519309 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.079557527 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.115703016 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.090162138 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.100640993 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.093204983 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.110795645 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.070901868 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.071093291 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.09612949 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.078527 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.092518452 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.099456842 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.111852387 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.07774955 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.102594264 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.067770927 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.070206719 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.111548515 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.078050956 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.101872152 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.071540458 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.100949469 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.068971936 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.090136729 seconds)
  done (took 3.11999576 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.079890407 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.103534653 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.102386411 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.09005705 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.115870526 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.066504108 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.100430268 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.09247163 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.150988233 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.066624267 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.094679924 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066765431 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.096714105 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.066526747 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.078060843 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.133731427 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.113675835 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.092888819 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.097695849 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.090159659 seconds)
  done (took 2.870208432 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.077997591 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.072561324 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.090476797 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069806236 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077102402 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.097066901 seconds)
  done (took 1.454017281 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.071839433 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.070036744 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090963289 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067786908 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072641594 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.091762231 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.067226229 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067790952 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.091503766 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.06841199 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.067619579 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.090116372 seconds)
  done (took 1.88264636 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.422121798 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.070815012 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.093751127 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.067020561 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071776275 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.090988805 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.081081057 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068937663 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.114836866 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.067646872 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.091410187 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069331236 seconds)
  done (took 2.279797943 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261186125 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078860461 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.319910772 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166788567 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138113747 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155181724 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105063968 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140003806 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.195566221 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138145936 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200380854 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219405595 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133861092 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167187693 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114184394 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.131689522 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183202442 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219541173 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129270704 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199317238 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204895194 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156621865 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179013759 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128181634 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133731382 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144449436 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.072133163 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105100508 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229088396 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160305286 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19945521 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137773795 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119162879 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205205026 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218413573 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194336395 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162706435 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086124757 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.157469287 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.163966247 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.254614702 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115010165 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217531255 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10992863 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106977648 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171053473 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145846106 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.146335972 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.136739248 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116086858 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17196965 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237174349 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.190424716 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088656726 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136816458 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13825407 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.143262534 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128355162 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240838758 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192269805 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182480767 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.07328886 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123266895 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186104026 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158615481 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.141474481 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.177331321 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09565311 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194403985 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187671337 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142864514 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199142554 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.158441538 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114385317 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146765423 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170938479 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153572874 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227961505 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153741331 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.074695812 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174359336 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102383462 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10808654 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.170201186 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077857013 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232637465 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124152686 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.113990684 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139566451 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137162695 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13611064 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216665139 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175946864 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129282989 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.067228466 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128992962 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.149084944 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198728159 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089302274 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135452302 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145452027 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.104153161 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163400042 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.100326151 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15191444 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.07902175 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150629873 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161095738 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.101374314 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152978777 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127849755 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.103361986 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187388469 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19274903 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116172637 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107533806 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198978338 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153136785 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.131150781 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.19880791 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.188188222 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.127922247 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126291797 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174417416 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239314977 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116030825 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221128529 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104796273 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108959551 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.113704205 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154681093 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139937195 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.149378019 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083838782 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.151352606 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224119559 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.101109102 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096179117 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16498511 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106627068 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106900729 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139880158 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099781491 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.121283779 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.127003077 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.132386938 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166716621 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153610989 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135122726 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150857838 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124694278 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217803668 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114430134 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.105901941 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129922659 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070925901 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.187856038 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190292848 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105569429 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224260822 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.154318793 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129909171 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146138851 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085210164 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168171563 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104461986 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.071992339 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196116739 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138079436 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111593031 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.208803686 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130196236 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.154239786 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.151273237 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159554826 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159526054 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.18586996 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108322106 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.113229161 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139733674 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152154567 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.100543261 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.094569592 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.109046144 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129665912 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120391813 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084962337 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169493762 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179003478 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099438872 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138818947 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123994745 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178738654 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.102853715 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158046486 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.147383658 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121703159 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.18286132 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21258508 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16372327 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127134695 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198545536 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.072379042 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074871691 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.115676532 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155225478 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110094139 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.085056264 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141753308 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.203861179 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157289557 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16308762 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137559763 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149257184 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.212286082 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.072417487 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.145076511 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178510358 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151715583 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.155228719 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113823925 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.10136381 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.199612595 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130907821 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246130206 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144128287 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152864373 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180842448 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.130192573 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106234144 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104262326 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190402148 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131217517 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.180457201 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131709756 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115020484 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136994671 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.082442631 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130314408 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154267033 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145028748 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188154772 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.144444257 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160767843 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103535365 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141926264 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152971265 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149291443 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.065770274 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147920075 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219514276 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1211161 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145766009 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184477159 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106202235 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.151548518 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237426124 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17442 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110894708 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135011036 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149899566 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158853033 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147438563 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169636295 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136294129 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164019563 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138709048 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.111074888 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089012208 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124698723 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134559466 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.122500575 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.140109165 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.145171969 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095852142 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185644862 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138384414 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137308875 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146021605 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.100021444 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.117822054 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099303982 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234877726 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149513706 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232377496 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.129219076 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.205372874 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199215992 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102107792 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080268248 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.107122547 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171366729 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110655791 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16171251 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.097376944 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131983683 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154081211 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197941085 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096865204 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.095697279 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136896513 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162439558 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13865159 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125459507 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.107053396 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221888205 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.131475928 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080086121 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152868209 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131718412 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129608982 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236662583 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.063320425 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12455861 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077580035 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108060366 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158951427 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212751661 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.083824929 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.153338282 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147884299 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148626351 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158240236 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12672541 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123314175 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114493379 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203069918 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156488441 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.116470632 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140897479 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158731524 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215022452 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107013979 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.1228919 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22791529 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185418386 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.221125422 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.115025077 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144472434 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143517984 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139250043 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170636522 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110918835 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224368984 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084005735 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190397868 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12980508 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094378684 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181468744 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.098440699 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115637306 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179643437 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146895858 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109008004 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080659541 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164641329 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15113899 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104016379 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.101661126 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183307583 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.100914617 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167135143 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227481986 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083288802 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13434554 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12241207 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083343273 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132383122 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129412569 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114108957 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.121697378 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226225919 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.117355047 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206700649 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172270614 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141459842 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19216081 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101933739 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.662501364 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.106285304 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187118722 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145419616 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.26222115 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100173932 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149051343 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139762685 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149582134 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196434289 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132060229 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.17686878 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187511663 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.149827995 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080845216 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129915981 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138018274 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.115580986 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134573582 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142797464 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143120242 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.10081 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.172760158 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156634171 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.08310469 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.122643907 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215642785 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145603209 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173832677 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170522111 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112456418 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146929024 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194743024 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082908737 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.150019906 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212403828 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135455906 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126536279 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.083379371 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.132684903 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230593844 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.075008479 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21796711 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152734449 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137820011 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141757544 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.147065474 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186092676 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133739591 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15431332 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097155285 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.165331907 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118119948 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111075664 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.104236704 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109189278 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138481411 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.126451676 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129426125 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.141993963 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186164825 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.072192031 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121040481 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129938545 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17110408 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23608991 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.11729358 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084308029 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146011269 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138964371 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.142146612 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17816786 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.083938945 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109712958 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.084045805 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.138405689 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.138422308 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142366322 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105323029 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138333409 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224010706 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.111130168 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.225565244 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122193449 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137137743 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.071525057 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.106473484 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122869661 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096961257 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130859232 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125195552 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22939229 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.099929697 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.11722281 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119251308 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.075436881 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109862328 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158426653 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138734631 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150165519 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124212424 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.065597169 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135052122 seconds)
  done (took 70.966300055 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.146358586 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.12121934 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.132823132 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.190412757 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.162863481 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.253431655 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.200240824 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.240300776 seconds)
  done (took 2.49012695 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.073144419 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.118411055 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.103238348 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.1158803 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.090969582 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069620335 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.29608208 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.110190107 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.068165202 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.115786039 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.118270438 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.093291774 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.459245785 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.06763533 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.094043592 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.087051972 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068378219 seconds)
  done (took 3.186069759 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.435615813 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.628012352 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.454342365 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.074756181 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.8385615 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.090072441 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.308849815 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.163468532 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.074769799 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.428671871 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.744570744 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.132613146 seconds)
  done (took 17.417594384 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.078900724 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.071488388 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.110727101 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.085520128 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.099195531 seconds)
  done (took 1.496602608 seconds)
done (took 113.70825581 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.082734621 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.359520943 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.05462197 seconds)
  done (took 1.493028604 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.086529787 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.086629406 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.112831241 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.085133231 seconds)
  done (took 1.421993981 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.077185518 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077588974 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.111950914 seconds)
  done (took 1.315353974 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.284894908 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.166441617 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.09035186 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.085838388 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.07899294 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.1052872 seconds)
  done (took 1.321406415 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.075380522 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.076413375 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.100202797 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.077624663 seconds)
  done (took 1.37257859 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.079900028 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053591773 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.05615005 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.082408602 seconds)
  done (took 1.326273259 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.09210484 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.106817778 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.081801064 seconds)
  done (took 1.326437776 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.111102199 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.112929615 seconds)
  done (took 1.274523081 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.084295097 seconds)
  done (took 1.126570709 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.095384064 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.140619262 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.155968908 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.136644188 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.166179607 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.137616358 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.112718117 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.088277844 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.104458008 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.115373299 seconds)
  done (took 2.302598484 seconds)
done (took 15.943971072 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.081350182 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.391974974 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.362639905 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.117402157 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.669812623 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357243997 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.04212043 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.119011294 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.108541821 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.094856306 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085183872 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.651130806 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.994569156 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.32369111 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.981880677 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.323840277 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.676750506 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069339937 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06861503 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094838146 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.002127811 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094615405 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068874577 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068497174 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.676072603 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.37223675 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095064145 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.323340176 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068524394 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.096986936 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355897467 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094413832 seconds)
  done (took 15.973978291 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.073939644 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.143880873 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075197047 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084699773 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.097852272 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.07118265 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.098914427 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.071164789 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.147429499 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06948143 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111566191 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069402281 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072989073 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.096136404 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088178441 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.095018648 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070835658 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069921709 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.095622137 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069871053 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.113396288 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069416401 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068936289 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.095441052 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.06935211 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.10698394 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070251414 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068760773 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.095931106 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071085577 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.097842938 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069973294 seconds)
  done (took 3.819766867 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117994711 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.152938654 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075303724 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.12897385 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114587883 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.098062705 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.171038047 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094368908 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.151105691 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069055076 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111823281 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069601416 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.128260272 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069968037 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.114133056 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070595158 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069775528 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.094985171 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069953482 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.095284427 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088290807 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069074326 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.095698828 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069974479 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.095255573 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082139733 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069526342 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.098177978 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069553942 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.09762657 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072965211 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069412418 seconds)
  done (took 4.104958229 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.075367667 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075649895 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109588409 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.08534664 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.097088054 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.073325705 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.074132319 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.096753493 seconds)
  done (took 1.749358943 seconds)
done (took 26.689724871 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.081510914 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.070402203 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.10069212 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.082281309 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.09977444 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.080438025 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.069027727 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.10173556 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.076964801 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073142658 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.103510638 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068481187 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.098246489 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.068954746 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.075210027 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.094928993 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.080810451 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.098833349 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.080453179 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.107018979 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.071368281 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.076129436 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.101189271 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.080987816 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.106567473 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.081353857 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.081158454 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.10073972 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.070311314 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.098252784 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.078335528 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.111330625 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.069948339 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.080884029 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.095464464 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.069314215 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.069052467 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.09495416 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.081132126 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.101807838 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.072299939 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.101977325 seconds)
  done (took 4.651854286 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.091902502 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.093386404 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.112880326 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.062734877 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.095094107 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.063362542 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.089889091 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.088251228 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.06359736 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.116104826 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.057495512 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059044821 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.0868341 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.055357069 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.058948849 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.05764913 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.088281983 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.058340054 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.058706541 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.085719926 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.062298351 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.055132383 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.061312051 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.086649443 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.05803274 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.063158513 seconds)
  done (took 2.991669739 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.077834776 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083067284 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.114559222 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.1292572 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.133200961 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.076419734 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.105663185 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.086912444 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.111818999 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.068992945 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.072421485 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.123567378 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087529288 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.10154415 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.069075054 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.110111521 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.083672398 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069751618 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.102243436 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.089164034 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.112132356 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.078706437 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.089495476 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.107502457 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.06822224 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.097465462 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.07289018 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081871389 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.100878233 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.077679002 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.099459887 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.072484775 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.096811933 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.081118362 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.073011335 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.097441351 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089050187 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.105746905 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078831024 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.07001672 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.099569097 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.070676143 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.116077309 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.113016696 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.09480937 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.076294966 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.076661644 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.105509418 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.06912952 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.113181906 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077940126 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.068562932 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.099038907 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068733335 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.069040074 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.109388113 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.071681279 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.097214019 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.079066471 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.072261187 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.108055715 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072607728 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.111374649 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.06957646 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.076206094 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.094825764 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.06974716 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.094218989 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.09169194 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070339122 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.135902315 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.070290012 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.096500813 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.078204474 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.102666112 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.076041639 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.069941973 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.111386607 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079278524 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.098924141 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077916823 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.072242927 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.09836806 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.086817288 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.097413691 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.070956085 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069749564 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.101232979 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072221793 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.070535803 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109613573 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.069855291 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.098582572 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.087134909 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.094569729 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.070688284 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.07485508 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.099809376 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.069154438 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.107695102 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.074737856 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.07013466 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.10511566 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068912453 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.097849781 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.079489224 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073658932 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.094535122 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.074139077 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.101294988 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070238578 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070102633 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.098135143 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.071209113 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.077928986 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.101765047 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073149651 seconds)
  done (took 11.347605481 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.193216781 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.185974049 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.072135078 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.17806977 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077665017 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.108190136 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.179367385 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.098101951 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.096757935 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.069922311 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.070165642 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.133834974 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.12684728 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.110721758 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.107998099 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068944119 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.113773489 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.108453061 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.181865074 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.176359983 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.115797791 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.078248756 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.071924086 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.097878505 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071759647 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.07825668 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.113521509 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.103811128 seconds)
  done (took 4.270561758 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.084397197 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.124509562 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.075221614 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.086511671 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.119518471 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.069343693 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.100737294 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.071335184 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.108064915 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.080918187 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.096349556 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.075075335 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.07645982 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.104854026 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070362289 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.1052041 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.078686231 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.071038643 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.099544772 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074360799 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.102065511 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.081673371 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.073209483 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.096448419 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.075268849 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.095581804 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.065436022 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.113368592 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069936781 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.115410725 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.067970867 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075384175 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.105705214 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.070726666 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.0691468 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.098433769 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.071364146 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.098536945 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.071427779 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.067426587 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.095566402 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.059342936 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067951707 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.108841494 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.075469627 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.088756985 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.075655803 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.07463654 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.102185566 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.067289196 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.098587974 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072244737 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.07341399 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.104114589 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.075253896 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.074294778 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.09992229 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.068346072 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.102332668 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.0721636 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.066080379 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.095606025 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.074615839 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.067669426 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.105065758 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.07439615 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.095198545 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.071471182 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.073671652 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.103018649 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.072274406 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.072386157 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.09565184 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.071424629 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.100955228 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.074144853 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.072412863 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.095355256 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.069689875 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.069270012 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.083919343 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069911251 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.055328172 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.100235179 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.068473816 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.067616985 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.098490171 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.078269415 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.108803555 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.071498223 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.102348647 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070407667 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068566104 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.099807878 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.064476342 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.072184151 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.111149184 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.08429878 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.09630496 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.067994386 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.109777 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.074863381 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.06857503 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.085741204 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.077579169 seconds)
  done (took 9.86553358 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.095677209 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.093490647 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.09864336 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083388958 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.12277259 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.0935401 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.104415491 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076296169 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.07061802 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.114646182 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.069849196 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.105136508 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.073740408 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078438317 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.120865939 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076997517 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.099001589 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.080016945 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.077121495 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.13296161 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.083064491 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.111837534 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.07967872 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.097879495 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.073815877 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081291369 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.124330322 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.079960351 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.10646241 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.083628708 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.079864006 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.124004221 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.084551268 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.101627648 seconds)
  done (took 4.267874855 seconds)
done (took 38.447246884 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.14868439 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.347572811 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.12955932 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.006192068 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.137322069 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.163386823 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.138506707 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.132404448 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.33062229 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.129449913 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.375222052 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.750518235 seconds)
done (took 58.865479141 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.206767667 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.272381266 seconds)
    (2/2) benchmarking "String"...
    done (took 1.40075043 seconds)
  done (took 3.757483791 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.472437638 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.099042094 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.413427606 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.132409097 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.141282583 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.583752768 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.694144223 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.99185813 seconds)
  done (took 27.131841888 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.1403063 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.492291906 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.462155056 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.462802046 seconds)
  done (took 17.637347888 seconds)
done (took 58.280047544 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.137684705 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.152326626 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.150058735 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.117728125 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.235836261 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.160516819 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.176757879 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.207372267 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.130634558 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.114618946 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.152824701 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.128755814 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.154550368 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.238410076 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.1372448 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.131488736 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.19149116 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.77515221 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.523503545 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.138618625 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.163282325 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.158650101 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.139881971 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.133179047 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.204004854 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.133054403 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.13171476 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.144262865 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.348621311 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.134433242 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.223729253 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.484676143 seconds)
  done (took 187.633477629 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.133381884 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.167773955 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.285292565 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.167710273 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.583459201 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.331314382 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.272578663 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.656841603 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.150035226 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.15829255 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.403723314 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.136844123 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.470988867 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.119508324 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.145980455 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.203721503 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.33451808 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.459954921 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.15287727 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.405736587 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.160257805 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.386631673 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.297017336 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.357734792 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.175737417 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.152702146 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.165227103 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.137157954 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.326544639 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.282836484 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.135862904 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.182402444 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.700014987 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.992825742 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.151440877 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.153104064 seconds)
  done (took 147.57614811 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.412457163 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.134939087 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.133692785 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.134891792 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.164390037 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.135592979 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.660932768 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.661478233 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.674907435 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.556048288 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.191982192 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.331414062 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.131659271 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.230259024 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.143581794 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.137056815 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.149142224 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.163101537 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.136321217 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.13545798 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.663794952 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.151332522 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.695012064 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.139886351 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.13612313 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.164171904 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.529536266 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.132334829 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.166379439 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.452145679 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.175431609 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.135806665 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.399537768 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.602617929 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.241296476 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.136305724 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.168373348 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.137546708 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.402978396 seconds)
    (39/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.13601574 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.137490586 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.138781694 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.141643193 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.70115376 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.13900583 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.666295034 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.138615759 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.019610206 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.136670605 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.138301207 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.663590446 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.506906772 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.136738554 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.137160081 seconds)
    (54/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.136616537 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.140834008 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.138285804 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.137219562 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.165106112 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.667080637 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.237485473 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.137767389 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.140585218 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.168099062 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.138493208 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.484723781 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.135742897 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.168811525 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.196575919 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.249763462 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.666260405 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.136862199 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.231513765 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.254460232 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.136720209 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.137202347 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.136579652 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.135564169 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.243085018 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.136498693 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.532137455 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.142242477 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.140159899 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.196531161 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.135110951 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.230636593 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.134174626 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.426423578 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.139241533 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.135541508 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.821782324 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.228920634 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.137039257 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.137836498 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.138566225 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.537288645 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.66543491 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.303329201 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.139256772 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.53376264 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.138326708 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.549560944 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.652614254 seconds)
    (103/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.134951034 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.679193946 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.138236044 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.245404882 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.140821494 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.140590868 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.137875476 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.166464851 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.140066911 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.197058383 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.13454618 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.532440267 seconds)
  done (took 339.30443773 seconds)
done (took 677.003830605 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.773718103 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.756427452 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.879552517 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.75361049 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.737231937 seconds)
  done (took 9.982106027 seconds)
done (took 11.065222657 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.322753384 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.321254612 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.196940652 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.324375509 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.166870007 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.339122901 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.297700835 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.160050854 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.237834531 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.210296229 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.238876377 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.186631936 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.165674008 seconds)
  done (took 17.250891545 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.450103991 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.439557196 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.203047655 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.450955725 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.17884777 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.460727205 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.335688053 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.354281737 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.337205595 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.155230764 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.154748005 seconds)
  done (took 15.607895568 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.457086669 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.452811526 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.207543473 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.461908647 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.179433742 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.453791113 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.348341488 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.352568541 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.337266883 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.154235369 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.153811994 seconds)
  done (took 15.642702111 seconds)
done (took 49.582841842 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.152448364 seconds)
  done (took 2.235204957 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.181984069 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.34670918 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.161702755 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.155267572 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.152294923 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.151528323 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.155657253 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.150012348 seconds)
  done (took 10.538877738 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.147034139 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.146040174 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.148622334 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.149505755 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.151536331 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.147502793 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.146345192 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.145955953 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.150098838 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.148699097 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.147533418 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.150069607 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.150442022 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.15192294 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.148606889 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.151163134 seconds)
  done (took 19.469050043 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.148866893 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.14845405 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.14670056 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.146876164 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.147478383 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.14986502 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.150337812 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.147962371 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.148553445 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.147446746 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.148717304 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.147315008 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.147804836 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.14798371 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.148834812 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.150755591 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.149429122 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.148671275 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.154960654 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.15198851 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.151012495 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.150354882 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.148422143 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.147378922 seconds)
  done (took 28.662195765 seconds)
done (took 61.987405436 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.130749789 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.757495825 seconds)
  done (took 8.976600065 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.152532727 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.151566826 seconds)
  done (took 3.392386761 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.152400002 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.149847004 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.151068134 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.153536811 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.152151909 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.152774717 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.152632402 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.152056175 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.151985553 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.153931014 seconds)
  done (took 12.609760187 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.152143894 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.151659233 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.151164222 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.151584461 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.152964887 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.147844775 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.153118912 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.150927449 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.152625946 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.14924345 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.152706843 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.149604645 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.14962515 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.148057014 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.15360835 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.148860888 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.151867791 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.151404526 seconds)
  done (took 21.806451963 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.1505683 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.153812967 seconds)
  done (took 3.389414576 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.149939224 seconds)
    (2/7) benchmarking "second"...
    done (took 1.149748 seconds)
    (3/7) benchmarking "month"...
    done (took 1.149250581 seconds)
    (4/7) benchmarking "year"...
    done (took 1.150968914 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.150913121 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.149627491 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.151592419 seconds)
  done (took 9.13769569 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.153778363 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.328519003 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.408009591 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.742590162 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.15597162 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.157224134 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.025971278 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.157142479 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.158626277 seconds)
  done (took 13.374742314 seconds)
done (took 73.772148237 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.155027246 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.145274276 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.004322788 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.155340838 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.162561169 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.489155734 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.169985626 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.273023224 seconds)
done (took 36.644417804 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.162190665 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.86152865 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.86651729 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.154587874 seconds)
  done (took 10.972075321 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.138220973 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.052104835 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.151172328 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.129477176 seconds)
  done (took 17.562127634 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.756486655 seconds)
    (2/2) benchmarking "read"...
    done (took 1.478649343 seconds)
  done (took 4.324838572 seconds)
done (took 40.10852714 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.15438573 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.152604873 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.154447022 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.153377678 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.155852406 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.153445357 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.154483615 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.155498163 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.154928846 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.154739608 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.15619719 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.155913422 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.157756045 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.153042532 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.15443491 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.154841805 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.15285032 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.156629588 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.151451321 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.154516201 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.153645578 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.156106664 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.153313983 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.153203717 seconds)
  done (took 28.794844471 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.156240096 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.155091194 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.157159223 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.1570426 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.154015384 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.154729192 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.157171157 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.155017835 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.155114794 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.155027201 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.154780173 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.153741408 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.158052162 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.154343974 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.157589011 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.154401496 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.156428742 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.154951759 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.156409958 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.1554435 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.15808709 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.152513185 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.154363365 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.156656258 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.155070202 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.155068361 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.158633583 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.158041168 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.156113933 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.15638733 seconds)
  done (took 35.765454022 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.16232471 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.16607076 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.15808425 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.159268353 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.157047581 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.158451836 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.156841998 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.157234043 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.160506478 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.159207138 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.158636381 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.158224303 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.157249151 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.156990955 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.159584164 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.155970553 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.15963969 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.156993862 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.158470171 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.158050185 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.157852578 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.158861684 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.157428912 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.158503439 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.157033657 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.158598606 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.15925689 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.157072417 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.160542545 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.160212912 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.158113622 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.156873097 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.160817197 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.159155415 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.15845315 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.157856676 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.16225097 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.167666379 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.156997096 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.158445066 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.159540405 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.158065077 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.158112265 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.158284961 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.160018354 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.158974655 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.157606925 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.158015391 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.160084827 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.16028814 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.159887313 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.161152582 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.160282502 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.16130367 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.159952035 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.159375648 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.161190239 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.15994402 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.162266474 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.160195013 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.161625456 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.160262585 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.162688909 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.162930652 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.162372323 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.161062544 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.159825161 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.159923762 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.160736923 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.159958585 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.160058871 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.159947986 seconds)
  done (took 84.576071601 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.159679145 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.157473141 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.158055093 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.159498033 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.158313332 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.160537894 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.156748472 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.161689002 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.160162653 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.16121888 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.161520748 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.158220189 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.160922667 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.161311509 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.161484429 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.158174015 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.164509875 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.157763681 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.161228254 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.160872079 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.160940158 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.160607472 seconds)
  done (took 26.615245286 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.164742445 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.163064359 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.158445781 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.163739445 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.159382392 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.163377329 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.163927151 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.163294289 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.16462451 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.161990135 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.161456619 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.164356248 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.161680501 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.160423275 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.160627904 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.159125321 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.162619718 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.160141907 seconds)
  done (took 22.011548137 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.162103481 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.162001878 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.163378883 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.160107736 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.160899802 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.16461543 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.161627929 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.164775371 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.162573095 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.163995513 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.164887322 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.166779396 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.162329109 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.164518781 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.166110423 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.164050542 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.166983242 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.161539909 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.166294676 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.161308505 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.162029582 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.163968707 seconds)
  done (took 26.691685923 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.164836978 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.164659264 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.163648429 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.161473474 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.161622743 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.167013178 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.16347625 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.161473487 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.1659252 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.165830561 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.162092279 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.168898157 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.164040147 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.163961563 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.16316423 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.164770926 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.1637315 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.16453986 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.165304864 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.163662302 seconds)
  done (took 24.383604124 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.167525868 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.166033482 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.166438505 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.165423343 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.167636281 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.168971427 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.166741505 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.166877257 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.166490011 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.169286608 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.1682534 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.168383795 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.167505879 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.166413199 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.170289638 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.168928983 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.167615753 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.167221201 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.168841077 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.167411591 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.170510185 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.16733886 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.169854472 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.166324314 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.168507465 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.169200861 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.169402733 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.168430971 seconds)
  done (took 33.803123668 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.166876262 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.166571962 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.166884845 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.166560782 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.165837338 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.163651603 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.164532133 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.167374723 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.168791153 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.162309236 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.164297384 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.168172766 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.167862918 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.168222308 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.170208348 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.170611601 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.167681211 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.165971607 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.165037617 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.167585706 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.167156014 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.16748354 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.168356649 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.16595894 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.167007412 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.16953802 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.166937121 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.165802043 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.16844163 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.167866589 seconds)
  done (took 36.113694971 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.187810667 seconds)
    (2/2) benchmarking "in"...
    done (took 1.186427722 seconds)
  done (took 3.478966082 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.165199496 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.169364849 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.167992261 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.168838303 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.166142177 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.170961679 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.169296558 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.168765599 seconds)
  done (took 10.451367278 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.1673477 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.16853335 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.168193633 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.170588174 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.171759432 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.169466914 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.177433698 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.18857893 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.167500127 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.171005331 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.171419153 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.175367323 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.172922423 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.167828491 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.167955373 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.172903082 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.172132531 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.171683365 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.169463095 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.170389067 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.172133475 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.171936865 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.167709403 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.170256441 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.172302605 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.180316096 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.173730238 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.167640113 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.171667364 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.175407061 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.169712875 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.167510211 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.171162644 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.171853138 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.169608072 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.170862379 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.179087167 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.185672322 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.176866765 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.172014571 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.172648221 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.167734106 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.172060362 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.172121242 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.172853607 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.169587334 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.172689692 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.169953359 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.170514695 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.171579954 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.17577615 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.169220479 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.17054518 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.173406924 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.174334604 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.178689861 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.188997317 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.17303386 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.179833336 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.180116177 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.183661377 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.178442079 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.170344451 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.173494937 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.182312866 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.19420392 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.178562834 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.186448088 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.171072896 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.170149062 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.181118282 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.183878448 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.180610932 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.173319174 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.172443685 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.172670855 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.172179053 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.173549272 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.181249139 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.190368031 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.174779237 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.173671239 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.182194122 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.193341908 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.171889431 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.173196562 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.171373382 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.173544403 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.175179268 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.183123016 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.19190355 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.17337631 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.172614832 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.171555668 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.173920604 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.173144775 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.171995544 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.172587434 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.17091904 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.172700138 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.172905832 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.17569587 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.180762749 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.173738791 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.174015502 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.181258023 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.175258364 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.172012371 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.177961887 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.174226516 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.173950232 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.175170263 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.179271287 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.17032749 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.175327317 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.180452929 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.175056178 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.174398689 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.174962605 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.174532633 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.183955911 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.199131167 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.175089869 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.173995469 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.178256411 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.185927826 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.176215601 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.17658119 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.17401525 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.172803999 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.17298962 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.175572787 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.175627092 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.174998674 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.175007556 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.175581024 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.172776584 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.17502727 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.175570967 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.173857406 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.176488634 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.175628739 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.176137569 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.17746517 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.177022409 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.176534437 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.181662223 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.175561437 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.176601905 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.176952781 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.173262138 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.175644423 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.177124638 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.177914379 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.175657293 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.178266659 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.175623665 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.176924428 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.175136207 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.177771602 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.178940922 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.177149984 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.179171583 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.177985993 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.179977911 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.176693558 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.174011143 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.176730688 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.177123728 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.177176336 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.176664377 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.175941099 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.180630075 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.181138227 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.178297234 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.177971188 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.177660764 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.178580727 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.178400055 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.179230985 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.178270301 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.185021875 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.178354667 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.184446462 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.177391889 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.176397913 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.179271353 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.177631356 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.173328916 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.178576177 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.179353671 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.185621184 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.188977531 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.186006176 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.179270857 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.182076704 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.178780937 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.183720209 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.180925546 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.180123008 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.17727305 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.17963323 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.179422624 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.179800706 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.179049286 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.179449617 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.177494886 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.1764155 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.178116768 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.179699455 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.180745387 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.179767412 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.178182045 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.178010368 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.181208384 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.180081425 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.179630589 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.175800983 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.179999114 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.177517989 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.18044044 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.180308509 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.187075857 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.177504487 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.177044723 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.179790577 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.177554204 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.177150325 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.181166563 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.181964016 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.180902589 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.186074295 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.195736898 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.182042916 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.187197062 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.195075671 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.180301351 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.18318726 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.179043148 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.1794944 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.184564572 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.187347465 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.179908093 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.182099401 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.181186637 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.180890475 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.184484492 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.185171518 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.178024438 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.181568968 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.180910989 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.182537989 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.178278984 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.181990981 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.183206517 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.179668227 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.182278915 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.180382016 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.185618541 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.181931388 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.181735064 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.179520149 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.182870359 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.184324658 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.191709195 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.187056017 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.181597649 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.18176659 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.183703017 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.186502943 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.179013306 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.180841037 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.181157067 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.195175269 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.190855554 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.189968106 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.179990707 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.183325615 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.189065696 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.183434496 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.187014345 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.180070486 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.182508681 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.181878577 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.180654736 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.178950611 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.182560358 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.183753258 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.183788492 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.181872943 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.187659248 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.18304692 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.182574916 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.182048294 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.183981548 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.181756819 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.181981805 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.183753386 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.186328847 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.186431798 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.178080013 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.182850109 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.187986919 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.201702447 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.184789779 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.182142178 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.183103474 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.180254315 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.182390783 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.186413323 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.186486498 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.191035991 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.18539318 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.193884509 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.184736352 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.190264081 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.186200045 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.183477127 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.191874292 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.180549191 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.182659571 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.185470584 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.183647376 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.191390265 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.201217336 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.185818739 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.187515355 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.185556006 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.184198878 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.183515592 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.186497861 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.185136185 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.184886674 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.194478712 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.202323914 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.186556512 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.186614391 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.183328836 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.186994061 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.186194831 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.184108828 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.188470634 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.188363645 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.185948328 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.183908828 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.187146427 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.186196243 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.187317593 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.187625017 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.181227205 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.187108342 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.191414534 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.203703246 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.190254068 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.187510121 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.191353526 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.188365221 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.193477791 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.20430508 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.185424283 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.185595534 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.185941189 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.186855611 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.185594776 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.184788459 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.186319927 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.185426695 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.189272686 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.187332693 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.186809349 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.187429409 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.189068478 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.185834548 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.197143946 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.206178633 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.18588318 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.190219832 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.185112107 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.185673805 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.190041488 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.187118201 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.185598883 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.188784094 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.196349354 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.195094085 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.184996517 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.18495805 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.186787565 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.189172989 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.187723259 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.185622034 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.187722307 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.183469295 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.186200093 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.18613849 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.19016697 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.186986935 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.18669898 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.18813751 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.186904725 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.195572486 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.188977874 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.187980589 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.190524506 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.188635264 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.188373932 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.185889727 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.189396034 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.188675106 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.188959789 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.190481866 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.1950422 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.194541555 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.193341585 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.188404189 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.190167208 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.189267386 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.188393786 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.187805354 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.188641089 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.191182896 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.190221612 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.188652588 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.189237685 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.189353295 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.187733545 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.191194452 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.192193467 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.191063753 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.194625781 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.189057195 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.189941947 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.192682388 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.189227326 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.190225915 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.190420692 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.199069546 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.193429863 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.199105392 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.198597119 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.1932066 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.191164769 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.194493075 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.198954168 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.190113321 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.189820241 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.191345398 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.189457529 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.18871518 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.193417261 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.18976357 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.198590918 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.189918543 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.190363023 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.198282233 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.206588448 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.188043918 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.191327438 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.193682079 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.188437827 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.186038154 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.192522195 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.191206903 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.198843828 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.210470655 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.192370448 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.193166808 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.188923838 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.192134515 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.195686942 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.188627618 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.192863449 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.186555726 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.191448655 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.193059089 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.19230721 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.188524983 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.190727128 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.192388132 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.194788762 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.195579193 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.188880526 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.191110829 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.191435779 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.193784188 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.192889491 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.192811655 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.193968051 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.189980471 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.191704206 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.195041667 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.191775193 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.195118958 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.19197629 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.191586215 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.193559705 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.193944531 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.194981189 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.203942172 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.201665535 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.189450298 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.193503294 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.193894011 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.197403951 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.192035725 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.191007619 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.190030976 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.19686914 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.193990902 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.194070011 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.193269299 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.196933822 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.209920863 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.207629424 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.192715444 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.19462927 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.194478952 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.194747153 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.191682737 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.195129594 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.194325784 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.19539405 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.202517618 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.194923663 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.198159635 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.211214772 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.192046343 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.198600897 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.198373872 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.203817047 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.196241339 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.196218404 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.193437007 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.199657929 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.209112284 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.191945057 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.204515295 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.224906262 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.21336494 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.193903259 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.197566975 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.19190115 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.195506111 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.197537471 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.19259436 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.195811698 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.195622805 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.198243381 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.196386923 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.202875082 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.196989681 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.196489315 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.194752441 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.194526698 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.198746326 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.193998881 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.198121059 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.194696339 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.199939177 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.197098088 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.193745402 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.192068708 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.209197095 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.204507315 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.196459718 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.196677476 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.19213755 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.199743691 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.199828769 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.206586962 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.203485606 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.197794981 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.19706056 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.197922807 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.194532661 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.192810595 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.197639718 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.195182439 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.195597226 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.195758564 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.210269765 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.204798055 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.202863652 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.195950565 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.197784143 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.197469874 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.201122055 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.197973006 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.199876505 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.19760141 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.197534056 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.199652989 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.195551115 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.19979677 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.200839809 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.206191214 seconds)
  done (took 707.579075975 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.198238918 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.196793113 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.194788565 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.19635115 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.192714729 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.194500166 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.196154167 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.196147306 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.196161411 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.196849621 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.196027998 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.19634347 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.197217752 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.196727254 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.196481301 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.195071457 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.19646641 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.19751194 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.198195097 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.196991648 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.194947242 seconds)
  done (took 26.255636193 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.199134903 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.197184808 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.199216487 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.197058375 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.19608019 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.201821705 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.198848116 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.198796557 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.201124065 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.198639043 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.199808418 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.202151871 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.200712178 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.198916242 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.198751515 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.201428519 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.202913561 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.198443145 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.20449645 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.195489356 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.198082146 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.19921206 seconds)
  done (took 27.524031638 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.201650736 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.201144631 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.200753063 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.196924508 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.203208921 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.198240923 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.201388215 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.201947513 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.201970294 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.2010622 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.200881893 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.201663509 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.208926265 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.203954603 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.204042326 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.200100843 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.346429309 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.201069698 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.20289608 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.201843634 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.198589064 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.206554891 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.197904244 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.199579621 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.200958623 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.200591622 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.201175246 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.201685942 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.202744033 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.2006764 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.205613045 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.202171401 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.20029703 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.202938565 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.200145139 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.202022849 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.205075095 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.20288279 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.199535113 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.202990156 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.209449569 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.222306777 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.20346468 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.208971129 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.20283 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.20373718 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.205867859 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.21235617 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.200211955 seconds)
  done (took 60.218488108 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.202033752 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.201067008 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.200698781 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.199321733 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.204980691 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.203077529 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.206009328 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.203149458 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.198579092 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.198888504 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.203472653 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.201999085 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.197042768 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.202928924 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.20351266 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.201599232 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.200971942 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.20033507 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.197348543 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.200928482 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.201611626 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.203584816 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.204614854 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.202549122 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.203909875 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.20041328 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.200536424 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.20206562 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.202795321 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.202403594 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.204582448 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.207232326 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.205947137 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.19900578 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.203426936 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.207352573 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.205126809 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.202077018 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.205292764 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.202245189 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.201497053 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.206083457 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.203990614 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.206054645 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.204795791 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.203079943 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.203832109 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.200505629 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.204789517 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.205891908 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.203916453 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.20050265 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.207490285 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.203818656 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.20661425 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.207162456 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.205319013 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.205989964 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.207430073 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.200405402 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.203199455 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.20671205 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.204343839 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.20490153 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.208238647 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.204912979 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.202302711 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.20830474 seconds)
  done (took 82.967463728 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.203930843 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.202401554 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.206951172 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.206589755 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.207063545 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.207802327 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.202142674 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.205616627 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.206305676 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.206844424 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.205747838 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.204924887 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.202409633 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.207351015 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.207082034 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.205931318 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.206059335 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.207770592 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.208065686 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.205275036 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.207401282 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.207072919 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.207136479 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.207180766 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.208511634 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.207441566 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.204313182 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.205699189 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.207602251 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.2044087 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.205779718 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.209588002 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.209991566 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.207636167 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.208112742 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.207655046 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.208161835 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.207528649 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.207283798 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.208239643 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.205261733 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.210200128 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.209248893 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.209374919 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.20789997 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.206303435 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.208908488 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.208323204 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.208519051 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.209970663 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.210318125 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.209275189 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.208921916 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.208978254 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.207801521 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.2068791 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.208967358 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.208240601 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.209274694 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.207677189 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.209147851 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.208601598 seconds)
  done (took 75.995137154 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.207400489 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.210141372 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.206326727 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.206065365 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.206316467 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.207878893 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.209032097 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.208992398 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.208800123 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.210212725 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.207136747 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.206322774 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.207580138 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.210419644 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.206746468 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.20771015 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.20769411 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.206327116 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.210716388 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.207417503 seconds)
  done (took 25.304603553 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.205556005 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.213985193 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.208443556 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.208491061 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.21043286 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.207172089 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.211418046 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.21186238 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.207283855 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.210760499 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.209518376 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.209037629 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.206075023 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.207546351 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.210899762 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.209629658 seconds)
  done (took 20.493651414 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.20926331 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.210123437 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.209830829 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.212158104 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.20850812 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.206838656 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.211631855 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.209018967 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.210047822 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.210113318 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.212834364 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.212344252 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.213978815 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.212854556 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.210677089 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.209540632 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.208268046 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.206667514 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.214212558 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.212816891 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.211633144 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.20768996 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.21221348 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.214238841 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.209822475 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.20874212 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.210380337 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.212973418 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.206432986 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.213943291 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.212275692 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.213923645 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.21015438 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.211159413 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.21233539 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.20836641 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.214545466 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.213771327 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.21138134 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.214215858 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.2145566 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.212959912 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.213306778 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.214847807 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.209222035 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.211582677 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.212214225 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.212819773 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.210648207 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.212471925 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.215524043 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.215775323 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.21395833 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.211368787 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.213698523 seconds)
  done (took 67.783158334 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.216262537 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.213650013 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.212081015 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.212420387 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.213063529 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.20906681 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.215199834 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.213962691 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.213137927 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.212880489 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.214437902 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.216069888 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.213029949 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.214639456 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.213051049 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.213473035 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.215384976 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.213905171 seconds)
  done (took 22.994739099 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.212443913 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.216626259 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.211687498 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.211231747 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.211424062 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.217483974 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.212264061 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.213512899 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.214635651 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.21411193 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.214485129 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.216299935 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.215588209 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.217866182 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.21352135 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.215083664 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.216883396 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.216324587 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.213669351 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.216616621 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.218087945 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.216698302 seconds)
  done (took 27.874069864 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.216222292 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.215924207 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.230181447 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.252974085 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.245494062 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.214996316 seconds)
  done (took 8.525556009 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.215038035 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.218279999 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.215674833 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.218872152 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.219469626 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.214690742 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.213498749 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.215142931 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.217774837 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.215994132 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.216434508 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.218056521 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.219909633 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.214993803 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.219232251 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.218808066 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.214839761 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.21707109 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.216042391 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.218603674 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.215755041 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.217625233 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.215242207 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.216423873 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.21479836 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.216301326 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.218527678 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.217273877 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.21603356 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.217038394 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.218402596 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.21529835 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.218156819 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.217832876 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.218416576 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.218676675 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.216047996 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.21777264 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.217653101 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.215698745 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.218605866 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.22058324 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.220262452 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.215968317 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.218990086 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.216503381 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.21579273 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.216279324 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.217537419 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.219053886 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.219429246 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.218512308 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.220994644 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.218075583 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.219521891 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.220380551 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.217618993 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.217606167 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.21863903 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.217821921 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.217226024 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.217735698 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.217527219 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.217565374 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.219818272 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.216419252 seconds)
  done (took 81.501730551 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.216584873 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.217430168 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.217203934 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.217324162 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.217774472 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.219305221 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.217524578 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.21833074 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.21737134 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.218495902 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.220765282 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.218969206 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.216322366 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.21878819 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.216905271 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.219237602 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.217759776 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.217385577 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.217591414 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.220438132 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.218990181 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.217528643 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.217155941 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.216836795 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.218020111 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.222046157 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.217989224 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.219088308 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.220333101 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.21878418 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.218782278 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.21928602 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.21927451 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.219930835 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.219822264 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.21866899 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.218542782 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.219807505 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.219868452 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.222171809 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.219728481 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.222986496 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.220431528 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.221096732 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.220235888 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.22001078 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.218747438 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.219802915 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.218878915 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.220370359 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.220205734 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.221272961 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.219646882 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.22014398 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.219132225 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.219227058 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.219606538 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.22011039 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.220493912 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.22353264 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.220756393 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.218510395 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.22363391 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.219850678 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.219203977 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.220398545 seconds)
  done (took 81.627414254 seconds)
done (took 1650.41827181 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.318056059 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.273001586 seconds)
  done (took 13.744117388 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.385796977 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.338689447 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.218978812 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.255747057 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.219845598 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.223543569 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.230472322 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.219434008 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.222189738 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.223034796 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.220399924 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.409852495 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.222793867 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.219547491 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.223822908 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.315291962 seconds)
  done (took 41.311958131 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.250476383 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.228700078 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.339757046 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.24203461 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.249204464 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.406487328 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.276284687 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.223242098 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.399181825 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.263226692 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.783174313 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.248130968 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.226489317 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.328131378 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.242886011 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.408244726 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.472625261 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.785059392 seconds)
  done (took 28.528438324 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.677928179 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.235783744 seconds)
  done (took 9.072050062 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.239127875 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.247889652 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.229612766 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.257581091 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.257504196 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.248419066 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.300401427 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.224742091 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.261296792 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.242009859 seconds)
  done (took 63.670257676 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.242959439 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.227579124 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.227247632 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.225500207 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.218764369 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.218324965 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.224898603 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.22077546 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.862108017 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.353191884 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.237472057 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.231530575 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.227757134 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.225875272 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.224265398 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.262707842 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.361499964 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.224452218 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.223293061 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.233033751 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.225656243 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.333625595 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.265272428 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.225314668 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.353181346 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.881181226 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.23129939 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.234042869 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.344698234 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.225083328 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.226638144 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.227412196 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.229498589 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.8073731 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.770366124 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.22943724 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.250595155 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.235712549 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.226251589 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.371495607 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.227402756 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.233260385 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.2212372 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.746618775 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.38230425 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.342565802 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.539324051 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.228655375 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.230104664 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.292396975 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.229793824 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.227916995 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.257678873 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.979983342 seconds)
  done (took 105.666340214 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.260444008 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.893044631 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.392868043 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.242018092 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.093715383 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.869018659 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.219818014 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.514831135 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.249990519 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.219501384 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.510089869 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.736944067 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.223084649 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.28009552 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.723456308 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.301868924 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.222596779 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.139442528 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.221109551 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.221557116 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.648379787 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.247262958 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.227588183 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.489344129 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.258869017 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.688483714 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.683110575 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.728031804 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.223248413 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.221305278 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.692189312 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.225974529 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.238214383 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.22348532 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.500789237 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.578109128 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.552667117 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.22208772 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.268233556 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.221633309 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.233710909 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.684758819 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.566608502 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.218813536 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.220726154 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.686044469 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.221817489 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.22941915 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.227061696 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.433930585 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.979253499 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.223136963 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.680197451 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.221670536 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.488286494 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.279428632 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.317966721 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.715213929 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.222555669 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.364603631 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.255509411 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.22426563 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.229995569 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.226614649 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.223644403 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.571060556 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.620554134 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.231815228 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.573856697 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.684289711 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.220006269 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.754023411 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.104512513 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.229591126 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.285482053 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.226850876 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.943974277 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.717780527 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.223767806 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.22298953 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.559840362 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.22279424 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.511285375 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.240650056 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.220928684 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.657573099 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.238288504 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.272361254 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.22320303 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.234531637 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.978445403 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.22473492 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.493677945 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.240049277 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.224120717 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.225071856 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.245972491 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.223927107 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.221750088 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.230108718 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.754556332 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.232198305 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.363064455 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.242525342 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.223717969 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.236625581 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.225062275 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.225377812 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.450975652 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.835246287 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.226833949 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.227379362 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.223433291 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.235846617 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.43724864 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.225297165 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.5346243 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.224951125 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.225635181 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.225768731 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.897837759 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.243299777 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.222579305 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.229573721 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.063271546 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.433098375 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.244331715 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.224219705 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.225850576 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.236493035 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.585435171 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.224498358 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.27996503 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.227687564 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.936288997 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.239712854 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.260664099 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.643335293 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.23739553 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.225002053 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.227547769 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.229102191 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.533876778 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.510361343 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.516902296 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.226925965 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.226088014 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.942311594 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.256643651 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.364349032 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.247014399 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.237985988 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.427278085 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.414696462 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.232141743 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.77669625 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.231178055 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.447487715 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.227880725 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.565884072 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.728194271 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.229868858 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.2364793 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.944447651 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.881680224 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.047261666 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.229045546 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.508705976 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.238918585 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.688526907 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.228253508 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.229772144 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.821825997 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.230564107 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.229814775 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.230238497 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.228006268 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.285821551 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.40588049 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.699741587 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.233333917 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.696769375 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.257374976 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.239434985 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.231768492 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.233818045 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.582302186 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.287155239 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.232919022 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.26143746 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.229457661 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.236246978 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.705931178 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.141113667 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.228980723 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.384092453 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.872018231 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.231776833 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.23113605 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.011844317 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.442796974 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.783969414 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.254654632 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.542634265 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.232969585 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.269214858 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.027575182 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.300122428 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.710397818 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.228308573 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.228806336 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.844905806 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.229966191 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.29148395 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.230543195 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.231950103 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.770393458 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.229884398 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.232608436 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.609096757 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.232427239 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.503055866 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.2330038 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.268128761 seconds)
  done (took 1088.598197734 seconds)
done (took 1351.743753005 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.231700894 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.233154742 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.220537732 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.2321064 seconds)
  done (took 26.087448309 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.245097679 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.238251578 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.245539745 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.236221006 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.240788338 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.239275249 seconds)
  done (took 8.617002197 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.341458167 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.231420309 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.233890237 seconds)
  done (took 18.980331136 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.45754521 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.504825871 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.606978184 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.424358844 seconds)
  done (took 10.166234399 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.241315296 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.239168679 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.238884546 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.242361256 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.246799947 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.247180047 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.242587785 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.244812177 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.248365521 seconds)
  done (took 12.362345582 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.224164447 seconds)
done (took 82.605568832 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.261627166 seconds)
    (2/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.516179769 seconds)
    (3/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.255605399 seconds)
    (4/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.431832269 seconds)
    (5/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.504573007 seconds)
    (6/309) benchmarking ("sort", Float32, false)...
    done (took 5.243525264 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.281198905 seconds)
    (8/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.622470631 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.233773942 seconds)
    (10/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.241007701 seconds)
    (11/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.234479248 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.274739324 seconds)
    (13/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.333214597 seconds)
    (14/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.374428229 seconds)
    (15/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.297664662 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.262232635 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.124006602 seconds)
    (18/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.233677515 seconds)
    (19/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.260159182 seconds)
    (20/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.29692936 seconds)
    (21/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.114569406 seconds)
    (22/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.996443795 seconds)
    (23/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.541894633 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.606839474 seconds)
    (25/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.990950314 seconds)
    (26/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.405809799 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.179992022 seconds)
    (28/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.234545826 seconds)
    (29/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.320306701 seconds)
    (30/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.341107762 seconds)
    (31/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.663036657 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.220699634 seconds)
    (33/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.631823311 seconds)
    (34/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.351866037 seconds)
    (35/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.550730179 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.254936474 seconds)
    (37/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.07910797 seconds)
    (38/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.246883827 seconds)
    (39/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.234995919 seconds)
    (40/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.69005612 seconds)
    (41/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.258472835 seconds)
    (42/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.363143058 seconds)
    (43/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.351179536 seconds)
    (44/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.961529345 seconds)
    (45/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.348224475 seconds)
    (46/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.278500864 seconds)
    (47/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.547445592 seconds)
    (48/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.301646285 seconds)
    (49/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.261668849 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.113908195 seconds)
    (51/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.348356807 seconds)
    (52/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.257321257 seconds)
    (53/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.492669791 seconds)
    (54/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.009336938 seconds)
    (55/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.625325211 seconds)
    (56/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.827083725 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.312529316 seconds)
    (58/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.620771162 seconds)
    (59/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.234011406 seconds)
    (60/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.523471228 seconds)
    (61/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.243158969 seconds)
    (62/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.294365661 seconds)
    (63/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.71904636 seconds)
    (64/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.105300342 seconds)
    (65/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.617263311 seconds)
    (66/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.23496026 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.356595012 seconds)
    (68/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.248929855 seconds)
    (69/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.324410058 seconds)
    (70/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.62151586 seconds)
    (71/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.259810592 seconds)
    (72/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.238043057 seconds)
    (73/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.785536505 seconds)
    (74/309) benchmarking ("sort", BigInt, false)...
    done (took 6.253611669 seconds)
    (75/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.261184815 seconds)
    (76/309) benchmarking ("sort", Float64, false)...
    done (took 5.555783116 seconds)
    (77/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.705860229 seconds)
    (78/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.070911438 seconds)
    (79/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.235542742 seconds)
    (80/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.237872514 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.170202774 seconds)
    (82/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.222963378 seconds)
    (83/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.490417926 seconds)
    (84/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.363899004 seconds)
    (85/309) benchmarking ("sort", Int64, false)...
    done (took 5.413682734 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.096397226 seconds)
    (87/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.262650997 seconds)
    (88/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.690636882 seconds)
    (89/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.234858448 seconds)
    (90/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.647554691 seconds)
    (91/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.659492834 seconds)
    (92/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.390244464 seconds)
    (93/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.264574483 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.283899248 seconds)
    (95/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.235299373 seconds)
    (96/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.536379156 seconds)
    (97/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.238824396 seconds)
    (98/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.421732 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.884622392 seconds)
    (100/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.814898002 seconds)
    (101/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.649656925 seconds)
    (102/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.862370371 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.1036616 seconds)
    (104/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.336274187 seconds)
    (105/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.572159407 seconds)
    (106/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.60450586 seconds)
    (107/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.018428005 seconds)
    (108/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.619574413 seconds)
    (109/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.651700599 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.937900574 seconds)
    (111/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.735788146 seconds)
    (112/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.461100549 seconds)
    (113/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.546503146 seconds)
    (114/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.133608144 seconds)
    (115/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.62087204 seconds)
    (116/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.238703363 seconds)
    (117/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.148710821 seconds)
    (118/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.253810251 seconds)
    (119/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.562623971 seconds)
    (120/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.249151658 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.653398813 seconds)
    (122/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.494811865 seconds)
    (123/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.263331988 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.167133939 seconds)
    (125/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.50991846 seconds)
    (126/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.797197692 seconds)
    (127/309) benchmarking ("sort", Bool, false)...
    done (took 1.77401175 seconds)
    (128/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.266545775 seconds)
    (129/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.7278428 seconds)
    (130/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.086136954 seconds)
    (131/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.258917386 seconds)
    (132/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.006033716 seconds)
    (133/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.666073392 seconds)
    (134/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.49778326 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.794160781 seconds)
    (136/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.225150559 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.946449382 seconds)
    (138/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.23856097 seconds)
    (139/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.83238539 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.020477824 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.503423962 seconds)
    (142/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.266670605 seconds)
    (143/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.766430067 seconds)
    (144/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.22629507 seconds)
    (145/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.149050834 seconds)
    (146/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.880977547 seconds)
    (147/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.728879476 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.596183705 seconds)
    (149/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.276068883 seconds)
    (150/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.103349629 seconds)
    (151/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.264891379 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.290958516 seconds)
    (153/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.687630718 seconds)
    (154/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.34386902 seconds)
    (155/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.253258442 seconds)
    (156/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.848996085 seconds)
    (157/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.654941025 seconds)
    (158/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.671937958 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.846389334 seconds)
    (160/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.233940816 seconds)
    (161/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.758437065 seconds)
    (162/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.259257763 seconds)
    (163/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.068475983 seconds)
    (164/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.239512973 seconds)
    (165/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.28846037 seconds)
    (166/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.324597283 seconds)
    (167/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.368069841 seconds)
    (168/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.24407239 seconds)
    (169/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.01976414 seconds)
    (170/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.225737062 seconds)
    (171/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.794442136 seconds)
    (172/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.243234987 seconds)
    (173/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.242106536 seconds)
    (174/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.325170097 seconds)
    (175/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.267547601 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.262756447 seconds)
    (177/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.761156887 seconds)
    (178/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.925227032 seconds)
    (179/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.36778279 seconds)
    (180/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.094496866 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.314244376 seconds)
    (182/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.33235945 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.344273888 seconds)
    (184/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.462841608 seconds)
    (185/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.60703296 seconds)
    (186/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.097305868 seconds)
    (187/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.25136228 seconds)
    (188/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.406391912 seconds)
    (189/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.510731988 seconds)
    (190/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.282373107 seconds)
    (191/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.345660256 seconds)
    (192/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.868658828 seconds)
    (193/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.243656086 seconds)
    (194/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.365115098 seconds)
    (195/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.774142928 seconds)
    (196/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.300702211 seconds)
    (197/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.629691562 seconds)
    (198/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.78302317 seconds)
    (199/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.317843695 seconds)
    (200/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.483669796 seconds)
    (201/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.242449793 seconds)
    (202/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.28315227 seconds)
    (203/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.330813777 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.900527052 seconds)
    (205/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.325201517 seconds)
    (206/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.445837393 seconds)
    (207/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.264372198 seconds)
    (208/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.245014684 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.805613569 seconds)
    (210/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.285645247 seconds)
    (211/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.612490017 seconds)
    (212/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.589508435 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.865418148 seconds)
    (214/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.331806292 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.318630865 seconds)
    (216/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.845089407 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.353467867 seconds)
    (218/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.23034333 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.682173759 seconds)
    (220/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.263679054 seconds)
    (221/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.266195235 seconds)
    (222/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.438621947 seconds)
    (223/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.328811658 seconds)
    (224/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.924476673 seconds)
    (225/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.302507846 seconds)
    (226/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.932595986 seconds)
    (227/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.308141243 seconds)
    (228/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.91646236 seconds)
    (229/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.68878004 seconds)
    (230/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.650835168 seconds)
    (231/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.4653414 seconds)
    (232/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.899736995 seconds)
    (233/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.324915557 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.270819301 seconds)
    (235/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.258876778 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.189387135 seconds)
    (237/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.232293197 seconds)
    (238/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.232863436 seconds)
    (239/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.35267462 seconds)
    (240/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.385257581 seconds)
    (241/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.925904124 seconds)
    (242/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.270134335 seconds)
    (243/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.245320609 seconds)
    (244/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.269983453 seconds)
    (245/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.249160303 seconds)
    (246/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.352140244 seconds)
    (247/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.246334435 seconds)
    (248/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.353841908 seconds)
    (249/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.100987956 seconds)
    (250/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.44436561 seconds)
    (251/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.348906113 seconds)
    (252/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.247122865 seconds)
    (253/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.56021265 seconds)
    (254/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.459585846 seconds)
    (255/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.852754177 seconds)
    (256/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.25323119 seconds)
    (257/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.246488993 seconds)
    (258/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.978290322 seconds)
    (259/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.279253518 seconds)
    (260/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.987720176 seconds)
    (261/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.306419229 seconds)
    (262/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.462426104 seconds)
    (263/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.286223255 seconds)
    (264/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.143644533 seconds)
    (265/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.11546921 seconds)
    (266/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.250759945 seconds)
    (267/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.293852671 seconds)
    (268/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.087675534 seconds)
    (269/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.87240254 seconds)
    (270/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.56392378 seconds)
    (271/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.458145197 seconds)
    (272/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.846522082 seconds)
    (273/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.639241451 seconds)
    (274/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.264552181 seconds)
    (275/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.288545141 seconds)
    (276/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.072383682 seconds)
    (277/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.231922908 seconds)
    (278/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.291290362 seconds)
    (279/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.614314263 seconds)
    (280/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.310671977 seconds)
    (281/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.860181478 seconds)
    (282/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.537476239 seconds)
    (283/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.247202647 seconds)
    (284/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.440831989 seconds)
    (285/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.661578501 seconds)
    (286/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.35712411 seconds)
    (287/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.720304496 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.328465968 seconds)
    (289/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.331067394 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.365273686 seconds)
    (291/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.554860271 seconds)
    (292/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.125800488 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.013981997 seconds)
    (294/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.252932472 seconds)
    (295/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.237657529 seconds)
    (296/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.87685526 seconds)
    (297/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.250353836 seconds)
    (298/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.648812427 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.233665605 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.290253872 seconds)
    (301/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.572333205 seconds)
    (302/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.151659391 seconds)
    (303/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.28337853 seconds)
    (304/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.444317809 seconds)
    (305/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.266830415 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.272858403 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.841726296 seconds)
    (308/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.300689437 seconds)
    (309/309) benchmarking ("sort", Int8, false)...
    done (took 4.265866204 seconds)
  done (took 898.192149056 seconds)
done (took 899.364489941 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.284612822 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.280703774 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.261846952 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.282309118 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.374198581 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.293776241 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.272065725 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.264110319 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.310654203 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.312213175 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.261956258 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.29319072 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.26442433 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.26406223 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.261012522 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.278080302 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.290399061 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.261963348 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.279934647 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.272027769 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.281355318 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.262207346 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.312149045 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.292952019 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.266864591 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.266383551 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.267368262 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.283509811 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.374255363 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.26594109 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.265624082 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.274935084 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.284691395 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.25863978 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.258418854 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.285453375 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.275635953 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.272698852 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.264922707 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.29543125 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.691471965 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.262623804 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.265152379 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.263979069 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.264343485 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.266025781 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.263658109 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.270917068 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.276371753 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.278125203 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.688515281 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.276918787 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.266773334 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.264625698 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.275262852 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.2649985 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.267555419 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.280942988 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.284653409 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.28054028 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.28087938 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.267374137 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.266261575 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.281755789 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.271535834 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.725514925 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.257465097 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.26855056 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.697919817 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.265078081 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.734131012 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.2707718 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.264957929 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.280073877 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.298035089 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.298522024 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.258356741 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.26448464 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.274788425 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.264360547 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.274440746 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.282201933 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.269455125 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.26583327 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.278599978 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.297015329 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.274793594 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.267525681 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.27571104 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.286635746 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.272698101 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.277122984 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.269054097 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.258473794 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.273813749 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.266386321 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.269915332 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.269409271 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.269322731 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.277052673 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.704378992 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.281657359 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.262024708 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.264572492 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.263311434 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.280363443 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.703533484 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.266222247 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.287903959 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.311418277 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.268858052 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.287878206 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.26771752 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.283504686 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.274828376 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.268532942 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.26205457 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.29395363 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.704696406 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.278743779 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.267363498 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.268765593 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.284181908 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.268732653 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.263262542 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.300858737 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.267723851 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.281543901 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.3905445 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.278121884 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.29982594 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.265946082 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.270912581 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.299960264 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.2846416 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.299928453 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.270988065 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.28543491 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.28431782 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.265796665 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.281599754 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.278192965 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.271676651 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.273324986 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.261951988 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.300833904 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.281960902 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.282720281 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.289932423 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.390891184 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.265207523 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.290744619 seconds)
done (took 214.97053435 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.325017805 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.261897751 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.349659444 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.266050763 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.365317799 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.360934996 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.262501694 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.263278541 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.262365219 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.639237522 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.261945532 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.263408896 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.259471734 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.262057793 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.345669257 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.264091237 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.259186978 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.605346486 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.267378022 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.333808848 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.261947745 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.263040247 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.266406925 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.645688352 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.26126544 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.260090616 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.33457464 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.266514706 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.611182678 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.259705823 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.261318724 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.610011531 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.352448801 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.283226333 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.274706098 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.27163294 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.366965936 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.282553375 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.346561267 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.346199816 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.350576925 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.304723586 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.259956474 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.257045265 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.268350119 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.268667839 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.263561314 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.292599298 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.263934213 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.264896873 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.609606743 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.276055161 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.267315868 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.266347369 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.264341927 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.295612923 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.264054609 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.267796751 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.353269354 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.269141979 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.327059458 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.649903396 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.639989526 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.266938505 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.264903574 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.265669416 seconds)
  done (took 143.840591338 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.333608691 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.3401766 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.380529796 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.268623243 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.314671838 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.388406143 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.267784739 seconds)
  done (took 10.489637198 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.271552256 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.26775437 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.316097867 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.325450859 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.267500176 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.413584631 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.268420134 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.280441696 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.266306425 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.318998581 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.27240443 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.268454407 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.274363443 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.26166368 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.316365543 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.278633271 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.382256636 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.26860345 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.269306207 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.424912414 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.265404157 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.275280451 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.318513054 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.277244809 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.270673676 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.273840836 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.832325864 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.267237782 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.267186347 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.269143466 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.2675832 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.306496541 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.268521276 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.266810162 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.267066084 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.385133284 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.270332163 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.266660428 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.269142965 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.264068004 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.268796817 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.269992298 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.27044305 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.267457247 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.269253308 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.292461847 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.269471643 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.269014454 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.270181417 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.271255708 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.3169324 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.269246676 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.267885866 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.268104693 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.323425383 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.276384489 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.270245762 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.266695595 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.27029096 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.26806255 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.426065529 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.319658635 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.270409146 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.319091521 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.269785649 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.270680074 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.270717101 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.27218191 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.324168773 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.27036026 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.318023923 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.269075729 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.42334081 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.291602468 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.272466567 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.272138565 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.273604054 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.272193857 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.269063596 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.276033744 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.267883491 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.270906716 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.276441889 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.269255993 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.269214678 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.371163685 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.37754918 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.268732979 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.283997576 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.279301853 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.2689347 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.32363151 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.272310488 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.26826128 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.325077216 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.38677694 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.326104035 seconds)
  done (took 146.934574683 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.275641432 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.279825537 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.272808185 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.287877853 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.273023294 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.270679264 seconds)
  done (took 8.860677897 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.276437658 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.274401425 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.272412961 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.272252541 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.272735899 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.277084828 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.275232842 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.275362775 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.278037016 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.272271249 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.275353247 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.277139804 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.275147652 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.274280635 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.272720733 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.272289131 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.275240275 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.272207395 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.273244311 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.274724746 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.367984054 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.274084177 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.274282586 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.273298063 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.279161295 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.273429788 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.281889953 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.272932862 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.27376609 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.28281356 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.277935266 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.275312103 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.274753866 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.281175842 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.279219514 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.274960294 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.278649813 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.277577421 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.270870967 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.277371258 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.278253043 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.273469218 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.275706888 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.278250614 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.274907526 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.278823601 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.28283215 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.283674538 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.277502703 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.277912233 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.278361838 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.275049094 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.277925958 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.278853949 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.276883958 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.280039729 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.283828589 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.276329744 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.275820703 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.276014593 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.278661213 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.275990854 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.27823418 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.281176901 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.283080951 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.281172888 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.278001533 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.28070289 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.2786479 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.276563552 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.280252224 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.273426953 seconds)
  done (took 94.220916258 seconds)
done (took 405.537140567 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.710833534 seconds)
  done (took 7.914970714 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.331689169 seconds)
  done (took 7.536443647 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.344301247 seconds)
  done (took 21.555520004 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.306845713 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.330867019 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.289429361 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.273744118 seconds)
  done (took 26.406924649 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.831226457 seconds)
  done (took 8.035700429 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.269974127 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.266926267 seconds)
  done (took 13.742454991 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.837650344 seconds)
  done (took 8.04546269 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.899721335 seconds)
  done (took 8.11234401 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.292337543 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.299001741 seconds)
  done (took 14.047374924 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.255799012 seconds)
  done (took 7.46248209 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.32891928 seconds)
  done (took 8.53655512 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.272960321 seconds)
  done (took 7.480163782 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.28511536 seconds)
  done (took 7.490005076 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.244953836 seconds)
  done (took 9.450056965 seconds)
done (took 157.018359599 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.269868868 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.267113903 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.268831474 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.267521408 seconds)
  done (took 26.277975325 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.311216861 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.311740984 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.313841509 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.322777409 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.31459306 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.310839759 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.30163128 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.303579303 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.324905249 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.315672126 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.315038577 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.315614643 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.312048946 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.303203325 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.315481711 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.314608343 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.323873744 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.316114229 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.303931487 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.31686513 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.279575271 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.323308732 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.314732866 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.279880558 seconds)
  done (took 32.672031266 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.47654808 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.349370707 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.436013311 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.333412668 seconds)
  done (took 6.804154709 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.330240571 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.331882579 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.34311124 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.383679539 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.40889021 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.342540244 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.305638327 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.300523059 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.287570817 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.335683593 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.409472209 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.350312881 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.418046387 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.279291185 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.467062341 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.280256142 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.278709274 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.329576559 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.382969545 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.407652982 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.280587381 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.331130017 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.333188414 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.349693115 seconds)
  done (took 33.47769415 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.277894015 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.286926488 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.284627685 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.278328849 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.280182314 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.278945366 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.286632041 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.279965412 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.3012409 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.280572406 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.277110973 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.281057858 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.279407175 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.278205495 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.278732561 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.291093752 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.293630563 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.280433688 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.284202909 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.285627941 seconds)
  done (took 26.876126007 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.271136812 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.168852583 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.62613181 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.528668319 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.275899667 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.274707553 seconds)
  done (took 27.355849778 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.352758173 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.488100271 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.278598707 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.653356639 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.74322008 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.280433654 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.280192133 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.528754056 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.836702062 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.851743998 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.339034926 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.348598924 seconds)
  done (took 19.192584352 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.272313302 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.275239224 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.287915355 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.2898911 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.339754466 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.282303864 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.287621273 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.272819682 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.337988537 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.342590641 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.285298355 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.341048389 seconds)
  done (took 36.826723071 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.361296601 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.326122567 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.335914138 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.111076335 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.000861093 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.487784405 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.159485437 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.713910048 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.277115568 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.5502767 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.754700234 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.367806697 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.536492246 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.280540818 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.275450072 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.315380712 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.502279579 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.785765376 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.279956107 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.367547912 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.302389568 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.284657443 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.567659609 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.306229886 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.490489902 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.259536742 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.537711329 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.056198808 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.574428008 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.288934688 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.288476242 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.27766849 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.551373022 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952509447 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.370763128 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.28802793 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.147636487 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.827098117 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.268938168 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.463944242 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.292990209 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.279729473 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.287251136 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.278060248 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.213478558 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.28083475 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.729442048 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.284903388 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.988952307 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.278574409 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.288193904 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.373893956 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.281993953 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.854397057 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.366418202 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.280643376 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.275143594 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.284476564 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.851355054 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.935006385 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.283752072 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.214531317 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.756259028 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.386665767 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.925106805 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.379937255 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.283927641 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.283194234 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.213445261 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.444861572 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.298277702 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419479546 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.301548927 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.941794495 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.035885767 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.280776747 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.21179405 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.858369331 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.294400098 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.213045032 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.50889988 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.056053907 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.217899026 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.227191285 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.213505732 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.028167076 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.289994792 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.701966365 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.284013296 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.721132235 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.29018289 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.297472734 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.303793063 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.505853734 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.16440275 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.280778963 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.280095917 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399567976 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.300063667 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.72478732 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.214542338 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.281673313 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.539636471 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.49171034 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.29318415 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.316652327 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.490101572 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.281862668 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.294789501 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.282566008 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.29079072 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.880350047 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.293195863 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.928780348 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.298496812 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.058589629 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.067695414 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.296224005 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.380375683 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.281688873 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.550057233 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.09252544 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.181157057 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.349218037 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.285222129 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.281621682 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.49605256 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.132085294 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.185447897 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.284824276 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.290857086 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.291965709 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.283744735 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.243500693 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.282374908 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.284240023 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.061571685 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.509694704 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.281929451 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.558451003 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.218669727 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.42786424 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.300369239 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.504413391 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.561829737 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.280597136 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.545326844 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.28766831 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.296266658 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.296238847 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.303714305 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.38126001 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.305761994 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.283878269 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.540724985 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.286776616 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.289335638 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.509701505 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.065204392 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.284906638 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.289305751 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.187574261 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.884713162 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.255641136 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.290578811 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.179740843 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.298104121 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.352680512 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.289195553 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.295340793 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.195493556 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.267486718 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.288262895 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.290711967 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.504598665 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.293993028 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.487023661 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.366465234 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.489604548 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.891400053 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.297032193 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.218851913 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.996070722 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.977591014 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.285018522 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.477347698 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.284813935 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.292396105 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.296096813 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.934839521 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.888824866 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.287419557 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.402582597 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.291122695 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.297784155 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.291420955 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.287074184 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.176600492 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.961205948 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.287498845 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.297670375 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.42908885 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.300371228 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.221133675 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.802751512 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.289273287 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.287229872 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.059839179 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.320728255 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.417155579 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.785357734 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.547219661 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.118174937 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.297426398 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.522076468 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.319290401 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.292708619 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.300150833 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.286611567 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.287820035 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.295998801 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.296806969 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.422925854 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.73656129 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.854452109 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.03510705 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.833433303 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.297695806 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.295528577 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.186084408 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.732028137 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.221628065 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.945716857 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.486314624 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.731148078 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.242743656 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.498158665 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.561005982 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.09459792 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.296924004 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.515407223 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.288688655 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.288533829 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.300530462 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.499320041 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.321168538 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.297307615 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.21608145 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.589195943 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.52982219 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.290210414 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.369291324 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.729763382 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.287601793 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.067448904 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.287336992 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.696514211 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.46930248 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.920235284 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.683400609 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.290644937 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.298778936 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.779457711 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.29749015 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.81953937 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948092588 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.293973829 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.49485884 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.227734449 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.299561141 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.299842798 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.290451745 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.669927427 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.296713521 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.54633303 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.297647143 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.224287855 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.288927943 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.843125892 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.144834613 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.294667773 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.289119922 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.084268054 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.302364798 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.587309612 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.298754443 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.183069032 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.292403991 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.226962516 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.22530121 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.983012072 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.291599249 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.259719489 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.804736558 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.721627527 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.365612122 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.315637169 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.141195901 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.548415412 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.302496539 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.900615603 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.519286243 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.226396198 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.312580773 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.391008206 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.30122273 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.275312554 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.200920806 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.527667398 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.186977255 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.516177746 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.374575114 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.196594545 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.28934258 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.504952733 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.192776634 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.294166403 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.550268176 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.003562518 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.305883056 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.064519368 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.318342065 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.292046626 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.310787243 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.768795904 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.299929155 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.363359322 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.304175065 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.301946763 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.303595379 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.47123144 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.29239747 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.295325467 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.306479268 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.385714017 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.994347686 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.193256352 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.066821312 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.91256419 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.084858357 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.907576704 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.305076174 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.292409007 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.293917179 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.227857214 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.439386035 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.820798413 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.566540132 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413323342 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.846094031 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.314576048 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.297787643 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.300317506 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.503963367 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.569169806 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.168521559 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.297136435 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.957974384 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.195484607 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.30624363 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.505848975 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.816133959 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.88498346 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408037911 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.298558455 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.738498146 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.566648198 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.386306628 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.293033558 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.888164088 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.295402459 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.706803911 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.300024782 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.308947516 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.441668723 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.304057259 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.978874451 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.30423374 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.453700289 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.066548028 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.550006946 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.552039241 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.811752998 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.305468012 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.911992179 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.036412185 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.561546687 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.363662617 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.306272908 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.406811789 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.441788413 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.293399096 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.195975639 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.295855077 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.177273755 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.005369753 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.305324234 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.9143012 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.559793221 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.293390587 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.294726564 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.319084098 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.305954581 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.521296172 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.056021333 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.521411181 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.305109959 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.299239038 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.286657176 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.914712076 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.310138039 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.230701376 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.30030464 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.551625832 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.532072027 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.320998522 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.747982797 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.0074403 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.887858908 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.272177173 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.318741793 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.311554285 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.040573526 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.915223239 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.20634145 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.815536362 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.957189098 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.29609325 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.571313553 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.300694544 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.29715234 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.573115011 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.300777041 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.297808034 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.310332042 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.916068904 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.117563357 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.301385573 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.470652915 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.233870678 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.525125837 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.007082026 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.232612371 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.295637193 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.490006418 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.301572101 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419565253 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.308649493 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.310342966 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.298091787 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.033114436 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.587269008 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.303807556 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.305753639 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.286951735 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.300981858 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.304796724 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.540222531 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.303845195 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.97520065 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.648549452 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.557709911 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.312420286 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.282341664 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.302908158 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.29799407 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.024614284 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.273583251 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.960902747 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.889547917 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.311195306 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.30813772 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.304063442 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.516057621 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.511293918 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.299543377 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.328189583 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.299624017 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.314550618 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.202992213 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.073906021 seconds)
  done (took 1570.856816548 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.324849863 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.332556497 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.318384467 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.399817535 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.351864758 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.423273303 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.340154693 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.325607051 seconds)
  done (took 52.052348114 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.312084367 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.454694997 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.332170477 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.314886989 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.30818021 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.311368327 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.762338516 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.298494039 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.306421852 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.310173537 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.301499531 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.302708819 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.943879842 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.306554169 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.29937966 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.287747889 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.307849408 seconds)
  done (took 64.702432595 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.310105903 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.506564039 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.322272314 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.30519552 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.550530989 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.315308678 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.545226779 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.30003656 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.30468992 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.388137158 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.975990443 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.303594147 seconds)
  done (took 79.364477958 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.307647731 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.307579774 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.307704249 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.308950294 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.307288607 seconds)
  done (took 7.776398845 seconds)
done (took 1985.442678536 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.545047645 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.042229557 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.989250718 seconds)
  done (took 5.268595752 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.450626706 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.498951061 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.61984277 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.623455901 seconds)
  done (took 7.430511562 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.589651055 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.674714539 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.497682416 seconds)
  done (took 5.997541648 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.793244507 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.316567425 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.430588144 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.302417207 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.303524132 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.302889061 seconds)
  done (took 20.146956453 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.308281541 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.310601766 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.307265031 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.310725959 seconds)
  done (took 6.476564535 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.287212863 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.020681358 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.28893841 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.304732899 seconds)
  done (took 18.141495441 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.058197921 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.06829191 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.050786389 seconds)
  done (took 7.418200654 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.301584479 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.148804089 seconds)
  done (took 9.689131486 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.610943324 seconds)
  done (took 2.848468558 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.439187832 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.602646384 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.429410711 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.333295356 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.432117943 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.361109731 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.040208432 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.594011778 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.336557399 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.655110616 seconds)
  done (took 28.464148974 seconds)
done (took 125.204770487 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.282207284 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.548941787 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.50792611 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.255345305 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.534717608 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.508024659 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.735020991 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.220446936 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.970072337 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.754775166 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.260834025 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.536081128 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.463333478 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.555075414 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.464140212 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.307173152 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.53882767 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.33513114 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.976411488 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.134767168 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.730363006 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.889971919 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.088050772 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.9094707 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.538634942 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.461010018 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.469974961 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.553387947 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.151013936 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.489515539 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.45895813 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.306954728 seconds)
  done (took 195.176346349 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.304993674 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.306567946 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.306670793 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.305245199 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.319308641 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.306541775 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.306419019 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.303525129 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.319151974 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.31860018 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.304886852 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.303420612 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.306305867 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.30550033 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.306839096 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.306717285 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.306027299 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.306451367 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.325608637 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.304521733 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.306602641 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.303052406 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.305445468 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.313579371 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.305877886 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.313140975 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.30473888 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.304577705 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.303501661 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.305201867 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.32095848 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.304087726 seconds)
  done (took 203.107389912 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.314623117 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.306865147 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.319875626 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.305698313 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.305834632 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.30654461 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.306090251 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.318080805 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.324653758 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.306574152 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.308401608 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.318686466 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.307927581 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.323636458 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.305241831 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.318648871 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.318290524 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.306869027 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.306564448 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.308425386 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.309180644 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.305325761 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.312326989 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.309373598 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.311227492 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.308313547 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.306546268 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.307118451 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.316589832 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.307193483 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.308838776 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.311844483 seconds)
  done (took 203.195282739 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.511141737 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.315987078 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.318292503 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.270451028 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.318032845 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.316203982 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.309927526 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.506493748 seconds)
  done (took 14.110351817 seconds)
done (took 616.829046467 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.671456982 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.380381711 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.518579688 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.335806103 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.187670556 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.336418737 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.338107358 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.518841427 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.248894896 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.520021042 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.597761002 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.332466424 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.747886634 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.333473169 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.597217441 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.436929408 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.231521905 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.347801575 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.66349413 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.900795803 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.598959636 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.864506771 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.524269336 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.273214756 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.74679701 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.816381859 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.121611388 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.234789131 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.335779754 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.670927 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.035778434 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.371857805 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.398439971 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.380127257 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.436448068 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.416674711 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.369302318 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.379458388 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.526297384 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.616897641 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.939437828 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.076241227 seconds)
  done (took 91.625518454 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.308289728 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.309130837 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.307143587 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.307054655 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.307627485 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.305919938 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.306185982 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.307240047 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.308907378 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.306807126 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.308029692 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.308850125 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.305425063 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.307024414 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.305204606 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.30609538 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.310618379 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.308312186 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.307003143 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.306591635 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.30609148 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.307382184 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.308613492 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.307682871 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.308430034 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.305279316 seconds)
  done (took 35.239087709 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.322060186 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.582681397 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.765257404 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.322771596 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.319443662 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.324116221 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.40232664 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.323786933 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.325645722 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.324396933 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.482379893 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.325214943 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.360050042 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.767705332 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.320562662 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.32283283 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.321628053 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.322280764 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.591354672 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.328919935 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.405428323 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.322046341 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.403267465 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.33260435 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.322936665 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.323349737 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.326927956 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.850134283 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.323801237 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.484561713 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.144677564 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.402183854 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.806609948 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.763715511 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.143607914 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.324382723 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.323699978 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.486210425 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.323217377 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.322028554 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.404430348 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.323605869 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.760380952 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.963251537 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.335702469 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.321610123 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.873651439 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.487066146 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.583485766 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.329192594 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.786292355 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.324329292 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.323109346 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.32455447 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.589446191 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.328749691 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.322995037 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.880486886 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.327565112 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.404929462 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.324414019 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.322130876 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.59485539 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.323932148 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.580399614 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.322622187 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.333420641 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.323158387 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.761702039 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.326249875 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.99822983 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.338659603 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.325727885 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.482535331 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.579559896 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.907305606 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.327908665 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.59414793 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.818361845 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.404259875 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.328440231 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.838426025 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.410119058 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.325960471 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.326613363 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.326334392 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.323497536 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.371251933 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.407680128 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.903626086 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.980402626 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.892181826 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.410430917 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.337508588 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.327395803 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.88456979 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.324773862 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.32605539 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.754170021 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.985687123 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.337729922 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.332927279 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.971739926 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.340552643 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.409896765 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.330771675 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.768517853 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.324607277 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.371176238 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.325282206 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.332406757 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.328463626 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.409664423 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.328721994 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.327721434 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.955475626 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.507942595 seconds)
  done (took 175.017085684 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.321041168 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.318341502 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.326634177 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.318719216 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.320527977 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.325541243 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.320439095 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.319657933 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.328117493 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.319035262 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.32231458 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.320708489 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.322514671 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.320450407 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.343308077 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.327892017 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.93033592 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.321904879 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.320270723 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.318732046 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.126285723 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.322827301 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.319809955 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.318410556 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.324173237 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.323889161 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.328568118 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.321909394 seconds)
  done (took 151.707320744 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.328857963 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.921403166 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.327721404 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.467623601 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.349223557 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.327891312 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.467202626 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.388284145 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.330052323 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.326006483 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.326133817 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.646419805 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.328751073 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.872889899 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.525763013 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.469580471 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.895385482 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.327725292 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.328526553 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.326635811 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.471574278 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.336783516 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.647679934 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.921321163 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.328396964 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.92114385 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.316129169 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.330904127 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.32889255 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.921509864 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.324601458 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.649856145 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.411113421 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.391243519 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.923697819 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.895833911 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.904692241 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.48765466 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.329643397 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.329581554 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.328715293 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.319434238 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.957868135 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.330218779 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.330891162 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.952724793 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.347579153 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.331961315 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.338689213 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.329789652 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.392647444 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.394435466 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.671808766 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.963942959 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.412533087 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.349754312 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.471728788 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.720855569 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.332862064 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.878644252 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.315803285 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.959948869 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.334272838 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.319111003 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.330126944 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.335022977 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.490582166 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.4713258 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.875781016 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.330018303 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.872039361 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.490637413 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.331801675 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.331100608 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.33127279 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.960273059 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.874624333 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.490499027 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.475475072 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.534162066 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.320222266 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.328038108 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.320136292 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.415140938 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.331447782 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.965427671 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.874622795 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.330919892 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.333300157 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.334860859 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.332955925 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.517865541 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.934682306 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.412598799 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.868892866 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.665469314 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.652269312 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.330323974 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.396884451 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.333887039 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.657016276 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.332409615 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.393761356 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.787432406 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.662802001 seconds)
  done (took 160.16209679 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.598814827 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.565028993 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.428098843 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.454042981 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.961865135 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.904890268 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.737458377 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.463850845 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.448597906 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.590941485 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.530018523 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.422221575 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.516361716 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.436387892 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.093910396 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.403405484 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.430469272 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.467010073 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.435438167 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.384566111 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.975218093 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.632303647 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.516765086 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.428949416 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.428913327 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.12437978 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.906511715 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.928182432 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.517177326 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.69344868 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.907492588 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.4705745 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.347308539 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.044752308 seconds)
  done (took 65.458629622 seconds)
done (took 680.452544974 seconds)
SAVING RESULT...
DONE!
