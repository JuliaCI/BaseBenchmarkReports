cset: moving following pidspec: 12789
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.241893121 seconds)
loading group "string"... done (took 0.588794527 seconds)
loading group "linalg"... done (took 8.180126829 seconds)
loading group "parallel"... done (took 0.168928609 seconds)
loading group "find"... done (took 1.316658557 seconds)
loading group "tuple"... done (took 2.00740825 seconds)
loading group "dates"... done (took 1.361299643 seconds)
loading group "micro"... done (took 0.205729917 seconds)
loading group "io"... done (took 0.951394116 seconds)
loading group "scalar"... done (took 41.108435375 seconds)
loading group "sparse"... done (took 12.913780501 seconds)
loading group "broadcast"... done (took 1.022950962 seconds)
loading group "union"... done (took 14.8427365 seconds)
loading group "simd"... done (took 5.194652372 seconds)
loading group "random"... done (took 9.832736048 seconds)
loading group "problem"... done (took 1.615100192 seconds)
loading group "array"... done (took 23.723235036 seconds)
loading group "misc"... done (took 1.766445639 seconds)
loading group "sort"... done (took 3.752352198 seconds)
loading group "collection"... done (took 20.05662504 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.550561152 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.12745064 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.140339977 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.123286862 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.153563108 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.119847953 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.128068948 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086623361 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.882102937 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.147232892 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.116846319 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.423070093 seconds)
done (took 5.41052811 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.174221734 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.087134335 seconds)
    (2/2) benchmarking "String"...
    done (took 0.082053164 seconds)
  done (took 1.247207874 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067287013 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.127858422 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.068381247 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068858899 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.069190486 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.069192913 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068659278 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.068484122 seconds)
  done (took 1.61805611 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073074657 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069492125 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.067912118 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069774174 seconds)
  done (took 1.357059916 seconds)
done (took 5.550369272 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.811720611 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.21438181 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.189772182 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.420515839 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.138442178 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.18306203 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.667911347 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.331248598 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.194081903 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.097819299 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.116755486 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.401159404 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.128018756 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.668621298 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.081226359 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.09963622 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.147146434 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.468766458 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.07184497 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.087326345 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.093881189 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.132428974 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.083378064 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.079380114 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.151071959 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070968476 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.148063763 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.088665381 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069453018 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.263369375 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.177269487 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.662914591 seconds)
  done (took 10.654496202 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.102047381 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.103054474 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.071158318 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.1281468 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.102038713 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.072844129 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.078146623 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.070331764 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.093068585 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.132643235 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.095008765 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.111576356 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.068394024 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.072260163 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.086312146 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.201246521 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.080713613 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.084337118 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070389729 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.080837313 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.110908195 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.081261711 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.082629799 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.082455577 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.136319629 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.173519378 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.100017368 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.100562248 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.069798681 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.087546952 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.117833433 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.13094158 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.068153088 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.068360621 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.12886169 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.097415916 seconds)
  done (took 4.657990195 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.026287127 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.155076548 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.09353427 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.139117245 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.067385212 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.114060072 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.06774083 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.086196156 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.244352394 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.400108921 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.637243398 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.15184499 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12007816 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.108826118 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07342125 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.071925554 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.070389748 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.295887188 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.1028769 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.111673887 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.09136748 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072826627 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.072608991 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.06737535 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074126919 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.068742273 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071204736 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.091252757 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078714005 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.335082645 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.130015857 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071150727 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.969414407 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.171621694 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.06985905 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.108129272 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.163541764 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097556757 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.144334107 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069940339 seconds)
    (40/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.065759995 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.29985348 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.069992197 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.073864777 seconds)
    (44/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.067068096 seconds)
    (45/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.096086997 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.069346148 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.087344753 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112082074 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.123622898 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.067644178 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068628565 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.172334338 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067579187 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.084110252 seconds)
    (55/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.066109177 seconds)
    (56/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.218915459 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.153758115 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.068718058 seconds)
    (59/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.30381118 seconds)
    (60/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.095463192 seconds)
    (61/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074633202 seconds)
    (62/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.067563256 seconds)
    (63/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.194169869 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.119806603 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.070569182 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.070053923 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074648609 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.07101385 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.391322772 seconds)
    (70/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.068062892 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.886737145 seconds)
    (72/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071580353 seconds)
    (73/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.079311709 seconds)
    (74/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073506571 seconds)
    (75/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074582392 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082278375 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082172035 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.093586027 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.06927481 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.076544949 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.069166859 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.068354696 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.069327586 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.095872121 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.400474629 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.069418651 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.074597707 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.066963186 seconds)
    (89/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.066158947 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.095639278 seconds)
    (91/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101696672 seconds)
    (92/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.069866919 seconds)
    (93/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.067665842 seconds)
    (94/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10505837 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071136697 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.068766056 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.07045461 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.123104329 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.072919916 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.115321551 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.072362555 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.075630196 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.101159517 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.071839795 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103827818 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.078322137 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072358673 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.460508011 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.06650305 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.073549354 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.067182515 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.068298086 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.06766601 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079135514 seconds)
  done (took 22.015438499 seconds)
done (took 39.43083892 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.24901715 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.08611667 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.086453783 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.086978185 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.08635543 seconds)
  done (took 1.766406373 seconds)
done (took 2.950499794 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.129736772 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.102242663 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.06633249 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.100309517 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066274554 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.103993302 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.107328463 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.086179408 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10292304 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.066843284 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100298937 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.066791954 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066936993 seconds)
  done (took 2.331401866 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083205772 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085087217 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071312879 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08672085 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065105185 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084225348 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083005332 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090587175 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083325592 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074479633 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064760305 seconds)
  done (took 2.01451368 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082988011 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085106664 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070749403 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083217532 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064287865 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083294229 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083056082 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.086818916 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083541866 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075558804 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064314614 seconds)
  done (took 1.999199392 seconds)
done (took 7.481558593 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077349207 seconds)
  done (took 1.204100692 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.543233125 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.618232948 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081204075 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.103126001 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.198177031 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.111872278 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.241751666 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.085980093 seconds)
  done (took 8.288381401 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.097898827 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.083611406 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.07159412 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.071092515 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.07148036 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.072278195 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072548356 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.072280376 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.072264386 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.071451171 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.071354121 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.07238453 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.072629632 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.07120319 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070796583 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.07209212 seconds)
  done (took 2.40215416 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.099800709 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.098021633 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.075873662 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.07730492 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.07521802 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.074356375 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.07695539 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.076229537 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.073464689 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.074895716 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.077981369 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.075984045 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.075368239 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066387379 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.076471866 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.078871037 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.073871917 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076362887 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.07732316 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.078699594 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.077744117 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.06612471 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.075409517 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.077513696 seconds)
  done (took 3.098041372 seconds)
done (took 16.130519057 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.106007144 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.06968562 seconds)
  done (took 1.311063363 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.078820069 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082049245 seconds)
  done (took 1.302181456 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.077759893 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065394269 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.086800824 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.076305758 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065762685 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.064944995 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.08452932 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065731447 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065326903 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065335719 seconds)
  done (took 1.860292985 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.06529021 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.075433353 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070898957 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081089351 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.071986085 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.06579807 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.070845046 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.066885292 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.075668371 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.064884527 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070279318 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.085307566 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.069949771 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.087099294 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071306203 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.069931387 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.072223409 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068973598 seconds)
  done (took 2.448560858 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.063545565 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.065746988 seconds)
  done (took 1.278048618 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066548102 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065511919 seconds)
    (3/7) benchmarking "month"...
    done (took 0.06803908 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067931129 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.064922733 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064476133 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.065175407 seconds)
  done (took 1.607870355 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.405720178 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.12562655 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.339303632 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.073259889 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.082318215 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.263251515 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.066506745 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071900754 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.071759794 seconds)
  done (took 2.689475234 seconds)
done (took 13.651817675 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081103447 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.088750464 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.099536941 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.427804358 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.09488076 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.06939435 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.115260707 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.183550177 seconds)
done (took 2.321863891 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.208507013 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.823244868 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.494191413 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.212141284 seconds)
  done (took 2.680564664 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.347303867 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.08309069 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.079748982 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.06915362 seconds)
  done (took 1.744640578 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.182023785 seconds)
    (2/2) benchmarking "read"...
    done (took 0.072053128 seconds)
  done (took 1.412648902 seconds)
done (took 7.205902755 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.092289122 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066099817 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066057141 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.066693075 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066142202 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.067120687 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.066809449 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066363019 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066816799 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.06692923 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.066375378 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.066887293 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066358158 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066751308 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067260629 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066751134 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.066436358 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066694134 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.066318882 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066881961 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066383307 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.067270717 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.066673603 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.066183955 seconds)
  done (took 2.817128241 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082455792 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.06883571 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.070679757 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070576144 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070916312 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070821642 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070555501 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068720622 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070605237 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068386359 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070822671 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071107067 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068379938 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.070976779 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068547589 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071353346 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070733343 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068994047 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068350286 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.071303459 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070363248 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068978559 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.070988601 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070124588 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.07128428 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071468385 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068384036 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.069027112 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070437891 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.070769692 seconds)
  done (took 3.282437726 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.068823651 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062985686 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063064983 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071727894 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063287084 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.063820312 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063097128 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063555038 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063979664 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062964411 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.063992848 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062756429 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.062515099 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.063273567 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063402488 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067146278 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.080743705 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063435153 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.062591928 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063555053 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067525151 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.062585127 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.062706606 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.065908249 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.062774419 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062364083 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063539014 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062766591 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063623243 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062825505 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066597103 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.06729979 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063181484 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071389148 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067788846 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062923146 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067586595 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062542527 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063603541 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062711219 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062750732 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.06334795 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063277506 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.072199401 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.062951526 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.063922195 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.062930707 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064091196 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.06352085 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.0653177 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.063005458 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062757387 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064741124 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.063866779 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.06807838 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062431638 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063783175 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062555061 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064191927 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062774511 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062411996 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062583916 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065987902 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063336753 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.080674235 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.072152357 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063180474 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064419446 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063605445 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.066769715 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064846949 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.07911968 seconds)
  done (took 5.852994612 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.085095969 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.089900023 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068216736 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068175295 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063695654 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063500319 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072027921 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06449479 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068582303 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.083187204 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063577139 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068042162 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068198033 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067951868 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064241004 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06841668 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.072641626 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064067414 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.06353811 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067414352 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063701355 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071881951 seconds)
  done (took 2.71335141 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.146111023 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069543149 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.10907516 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074484605 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072511061 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075143538 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069534237 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069869078 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070014098 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070496841 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070845068 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069730076 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.07299475 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070291865 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070274771 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070235905 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069728812 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070329136 seconds)
  done (took 2.566892343 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078011857 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.069638019 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.088898212 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.069694368 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.069066561 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069044338 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073496395 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074584716 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.069130305 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.069444419 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074072208 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069167998 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.0685226 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069072358 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068477568 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069299717 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068895745 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069158165 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074323512 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073073693 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073310675 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.083821644 seconds)
  done (took 2.767738159 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078687444 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069318211 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.084158229 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.070456835 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063677684 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06346847 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069518871 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068311335 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.06987244 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067954262 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069011141 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063744869 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.07096099 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068459652 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.071175195 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068622954 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068426448 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068575829 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068170647 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06372067 seconds)
  done (took 2.560938176 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083592662 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066732796 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066587521 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073221077 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066582544 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.066727332 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072993922 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066488126 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066649363 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087702657 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06678749 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067019331 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073209031 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07156347 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067190549 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073460519 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076588476 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07307132 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066942877 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06731509 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087807367 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067128139 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073088591 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067092861 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066984874 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067060652 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066916395 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070831027 seconds)
  done (took 3.163045914 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065413803 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065966391 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.066551225 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066615356 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.066510674 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.066976075 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066570679 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.066499663 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066469567 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066827966 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066242395 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.066073274 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066357939 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.06602536 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066423945 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066474372 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066727597 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.066906057 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066418479 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06640576 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066214859 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066397231 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.066258547 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067060598 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066450538 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.06604891 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066932343 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066727897 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066098551 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066644369 seconds)
  done (took 3.173576748 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075100089 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073507884 seconds)
  done (took 1.329000987 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063560274 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079403955 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.062828454 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.074009452 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072445368 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066878545 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073645469 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072784245 seconds)
  done (took 1.741178084 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.085995283 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077783286 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.066138735 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.07807159 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.077312317 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.086705927 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.129893242 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066250656 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.076219021 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.066664859 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.084475925 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067589247 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.076148293 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070418676 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.076414073 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.079813844 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063274453 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071005003 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.067221893 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064068925 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066451277 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079136719 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.075324652 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.063805016 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.071251042 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.093777365 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.082050936 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.064868249 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072854552 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.078158708 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.076269914 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.062706134 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065059285 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.06584282 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063568916 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.076646224 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084911334 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073200043 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.078734667 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066042375 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.074164072 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063815674 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.075057659 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.076275472 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.082073124 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065352723 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.065707507 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.063336628 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.066560546 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.071361572 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.062831985 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070228598 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.06330242 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077330126 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.073241361 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081062108 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064126928 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.071617658 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.072326157 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.072884672 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.076951065 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.071992805 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.075333464 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065040294 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.081343673 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.075720442 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077771849 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.06391124 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062755684 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063492879 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.08011516 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094598366 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.075345295 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.065894029 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066295995 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063822615 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072978009 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.065863596 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074934822 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.077512904 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065529954 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070102352 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078206939 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070782105 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.072437647 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.072025198 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064238133 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.069283352 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.066994313 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085953623 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064579357 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063799588 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.066637649 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.081021981 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.07533408 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.06565893 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.067014217 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077186479 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062431689 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065443854 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065805284 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070724932 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.07855812 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069167435 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069848646 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.078699851 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074238406 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070934463 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.07192954 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062046023 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065493738 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.066757258 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.07644882 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.062118971 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071860958 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.069458383 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065099457 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.076774741 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.063692774 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.064501077 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.077842415 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.075827437 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.062787321 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.061385981 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071471003 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.064806146 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066631498 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.078564267 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.062932351 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062560997 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.06254184 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.072077448 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.063733602 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.072020403 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067731065 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07116024 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061624384 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.191805931 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071556595 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.080015491 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.070507581 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.072881042 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.076593438 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.072174099 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065022716 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.078674234 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.072880363 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.068144943 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.075431937 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.069488032 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063312531 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068400537 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.072084038 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.063999727 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.073584855 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067855676 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.072662779 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066412108 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064308812 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.071258913 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066534395 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.068222697 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070762967 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064529335 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.081222645 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.071951295 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.063709901 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063275747 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.072718564 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066893698 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.064781597 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.068533493 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.072308868 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066373996 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064135362 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.064744801 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.071989745 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.073793703 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068402741 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066315555 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.075099413 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.083302376 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065195019 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.072938648 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065301161 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066449959 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066277267 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.080685513 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.076888038 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070076501 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.072594682 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063114425 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075679391 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.0778694 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.068656954 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063736613 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.068061912 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069584675 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.077553072 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.069575965 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066108528 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064377895 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071229274 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06791793 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.073073229 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065323395 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.068430939 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.071082356 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.063866172 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.071587555 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066033654 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.080794739 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073091095 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.063594702 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067930291 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063761032 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.076682603 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063934822 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.066544885 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.068453098 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066466824 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064601564 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.072504925 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.062906993 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.078262877 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.078634329 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.071039483 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.067953835 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065164917 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078063008 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.071220556 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073864561 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.073144138 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.075803376 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.081654978 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.068287524 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.072379192 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.081010525 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.065411273 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.062653722 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.077929335 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.064138035 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.064569951 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.064934607 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064272404 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072784734 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07272426 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.07601886 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062770837 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.072371627 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.064286251 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.06835016 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.063342968 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073704263 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.072123642 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.06915707 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078073239 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.065594771 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.065166059 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072872426 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.064876978 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.066124368 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.066120704 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072014422 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.064907241 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070950878 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066727414 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.070025796 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066659193 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.062085457 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070546607 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.064240991 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.069837717 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073335385 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.06354867 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069981304 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070929121 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.064663117 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070595513 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067772477 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.200508421 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074660336 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072668374 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.07177952 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.073310655 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.064275372 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078160609 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065126329 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078693649 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.070739448 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063447897 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.071299928 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.072634365 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.070864602 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.065790634 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.06608741 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.071140392 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.065889199 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.072360098 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078695283 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.067274545 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.081882686 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076800682 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071553921 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.072520007 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.070637331 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.071029414 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.06781796 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.070060942 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.065892592 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.070617382 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065203184 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.074271316 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.072434826 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.070935419 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072092077 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066193796 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.071041836 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066602648 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.062978194 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067683744 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.067990451 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065163328 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079260193 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066111857 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.068668257 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064749051 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066449 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064657399 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062983883 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.073200842 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074551415 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.06681493 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077738195 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.068768833 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.072434484 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081882377 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.062924689 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064707151 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.064399565 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.067646721 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.079164041 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066122003 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.080646342 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.070831216 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.069069211 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063278647 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066233445 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064562701 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.063183948 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.064199688 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.0738916 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.067740162 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064915512 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065848835 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.072557661 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066385918 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078579652 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.065197518 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.070013683 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065970434 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.062790997 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.068147505 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.067802529 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.072472573 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.066128253 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.06714372 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063151697 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.06544011 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.070427298 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.071610443 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.065080392 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.071098531 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077695353 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065743884 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.073057673 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068302516 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.063572657 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.072476614 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.065098328 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.065216467 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067544361 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.073557009 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07323271 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06640169 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.080582558 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.068051894 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071763998 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065577062 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.063560121 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066222981 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.065099397 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.065629899 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067650758 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.066234823 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078520698 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.063242405 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.071774718 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070765314 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.069091015 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.075534097 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.066142628 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.071342459 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070374568 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066756683 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.071010286 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.078155022 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.068713051 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072508388 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.065829677 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070216428 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074183326 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.067027384 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.076198877 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.069988551 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.064879579 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069907782 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.065551738 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06401117 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.064355574 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063645259 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.074512321 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.064853897 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.066994654 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066944371 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.199551522 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.071080148 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069064479 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.080038944 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.073203249 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073660361 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.064422044 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063611954 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066319892 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.067929846 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.071737885 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.072316681 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076578338 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.072272331 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.069492249 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065056381 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.081115127 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076287069 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.073644808 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.067836154 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.073812894 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066550078 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.072851035 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.069887019 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.070826114 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066886941 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.073472482 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.072300366 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.068088517 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076692358 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.073929941 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066069306 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.071678961 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.071654217 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.070850233 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.063569299 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066725734 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.072387647 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074783601 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.07323751 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065694929 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081005903 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.06634022 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.07010909 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068044706 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064671896 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.073927494 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.063352099 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.072347955 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066717921 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067395726 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.064505986 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.068970892 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.067598315 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.073134426 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.068538252 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.064381147 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081732142 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.08049856 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.072175884 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06563686 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064754409 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.06399195 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.063863976 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.068339736 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066590992 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.071709989 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.080967595 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.068018693 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.067773728 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.063600673 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066044871 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073441005 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.073909866 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063332038 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.06369091 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.068452324 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.07206432 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.077297353 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065031365 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.065213802 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073080826 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.072255223 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064262699 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068515015 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063328802 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.073695481 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082815579 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.06580381 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072189154 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.076263454 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.079194944 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.065748857 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.06391941 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.066233338 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.072142487 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.071342378 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.066186022 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.066418489 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085263016 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072849033 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.067870412 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.064527986 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.072426468 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.068074506 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.079497319 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066046349 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.06602463 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.077848918 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.071975726 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072943759 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.076068441 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077415982 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.07174814 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.072040291 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.064536876 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070684391 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064462047 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.068301568 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067004028 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.08301931 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069680119 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.073707396 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.067881417 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080627243 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.079322192 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.067555298 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.062556713 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067952954 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.06808984 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062839462 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.065488065 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.062851284 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.062936848 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.062741727 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.063523382 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.070394397 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073126327 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.068359902 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.064020775 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.063659295 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.061274175 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.073708359 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070844711 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070071531 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.201688262 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066490304 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.067110746 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.07457629 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068587722 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.068055358 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.072289101 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.071542284 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071329078 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.063748039 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.077500009 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064820773 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.072199224 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.068471011 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065805393 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066659681 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072806095 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06917503 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066824289 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.071994367 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.072549346 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067127942 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063781843 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063218124 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.07474506 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063788588 seconds)
  done (took 43.506720987 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.099605886 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.065080347 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06367721 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.064281778 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073769106 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065080369 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063618704 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06532798 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.06519322 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06718093 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.063917012 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064198684 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071846489 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078860734 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074296294 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068900034 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064164775 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065465688 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.064208833 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065451547 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071848779 seconds)
  done (took 2.729994156 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.069468787 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.079703508 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.076632197 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.081698343 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073206016 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069234922 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.077163856 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068836306 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077152285 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074571763 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.07756612 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068824532 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.074221647 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.074022736 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074689446 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06926616 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.077728874 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073553767 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.069048088 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.076996773 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069924206 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.076967715 seconds)
  done (took 2.899755421 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.064480197 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065125358 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.071026088 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063033345 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.064399983 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.063192816 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.067700866 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063095426 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068100469 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.06796837 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.06745628 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066954582 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.07219816 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.062741035 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.06844284 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063039828 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.109923289 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.067846292 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065192222 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.065720596 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063401841 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.072691521 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.063116983 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.06366551 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.067138102 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.067437958 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.065567799 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.062902453 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.064435569 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.067300333 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.064753065 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063254572 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.071647303 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.070641433 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.067379723 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066929978 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.064575143 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065082103 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063218592 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063180886 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.073833854 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.064222771 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065367147 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.071995659 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063580637 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063407929 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.071997286 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.06502876 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063145323 seconds)
  done (took 4.562753084 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.074085982 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.112414092 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.070054163 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.093065285 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.078862123 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.071341433 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069819121 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.094886935 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065119015 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.066363959 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.079942402 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.080332678 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067271566 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069174462 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.072125412 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066973461 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067734457 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066228613 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070388247 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066621512 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070490703 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071531653 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.078577138 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079250013 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.067758579 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066457664 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066591847 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.068793764 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.078802285 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070878961 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.068815608 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069353448 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.078878213 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.069847255 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066399625 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.066497929 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.080443207 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.067381665 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067010624 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.065660917 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.066379033 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.068293589 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071462642 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.079656045 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067225306 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.072397124 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067130073 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.064471718 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.078806133 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.066606456 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.071566357 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.080041613 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068286451 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.067408948 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068420784 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.079177295 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.067394573 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.065504602 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067357497 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.078466003 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.065445838 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.067678108 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.079551819 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066257056 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.070542855 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.0798807 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.072169552 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068279174 seconds)
  done (took 6.322585427 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.072559099 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.096490847 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081978583 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.0815393 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075077531 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075475757 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.075133069 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074997575 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.075148745 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079347264 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075428722 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.116930259 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.071311811 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077311114 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075336119 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.075316782 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.07545967 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075404993 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.075275568 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075277564 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.075829111 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.081739084 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.075326173 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.081471216 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078646306 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.070968514 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.07509677 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.074754191 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081455006 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.075006931 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078480114 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.07516371 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.075127406 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.081433687 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.07842183 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.075248154 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064769274 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074786313 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.074947393 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.074771793 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.071327501 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.081626119 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.07466189 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070754844 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.075070089 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.074902215 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.081108485 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078687198 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.076813541 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.078818164 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074910726 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081241766 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074954831 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.075073358 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.081343343 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.084749407 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081667517 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.081787909 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075279747 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.081115334 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081398692 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.083974844 seconds)
  done (took 6.12779739 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077967685 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07175081 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.083450215 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.063507691 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063308181 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.074334185 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063545807 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.06653748 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072108825 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.072362038 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074279701 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.074405215 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076690679 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074144483 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.074117656 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076994682 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074026973 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.074417467 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072255731 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.073664293 seconds)
  done (took 2.756288016 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076066155 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082774572 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.069246641 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073860252 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.069547419 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073752677 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.06882285 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069526448 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069768135 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069400271 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075635533 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075348875 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069612266 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074226537 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.07484036 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073826076 seconds)
  done (took 2.455896043 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.083653764 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.071766319 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080007369 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.065594955 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.069574362 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.064255441 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065184219 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063069639 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.064344258 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.078029909 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.064928862 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.076847342 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.064949961 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064025154 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064341773 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.071087936 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.06409023 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.064964747 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.06495777 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078854635 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.072471823 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.066103765 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.069337903 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.064564375 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.070332143 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.072354975 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.066702959 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.068714743 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.065288434 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.06570938 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.070726991 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.071860546 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.064600263 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065525334 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064491186 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.064890705 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.064592857 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065079645 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.088805007 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065345249 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063420541 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.070597397 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.06503006 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.065629276 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.064559892 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065475709 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.064021083 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.070860534 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065199699 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.070543402 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.064972519 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067837821 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065461411 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072653423 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.0675863 seconds)
  done (took 5.046595992 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078703329 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06965193 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063473876 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063803498 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068865568 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.0695682 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068793069 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.069614394 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070333596 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063531809 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069781778 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068771189 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069989935 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069496487 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070408974 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069168689 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063536867 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069521054 seconds)
  done (took 2.541867605 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072882589 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068655218 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073272592 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068421687 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.068569221 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068214604 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064034334 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.063895923 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064009168 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069020487 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068635429 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068030501 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063651497 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068180041 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.068507344 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068799267 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068523353 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064070772 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068487605 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063890326 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068309011 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063951172 seconds)
  done (took 2.779085311 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.096106035 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.085229322 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.14295496 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.081852019 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.089138057 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.073678783 seconds)
  done (took 1.864984838 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092090763 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100493434 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068428389 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068877319 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074611637 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071991444 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072164898 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072543683 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076790958 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077976951 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072431649 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076986563 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076889018 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078858142 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07487088 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077423835 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072574546 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072271923 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06854467 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081738474 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072366642 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077138653 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072322099 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072176195 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072373956 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078599803 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076566982 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077380574 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072288637 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077465295 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074943506 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072416262 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077571096 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077336969 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068831255 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076615212 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072315691 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082120558 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074739346 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078763128 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069660396 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074593944 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077175005 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076550844 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076818483 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072617569 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076172959 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072435431 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072258546 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083578232 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074827632 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078626755 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075153926 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077272655 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077030785 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083749911 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077262506 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079018678 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074794292 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077237896 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078474292 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074210638 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078429132 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077050031 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074898584 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079156001 seconds)
  done (took 6.32360479 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103574928 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069343339 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072427954 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077394284 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079057912 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072618826 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072968575 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072528469 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072667161 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070071816 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107687297 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072843884 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079383441 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079272241 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073034003 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072799195 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073085265 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079222208 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069880932 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083816561 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072666943 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078969089 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079234158 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078862952 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077800052 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074912303 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072475394 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073271534 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072483385 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07280637 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076609874 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072367104 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078992418 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069568495 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079372338 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072780172 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072113833 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07692645 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072705233 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074800668 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078897596 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082010291 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072623914 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07249981 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077073296 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07247672 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072208835 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069582772 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072132529 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06921067 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077298164 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077613764 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07703498 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078455087 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072200024 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072224759 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072377019 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072404074 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072060724 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075915297 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078822406 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072536072 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083681719 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072259575 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072303314 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07903423 seconds)
  done (took 6.319277033 seconds)
done (took 129.36660957 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.209470098 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.185307673 seconds)
  done (took 1.681485576 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.07419147 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.106846079 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.085094667 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.13607716 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.071508752 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.108184818 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.105437646 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.083456282 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.073457022 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.073036616 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.073077187 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.075709802 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.139434277 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.071552832 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.073209162 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.075898077 seconds)
  done (took 2.731529359 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.103764462 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.171596223 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.110965588 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.070705954 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.106540257 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.079263086 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.070874514 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.084527602 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.078085628 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.073125964 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.079572578 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.080331635 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.072974778 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.077530026 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.078165031 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.079365786 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.072809099 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.079809355 seconds)
  done (took 2.881187407 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.103023426 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.09786091 seconds)
  done (took 1.514082564 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.176574193 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.135699154 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.202893357 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.34674957 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.157986143 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.425279078 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.142098527 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.141995895 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.117168846 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.137275837 seconds)
  done (took 3.290377709 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.103831781 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.172765328 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.298911092 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.124244299 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.078452436 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.093489633 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.125992768 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.083686378 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.086460898 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.085949466 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.085887109 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.080410536 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.105930251 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.079170447 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.077982702 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.080896505 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.10949224 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.077107678 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.077988202 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.081136738 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.109132842 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.072293933 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.079181739 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.07691536 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.083214734 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.083660427 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.073200386 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.071497499 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.080599646 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.077916157 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.081950636 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.090556419 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.083476095 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.108941621 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.076509794 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.110215017 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.080699789 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.078800591 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.078142475 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.078649125 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.082758363 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.082438239 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.080519502 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.080382783 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.072872162 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.080584933 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.072778076 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.071397179 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.08237405 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.073162008 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.082983688 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.082085781 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.108616953 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.073046616 seconds)
  done (took 6.24623999 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.108859058 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.106830236 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072813189 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.115392655 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106939222 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072848405 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.108539376 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.102284906 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.111385839 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073239885 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071059975 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072723885 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082281002 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.085011839 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.117323939 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.108274016 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074700736 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.072187278 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.110608829 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.110601577 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071810691 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104623711 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.100254934 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.110153303 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.069306396 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072149645 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.071999359 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073228501 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078607774 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.079757386 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071927737 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081792246 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.090378251 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080521912 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070470076 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.07107392 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071282095 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.081054993 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081440667 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.080385178 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.078906467 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070704688 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070818727 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.072069689 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071662307 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070289976 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079905493 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.081029551 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.079651139 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.07109412 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072466777 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.071418248 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071935136 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.08078834 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078964088 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.08198228 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080839559 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071090572 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070751737 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073895019 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081870782 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080934098 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080520163 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071890828 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.080882751 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070947098 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083122851 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.086880815 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070974965 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072095369 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070492094 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070837451 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.07200983 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078231933 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.078414853 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072270623 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070822223 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07073287 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.08085482 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079182392 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070623498 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078791739 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070643003 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071259732 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072853925 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072645686 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.078336293 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080334347 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.072441851 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070902783 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070909037 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070659754 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.06995763 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.078307964 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080499196 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.080196914 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.079232561 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072141593 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.079493702 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078577977 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071863701 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.079251791 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.071308976 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072215278 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071761846 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078959558 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.078183188 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079621303 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071093129 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.070321754 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.077990284 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079344912 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.070493761 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.076589634 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079331448 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.077871895 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069783286 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080561255 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070786995 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080155608 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070385549 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079663124 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.204913859 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.08138152 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.072830517 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.071395882 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.072229254 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.080603179 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073141906 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071579384 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072364113 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071436498 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079694934 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083354863 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073635522 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079576967 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079506455 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.073164429 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079960416 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071185093 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.08081673 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071792313 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072527358 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07082608 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083008681 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072483986 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.071288782 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070997825 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.082157786 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071523503 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080799344 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078886915 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070560462 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08663471 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081589372 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.079610745 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.082234208 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073077519 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.071639189 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071237823 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071266925 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079028893 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080099573 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073093707 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.071147517 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.07890445 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.082610286 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.070953912 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.079297434 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079697877 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.079744309 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.072142075 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071379666 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082485664 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.082560051 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.07963809 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.07938236 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080431538 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072101202 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079215819 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080180816 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071597519 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087195113 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071671289 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.084437362 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.080018168 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078650694 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080319829 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.081426527 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.082146331 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.081955281 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.084361511 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071128339 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.071182671 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.08009352 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071170625 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071299648 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.0788285 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.073290582 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.072616279 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.085135514 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06979363 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.081981881 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.070822789 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.081145414 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070510897 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072872882 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085582354 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071753221 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072359427 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080205438 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071220388 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.078718316 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082347372 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.082181345 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071062117 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072445208 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080511245 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.080539607 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071603908 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071032466 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072395065 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078966126 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078205923 seconds)
  done (took 18.963575105 seconds)
done (took 38.63300448 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.207267123 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.157277176 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.189599919 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118784076 seconds)
  done (took 2.083121928 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.107519382 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.101414422 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.091509762 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.067716745 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.096741175 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.067488139 seconds)
  done (took 1.875917314 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.28554256 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.199751214 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.182249986 seconds)
  done (took 2.009027586 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.213406347 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.194753609 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.469773327 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.288583813 seconds)
  done (took 2.606129576 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.143787961 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.084710754 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066830458 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.084812391 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.126219195 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.152824947 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.095448286 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.12037971 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078107088 seconds)
  done (took 2.349876467 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.150170755 seconds)
done (took 12.437138878 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.102596426 seconds)
    (2/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.074286215 seconds)
    (3/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.214813721 seconds)
    (4/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.089321096 seconds)
    (5/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071302599 seconds)
    (6/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.241210931 seconds)
    (7/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.078236908 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.13517933 seconds)
    (9/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.129854175 seconds)
    (10/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.07873046 seconds)
    (11/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.073227425 seconds)
    (12/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.18426051 seconds)
    (13/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.078800523 seconds)
    (14/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.175672447 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.102914614 seconds)
    (16/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.077251629 seconds)
    (17/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.077003337 seconds)
    (18/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.177229369 seconds)
    (19/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.459118536 seconds)
    (20/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.076999422 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.102841561 seconds)
    (22/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.08780168 seconds)
    (23/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.078788397 seconds)
    (24/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.200246697 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.068382405 seconds)
    (26/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.075035277 seconds)
    (27/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.084305014 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.06828178 seconds)
    (29/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.095288539 seconds)
    (30/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.079512648 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.0677213 seconds)
    (32/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.086757745 seconds)
    (33/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.207548368 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.094889575 seconds)
    (35/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.23372868 seconds)
    (36/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.087339972 seconds)
    (37/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.204334543 seconds)
    (38/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.075370533 seconds)
    (39/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.076640555 seconds)
    (40/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.120441388 seconds)
    (41/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.068108275 seconds)
    (42/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.066757465 seconds)
    (43/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.076702931 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.150845016 seconds)
    (45/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.10641222 seconds)
    (46/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.232106931 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.094315494 seconds)
    (48/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.181047932 seconds)
    (49/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.218152733 seconds)
    (50/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.094059848 seconds)
    (51/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.076452484 seconds)
    (52/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.095210929 seconds)
    (53/309) benchmarking ("sort", Bool, false)...
    done (took 0.160415535 seconds)
    (54/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.23485394 seconds)
    (55/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.121574887 seconds)
    (56/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.102153742 seconds)
    (57/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.081160113 seconds)
    (58/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.080343839 seconds)
    (59/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.181258918 seconds)
    (60/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.20475931 seconds)
    (61/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.06882863 seconds)
    (62/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.220749772 seconds)
    (63/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.208062999 seconds)
    (64/309) benchmarking ("sort", Int64, false)...
    done (took 0.068493031 seconds)
    (65/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.068197025 seconds)
    (66/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.075243888 seconds)
    (67/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.197267912 seconds)
    (68/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.076899248 seconds)
    (69/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.06773109 seconds)
    (70/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.07681482 seconds)
    (71/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.071828038 seconds)
    (72/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.079603334 seconds)
    (73/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.06672099 seconds)
    (74/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.176348451 seconds)
    (75/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.130144262 seconds)
    (76/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.197231513 seconds)
    (77/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.213842356 seconds)
    (78/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.078123186 seconds)
    (79/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.1398498 seconds)
    (80/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.076369081 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.119647887 seconds)
    (82/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.078249733 seconds)
    (83/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.167452723 seconds)
    (84/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.096473537 seconds)
    (85/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.06832696 seconds)
    (86/309) benchmarking ("sort", BigInt, false)...
    done (took 0.191579154 seconds)
    (87/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.067368652 seconds)
    (88/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.073827969 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.066904191 seconds)
    (90/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.067410215 seconds)
    (91/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.171766263 seconds)
    (92/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.066141138 seconds)
    (93/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.224269391 seconds)
    (94/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.142498292 seconds)
    (95/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.146893515 seconds)
    (96/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.21417037 seconds)
    (97/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.179062689 seconds)
    (98/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.077112169 seconds)
    (99/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.182856906 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.09406689 seconds)
    (101/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.174726693 seconds)
    (102/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.130977911 seconds)
    (103/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.079109828 seconds)
    (104/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.085651058 seconds)
    (105/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.093599216 seconds)
    (106/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.068221649 seconds)
    (107/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.074763564 seconds)
    (108/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.074629226 seconds)
    (109/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.143495533 seconds)
    (110/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.185927711 seconds)
    (111/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.067809174 seconds)
    (112/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.068474985 seconds)
    (113/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.183342328 seconds)
    (114/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.122672881 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.090669364 seconds)
    (116/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.0681974 seconds)
    (117/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.077523874 seconds)
    (118/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.176152387 seconds)
    (119/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.069304919 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.135839058 seconds)
    (121/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.068935685 seconds)
    (122/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.080059644 seconds)
    (123/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.07012178 seconds)
    (124/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.069234306 seconds)
    (125/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.175521694 seconds)
    (126/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.067697599 seconds)
    (127/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.071138388 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.116447641 seconds)
    (129/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.0677253 seconds)
    (130/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.069190867 seconds)
    (131/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.088623776 seconds)
    (132/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.068938919 seconds)
    (133/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.200749747 seconds)
    (134/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.123481211 seconds)
    (135/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.06765456 seconds)
    (136/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.087305386 seconds)
    (137/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.077105881 seconds)
    (138/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.132111308 seconds)
    (139/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.068424566 seconds)
    (140/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.198177895 seconds)
    (141/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.067934991 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.067576017 seconds)
    (143/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.144948357 seconds)
    (144/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.067978433 seconds)
    (145/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.079977663 seconds)
    (146/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.184515726 seconds)
    (147/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.069121785 seconds)
    (148/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.068689672 seconds)
    (149/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.077221796 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.110528418 seconds)
    (151/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.092204681 seconds)
    (152/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.173704698 seconds)
    (153/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.067920337 seconds)
    (154/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.06863242 seconds)
    (155/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.075830433 seconds)
    (156/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.083298933 seconds)
    (157/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.124590109 seconds)
    (158/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.074098519 seconds)
    (159/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.075436413 seconds)
    (160/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.072730822 seconds)
    (161/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.206236363 seconds)
    (162/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.068278937 seconds)
    (163/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.06792707 seconds)
    (164/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.068564262 seconds)
    (165/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.076296884 seconds)
    (166/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.069039894 seconds)
    (167/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.076373624 seconds)
    (168/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.075330016 seconds)
    (169/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.075979131 seconds)
    (170/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.080853968 seconds)
    (171/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.07654444 seconds)
    (172/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.067144414 seconds)
    (173/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.23303617 seconds)
    (174/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.141578062 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.090507408 seconds)
    (176/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.068200899 seconds)
    (177/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.068761834 seconds)
    (178/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.129241584 seconds)
    (179/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.070540613 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.068207805 seconds)
    (181/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.06835603 seconds)
    (182/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.067169869 seconds)
    (183/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.142680077 seconds)
    (184/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.067465739 seconds)
    (185/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.073132829 seconds)
    (186/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.067885665 seconds)
    (187/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.173783549 seconds)
    (188/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.139156907 seconds)
    (189/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.082299891 seconds)
    (190/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.070218412 seconds)
    (191/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.07083404 seconds)
    (192/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.081867505 seconds)
    (193/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.089292533 seconds)
    (194/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.089973607 seconds)
    (195/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.068154226 seconds)
    (196/309) benchmarking ("sort", Int8, false)...
    done (took 0.160184798 seconds)
    (197/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.070543039 seconds)
    (198/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.068132196 seconds)
    (199/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.135903563 seconds)
    (200/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.067910623 seconds)
    (201/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.066495109 seconds)
    (202/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.109652687 seconds)
    (203/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.067736539 seconds)
    (204/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.079989806 seconds)
    (205/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.067684235 seconds)
    (206/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.074853203 seconds)
    (207/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.067661684 seconds)
    (208/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.081909519 seconds)
    (209/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.068996957 seconds)
    (210/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.09365561 seconds)
    (211/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.069721512 seconds)
    (212/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.078082809 seconds)
    (213/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.073753424 seconds)
    (214/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.067528917 seconds)
    (215/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.073874018 seconds)
    (216/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.071335042 seconds)
    (217/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.22946666 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.099818416 seconds)
    (219/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.099163514 seconds)
    (220/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.070424898 seconds)
    (221/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.09627007 seconds)
    (222/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.141603668 seconds)
    (223/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.075260561 seconds)
    (224/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.072095765 seconds)
    (225/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.221010401 seconds)
    (226/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.085071257 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.142165217 seconds)
    (228/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.121546475 seconds)
    (229/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.07868106 seconds)
    (230/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.185734221 seconds)
    (231/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.076137919 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.139469584 seconds)
    (233/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.068863654 seconds)
    (234/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.069325848 seconds)
    (235/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.068776822 seconds)
    (236/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.128944315 seconds)
    (237/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.077039656 seconds)
    (238/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.076995126 seconds)
    (239/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.076994081 seconds)
    (240/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.071272787 seconds)
    (241/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.069933793 seconds)
    (242/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.094196576 seconds)
    (243/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.179373325 seconds)
    (244/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.069040994 seconds)
    (245/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.069169478 seconds)
    (246/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.068479939 seconds)
    (247/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.094856601 seconds)
    (248/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.068904087 seconds)
    (249/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.069634715 seconds)
    (250/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.067517739 seconds)
    (251/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.068752982 seconds)
    (252/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.146794721 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.089846123 seconds)
    (254/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.068303516 seconds)
    (255/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.135455675 seconds)
    (256/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.185072113 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.123815112 seconds)
    (258/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.068822367 seconds)
    (259/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.090857255 seconds)
    (260/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.068739325 seconds)
    (261/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.068727629 seconds)
    (262/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.068979671 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.136077118 seconds)
    (264/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.077044315 seconds)
    (265/309) benchmarking ("sort", Float32, false)...
    done (took 0.13548362 seconds)
    (266/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.095415778 seconds)
    (267/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.069687549 seconds)
    (268/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.074991396 seconds)
    (269/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.075223591 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.077683805 seconds)
    (271/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.075111441 seconds)
    (272/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.176479048 seconds)
    (273/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.074948887 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.068825665 seconds)
    (275/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.069206515 seconds)
    (276/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.069367306 seconds)
    (277/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.070866649 seconds)
    (278/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.06775647 seconds)
    (279/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.069473441 seconds)
    (280/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.069907164 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.127224653 seconds)
    (282/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.071728933 seconds)
    (283/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.08181901 seconds)
    (284/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.070966123 seconds)
    (285/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.068779875 seconds)
    (286/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.090496621 seconds)
    (287/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.146605677 seconds)
    (288/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.136379068 seconds)
    (289/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.081311007 seconds)
    (290/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.069761478 seconds)
    (291/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.069361431 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.076444797 seconds)
    (293/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.06974051 seconds)
    (294/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.070529015 seconds)
    (295/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.069022091 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.130461172 seconds)
    (297/309) benchmarking ("sort", Float64, false)...
    done (took 0.134179994 seconds)
    (298/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.067990719 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.075133343 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.067845561 seconds)
    (301/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.069458329 seconds)
    (302/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.07267359 seconds)
    (303/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.080725246 seconds)
    (304/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.06761266 seconds)
    (305/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.076223847 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.067932726 seconds)
    (307/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.068952435 seconds)
    (308/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.076433685 seconds)
    (309/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.069759946 seconds)
  done (took 33.717904569 seconds)
done (took 35.071453437 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.089211908 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.102374879 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.076536965 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.096625859 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.084288256 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.100059141 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.076784628 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.081772378 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.084432767 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.082974989 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.081859339 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.075137239 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.077641563 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.077335358 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.075476728 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.100478327 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.08243016 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.076771812 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.076912474 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.068200556 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.076486654 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.06840453 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067825938 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.075005016 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.079711205 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.075376328 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.077557961 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.07718548 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.069216725 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.068840172 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.073164389 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.077087333 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.067786782 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.081058661 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.077723241 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.076459063 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.07781447 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.080877575 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067764758 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.06814269 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.078866168 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.068114833 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.076074399 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.074502306 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.072937582 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.074660319 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.076460742 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.080312533 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.10001254 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073110953 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.078045511 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.079021445 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.08014264 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.0739854 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.073675582 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.076175205 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.074302746 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100103728 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.076895196 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073427804 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.077706164 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.077344574 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.074453521 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.076383648 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.076284644 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.078616736 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.080724671 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.074379875 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.078319878 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.075046916 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.067636939 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.075952021 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.072846843 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.068116912 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.078829009 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.080712872 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.067074471 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.072558636 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.079049824 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.076444971 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.067838274 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.072784967 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067221549 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.072902556 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07346436 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.074020002 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.07318147 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.075121592 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.068005148 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.076503592 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.075044811 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.075720573 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.06749299 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.080776377 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.068107523 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.074587901 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.068126914 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.067766195 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.067384515 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.073214049 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.067751401 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073725571 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.077062538 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.067004912 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.072596438 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.081361717 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.067552505 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.074892565 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.067417484 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.068132308 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079298799 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.07787322 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067901379 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073050962 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.067418991 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072758842 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.067272468 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.067117449 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.06730019 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.067566626 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071945593 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.067214842 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.07264272 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.073326073 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.079743907 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.067233722 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.072461627 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.072894683 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.067825374 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.074588544 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.068189855 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.067878803 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.067455307 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.081346275 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072642099 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.067922486 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.073258591 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072808758 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.075537534 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066389153 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.075119191 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.072963174 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.07106098 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.073032523 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.066179824 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.07854897 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071878485 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071608041 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.065891303 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066686157 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.065836013 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066204476 seconds)
done (took 12.836335928 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.071038338 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.120561096 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.096002456 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.096535883 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085421902 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.069276702 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076327903 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.095107169 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.070717492 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.099255679 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.091304376 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.090734757 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.11281947 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.068016268 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.068816944 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070156749 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.070206259 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081356241 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.097011431 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.09144701 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.108922404 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.069017999 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.088534802 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.08931796 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.086069927 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.092851873 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.070255126 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070363709 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.071727307 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.090223097 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.094745254 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.071852009 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.069826534 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.093318951 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.087639265 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083234613 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.069257203 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.077764082 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.069558124 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.068521035 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.070972024 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.090548122 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.077938361 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080229995 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.06999304 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.077096733 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.069859062 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.085722731 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.08831458 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078050014 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085129728 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.093821589 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.073067777 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.085997663 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.06837194 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085066086 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.078550639 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069518019 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.069403358 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.074054416 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.069674634 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.071301956 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080536745 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.079165623 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.074267805 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.084678524 seconds)
  done (took 6.787218596 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085919902 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.096620604 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.086157182 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.086230127 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.068569982 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.069453905 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.071615264 seconds)
  done (took 2.016081788 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068234068 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.089850601 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.0934798 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.093352727 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.08331088 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.093859488 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.07686697 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.06926438 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.098967623 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.068582664 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.089507956 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100722135 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.072859719 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.0811954 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.094681147 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.069184848 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.094015305 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.069665637 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070140029 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.094035616 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074273626 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.096546855 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.080470214 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.068988713 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.081945668 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.069386576 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102325894 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.077629008 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070596821 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.070596395 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.0702346 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.097293216 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.081707436 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.08345189 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070179317 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.084834009 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.082821953 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.072268187 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.080457675 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.078856834 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.082564556 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.071026819 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.068287729 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.070619002 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.072508348 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.080993744 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.068244455 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.07014736 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.070258979 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.088853398 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.068202155 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.08186736 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.072966697 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.075449524 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.074836188 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075204593 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.077498258 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.070798517 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.089370066 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070336006 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086763148 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086073124 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.08277359 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086317074 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069335362 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.081641887 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.08268733 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.070513901 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071140783 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.070720036 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.0862687 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.0725928 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071168357 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.08121173 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.06883544 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.094245906 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.093835271 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068793028 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.083047484 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.070064417 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.070256305 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.081436706 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.093509219 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075502211 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.07009033 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073955887 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072022453 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.072398796 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.068233325 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.073271338 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.070727475 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.074433688 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069985368 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.072628325 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.071899948 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.08652327 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068390902 seconds)
  done (took 9.046307878 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070950495 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.070551822 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.071654515 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.070485422 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.069892418 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.070399611 seconds)
  done (took 1.90242264 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.093528999 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.070222606 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.082862877 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.070118606 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.106548233 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.085889245 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086140873 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.08099147 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083894371 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.082297209 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086849577 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.089055952 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.090876627 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072592823 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.085827548 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071188766 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086591078 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.07556172 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.081493385 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073331353 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.083811049 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072666894 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073136182 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.089381123 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.07474984 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.07118847 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.079764524 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.081465174 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.081281821 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.080390627 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072492663 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.073944417 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.077642396 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.079784128 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.087614405 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.077463353 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070285418 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076651017 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.073498272 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.074680725 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088635309 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073564757 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.075856619 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076673015 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.080192259 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.077563488 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076732519 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.079605932 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085767006 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076793562 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076549722 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.070747828 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.073974085 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076910173 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.077673508 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.079968352 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076774793 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.085895207 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072661813 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.077202654 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.070352177 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074309028 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.079637396 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.073644981 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078584442 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076702446 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.077121475 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072676681 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072713573 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.070429916 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076731356 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.071020106 seconds)
  done (took 7.10924652 seconds)
done (took 28.335691361 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.518541996 seconds)
  done (took 1.943933691 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.620334401 seconds)
  done (took 2.076550128 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 7.13150281 seconds)
  done (took 8.586077815 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.384053208 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.4654611 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.749845595 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.137769995 seconds)
  done (took 3.227719598 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.715312304 seconds)
  done (took 2.187055245 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.23948792 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.230402649 seconds)
  done (took 1.948866603 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.352685704 seconds)
  done (took 1.809075912 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.084476527 seconds)
  done (took 2.538237505 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.23683138 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.164966547 seconds)
  done (took 1.865115245 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.450055308 seconds)
  done (took 1.912112065 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.20418725 seconds)
  done (took 5.66827933 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.219681558 seconds)
  done (took 1.714568521 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.237508434 seconds)
  done (took 1.697068168 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.737800081 seconds)
  done (took 3.201145576 seconds)
done (took 41.848157922 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.084888603 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.089421123 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.088683148 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.084902525 seconds)
  done (took 1.789353983 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.076489479 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.073203456 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.077221654 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.073127692 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.077432283 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073323966 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074942083 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.07617497 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.073459149 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.073560389 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.073657715 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.073362374 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.076342804 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.075287679 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.072187931 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.07661601 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.077370563 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.073665311 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.076390898 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.074109012 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071782175 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.076330741 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.076480226 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.072948281 seconds)
  done (took 3.261252015 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.080917221 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.075981242 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.078996023 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.074826729 seconds)
  done (took 1.782705456 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.07886286 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.091295089 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089379867 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.080191673 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.09210042 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.087121147 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069762021 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.07049543 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.07109593 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.07954726 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.068927389 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096829902 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.089036615 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.079606454 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.082240953 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066216027 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.06845211 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.088309934 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.080397741 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.080453359 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.071283481 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.079802626 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.069046625 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.090453714 seconds)
  done (took 3.390467088 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.084153788 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.068880573 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.08406834 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.095391826 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.096919504 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.069084725 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.083359461 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.097012503 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.14021423 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.069371557 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.074837671 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.069244762 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.114997267 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.069050905 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.084151747 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.112935772 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.11635452 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.073012245 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.104875201 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.069252629 seconds)
  done (took 3.256402439 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.086083829 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.072966883 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.073227329 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.06825775 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.079181074 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.076213522 seconds)
  done (took 1.938112022 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070889505 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.070854271 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.070533229 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069725975 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.075198934 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.070242531 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.068982209 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.070617608 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.070655431 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.070369213 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.070206894 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.068867108 seconds)
  done (took 2.321595761 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.197734392 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.072318556 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.073862344 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.069307854 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.073359566 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.06989621 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.085584884 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.070701969 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.097596005 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.070244306 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.069740754 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.072161661 seconds)
  done (took 2.498732587 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195674506 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077221238 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226799234 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148733787 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106270913 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112912199 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114870358 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111397628 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.13674774 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100887113 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15694959 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163079127 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107037992 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132542595 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.090737456 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.124159534 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147978753 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159792372 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103014591 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158671996 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13889671 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126339183 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145766917 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100322811 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105092501 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116548843 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.07463845 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080445932 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161916099 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126331415 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139490383 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108237544 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093381259 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169159254 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162798111 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133818606 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145785112 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084982153 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.121827769 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.132623325 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197709886 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.090415302 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154623142 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10550735 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080352192 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127291124 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112685105 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.117474521 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.102246128 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089345913 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.280961257 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177245786 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.133495971 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087321149 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120541365 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108915852 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.113578683 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118278788 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173268567 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153033798 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124848216 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.072468335 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110900352 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147203737 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129983317 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.107835272 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.121302069 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093219296 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128190682 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156019589 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121257897 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13693258 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.115893526 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088379517 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118956978 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134250268 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123853101 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166802293 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121570407 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.074118073 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119430705 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099285384 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081530176 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.146915449 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076771606 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169022876 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100066034 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.12411959 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13016439 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109031662 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108681696 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153864891 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136574024 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104235786 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.0875209 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101938166 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.118120499 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140579839 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08784764 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107976985 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113466171 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.080492213 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130403883 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075367084 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118021575 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.095799698 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115961418 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12180274 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.079646028 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117828509 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100110583 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.099663444 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120495936 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147211402 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08586746 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079875688 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155193461 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116196787 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.100507881 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134266359 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147677495 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.118300077 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093987144 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136030219 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161245835 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08858661 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150586079 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099513715 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082633771 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.103436356 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117148498 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106100354 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.118149447 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079321964 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.113952474 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150239268 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.073774136 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09404895 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125536429 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080004514 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078922781 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101102399 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099903613 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094182345 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.098019698 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.100302026 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127755369 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116549183 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102591689 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115495373 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096391747 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147302436 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085207609 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.100536487 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100630302 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.072106712 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.121590078 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14080344 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078386821 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143065462 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.113746484 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110716228 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112487887 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082391476 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126139148 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078792008 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.072152626 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127475765 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108120307 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103371433 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.13767648 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.37308961 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.12577128 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.124010149 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132340145 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130701624 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.132133312 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111248591 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.093186355 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118377187 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1310955 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.076628401 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.095618645 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.086483415 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10635875 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097553255 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087493335 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138680877 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121516648 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113316178 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116360336 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098585497 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148243724 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.081698113 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123324916 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.122425751 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09650671 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.150619745 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148517444 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130507202 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102576074 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134486298 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.075721175 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076953776 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.090619923 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12219789 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085704238 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.085747082 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113822276 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146793451 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124596054 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133781668 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12333239 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116181393 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154144447 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.074328691 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.12025523 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140875701 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120207692 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.106207962 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.0936407 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.099311706 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14016069 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104450242 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175530928 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114695761 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122801912 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153253647 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.102195429 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080879813 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10499089 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128411062 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101424527 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.293795657 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100489654 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088409314 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108410221 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.079926248 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10266443 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123708784 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116618792 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133472767 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.111829603 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128924994 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078699226 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111461005 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121514268 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119962106 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.085409883 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115538187 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160757987 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097221614 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115450811 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146806522 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081169065 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.139400892 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164631136 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139917598 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086046771 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105268274 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121295711 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125167034 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116921362 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134854938 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105506105 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135767675 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112462125 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.086614894 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088081715 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09656875 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103991906 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.114404557 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.104531895 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.114216059 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.096716544 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127098356 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102877306 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110672669 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117175024 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.101018625 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.09649017 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096947191 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16830709 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116868151 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162673461 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.100239118 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.138983132 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154854932 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076567507 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079889572 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.080820205 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133229437 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084603415 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126558761 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.263167134 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11574451 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121868551 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134930638 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097528104 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.072945575 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109384815 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130787994 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121016407 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097361465 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.104583861 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154058686 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.119464869 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080220813 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112647324 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11543721 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104068191 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166654393 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.08285325 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109254819 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078671698 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080890375 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123914018 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146370743 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.084076745 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.104212626 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118998466 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111310826 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.124208402 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09891475 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111406625 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129420247 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142832211 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124484691 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.091131621 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110785631 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126899999 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149445306 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104679878 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.101803985 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169052765 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150292202 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.155521777 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088808577 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113827347 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113333064 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109669127 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134112093 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085801313 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154901277 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082710923 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130362821 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101015895 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090954923 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126039351 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.113098542 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088868481 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137388474 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115120438 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083163772 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080592574 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.26154219 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118127025 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103405808 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.076907392 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134345547 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.07554324 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132821567 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163507198 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081823283 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105126443 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096388562 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083597748 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103061615 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101289967 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086612598 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.099922692 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164100624 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088608545 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141757262 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129747594 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110997087 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133889967 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10433744 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.644248961 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.081084575 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147174133 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115427005 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171409377 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09972949 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117128963 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11044468 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119071502 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138924931 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102664541 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.179570912 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127247114 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.116980165 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080423481 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102442813 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103334345 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.090157326 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106606667 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113231995 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112418668 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.095556231 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.116712253 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120223774 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.083688772 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097744429 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149311668 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114303254 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137668443 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135075277 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085893138 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116754301 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132502327 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080847003 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.116147662 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144611925 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.255304848 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102174467 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.085069034 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.101996276 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166845377 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.074563545 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153013998 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118666995 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114008646 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112959732 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.109116078 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126783504 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10296051 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118988802 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094944335 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.146423031 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113412039 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084333264 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.079832007 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105038951 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110377849 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.099129147 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098259266 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.100038306 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147100638 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.073521572 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098673655 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114428842 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139859501 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165424211 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.107272699 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084810345 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117560905 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118157689 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.113876548 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11993948 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.082773178 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081970028 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.082995541 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.10169898 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.125721704 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113638058 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118763545 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108961156 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155551129 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.08511629 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.228002321 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096867461 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10543409 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.091223668 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.081447693 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096112335 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096788198 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103960803 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111039871 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167694494 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.095745256 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.090744307 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093455632 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.07567267 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083917897 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123704046 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109630841 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116669657 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102950185 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.083224693 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.254092108 seconds)
  done (took 58.338057976 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.123789205 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.101113537 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.09938529 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.14525535 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.12233121 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.200361064 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.151799779 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.189485298 seconds)
  done (took 2.732402349 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.071691266 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.098025094 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.107088066 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.087636809 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.070276268 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.072876307 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.233116561 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.086004457 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.069913412 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.09497646 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.082768191 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.073969632 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.459768697 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.0690554 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.072061122 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.081840408 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.070592559 seconds)
  done (took 3.495977158 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.392411695 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.605435395 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.350386232 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.079513862 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.009149576 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.093866495 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.201521594 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.142390435 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.083513691 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.543172399 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.367689001 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.137110917 seconds)
  done (took 18.614528515 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.085974247 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.079869711 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.094598752 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.093953629 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.081039372 seconds)
  done (took 2.035469848 seconds)
done (took 106.971378909 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.08534087 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.44542658 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.073191922 seconds)
  done (took 2.151751635 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.094765109 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.092877985 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.092030168 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.09007972 seconds)
  done (took 1.983916112 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.078269936 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.079840336 seconds)
  done (took 1.763851597 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.234177165 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.181272988 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.100550466 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.086591103 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.083894646 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.084233822 seconds)
  done (took 1.867463129 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.075826615 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.076292823 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.076184487 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076414315 seconds)
  done (took 1.910273516 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.07134046 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.069790024 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.071683588 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074549599 seconds)
  done (took 1.894051161 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.088022644 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.087727344 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.082763888 seconds)
  done (took 1.865325335 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.105342371 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.093913848 seconds)
  done (took 1.806918023 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.085191169 seconds)
  done (took 1.693345237 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.093079554 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.102015475 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.136795357 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.119471585 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.143912011 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.119784639 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.088589634 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.088919311 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.082947618 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.090011614 seconds)
  done (took 2.673417974 seconds)
done (took 21.812257678 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.082861389 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.37302051 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.363786653 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.095363083 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.67194452 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.360730726 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.995042226 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097523793 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.146419917 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071755681 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089562741 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.653555021 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.983306302 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.324662097 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.971063927 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.327360713 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.652799636 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072469337 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071561387 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071937424 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.9775506 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.072047896 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071576334 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072340891 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.651726005 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.376101412 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072389949 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.327297192 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072919277 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074705431 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.359989725 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073410441 seconds)
  done (took 16.266566197 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.074433627 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.126066442 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076491295 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089465721 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.074093712 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073870706 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.075416443 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.073225086 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.125496495 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.07237325 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.090170837 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071887901 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.075874223 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.073040504 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.092525483 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.073027695 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.074395881 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.07359352 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073682408 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.073801906 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.093114613 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.073348154 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.076286525 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073709888 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.073392848 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.085955306 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.07355277 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.072891291 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073256397 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075185864 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.076150193 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073990986 seconds)
  done (took 4.181695776 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.121273055 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.13045634 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078191173 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.111575016 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.117191816 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.074621638 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.151880221 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.098368226 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.13265231 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.07259325 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.090249261 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.072713562 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.107596764 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.073179322 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.094043828 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.073719489 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.074636856 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.074438282 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073400675 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.07359596 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.093478141 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.07334535 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.073032238 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073897811 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.073529914 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.087448533 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.073334526 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.073586219 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.074238555 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075373322 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.076739457 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073673161 seconds)
  done (took 4.447155843 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.074377905 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.076114927 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.084093413 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084569601 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.070471927 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.073207493 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.074515885 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.070742001 seconds)
  done (took 2.239302482 seconds)
done (took 28.755872485 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.081832684 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.071429553 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.074340056 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.090327759 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.077309505 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.08231165 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.068522144 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.078282838 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.075266501 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.075651817 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.077046251 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.070427475 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.073862958 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.06836824 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.076293296 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.070208172 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.085431209 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.073891146 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.083954554 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.084508245 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.073107319 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.076433923 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.078482038 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.084439908 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.084778221 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.084441812 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.079913035 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.076729323 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071093904 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.073830853 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.074722934 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083797656 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.084609423 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.084804563 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.070812309 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.070826103 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.07505064 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.072162678 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.08560543 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.079334315 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.072755858 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.080102589 seconds)
  done (took 4.852674384 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.08910173 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.093031754 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.086767958 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.083554609 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.095572638 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.086981864 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.091114394 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.081842272 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.081707629 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.090558703 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.077821351 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.08553545 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.082620014 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.076755639 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.080769752 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.078365377 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.083764911 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076991836 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.080886467 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.082058254 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.091618309 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.077024073 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.091405346 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.083736766 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.078729767 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.084466156 seconds)
  done (took 3.828679429 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.076911521 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.088607026 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.095856058 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.149000339 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.115392318 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.083553632 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.085262296 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.096026001 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.100294854 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.07185541 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.076412067 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.096434493 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096537311 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.07779666 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.072281566 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.088364033 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.087703107 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.073685599 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.078447602 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.100479415 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.092903273 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.089122633 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.098185325 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.089089328 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.07118996 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.074084598 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.076829528 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.090798225 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.074282902 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.083044243 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.074544723 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.075402602 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.072990785 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.082256891 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.0738652 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.070233057 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.096599189 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.08286055 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.08379501 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.071643053 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.081095614 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.071870486 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.096608957 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.131672524 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.070355742 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.075237919 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075121349 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.082565733 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.070298884 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.099160669 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.083163096 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.070692242 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.07161255 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.070212511 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.070336341 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.073711393 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.07286434 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.073957812 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.081161024 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.078456766 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.093220362 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.076461648 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.088922851 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.070798596 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.081322637 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.070476111 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.072704861 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.070093532 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.099764994 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.072466184 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.116472106 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.071707603 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.069750948 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.082190585 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.081636391 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.077583579 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.070751338 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.089415134 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.082742567 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.075179843 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.079690341 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.074944323 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.074753219 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.102124919 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.071363015 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.070292997 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.06993099 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.075485181 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.074364906 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.071958505 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083559388 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.070166443 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.074714004 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.090326174 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.070530508 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.071938118 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.075152965 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.07387883 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.070552476 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08309214 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.075111801 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.072283229 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.082033129 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.072080369 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.075074554 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.08429178 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.077968378 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.07006127 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.073372998 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.074629884 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.072398125 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.072255491 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.074452041 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.073338587 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.077590245 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.077389801 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.076939518 seconds)
  done (took 11.094214618 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.17006612 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.161864647 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.074246528 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.153805299 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.080411223 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.084008738 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.156799247 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.099160506 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.071438675 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.07302599 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.0720076 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.113781501 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.110003624 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.122536097 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.084790259 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.072942271 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.094978522 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.119114126 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.158793185 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.152205853 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.094891602 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.079954155 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.074289417 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.073203546 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.073340453 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.081490316 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.091581459 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.080990095 seconds)
  done (took 4.544976204 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.080890593 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.107172008 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.075592833 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.094411007 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091218891 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.072216284 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.073719561 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.073472959 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.088274002 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.081201454 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.072249323 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.077831598 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075799432 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.074964634 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.072268893 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.079284545 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.079263014 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.071125813 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.075654139 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.077572002 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.081994745 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.098215944 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.076120495 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.07196223 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074732915 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.072005767 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.080148072 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.086796969 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.072713102 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.107926323 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.069386543 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.076868711 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.086178829 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.072534395 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.071494627 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.071637363 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.071760444 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.072082927 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.073366081 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.07013896 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.070486977 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.075945321 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.070769006 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.080387352 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.085486866 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.073698493 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073610471 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.074517209 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.074629145 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.069454478 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.074630042 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.074311548 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.074459839 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.0794566 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.075939979 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.074735767 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.072568472 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.100616757 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.077611705 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.071003688 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.070708001 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.07025278 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.074520694 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.081739179 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.087149282 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.073835136 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.070914168 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.07184746 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.08526588 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.084631653 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.071141542 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.076966481 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.069201472 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.073478684 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.074617501 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.074267574 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.072708033 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.070521452 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.071042631 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.071659406 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.072913246 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.070994017 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.070718518 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.078362984 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.070038041 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.070609657 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.072291167 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.07380199 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080204359 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.070679359 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.075590401 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.072956453 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.070549823 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.074621141 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.077343204 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.075301545 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082717733 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082579122 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.072583886 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.070430662 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.086409223 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.074574265 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.070853515 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.07827353 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.076631717 seconds)
  done (took 9.70920997 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.096396317 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.07254569 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.088553697 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.095376234 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.081847566 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.077966461 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.081938492 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.072027885 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.088584758 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.076623626 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.080270265 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.070769977 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.082834885 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.081870112 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.072467154 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.082358593 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.074920974 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.089641385 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.086594788 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.070676143 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.080758027 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.084080309 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.083848622 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.086207993 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.085161718 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.086989121 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.083438649 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.081980782 seconds)
  done (took 3.970652257 seconds)
done (took 39.624233365 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.710003791 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.949252068 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.699266702 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.927948193 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.768092333 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.920183389 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.780676652 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.69007588 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.840091178 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.737870949 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.021217625 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.941258472 seconds)
done (took 64.762480423 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.71892462 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.843662241 seconds)
    (2/2) benchmarking "String"...
    done (took 1.9454411 seconds)
  done (took 5.415565786 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.88763727 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.364316213 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.955788616 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.692419126 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.693580797 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.942238173 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.481627207 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.171321276 seconds)
  done (took 29.928832517 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.872786756 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.912628987 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.385425836 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.419932177 seconds)
  done (took 15.263451521 seconds)
done (took 61.933298265 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.719595842 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.698282207 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.695766311 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.690457333 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.78381659 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.707277081 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.864658019 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.760251611 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.69283325 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.692410079 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.69413613 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.177009935 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.706625725 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.818915479 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.696104213 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.693798778 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.733230444 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.182023941 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.845811701 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.713060396 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.70422673 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.732818319 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.6980443 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.692563724 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.709482361 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.839338233 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.117782755 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.702906892 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.299702921 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.695671628 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.724779578 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.041185895 seconds)
  done (took 201.149328536 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.697081146 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.797120747 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.851427679 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.718194836 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.1806379 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.871455133 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.793552876 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.218541154 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.700267661 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.700493603 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.907920686 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.696957852 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.937226511 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.644811706 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.733131264 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.710488649 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.967367397 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.943770813 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.735842289 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.842881387 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.710145618 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.888257938 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.816918612 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.885364981 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.738341985 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.717320299 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.69932986 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.728331173 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.888830447 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.938904911 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.714386024 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.742399326 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.896398948 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.561662789 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.717542115 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.722741361 seconds)
  done (took 167.648189834 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.883893018 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.700468098 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.698898663 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.698466009 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.704289865 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.697923968 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.819314607 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.819660265 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.370412017 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.15803745 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.754142748 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.702232701 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.47901196 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.699675735 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.764649358 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.707491342 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.699338505 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.714183898 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.72547991 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.699301275 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.700684325 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.820173535 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.713267436 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.694947084 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.709590126 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.700344674 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.704349468 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.086907869 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.698880053 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.899770803 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.704152193 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.706124569 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.941535219 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.696056919 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.70227319 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.530013878 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.213194952 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.781234996 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.699152337 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.706590037 seconds)
    (40/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.700834604 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.91923101 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.696633668 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.699895836 seconds)
    (44/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.701086854 seconds)
    (45/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.701045362 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.702989398 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.702042051 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.812067737 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.700344016 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.821687698 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.700228847 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.174441381 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.701046611 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.703125969 seconds)
    (55/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.701872903 seconds)
    (56/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.034852952 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.279384674 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.700423221 seconds)
    (59/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.704273872 seconds)
    (60/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.699555493 seconds)
    (61/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.701877023 seconds)
    (62/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.706446281 seconds)
    (63/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.115640299 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.77356467 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.704671219 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.702696339 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.706495198 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.70272819 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.749915391 seconds)
    (70/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.696053446 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.346246172 seconds)
    (72/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.713820936 seconds)
    (73/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.826587821 seconds)
    (74/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.823822077 seconds)
    (75/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.703123392 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.767724737 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.792619604 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.697753324 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.70267552 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.701806984 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.702813328 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.782688957 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.698599888 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.789177038 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.707931077 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.702716271 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.756612739 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.773622102 seconds)
    (89/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.697006761 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.705012108 seconds)
    (91/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.521177154 seconds)
    (92/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.703298888 seconds)
    (93/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.701903593 seconds)
    (94/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.937872908 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.763733328 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.698232393 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.703025492 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.788067327 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.819794322 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.416527349 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.703339809 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.912891023 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 4.028873762 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.70071731 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.902212159 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.703662905 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.79473064 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.709822061 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.705853766 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.740900401 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.70513661 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.716705648 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.70389048 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.078226071 seconds)
  done (took 392.343857093 seconds)
done (took 764.716302849 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.32210879 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.280148373 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.396829551 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.30624453 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.271612463 seconds)
  done (took 13.212565269 seconds)
done (took 14.855191751 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.786574016 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.787878998 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.724660377 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.784516593 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.719341726 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.778381237 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.769076461 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.725034591 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.753667921 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.726848877 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.75291923 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.728142617 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.707579516 seconds)
  done (took 24.380282095 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.933556211 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.931285691 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.768892533 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.951137786 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.743503004 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.935059767 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.858672784 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.849028334 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.849631963 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.716591803 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.712727786 seconds)
  done (took 21.887671928 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.936236303 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.942431626 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.776144906 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.934625751 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.748495797 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.93382222 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.859449242 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.857286525 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.848452853 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.718897988 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.710411218 seconds)
  done (took 21.902733874 seconds)
done (took 69.812696754 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.71019344 seconds)
  done (took 3.347474254 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.729347939 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.886007778 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.70894185 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.705999334 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.709345821 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.70886412 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.707697995 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.70815211 seconds)
  done (took 15.502966369 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.708988731 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.709872616 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.706629885 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.708382609 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.708718544 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.708644978 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.707926286 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.709116251 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.709389345 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.70696556 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.70922583 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.709126529 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.708580607 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.708674846 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.709738746 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.708894581 seconds)
  done (took 28.975891654 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.710199607 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.707250405 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.70749965 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.709856842 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.709235343 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.708638394 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.710488769 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.709870903 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.70893598 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.708731472 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.710917731 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.708068834 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.709734142 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.709401247 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.710575703 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.709456788 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.709206159 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.710925913 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.714617323 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.70953831 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.710432807 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.709220697 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.71084675 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.70872858 seconds)
  done (took 42.67358065 seconds)
done (took 92.140206188 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.441688569 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.332312284 seconds)
  done (took 9.413314714 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.715564877 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.708527152 seconds)
  done (took 5.132110172 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.709027163 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.709859277 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.711337701 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.709665751 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.709781079 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.708933087 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.711060889 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.709719068 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.711166031 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.710963259 seconds)
  done (took 18.742816191 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.710449672 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.70874211 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.710142896 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.711065802 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.711352185 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.709973173 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.711024696 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.710893704 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.709887572 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.709743556 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.709508261 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.710034905 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.710197095 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.711755672 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.710237962 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.710240743 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.712882891 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.711991449 seconds)
  done (took 32.431774071 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.712565718 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.711294491 seconds)
  done (took 5.065822536 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.712551026 seconds)
    (2/7) benchmarking "second"...
    done (took 1.711116593 seconds)
    (3/7) benchmarking "month"...
    done (took 1.712396371 seconds)
    (4/7) benchmarking "year"...
    done (took 1.712649603 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.712415308 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.712832594 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.710780053 seconds)
  done (took 13.6254883 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.712775022 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.86129408 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.925012812 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.351163274 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.714367048 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.716298248 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.628343892 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.717182051 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.718354716 seconds)
  done (took 18.986511812 seconds)
done (took 105.041491999 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.572484421 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.707614844 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.942313109 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.821307458 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.728438313 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.004604682 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.731212432 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.985357485 seconds)
done (took 42.139625676 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.775037355 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.454092921 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.51485291 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.742621097 seconds)
  done (took 15.354506108 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.719418772 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.000084151 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.732060501 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.535970285 seconds)
  done (took 21.631443921 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.072892171 seconds)
    (2/2) benchmarking "read"...
    done (took 2.059943975 seconds)
  done (took 5.780791243 seconds)
done (took 51.192824432 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.712929877 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.71298056 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.713407646 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.713680916 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.713038272 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.714269659 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.714152494 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.715641002 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.713930055 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.71297793 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.715240754 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.716656068 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.715393343 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.713988579 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.715571282 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.714294946 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.715829288 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.712829752 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.713707462 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.716468128 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.713542648 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.716070564 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.715607351 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.713411171 seconds)
  done (took 42.791037304 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.714171763 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.716689021 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.713322327 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.712893796 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.713058177 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.713587956 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.716587921 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.715429272 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.715345285 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.71369826 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.713308295 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.713399885 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.715523375 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.713607022 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.714506085 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.715329563 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.71666405 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.715681677 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.715573596 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.718390005 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.715537608 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.717558418 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.717490441 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.718221731 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.717202873 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.713805698 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.714886817 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.716059666 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.715433161 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.715219704 seconds)
  done (took 53.105731974 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.718854563 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.722346252 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.714195187 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.715164823 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.713380796 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.715692244 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.712386949 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.715062109 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.717109002 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.715157256 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.716363148 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.716282536 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.715823316 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.716083266 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.716617203 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.712872079 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.715462678 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.717283136 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.714164864 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.717828146 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.71652443 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.717494769 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.715824269 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.716475865 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.71430536 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.718322003 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.717007704 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.718580925 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.718649992 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.717354466 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.71651477 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.717644922 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.717650913 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.71661341 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.71877175 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.71828652 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.719189239 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.725438324 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.717713426 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.718383705 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.717647185 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.720496585 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.716884467 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.721035701 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.717658124 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.718151132 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.718205292 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.718128185 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.720053829 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.719240702 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.717890171 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.720201061 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.717803891 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.720728421 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.718433117 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.719908754 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.71721458 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.717674755 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.717614818 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.717413525 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.719824531 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.717535255 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.719897779 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.718175894 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.719382876 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.719276135 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.717912731 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.719814342 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.717644585 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.720137256 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.72095259 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.719206008 seconds)
  done (took 125.325489764 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.718708297 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.718150149 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.719393883 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.722210069 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.720203087 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.721046076 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.721849917 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.722535879 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.721903619 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.721591962 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.71899762 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.718549015 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.717820292 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.718944032 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.718063492 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.720417871 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.718670774 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.721232222 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.718517153 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.720513979 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.719973746 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.719842713 seconds)
  done (took 39.48820538 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.720461922 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.720663318 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.721451127 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.720337158 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.720118515 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.720852037 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.718264389 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.720390998 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.722501678 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.721824531 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.720771014 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.718679368 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.721506422 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.72061507 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.721793887 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.71908454 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.722084297 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.719294435 seconds)
  done (took 32.622477269 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.720435159 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.721492815 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.720941731 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.718771753 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.720875643 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.72113424 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.719541748 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.720638779 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.721473026 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.723943102 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.721685609 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.721797091 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.724402622 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.720038816 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.721707247 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.721579372 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.723952263 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.721644517 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.720818939 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.721198286 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.722281839 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.722161712 seconds)
  done (took 39.521955822 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.72095858 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.723343187 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.722214805 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.721772621 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.722121269 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.723001464 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.719863395 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.722077972 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.723162873 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.723079392 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.720367283 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.722214896 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.72297269 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.721124859 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.720850585 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.723907734 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.724422435 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.722536011 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.722834988 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.722652428 seconds)
  done (took 36.097565458 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.721373953 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.723474824 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.725849125 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.724738839 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.722858283 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.725929632 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.723971898 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.722897487 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.725719218 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.726295257 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.723299588 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.725419282 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.722457147 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.726078761 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.725526471 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.725818868 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.724560462 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.724954401 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.724970789 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.725940435 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.722923733 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.726440784 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.725472818 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.72605325 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.724933766 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.722623939 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.726297562 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.724913512 seconds)
  done (took 49.946847404 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.724330657 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.723783989 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.725813808 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.726977515 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.726884592 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.725541776 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.726221181 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.726193059 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.723056745 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.724338554 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.725533409 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.726812778 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.72752347 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.726749854 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.725712775 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.727586586 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.725392302 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.725872088 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.728125722 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.727387288 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.725741157 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.727182747 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.727591471 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.727915688 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.726026812 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.725865019 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.726569905 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.726195693 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.725816648 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.726937793 seconds)
  done (took 53.438255629 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.748662168 seconds)
    (2/2) benchmarking "in"...
    done (took 1.745556907 seconds)
  done (took 5.151468365 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.725763312 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.727342605 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.728262522 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.72837821 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.728555456 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.72699234 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.726101956 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.725672134 seconds)
  done (took 15.471268397 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.727838873 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.728947781 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.725865149 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.726170824 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.72600369 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.7279513 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.733758392 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.728949832 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.729872855 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.728338212 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.737258029 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.737335851 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.731420057 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.728427371 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.729041825 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.730481332 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.724977838 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.728263871 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.730037124 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.729110546 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.725765775 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.729842546 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.730822243 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.727263988 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.732879561 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.739393667 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.735714331 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.729489592 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.730410585 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.735214718 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.727850863 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.729556479 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.728671404 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.72947585 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.72950037 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.729263513 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.738784738 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.733618155 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.734710604 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.730242586 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.729135841 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.730320777 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.732290915 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.73239683 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.735134964 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.728532538 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.731142237 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.732523771 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.729516069 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.735769685 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.738512402 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.731754308 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.730612682 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.735956446 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.733529942 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.739446585 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.731351715 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.735130777 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.741116419 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.742176799 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.74318419 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.741237151 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.733860253 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.730239605 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.741044573 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.759897654 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.738389552 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.733021313 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.731579638 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.730730591 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.737940933 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.742604994 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.74337073 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.730027737 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.732147589 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.731378203 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.733742331 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.731434296 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.739014775 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.734722403 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.7311762 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.733608857 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.741823655 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.760265656 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.732960453 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.733477872 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.732592643 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.732326154 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.73266704 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.746529532 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.733966871 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.732665029 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.73344922 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.732686515 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.734641663 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.731272822 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.732341998 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.735490147 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.733646864 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.734424636 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.7347199 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.73846523 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.744583056 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.734367277 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.733282139 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.739802576 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.733551607 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.734629937 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.739364314 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.733913617 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.734226929 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.734275022 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.741804717 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.73463641 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.736451541 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.743629621 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.734117876 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.736319776 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.73459248 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.732266607 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.743789579 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.762248469 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.73324929 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.733864381 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.739132743 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.747413916 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.732963902 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.738184353 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.73438559 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.733865906 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.733622268 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.736551734 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.735052068 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.735715204 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.733956914 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.737490409 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.735686616 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.735150804 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.735337409 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.737741369 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.736360458 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.736144038 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.738727827 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.737570708 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.734007491 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.73765014 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.744216915 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.736854862 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.735215098 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.737321191 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.735559379 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.735680365 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.738862437 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.736812823 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.736216068 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.735422896 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.736225354 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.737652479 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.738087943 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.73728018 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.734437988 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.737597296 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.742209896 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.737376139 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.740352494 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.736957471 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.735411481 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.736915427 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.736233269 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.736337675 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.736674842 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.738310378 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.74093214 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.744940459 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.737867583 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.737205224 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.741146888 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.736986285 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.736356756 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.735807053 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.740470384 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.747406467 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.735695617 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.742935891 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.738045364 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.738099876 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.736511737 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.739988386 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.738431821 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.73771003 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.741849506 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.746850843 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.750579992 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.748156995 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.738035585 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.742346864 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.738899716 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.74187136 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.743348442 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.738584773 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.738027935 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.739100097 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.739299307 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.738357257 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.741424436 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.739327852 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.736951516 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.737835729 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.739570919 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.73863871 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.736892733 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.740268943 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.740399063 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.737215476 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.738248956 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.739796183 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.740775187 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.739106752 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.740098267 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.739918442 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.739656663 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.740565958 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.746878195 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.741575261 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.743086943 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.740970356 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.740504189 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.738624532 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.739669909 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.742591331 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.742225992 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.747569749 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.740815108 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.741787845 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.747447253 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.742054769 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.741216515 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.744665443 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.740256813 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.739130097 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.744927511 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.748487994 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.740309004 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.741048812 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.740354905 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.741829538 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.740453347 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.748179013 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.740498754 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.742215955 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.740322171 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.743101626 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.739041349 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.74472446 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.743852263 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.74347878 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.745598259 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.742052969 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.741526162 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.743070466 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.741104873 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.741556121 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.741917573 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.745728881 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.750070319 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.747441031 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.742674093 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.745038073 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.743749119 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.745457161 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.744895082 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.742646214 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.74371729 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.755838165 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.751957074 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.750405904 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.746107352 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.743214262 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.748833454 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.744773081 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.748721652 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.744496738 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.744706257 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.744258857 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.743339861 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.743623581 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.746645766 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.741690429 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.747362832 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.746961976 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.747906528 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.744626133 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.745590953 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.744085956 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.744532026 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.743605683 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.744304291 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.74506963 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.745816819 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.745786322 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.743226065 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.744867094 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.751460561 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.747314451 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.746603978 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.745900395 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.744195691 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.743264983 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.74525579 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.743892006 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.747141739 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.753564023 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.749870811 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.756726901 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.746075679 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.755660195 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.745575758 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.747771563 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.755003307 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.74550813 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.745288944 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.74587435 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.745172105 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.751737685 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.74450117 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.745908743 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.748648462 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.743987856 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.745689286 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.745624545 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.746146484 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.746688362 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.745690666 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.753128932 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.749996719 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.750660569 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.748838853 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.745951823 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.746349005 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.746494597 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.745416215 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.750202146 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.747491098 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.747124641 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.746276907 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.747897838 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.746237644 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.744433156 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.745807142 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.74553068 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.74565898 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.751691362 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.748113998 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.748352296 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.746396547 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.753790998 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.746879316 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.753263555 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.746266991 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.747246617 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.747851986 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.747789856 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.748225745 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.747776959 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.750050934 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.748393601 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.748487174 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.751266951 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.744527912 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.748830841 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.749584346 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.745288181 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.748496824 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.758003282 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.771199721 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.749388444 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.751652527 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.74731226 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.74920583 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.752684682 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.749278796 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.746580257 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.752616705 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.759931362 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.757271637 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.750840516 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.745870797 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.749630809 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.747317715 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.747130986 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.748636999 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.746498863 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.748957547 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.749626278 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.749882983 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.753441865 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.748668614 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.750891232 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.7513875 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.748944948 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.759836771 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.748667211 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.750670083 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.750360589 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.748174571 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.752633227 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.751841874 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.749193187 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.750377785 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.749174953 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.751077812 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.758661793 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.758121827 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.753225731 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.750554435 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.749238442 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.751293386 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.750563955 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.75065349 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.750384946 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.750989783 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.752825207 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.751284712 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.75262735 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.748793401 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.750614818 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.752504683 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.750371241 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.754284631 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.761041643 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.751801257 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.749745649 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.751360967 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.751213936 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.749949952 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.751090448 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.759369763 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.755728003 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.762764068 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.761143808 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.754761818 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.75174969 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.754705279 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.761279275 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.751193857 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.751218309 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.750273563 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.752919899 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.751885286 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.755274255 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.751828826 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.757883341 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.753875939 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.751574782 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.760512103 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.754151743 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.751653259 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.753791819 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.757446042 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.752426288 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.752242246 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.75097701 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.752282473 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.757938645 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.754584798 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.752045337 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.754614236 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.751098942 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.752875262 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.756882847 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.751222486 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.754358276 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.751139261 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.753392652 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.752613523 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.750798427 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.751308419 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.751451906 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.753206373 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.755717338 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.761154113 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.751486607 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.755069767 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.754039719 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.753857515 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.753486065 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.753259624 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.752973362 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.751494723 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.753103993 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.751953508 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.754290509 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.755587229 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.754373425 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.753423371 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.756495728 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.752704466 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.758570946 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.764271572 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.76177726 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.751885477 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.753354569 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.754873534 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.756856803 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.754256429 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.752803146 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.75516252 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.756093349 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.752750253 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.75276222 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.753733368 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.757841129 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.77105542 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.754951526 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.756068953 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.755450037 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.76230708 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.756677835 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.754354177 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.754363604 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.756660673 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.758423627 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.762640771 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.753702593 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.761010949 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.754871429 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.754576752 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.756936197 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.75919507 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.763356884 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.757807385 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.754383 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.755614241 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.758645894 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.773499186 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.755937668 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.763980441 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.78816564 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.756498356 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.757112962 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.754527295 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.755736607 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.754760313 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.757076004 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.755617044 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.754858772 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.755515599 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.756085913 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.756300379 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.762652254 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.758142947 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.75567411 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.755175632 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.755867549 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.757402883 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.755090483 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.755301975 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.756187171 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.754571628 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.755277175 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.756928226 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.757732416 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.768484022 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.768737664 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.755682767 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.757593439 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.756605707 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.761093034 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.761988105 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.76834884 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.766775363 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.75820849 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.756390092 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.759967174 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.758073036 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.756983949 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.760226712 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.757927616 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.758192139 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.757514551 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.769106726 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.767406627 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.761875318 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.756663163 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.75670037 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.756866628 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.759031392 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.757663548 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.757084395 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.760108233 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.757798907 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.762479819 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.756772192 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.758431775 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.761461811 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.765316753 seconds)
  done (took 1042.160202545 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.758467078 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.758449382 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.758807199 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.758202499 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.758970236 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.758436949 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.760158748 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.760686429 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.757457483 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.757607665 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.75949976 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.760152119 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.758588047 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.759763699 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.759587422 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.758582975 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.758812324 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.759066371 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.757755735 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.759483886 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.758655615 seconds)
  done (took 38.623082174 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.75980323 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.760054551 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.760471388 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.759065138 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.759890859 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.760459507 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.760464161 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.759486282 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.759415089 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.759336941 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.759422529 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.759870172 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.758531471 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.758269047 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.759794748 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.761660049 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.76031537 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.7589168 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.760745382 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.760503484 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.759646895 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.760296782 seconds)
  done (took 40.403456198 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.760688963 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.760025669 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.759565424 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.76222972 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.75661534 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.760261303 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.760002821 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.761981418 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.759880718 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.763791851 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.760597963 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.762983251 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.76939024 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.770275213 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.764737799 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.759396021 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.905631801 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.760935866 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.76229289 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.761764192 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.761164852 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.766804836 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.76276833 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.762020451 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.761429515 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.759898608 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.76126907 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.761131261 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.762502732 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.762692607 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.765623775 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.758981903 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.761755742 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.763241218 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.763769509 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.76062946 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.763222023 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.759524677 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.759807637 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.759400258 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.770522066 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.7836643 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.760406529 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.768074278 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.760152736 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.760677934 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.763252119 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.768478332 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.761225961 seconds)
  done (took 88.204444877 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.759634807 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.764007947 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.759967237 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.758330662 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.759146874 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.759036612 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.760224309 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.759064642 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.75953858 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.759176803 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.760641559 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.760013931 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.759757311 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.758258704 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.76012371 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.757832254 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.758975857 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.758668672 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.758194103 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.75782843 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.756346882 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.757709425 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.758758023 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.758716986 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.760193068 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.756806265 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.756919461 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.758007767 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.757067659 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.76480141 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.756043364 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.758568462 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.757375663 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.757113026 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.756837399 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.755563801 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.754344411 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.753058405 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.753591074 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.754165294 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.752365254 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.754651834 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.753677212 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.754275084 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.754310514 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.753850919 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.755050269 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.754575588 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.756054976 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.753984232 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.753060019 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.754872257 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.754468839 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.754094495 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.754579994 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.754301491 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.75388111 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.753986629 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.755581803 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.75516993 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.753846538 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.755164702 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.753985801 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.755451275 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.754481268 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.754976824 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.754689902 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.753715432 seconds)
  done (took 121.143989438 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.755194216 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.755887698 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.754778859 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.755291284 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.755781431 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.755277663 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.755353418 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.756262475 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.754857434 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.755749783 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.756412291 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.754776185 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.757409008 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.75406352 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.755931189 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.755520626 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.754881208 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.760530363 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.755267876 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.754623299 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.754895891 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.755006427 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.754365967 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.756184432 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.755078858 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.755547058 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.756136311 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.756014657 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.755109045 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.755790228 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.756119048 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.754434111 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.755767097 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.756398891 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.755405442 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.754677551 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.755454588 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.756259542 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.756234239 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.755303649 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.758366931 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.75694123 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.756390788 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.757125954 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.75603933 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.757255252 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.760370538 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.757127163 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.756344451 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.756615884 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.756011904 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.755628115 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.75690852 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.756431941 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.755384187 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.756705071 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.756097722 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.757125388 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.756531988 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.756683114 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.75587696 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.754604286 seconds)
  done (took 110.555104299 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.750802816 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.746460059 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.748368644 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.745339656 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.744952236 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.745164333 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.745123504 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.74435937 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.744445047 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.742806509 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.743183166 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.747954355 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.74847719 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.746040084 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.747226179 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.747585313 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.746738639 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.747643201 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.747137352 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.745906297 seconds)
  done (took 36.609248999 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.746888546 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.74688597 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.745096615 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.743951319 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.744899668 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.745594718 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.744638372 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.743660952 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.740197986 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.738840372 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.745243805 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.740691201 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.74241247 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.742823944 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.741871376 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.741676425 seconds)
  done (took 29.569303785 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.742807211 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.743558403 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.74197305 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.740378913 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.743097762 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.741484013 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.740788102 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.740358814 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.743741048 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.743180115 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.743234613 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.74132127 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.741422109 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.740787855 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.742214018 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.741779832 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.74087086 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.743743306 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.742757604 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.742237391 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.742282035 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.741537337 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.741445339 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.742522694 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.741276049 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.745315308 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.74316979 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.74234005 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.741240261 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.741192951 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.741076179 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.743269095 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.74197669 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.742244206 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.741612049 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.742004682 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.745400051 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.743576873 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.741979154 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.741821115 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.740889907 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.741666805 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.748668219 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.740097105 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.743251717 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.742409238 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.742035732 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.741720022 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.746639281 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.741119882 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.742838604 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.742976594 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.738477621 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.74245468 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.743326639 seconds)
  done (took 97.499205663 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.740222244 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.73823943 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.738693547 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.743390061 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.739307674 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.739866523 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.738230137 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.73876258 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.740261177 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.743106275 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.738454662 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.738457616 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.740121007 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.739922145 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.73938852 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.740930904 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.737815816 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.738555864 seconds)
  done (took 32.978829569 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.737846637 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.737900052 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.739669345 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.737696703 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.736891309 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.737294879 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.737610535 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.738587154 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.737469777 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.73992226 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.73827879 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.737868839 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.737540546 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.738635921 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.736464007 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.736983607 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.736447138 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.737816921 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.73625613 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.738882432 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.734338134 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.737183688 seconds)
  done (took 39.893297329 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.734521851 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.735174243 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.750172525 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.759205942 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.754267717 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.775719271 seconds)
  done (took 12.173367235 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.736167021 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.736632692 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.733376782 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.738328478 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.735027722 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.734277241 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.736024992 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.734950378 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.735572704 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.735297081 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.734578219 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.734579825 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.735151044 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.733092399 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.734334106 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.734664203 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.73350354 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.735165296 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.736082147 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.732923067 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.734985343 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.734000056 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.735851766 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.734694541 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.73525647 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.735159406 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.733330674 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.734653102 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.734146586 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.737655358 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.734149764 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.73329918 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.734789554 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.733834703 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.733942441 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.735458604 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.735258956 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.733033477 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.733149794 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.732898991 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.733190445 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.735088283 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.732936761 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.73429457 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.733306392 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.732762104 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.733096205 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.734966026 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.732337664 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.733584184 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.733248045 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.734505188 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.734783531 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.735013091 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.734115791 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.734375291 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.734519909 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.733345578 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.734095386 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.733134876 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.733780485 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.733274076 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.732603182 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.735010755 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.733236753 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.733047156 seconds)
  done (took 116.133665085 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.732119017 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.732791935 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.733296824 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.73420449 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.730882435 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.73078788 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.732984883 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.731378546 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.731717624 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.731254826 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.732852194 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.730895306 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.733457092 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.73140281 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.729922999 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.732072812 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.732025658 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.732404824 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.729630773 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.731149441 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.734934009 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.731515281 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.73166975 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.731263046 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.733288028 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.733237043 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.733642915 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.732133932 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.730054092 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.730801249 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.731054317 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.731805825 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.734921048 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.731213821 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.732228685 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.731094533 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.732152261 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.733765802 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.73014049 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.729649305 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.731864154 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.734924418 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.735058259 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.733598687 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.73018946 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.729154641 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.729227094 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.730828845 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.729865733 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.731440139 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.72943353 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.730810115 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.732009479 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.731334287 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.730892934 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.731107874 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.731667202 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.731834458 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.732650173 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.731529557 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.732772784 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.729642403 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.732343417 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.730171436 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.730055958 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.7296234 seconds)
  done (took 115.95392888 seconds)
done (took 2416.514026717 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.764223938 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.754360383 seconds)
  done (took 15.174068833 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.893601997 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.848415668 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.731824655 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.76820966 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.731675582 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.762000375 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.735477364 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.729055662 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.732318465 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.732131177 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.737451513 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.918523764 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.792403489 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.72953012 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.733289712 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.825611384 seconds)
  done (took 50.066936582 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.734470627 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.739890794 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.745758146 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.737315178 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.735739903 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.745911857 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.76735257 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.742914679 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.767533338 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.745798225 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.801998568 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.747026993 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.733504438 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.785746487 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.747924235 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.750041214 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.826154999 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.811060417 seconds)
  done (took 33.327237551 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.80981196 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.741138492 seconds)
  done (took 10.218594496 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.747627441 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.750281849 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.785301546 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.729352431 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.758373323 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.742925392 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.765570765 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.777343911 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.764268655 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.742060406 seconds)
  done (took 69.228668123 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.739701172 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.73685516 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.735463088 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.733322791 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.729367466 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.731986539 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.735503689 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.735356916 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.392333038 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.76457122 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.741888192 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.739719953 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.732118936 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.7372342 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.734732205 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.758411372 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.844803675 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.733286602 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.73222266 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.741316087 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.736787522 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.78769792 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.748194234 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.735893026 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.762727068 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.396849455 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.740090366 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.741641879 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.8471494 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.731844558 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.736752387 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.921435354 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.73760376 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.200410094 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.998640464 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.739620333 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.744223107 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.743402635 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.735030902 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.852743276 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.735245259 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.743310733 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.680433456 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.971306497 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.831264758 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.781156359 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.051108876 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.747625335 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.734639681 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.765604489 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.738433969 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.736858098 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.750339769 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.241095296 seconds)
  done (took 125.340035181 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.73169156 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.078726937 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.900131568 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.733710652 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.013299847 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.935730309 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.731809598 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.778037325 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.731488988 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.958543694 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.983690737 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.837970948 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.732624565 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.73269296 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.728683146 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.732662184 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.887338841 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.805603479 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.73681814 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.73202702 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.760214801 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.978420775 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.852818068 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.736873653 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.755376167 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.942093276 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.850961814 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.836663079 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.524344087 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.733118945 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.795165132 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.730802191 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.733932561 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.730359332 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.887284065 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.827098872 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.814978419 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.731074307 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.734845305 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.732326044 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.393716803 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.93103258 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.82248364 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.859261944 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.983030508 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.938021034 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.507385144 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.731791493 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.468152255 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.897280141 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.959671483 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.967654524 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.847270826 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.732868128 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.07490591 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.734526201 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.732713849 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.980263769 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.949509491 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.825139988 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.733273126 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.734179423 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.732924669 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.972875238 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.734667445 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.826246513 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.73251227 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.732664687 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.832920949 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.827632054 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.960507191 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.942236696 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.759866046 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.071819529 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.235232371 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.981117911 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.795676953 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.979245642 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.733201876 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.736365132 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.812488606 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.573335661 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.98620109 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.973407069 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.974499269 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.765548779 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.456783161 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.734953357 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.960297279 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.9534545 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.993007245 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.980351752 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.964670783 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.049413996 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.734227886 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.740547225 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.069901702 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.854685804 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.733194534 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.080270794 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.96184007 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.266598701 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.759461006 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.036615902 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.861541083 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.73391456 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.362498902 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.736674864 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.965472232 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.774728558 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.735756252 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.734248259 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.949953373 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.744856107 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.736695016 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.400305783 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.795421274 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.739140449 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.964839068 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.738987319 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.004472177 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.738253993 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.969220414 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.229473148 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.765627115 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.908747208 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.983070276 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.733398169 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.977578685 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.980569248 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.850431328 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.952777008 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.448391129 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.736983321 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.021884942 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.739504507 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.737646302 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.904287343 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.73861389 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.878145975 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.733721045 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.027399754 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.758514363 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.968028685 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.735964597 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.985351244 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.766506352 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.787975862 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.738394421 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.853025122 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.741715622 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.640272879 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.891503148 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.740986128 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.734882002 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.289628942 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.737306589 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.884216158 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.963310096 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.759316938 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.223711707 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.400991782 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.737189787 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.819108994 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.761528785 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.129028981 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.739309534 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.987093281 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.735801722 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.738331668 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.737976222 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.973164546 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.921543074 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.740781445 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.737377633 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.64167286 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.738662635 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.741452582 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.918631544 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.074066059 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.739647967 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.939250522 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.740284076 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.862895472 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.739249608 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.809159315 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.072147444 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.740015926 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.738610976 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.741005025 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.740351957 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.741116556 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.947329612 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.763179562 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.230861131 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.873682377 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.00925231 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.046723725 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.981753533 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.781791054 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.742978814 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.987480705 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.744416872 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.799924763 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.741469922 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.758312757 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.966466171 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.743410655 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.949942498 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.011136218 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.647188397 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.786130624 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.74301629 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.741910736 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.740242774 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.882645474 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.816696464 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.743894667 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.741829743 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.852504965 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.860659798 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.945074732 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.740327623 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.794678116 seconds)
  done (took 872.907303566 seconds)
done (took 1177.924314322 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.74514128 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.741377338 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.738808588 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.742053221 seconds)
  done (took 28.637489494 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.746837348 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.740777766 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.742155512 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.741923818 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.744029227 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.741927354 seconds)
  done (took 12.12810663 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.734364597 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.74065646 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.739860328 seconds)
  done (took 20.888457949 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.812303586 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.122400566 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.874760011 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.166839759 seconds)
  done (took 9.650305742 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.745192797 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.741803417 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.742087786 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.741634789 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.745042165 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.747849994 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.745678415 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.743379494 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.745897657 seconds)
  done (took 17.374824443 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.754521472 seconds)
done (took 94.10572243 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.893686615 seconds)
    (2/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.820926858 seconds)
    (3/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.924801352 seconds)
    (4/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.913152728 seconds)
    (5/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.853988213 seconds)
    (6/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.938446513 seconds)
    (7/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.75930701 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.600225903 seconds)
    (9/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.811908698 seconds)
    (10/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.902692506 seconds)
    (11/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.814148341 seconds)
    (12/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.007830555 seconds)
    (13/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.777120409 seconds)
    (14/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.893118087 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.998731283 seconds)
    (16/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.78355661 seconds)
    (17/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.914427699 seconds)
    (18/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.858383316 seconds)
    (19/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.206243543 seconds)
    (20/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.780432999 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.062888641 seconds)
    (22/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.984269959 seconds)
    (23/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.756970123 seconds)
    (24/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 3.712102574 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.380298623 seconds)
    (26/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.838585239 seconds)
    (27/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.755030089 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.142858603 seconds)
    (29/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.423048938 seconds)
    (30/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.785532545 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.065901185 seconds)
    (32/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.011915012 seconds)
    (33/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.125114869 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.53116065 seconds)
    (35/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.195910333 seconds)
    (36/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.99726361 seconds)
    (37/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.76026513 seconds)
    (38/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.13771751 seconds)
    (39/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.927201877 seconds)
    (40/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.754192289 seconds)
    (41/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 3.820294013 seconds)
    (42/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.863339905 seconds)
    (43/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.77526263 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.878925414 seconds)
    (45/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.424416509 seconds)
    (46/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.757809255 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.190478087 seconds)
    (48/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.859560336 seconds)
    (49/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.757033067 seconds)
    (50/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.873123305 seconds)
    (51/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.832988929 seconds)
    (52/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.755619698 seconds)
    (53/309) benchmarking ("sort", Bool, false)...
    done (took 2.056654224 seconds)
    (54/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.138632693 seconds)
    (55/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.759711739 seconds)
    (56/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 3.758653612 seconds)
    (57/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.416846738 seconds)
    (58/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.889251892 seconds)
    (59/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.936154272 seconds)
    (60/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.073599875 seconds)
    (61/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.139454235 seconds)
    (62/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.755841263 seconds)
    (63/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.761686938 seconds)
    (64/309) benchmarking ("sort", Int64, false)...
    done (took 5.443325228 seconds)
    (65/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.759719505 seconds)
    (66/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.080083282 seconds)
    (67/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.070075443 seconds)
    (68/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.771182978 seconds)
    (69/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.912969767 seconds)
    (70/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.775238686 seconds)
    (71/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.818353747 seconds)
    (72/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.758897595 seconds)
    (73/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.942429713 seconds)
    (74/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.919842077 seconds)
    (75/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.862228189 seconds)
    (76/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.082634956 seconds)
    (77/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.072287966 seconds)
    (78/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.761957009 seconds)
    (79/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.36964839 seconds)
    (80/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.766026928 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.892395402 seconds)
    (82/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.774831017 seconds)
    (83/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.873573415 seconds)
    (84/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.572831767 seconds)
    (85/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.980434965 seconds)
    (86/309) benchmarking ("sort", BigInt, false)...
    done (took 6.763621519 seconds)
    (87/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.969081038 seconds)
    (88/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.782613772 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.088861474 seconds)
    (90/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.761617765 seconds)
    (91/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.05995635 seconds)
    (92/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.075408186 seconds)
    (93/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.764371 seconds)
    (94/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.870744892 seconds)
    (95/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.927632063 seconds)
    (96/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.511692916 seconds)
    (97/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.974373923 seconds)
    (98/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.894540741 seconds)
    (99/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.209941029 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.647989778 seconds)
    (101/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.003957213 seconds)
    (102/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.867888245 seconds)
    (103/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.764920127 seconds)
    (104/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.26938363 seconds)
    (105/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.415533761 seconds)
    (106/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.20596323 seconds)
    (107/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.138754021 seconds)
    (108/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.77481099 seconds)
    (109/309) benchmarking ("map", abs, Int64, true)...
    done (took 1.998867248 seconds)
    (110/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.27329916 seconds)
    (111/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.760618626 seconds)
    (112/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.869375813 seconds)
    (113/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 8.024864257 seconds)
    (114/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.705314188 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.890962806 seconds)
    (116/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.142139323 seconds)
    (117/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.839032294 seconds)
    (118/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.672030426 seconds)
    (119/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.766669304 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 2.157465222 seconds)
    (121/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.959221018 seconds)
    (122/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.766809762 seconds)
    (123/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.762334181 seconds)
    (124/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.205641107 seconds)
    (125/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.880394219 seconds)
    (126/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.148930688 seconds)
    (127/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.824411373 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.895630732 seconds)
    (129/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.842757017 seconds)
    (130/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.998747073 seconds)
    (131/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.732560529 seconds)
    (132/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.767127967 seconds)
    (133/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.284262494 seconds)
    (134/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.77100492 seconds)
    (135/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.851233355 seconds)
    (136/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.954271679 seconds)
    (137/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.784130623 seconds)
    (138/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.863840658 seconds)
    (139/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.763595522 seconds)
    (140/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.245652709 seconds)
    (141/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.094277487 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.002661873 seconds)
    (143/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.762940675 seconds)
    (144/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 3.312824288 seconds)
    (145/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.112090323 seconds)
    (146/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.762788718 seconds)
    (147/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.07777437 seconds)
    (148/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.102253133 seconds)
    (149/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.795907268 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.74742256 seconds)
    (151/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.686073838 seconds)
    (152/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.880261241 seconds)
    (153/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.449942942 seconds)
    (154/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.882705969 seconds)
    (155/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.017231547 seconds)
    (156/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.651251809 seconds)
    (157/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.765638786 seconds)
    (158/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.883504002 seconds)
    (159/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.010750423 seconds)
    (160/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.896927014 seconds)
    (161/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.555806751 seconds)
    (162/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.762840821 seconds)
    (163/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.186330752 seconds)
    (164/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.148735212 seconds)
    (165/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.792548581 seconds)
    (166/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.761768447 seconds)
    (167/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.876274402 seconds)
    (168/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.839974045 seconds)
    (169/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.787555417 seconds)
    (170/309) benchmarking ("map", abs, Float64, true)...
    done (took 1.995450608 seconds)
    (171/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.767459715 seconds)
    (172/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 3.191991396 seconds)
    (173/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.78848598 seconds)
    (174/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.644288236 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.169069198 seconds)
    (176/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.895888066 seconds)
    (177/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.858142916 seconds)
    (178/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.056273422 seconds)
    (179/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.764439853 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.43016577 seconds)
    (181/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.876883706 seconds)
    (182/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.768710116 seconds)
    (183/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.765719285 seconds)
    (184/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.846010848 seconds)
    (185/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.842810047 seconds)
    (186/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.945043235 seconds)
    (187/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.009659324 seconds)
    (188/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.903580345 seconds)
    (189/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.59473988 seconds)
    (190/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.851081857 seconds)
    (191/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.022082722 seconds)
    (192/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.321431818 seconds)
    (193/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.794125535 seconds)
    (194/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.690360972 seconds)
    (195/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.849817667 seconds)
    (196/309) benchmarking ("sort", Int8, false)...
    done (took 4.628487107 seconds)
    (197/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.827641789 seconds)
    (198/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.868183219 seconds)
    (199/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.801735768 seconds)
    (200/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.075132456 seconds)
    (201/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.9041011 seconds)
    (202/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.891045619 seconds)
    (203/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.627757175 seconds)
    (204/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.026828495 seconds)
    (205/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.523989426 seconds)
    (206/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.790155807 seconds)
    (207/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.960895584 seconds)
    (208/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.679560329 seconds)
    (209/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.769289179 seconds)
    (210/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.530338658 seconds)
    (211/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.873057864 seconds)
    (212/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.217587404 seconds)
    (213/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.857351179 seconds)
    (214/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.91261383 seconds)
    (215/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.839784713 seconds)
    (216/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.846315504 seconds)
    (217/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.921965991 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.560971915 seconds)
    (219/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.800310218 seconds)
    (220/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.767317006 seconds)
    (221/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 3.393293446 seconds)
    (222/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.790766241 seconds)
    (223/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.005898739 seconds)
    (224/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.08325002 seconds)
    (225/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.770899348 seconds)
    (226/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.938481469 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.902640968 seconds)
    (228/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.769385322 seconds)
    (229/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.504306819 seconds)
    (230/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.763888841 seconds)
    (231/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.960059436 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.767942865 seconds)
    (233/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.85471859 seconds)
    (234/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.851778138 seconds)
    (235/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.960554772 seconds)
    (236/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.913940838 seconds)
    (237/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.764880282 seconds)
    (238/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 3.436790222 seconds)
    (239/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.88143676 seconds)
    (240/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.978777417 seconds)
    (241/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.766499654 seconds)
    (242/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.002260462 seconds)
    (243/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.766253607 seconds)
    (244/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.086555036 seconds)
    (245/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.849112309 seconds)
    (246/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.146281818 seconds)
    (247/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.77029344 seconds)
    (248/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.132818494 seconds)
    (249/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.771796662 seconds)
    (250/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 3.302393407 seconds)
    (251/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.114311841 seconds)
    (252/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.772626513 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.696551672 seconds)
    (254/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.109036895 seconds)
    (255/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.816717139 seconds)
    (256/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.933600178 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.769476565 seconds)
    (258/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 3.292379604 seconds)
    (259/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.162029743 seconds)
    (260/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.770134377 seconds)
    (261/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 3.487788193 seconds)
    (262/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.888932214 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.797152103 seconds)
    (264/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.790973774 seconds)
    (265/309) benchmarking ("sort", Float32, false)...
    done (took 5.483228463 seconds)
    (266/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.410093899 seconds)
    (267/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.963551442 seconds)
    (268/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.770145549 seconds)
    (269/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.778625537 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.100685587 seconds)
    (271/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.786154935 seconds)
    (272/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.767637717 seconds)
    (273/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.774497009 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.059014581 seconds)
    (275/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.943259584 seconds)
    (276/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.942785869 seconds)
    (277/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.770445709 seconds)
    (278/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.553556994 seconds)
    (279/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.162133152 seconds)
    (280/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.981533646 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.877876517 seconds)
    (282/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.983906624 seconds)
    (283/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.770842928 seconds)
    (284/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.782964824 seconds)
    (285/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.9566284 seconds)
    (286/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.748738955 seconds)
    (287/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.774492114 seconds)
    (288/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.768917724 seconds)
    (289/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.258780598 seconds)
    (290/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.773571772 seconds)
    (291/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.688536174 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.565922837 seconds)
    (293/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.76436109 seconds)
    (294/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.861421023 seconds)
    (295/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.973655239 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.880362706 seconds)
    (297/309) benchmarking ("sort", Float64, false)...
    done (took 5.538863678 seconds)
    (298/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.90403451 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.798887701 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.107898831 seconds)
    (301/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.082908311 seconds)
    (302/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.914755849 seconds)
    (303/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.254032911 seconds)
    (304/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.985934245 seconds)
    (305/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.792096814 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.087951077 seconds)
    (307/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.87610668 seconds)
    (308/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.798108803 seconds)
    (309/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.566404181 seconds)
  done (took 974.821497081 seconds)
done (took 976.789626008 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.796043826 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.788838986 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.76937129 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.792543374 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.883164386 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.818575096 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.786248556 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.7763349 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.822171644 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.821510439 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.768903014 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.816213343 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.77301917 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.770977999 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.771767953 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.788607685 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.083438447 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.800500027 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.790132027 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.783153139 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.791078044 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.769429755 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.824470065 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.817630884 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.779839489 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.779823747 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.775152779 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.793244626 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.886757635 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.776495651 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.776986658 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.78472042 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.084834284 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.796545302 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.771626196 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.791773915 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.786689912 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.784131844 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.777893843 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.806262766 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.175698445 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.809446631 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.773805446 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.774433014 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.775349409 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.781408664 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.774667784 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.782112936 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.788085143 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.790314237 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.170198154 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.824935167 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.776058122 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.774022995 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.787457654 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.774617556 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.779589792 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.790497532 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.794082561 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.79116676 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.068705406 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.810079809 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.777198032 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.792496822 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.782554386 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.205316259 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.809322673 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.779606383 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.176923828 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.815733476 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.203424152 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.820415947 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.77537028 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.790838461 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.806939367 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.085874863 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.799752486 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.774580692 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.784166498 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.772650326 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.786404125 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.789201493 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.781362171 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.774937117 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.792533709 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.822879345 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.787938597 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.776358663 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.788675666 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.795124156 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.785348077 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.788021198 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.779475042 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.774867103 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.789763334 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.778965026 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.780056323 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.782737833 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.784804771 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.791916094 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.179065107 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.829989494 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.772863812 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.773353971 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.777356105 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.788971171 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.172805012 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.810577722 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.799189054 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.827992722 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.77851497 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.072098157 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.80611602 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.792313794 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.789109129 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.781225021 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.773467281 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.072587484 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.198926023 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.82786079 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.778670995 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.774699856 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.795298025 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.779365682 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.774388066 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.088859369 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.806637171 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.794660182 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.900959911 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.791791943 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.808439338 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.774731401 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.783034988 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.826654467 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.794980153 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.808818333 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.780435123 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.795922897 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.795004959 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.775436525 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.789451666 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.791087565 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.776920523 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.787372178 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.77429052 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.827918357 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.791376999 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.793444323 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.801932621 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.90220381 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.77501218 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.073402308 seconds)
done (took 279.653121717 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.853440322 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.779153081 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.870428986 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.778532751 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.865711411 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.850260612 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.777430016 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.776130247 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.777100555 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.26298275 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.775973859 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.78344399 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.777658576 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.777260695 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.847680768 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.775326014 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.777226331 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.2105522 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.778153959 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.856571399 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.776558657 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.776532361 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.776220055 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.265941444 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.776124426 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.774064323 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.857749999 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.778399696 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.215969968 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.776930786 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.774978245 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.214399098 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.858643145 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.803561098 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.784337304 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.783560754 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.864050128 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.786776289 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.844012466 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.846630102 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.875150456 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.809807309 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.775549318 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.776295778 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.78003061 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.778485481 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.777748358 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.810924902 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.779398276 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.783269235 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.212015427 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.783174258 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.785144509 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.780266728 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.781045826 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.806599605 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.779927098 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.780243887 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.857728623 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.782087771 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.845973805 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.268934512 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.265519864 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.779427652 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.778199087 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.779994008 seconds)
  done (took 179.00530853 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.848169025 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.855063304 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.843430198 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.785932463 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.827724541 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.846341671 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.78331532 seconds)
  done (took 14.494492546 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.785353367 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.779311547 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.829368209 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.830002564 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.780663523 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.935591967 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.780009013 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.790649553 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.785441548 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.805780995 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.780208474 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.779990458 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.788049804 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.77777466 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.827458556 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.791464915 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.895467032 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.783256036 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.780082603 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.92689137 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.78438366 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.786602831 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.805819161 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.793834513 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.781409801 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.788018544 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.353445572 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.782085202 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.781558105 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.780494552 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.779896725 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.822189525 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.78104107 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.780234926 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.781087925 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.894483625 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.782700762 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.78085751 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.782265973 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.780893169 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.780879043 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.782093597 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.781054253 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.781149529 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.78103737 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.80389846 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.780903236 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.780840932 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.780504901 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.781517673 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.807237923 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.782580273 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.782905209 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.785510083 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.824682379 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.790272162 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.78217597 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.780802566 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.782181721 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.781671542 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.929855236 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.833294368 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.783337776 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.834391851 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.784400983 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.784905475 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.785161256 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.78655645 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.870865168 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.782316225 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.830755556 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.782747109 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.940595716 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.805705618 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.783850525 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.787933409 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.785616233 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.783150855 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.782979555 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.789483959 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.784571181 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.786412846 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.790341404 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.78814048 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.783637123 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.895787268 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.925736622 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.784077489 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.785172208 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.791270499 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.783894221 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.828221072 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.783629336 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.784426239 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.840522661 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.900706957 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.813274645 seconds)
  done (took 197.174584925 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.791197044 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.791191401 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.784889112 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.799465538 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.785004963 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.783938929 seconds)
  done (took 12.444906205 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.784656925 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.79007549 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.784963363 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.786408307 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.785212047 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.788332321 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.784902847 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.786508582 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.789041347 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.785783417 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.785762268 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.786080115 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.783890757 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.784377329 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.785976564 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.784684972 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.784839689 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.783201279 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.786018051 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.786244793 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.032806499 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.784484486 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.785884061 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.788561036 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.789104297 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.786887825 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.800370472 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.78588945 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.785738461 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.794761697 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.790109996 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.786231716 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.788365441 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.791283501 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.790345745 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.789111452 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.792296047 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.786878998 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.788145995 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.788038949 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.786999196 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.787142894 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.789747029 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.790920124 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.790230786 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.79705578 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.791457028 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.803589316 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.786897766 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.790041859 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.788598451 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.78724544 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.788659515 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.791497146 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.794038665 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.792696927 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.79498335 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.788782155 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.787609933 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.794620757 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.793530663 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.789776578 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.789624718 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.791869531 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.795321424 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.787693404 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.791541647 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.794461159 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.789135133 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.789958638 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.790297841 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.789707756 seconds)
  done (took 131.770260954 seconds)
done (took 536.612093109 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.040844703 seconds)
  done (took 8.752238065 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.828693219 seconds)
  done (took 8.601514705 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.327302842 seconds)
  done (took 10.048291778 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.801275305 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.811398911 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.796276516 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.79009739 seconds)
  done (took 28.940571588 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.058061107 seconds)
  done (took 8.773481741 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.812886864 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.78198724 seconds)
  done (took 15.376569378 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.897583828 seconds)
  done (took 8.612361658 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.826939151 seconds)
  done (took 8.549407593 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.810095407 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.807235348 seconds)
  done (took 15.357509673 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.792282723 seconds)
  done (took 8.509596094 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.932500977 seconds)
  done (took 9.748597819 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.811579822 seconds)
  done (took 8.596170288 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.80689234 seconds)
  done (took 8.523220831 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.852007682 seconds)
  done (took 8.568440627 seconds)
done (took 158.671677048 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.793980442 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.788801696 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.794903049 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.789471971 seconds)
  done (took 28.880948242 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.823692276 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.824690416 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.826490656 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.837115489 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.826797332 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.842658341 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.817651348 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.816580877 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.838260972 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.826933772 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.827308848 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.83044099 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.825799604 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.819695115 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.82773399 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.828266408 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.838235382 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.829502152 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.820338206 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.830114058 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.794381968 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.83740065 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.828863127 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.793448856 seconds)
  done (took 45.529490288 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.984778861 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.863831246 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.946855278 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.844441044 seconds)
  done (took 9.359474607 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.844613472 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.846087977 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.856479465 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.895370219 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.917989953 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.855179984 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.817936892 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.816763379 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.800295058 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.845996849 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.920138502 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.840353096 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.928870229 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.792926956 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.973406969 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.792531867 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.794112098 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.844251115 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.896282268 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.907849616 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.792145601 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.846338747 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.848759806 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.840356336 seconds)
  done (took 46.232317451 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.794815372 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.800258892 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.802274968 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.794490783 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.796618975 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.794590468 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.803479408 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.796620742 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.816866493 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.796962666 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.793398941 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.795768172 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.80038462 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.795253027 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.794557712 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.806339584 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.810323671 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.794554107 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.797733802 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.802279672 seconds)
  done (took 37.705816093 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.793589471 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.639477375 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.138320325 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.043523116 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.794245966 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.792262401 seconds)
  done (took 30.919339353 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.807462142 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.801962902 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.794654167 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.857385896 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.931716747 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.797811096 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.796628831 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.806488303 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.841891553 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.856167412 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.81513269 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.823423466 seconds)
  done (took 23.652369693 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.795338511 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.796425961 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.795183732 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.806234794 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.806651328 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.802361707 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.801641478 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.792701363 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.80717955 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.817238307 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.805506372 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.807447589 seconds)
  done (took 43.357681592 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.874963 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.671854208 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.233595081 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.254651699 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.318866925 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.994383317 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.798083627 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.881180707 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.798747924 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.066366757 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.137586332 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.001410948 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.037980275 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.624565812 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.793712272 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.26839466 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.086171557 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.012627292 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.818998534 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.412467192 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90574924 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.360208424 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.467296108 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.907160395 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.996683968 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.916542971 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.054626622 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.746033487 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.844324032 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.802045637 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.801139769 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.796512026 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.069200169 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.915184667 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.86665426 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.799375841 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.208307978 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.500929354 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.800341216 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.417974857 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.279802412 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.91616742 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.800636848 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.798508697 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.724078444 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.310349025 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.882193794 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.800184498 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.497018116 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.799484049 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.803787077 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.873240907 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.801179717 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.60801421 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.484877118 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.062890245 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.791325937 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.798890915 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.362526315 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.807013343 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.411089 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.727243063 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.879685092 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.490456492 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.24733174 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.955603824 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.799637692 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.800365717 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.724550465 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.475566667 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.916278938 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.938286245 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.809687337 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.439984365 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.101331196 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.224991118 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.852385481 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.071523878 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.576767897 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.727250802 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.016901392 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.747910258 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.726714041 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.647658549 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.725226716 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.00718187 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.832263524 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.389296072 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.829549587 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.879398238 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.80896238 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.814685773 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.802671482 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.016368265 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.693075972 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.799821619 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.076841593 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.055371703 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.812861889 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.88786896 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.727731116 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.796343615 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.046851346 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.003184461 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.041875375 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.273441848 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.889366757 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.737841372 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.811987664 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.71753722 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.805519882 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.073520839 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.858228686 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.812706812 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.92119514 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.725254238 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.052973283 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.758837773 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.896357638 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.154828302 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.042586923 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.129273007 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.043561901 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.862720654 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.800916641 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.801361846 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.506083299 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.416522658 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.018514342 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.814502894 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.288017638 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.804073989 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.803074082 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.740546194 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.417371003 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.156788217 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.885543722 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.014777718 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.760777911 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.073377976 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.728359843 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.939217342 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.804983614 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.011307383 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.44539441 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.886336377 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.051182541 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.034214768 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.02386767 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.805910913 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.817327452 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.894509674 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.821424126 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.218061921 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.044113239 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.803190351 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.804157253 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.491809728 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.86096006 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.808749441 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.805682313 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.329043642 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.069885308 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.824648985 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.805409506 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.679162058 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.81442319 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.8656511 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.805830784 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.804779519 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.319274838 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.303225381 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.808271248 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.450585827 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.015369413 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.806636705 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.481891588 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.991554416 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.815969915 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.073265844 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.872336506 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.732817631 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.505849806 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.506367266 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.805182891 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.734266629 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.806633068 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.812637821 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.810910261 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.994351569 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.081533936 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.860261638 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.433722943 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.91782767 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.809636794 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.806551891 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.805092123 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.320763759 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.821243717 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.278178829 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.924503039 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.935272267 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.815768363 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.738975727 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.812052721 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.808990646 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.809699294 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.756328166 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.863779253 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.45023943 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.020534964 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.052914111 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.214822965 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.816563535 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.496770521 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.93146579 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.822867049 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.102048041 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.322602733 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.90834704 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.881131441 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.816121676 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.504368522 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.547335998 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.377810589 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.133238235 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.12950303 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.164159144 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.16113511 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.128298337 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.901121773 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.038567803 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.335654074 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.871381715 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.899791816 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.747265216 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.822267295 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.467087232 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.168817088 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.821732187 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.027790509 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.105427068 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.172111041 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.955335121 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.019391641 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.843276878 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.699742894 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.83468646 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.349378951 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.833935524 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.222768449 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.030746022 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.894881877 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.114665154 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.903838411 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.815749648 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.148716879 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.854804333 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.519788569 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.171948473 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.179159121 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.30186456 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.049929173 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.820940779 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.257813903 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.177373604 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.967050764 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.932257025 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.743062928 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.821154478 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.820702218 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.832273099 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.788483139 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.661351999 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.057342205 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.817947525 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.043801317 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.900828951 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.186021234 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.722415179 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.816601235 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.815023791 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.05844 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.465477706 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964565491 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.090571281 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.378913474 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.823819462 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.740399214 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.744348821 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.519799005 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.821620266 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.781814136 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.024070906 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.92155721 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.499567248 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.161329333 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.119349543 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.061325163 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.827601704 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.089888475 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.089806116 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.305673046 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.835061845 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.911869923 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.132976698 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.529310978 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.031504791 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.04692151 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.349841922 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.034527005 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.265066021 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.78593072 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.817184707 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.025961086 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.036752834 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.213321866 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.003599924 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.527117534 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.838697985 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.178823699 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.884638834 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.231967334 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.012628763 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.902471557 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.824636992 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.895732736 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.822375567 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.823559842 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.824182109 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.832125778 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.233215043 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.944423915 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.832731686 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.893652455 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.850219067 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.3920984 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.825941562 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.09134671 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.172682757 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.157804978 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.885904123 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.819071372 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.818310807 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.748599057 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948396183 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.258487944 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.093185973 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.937558792 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.952827599 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.837229286 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.142696588 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.044102079 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.120738854 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.090843892 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.702498112 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.427709968 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.933704639 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.040051595 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.827520935 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.023966627 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.036175773 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.125860383 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.39125367 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.918019115 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.003919626 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.092530478 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.178933412 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.820832874 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.401772201 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.827401318 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.214020025 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.855319477 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.214317077 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.085315348 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.822547113 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.943231164 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.823110126 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.024513645 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.273057936 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.520117235 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.173527486 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.671430665 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.825943922 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.097955606 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.151555084 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.126466572 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.895410822 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.82466814 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.556428716 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.953614976 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.669345519 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.038697113 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.822614169 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.024882268 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.53047943 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.827078834 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.100893237 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.125308459 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.819902219 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.695572678 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.838867183 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.829124651 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.0379782 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.038562759 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.066467355 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.825364842 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.832049281 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.634795923 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.105405622 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.888745445 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.749521045 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.82350409 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.86895496 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.049443392 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.841425351 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.341328341 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.523934123 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.102734714 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.733750008 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.84098836 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.210776568 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.20000176 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.160264835 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.346909532 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.042432667 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.373542235 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.640457798 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.191396015 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.824251395 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.190046855 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.194993792 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.823632611 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.296254287 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.925409792 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.095258589 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.153647051 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.835623205 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.594016995 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.85640819 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.037090138 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.177355663 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.752253287 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.825583427 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.869448713 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.822812245 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.80780299 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.831113934 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.733302869 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.216495627 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.659926266 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.38045459 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.825372004 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.890872496 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.205003046 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.34786003 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924297863 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.841599122 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.829083647 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.523383142 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.114938526 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.067611591 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.295776401 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.912872781 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.828484335 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.827755189 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.74722619 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.004611671 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.013613244 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.109969389 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.137406773 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.926122987 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.824887821 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.033586729 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.026523205 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.246956762 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.961127199 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.91848131 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.933907688 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.767043665 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.535173016 seconds)
  done (took 1632.396704172 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.842838988 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.83976935 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.835803543 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.852444651 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.848897302 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.829262454 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.854847418 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.906855394 seconds)
  done (took 56.567102382 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.823047448 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.976572591 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.826758499 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.824085561 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.821905 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.824445339 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.995004031 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.829505358 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.822978369 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.827666349 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.824248385 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.820980422 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.621457195 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.844268003 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.822992185 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.823153818 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.83673678 seconds)
  done (took 73.926689954 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.826761257 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.253532347 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.853558727 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.827032024 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.893837484 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.828326589 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.9831386 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.887613846 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.82310422 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.07897439 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.123112038 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.847255259 seconds)
  done (took 89.977746988 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.836638428 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.825301515 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.829144166 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.828703158 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.827265724 seconds)
  done (took 10.905800112 seconds)
done (took 2131.146781308 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.055480902 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.020069057 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.068209211 seconds)
  done (took 5.838811937 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.967922846 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.021552886 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.136686735 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.154025537 seconds)
  done (took 10.038730843 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.110325162 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.197600292 seconds)
  done (took 6.064612256 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.152546252 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.844254736 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.209987817 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.829481485 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.836073017 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.830436666 seconds)
  done (took 22.257533715 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.827897636 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.833048065 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.831487054 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.833615277 seconds)
  done (took 9.085056233 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.830354708 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.549869798 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.832542486 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.841389288 seconds)
  done (took 20.810778543 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.978167644 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.941214919 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.97297563 seconds)
  done (took 7.650686897 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.969632336 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.062816517 seconds)
  done (took 6.790314252 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.995226815 seconds)
  done (took 3.751990599 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.860199697 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.099968063 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.314453101 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.339442483 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.412950151 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.644394089 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.153987301 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.050666545 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.26626665 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.272379156 seconds)
  done (took 24.173700834 seconds)
done (took 131.475153803 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.178160135 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.862080172 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.033842743 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.189490396 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.084623561 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.029669405 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.051684594 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.183927522 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.876404267 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.863739565 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.194785683 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.068088468 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.996142715 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.849193096 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.00735266 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.849542065 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.089461423 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.208148237 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.869566333 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.112442843 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.064058201 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.830838091 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.021614228 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.847227766 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.086521584 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.983677494 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.380683406 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.850826248 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.00759081 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.388555304 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.98890873 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.250218039 seconds)
  done (took 167.058039111 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.833753021 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.830955227 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.831079315 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.828647148 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.30515083 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.830802493 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.829647345 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.832388849 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.283144511 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.262793201 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.83391518 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.289459478 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.830416761 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.831110094 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.829068219 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.829911912 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.449225645 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.827681223 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.831598232 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.831515008 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.832828094 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.124272496 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.828503681 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.140961823 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.441731525 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.829098064 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.832327079 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.830730872 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.829533667 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.828559248 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.831941856 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.828258567 seconds)
  done (took 207.992663162 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.77782003 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.831489798 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.831726942 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.831067283 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.832036222 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.832768755 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.831443608 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.83210039 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.587190418 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.579005629 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.831746996 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.83431527 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.83097706 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.829789009 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.834504249 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.832662387 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.831018702 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.818257526 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.831484534 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.831960166 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.831658572 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.421365173 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.832355792 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.535462053 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.834508472 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.836290693 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.833373962 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.832400523 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.829482078 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.832867216 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.832693698 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.832660333 seconds)
  done (took 219.118690784 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.07578657 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.836102613 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.836129239 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.828399636 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.840856639 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.838454166 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.810536977 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.08992617 seconds)
  done (took 18.918552791 seconds)
done (took 614.858046719 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.207810537 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.046280457 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.015091383 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.861807134 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.099748709 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.901521334 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.854137243 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.926720023 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.661927795 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.930101268 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.515709986 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.879128878 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.608540908 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.884948994 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.978286108 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.914809993 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.45020333 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.547134387 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.031555238 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.925746956 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.038387619 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.750488432 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.937090674 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.703531761 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.641230475 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.80686264 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.861443751 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.444474778 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.864222733 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.012994796 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.531186361 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.107831118 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.87055269 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.855340958 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.911712899 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.892871202 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.052304343 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.867168187 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.981372005 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.548908004 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.911148511 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.576034046 seconds)
  done (took 101.169380086 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.847849044 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.842147479 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.844030592 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.845138308 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.851681756 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.843358971 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.843379819 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.845302446 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.846579077 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.843099552 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.844193453 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.854522573 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.848351132 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.855368368 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.847523052 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.847869177 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.844624168 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.856108208 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.846877934 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.846670381 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.844124328 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.848348167 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.84071784 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.846890214 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.85112165 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.843552523 seconds)
  done (took 49.798542389 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.839534192 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.992949164 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.075232715 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.85809271 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.840750247 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.843795972 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.857372372 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.840505644 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.84383349 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.842594972 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.931103273 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.8425313 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.859747724 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.085683422 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.851867788 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.836810588 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.84254044 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.840343958 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.002273579 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.862852573 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.861207512 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.844032383 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.862021661 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.848899496 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.844461561 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.844204735 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.845013114 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.315842638 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.847784833 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.930472694 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.884478256 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.867486885 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.258078451 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.091528369 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.891686942 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.853319346 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.842421136 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.937892016 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.846583562 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.84209194 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.862616062 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.844695295 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.081906067 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.37060104 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.854961181 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.841120656 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.330521723 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.941945281 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.879324921 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.849089174 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.092084498 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.857629282 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.846108699 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.844392584 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.880782984 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.846505732 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.842262397 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.214709501 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.854922732 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.864521399 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.844027087 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.84205085 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.009962276 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.849625525 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.997602163 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.850612912 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.849233602 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.84242671 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.082142445 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.857285406 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.378820278 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.854677582 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.841393656 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.939314862 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.996307787 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.355403685 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.852699898 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.010379922 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.27002976 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.865129468 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.848566719 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.311223497 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.868890678 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.847466893 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.844404561 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.846000177 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.845419638 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.888421148 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.859708966 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.296644662 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.384676144 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.229561681 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.864548731 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.855704267 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.844391039 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.209879777 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.846690834 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.844590365 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.077614895 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.390829039 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.854859482 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.851447514 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.36110599 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.855502565 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.862611958 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.848605702 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.09127647 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.857933349 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.883358602 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.844386683 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.850701123 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.848858519 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.862989307 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.849843303 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.844348731 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.354866742 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.952088808 seconds)
  done (took 229.192326486 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.844631581 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.84594832 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.849147496 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.846178831 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.84160675 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.844373875 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.843735101 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.842664096 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.848310287 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.845126183 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.845501544 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.843896557 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.844684734 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.850079502 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.849682722 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.848793571 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.445054239 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.844065682 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.847026413 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.841584073 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.484118151 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.848014995 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.849800272 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.841369019 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.847140183 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.842226857 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.850178473 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.847906847 seconds)
  done (took 166.698854933 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.847221176 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.95639985 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.861310017 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.874225104 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.851326249 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.847069322 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.940708863 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.860585708 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.850101054 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.843401186 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.845899863 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.907529407 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.85368379 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.945276391 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.872461371 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.948425609 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.945071835 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.851070989 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.847375847 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.847865529 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.875324687 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.850675825 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.907035467 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.966241474 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.861497411 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.959975232 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.860491686 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.849905845 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.849631893 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.959581997 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.862634205 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.911816673 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.87082345 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.862497514 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.963549987 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.960058932 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.946823002 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.947563344 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.851215899 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.84893913 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.849217729 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.850603858 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.960403894 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.861908927 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.849814537 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.96551711 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.867858066 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.84907442 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.852284419 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.849225218 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.861785595 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.863227031 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.909363342 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.973830888 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.879196778 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.873182504 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.947479103 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.96682373 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.849596123 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.946348451 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.852598751 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.96218516 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.862275425 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.853403092 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.852335611 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.853542944 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.879769702 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.951167696 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.950743247 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.852866824 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.945499807 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.881074852 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.85414048 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.849584182 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.8492825 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.965464495 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.961472569 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.883333513 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.884263514 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.874985011 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.856313589 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.851630694 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.85490041 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.8662218 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.852838952 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.964708601 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.95953287 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.854806129 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.852673384 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.852486087 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.854789528 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.876528264 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.970627408 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.882126849 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.952944747 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.914831884 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.922206888 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.859731407 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.868061374 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.856039276 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.913791008 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.861854478 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.862087649 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.139307731 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.914056768 seconds)
  done (took 200.403905027 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.245167986 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.89888366 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.906403471 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.173087596 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.195322281 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.774279247 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.893193627 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.89636498 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.923621676 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.084704167 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.969906095 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.916296748 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.883611778 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.87496865 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.899390936 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.920103956 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.906055468 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.23810838 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.104308454 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.033392733 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.884663048 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.168415175 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.201599513 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.4773093 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.945573342 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.292989592 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.452430384 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.027525988 seconds)
  done (took 60.971290761 seconds)
done (took 809.998615809 seconds)
SAVING RESULT...
DONE!
