cset: moving following pidspec: 11323
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.1732799 seconds)
loading group "string"... done (took 0.448452919 seconds)
loading group "linalg"... done (took 10.242736852 seconds)
loading group "parallel"... done (took 0.223491255 seconds)
loading group "find"... done (took 1.879074246 seconds)
loading group "tuple"... done (took 1.993656397 seconds)
loading group "dates"... done (took 1.339699971 seconds)
loading group "micro"... done (took 0.454497573 seconds)
loading group "io"... done (took 0.438097128 seconds)
loading group "scalar"... done (took 45.655516593 seconds)
loading group "sparse"... done (took 12.739823009 seconds)
loading group "broadcast"... done (took 1.037028829 seconds)
loading group "union"... done (took 8.59735532 seconds)
loading group "simd"... done (took 2.095266826 seconds)
loading group "random"... done (took 8.408180477 seconds)
loading group "problem"... done (took 2.354712542 seconds)
loading group "array"... done (took 23.614758701 seconds)
loading group "misc"... done (took 0.885536223 seconds)
loading group "sort"... done (took 3.291277917 seconds)
loading group "collection"... done (took 14.410190607 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.60216431 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.110559907 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.175534152 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.173855425 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.237610585 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.134828233 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.137558539 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.10121481 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.790954323 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.177933442 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.123498256 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.358369386 seconds)
done (took 5.985798264 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.23194017 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 0.081481989 seconds)
    (2/2) benchmarking "String"...
    done (took 0.145932929 seconds)
  done (took 1.063123929 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 0.090801347 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081333988 seconds)
  done (took 1.011149957 seconds)
  (4/5) benchmarking "replace"...
  done (took 0.081793406 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.329724266 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.082792108 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.480535272 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.144128987 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.084082864 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.082531539 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.081351021 seconds)
  done (took 2.123340889 seconds)
done (took 5.350819364 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.374728863 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.816865499 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.466695604 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.13807545 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.275946802 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.232618495 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.200459274 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.215550933 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.086964108 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.084753357 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.171699031 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.398870796 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.293999647 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.787007425 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.097686997 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.102766477 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.132600936 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.76185784 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.084176307 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.131957794 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.364527671 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.117157914 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.120246609 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.131322227 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.191686675 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.106334898 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.155475063 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.083652562 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.67337909 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.124482143 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.206037107 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.08665598 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.155534755 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.12755231 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.180145286 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.115601864 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.675031089 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.191897692 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.141517063 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.087088813 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.686138137 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.103706331 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.17009983 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.09659334 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.087904904 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.168013418 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.117534059 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.084083649 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.106371342 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.085716181 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.16885968 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.45763299 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.10964655 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.182242575 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.099116066 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.693279681 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.10319047 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.25546583 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.131956439 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.110526217 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.085973017 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.083732168 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.151948051 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.088326214 seconds)
  done (took 19.187822115 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.144590531 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.138563897 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.08507994 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.130781324 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.097579551 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.083053834 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.082971894 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.086877643 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.088491095 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.140587167 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.089923424 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.152480654 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.084547675 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082128157 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.144878108 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.202810737 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.091972527 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.098396609 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.087360257 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.105378796 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.110792584 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.08749672 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.083853436 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.085947903 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.140042754 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.213238858 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.115260749 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.114866778 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.084661171 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.097828701 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.133516375 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.131631166 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.08302005 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.08498836 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.122804384 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.126059207 seconds)
  done (took 4.885269908 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.18666832 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.100417906 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.166820862 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.136275827 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.112248664 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.152283392 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.154545167 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.230579838 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.679965146 seconds)
    (10/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 0.15920684 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.166521177 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.132973658 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.0988915 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099182617 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.085523208 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.083445 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.552109424 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.142441926 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.111379719 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.166894979 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084414732 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.086151629 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.396415494 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084146996 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.082149507 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083201677 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.085780319 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.163631115 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08232202 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.579463844 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.084516464 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081970118 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.144184963 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.200114567 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.190886671 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088968394 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.119395782 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082330443 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.082701986 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.085014222 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.086783672 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.082940178 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.092578487 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13482325 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.124879283 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.086234476 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.083428279 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.18582417 seconds)
    (49/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.0825664 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.08399874 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.093173857 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.812211186 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.17117827 seconds)
    (54/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.084760877 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.149092195 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.082176746 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.159844017 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.101624505 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.083384129 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.084068648 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.153917385 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.087659091 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.082399092 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.083493384 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084906905 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.082904631 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.08332187 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.480030753 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.086834396 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.103956854 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084112091 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.083319108 seconds)
    (73/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 0.357403256 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08759831 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087291583 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.10475806 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.082851974 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.082806185 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.081640619 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.084184441 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.08585979 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.102127451 seconds)
    (83/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.09864117 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.08651894 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.083888894 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.147058343 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.083419964 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.102260868 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111249553 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.097465902 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.082080092 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11763364 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083122867 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.083744882 seconds)
    (95/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.15458429 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081256027 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.123133522 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.084844004 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.145946408 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.082781469 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.178696459 seconds)
    (102/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.087061983 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.103954852 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.085753486 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127521372 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.083319904 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085493212 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.086476803 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.083709442 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.082380057 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.14564409 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.083396131 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.08671273 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.083549128 seconds)
  done (took 21.357804698 seconds)
done (took 46.273289428 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.338524564 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.084274885 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.085306952 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.086778375 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.08413886 seconds)
  done (took 1.596226989 seconds)
done (took 2.490109084 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/23) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.176092395 seconds)
    (2/23) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.102029782 seconds)
    (3/23) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.097051625 seconds)
    (4/23) benchmarking ("Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##3#6}", "10-90")...
    done (took 0.100037296 seconds)
    (5/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.104837132 seconds)
    (6/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.099962404 seconds)
    (7/23) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.08203187 seconds)
    (8/23) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.097300186 seconds)
    (9/23) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.119750659 seconds)
    (10/23) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.099002986 seconds)
    (11/23) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.099187273 seconds)
    (12/23) benchmarking ("Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##3#6}", "50-50")...
    done (took 0.083221433 seconds)
    (13/23) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099358052 seconds)
    (14/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.101077773 seconds)
    (15/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.099801881 seconds)
    (16/23) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.081199835 seconds)
    (17/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.098114602 seconds)
    (18/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.09861619 seconds)
    (19/23) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095351277 seconds)
    (20/23) benchmarking ("Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##3#6}", "90-10")...
    done (took 0.104679264 seconds)
    (21/23) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.082703878 seconds)
    (22/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.09912692 seconds)
    (23/23) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.083395415 seconds)
  done (took 3.221691552 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09514302 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.100797923 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.096330262 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.095708598 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.082619986 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.094640099 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094268146 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.104062994 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.094337425 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089129463 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.082331309 seconds)
  done (took 1.930709069 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095256554 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.100221874 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083968888 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.095124921 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.082406111 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.094425548 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094109911 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.100864891 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.09436407 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089774958 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.082607539 seconds)
  done (took 1.913107925 seconds)
done (took 7.964450268 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.442931958 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.674100574 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.151600558 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.206608894 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.242275781 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.179959797 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.281660636 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.164675535 seconds)
  done (took 4.352606976 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.122036801 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.144901966 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.084820529 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.087946134 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.087251372 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.086885764 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.088821986 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.084575669 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.084930966 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.090026546 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.085005112 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.102629015 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.087825491 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.089714443 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.086253072 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.08532089 seconds)
  done (took 2.445864736 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.129359228 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.109618341 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.088788351 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.088568205 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.090113122 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.090124081 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.091571065 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.087593106 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.086176324 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.086696672 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.09146974 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.104595748 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.087504673 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.086403106 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.089078656 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.108569666 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.085893353 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.088975041 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.10550953 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.089461816 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.08881175 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.086279773 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.086719936 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.087069257 seconds)
  done (took 3.21868646 seconds)
done (took 10.916567115 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.103515288 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.084592261 seconds)
  done (took 1.085563968 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.160460759 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.154877054 seconds)
  done (took 1.221236948 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.091183773 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.084342401 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.088379831 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.086863822 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.084828588 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.084171984 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.087232522 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.08353133 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.08390683 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.084328327 seconds)
  done (took 1.772010833 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.087535853 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.085605605 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.086252632 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.150795527 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.085217729 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.08296279 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.084462479 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.083009174 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.08390665 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.08341194 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.084201686 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.111287817 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.085630146 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.092644 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.085284791 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.086269313 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.087222644 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.085244092 seconds)
  done (took 2.53952414 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.085026806 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.084412754 seconds)
  done (took 1.084008044 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.085090397 seconds)
    (2/7) benchmarking "second"...
    done (took 0.082705032 seconds)
    (3/7) benchmarking "month"...
    done (took 0.086430542 seconds)
    (4/7) benchmarking "year"...
    done (took 0.084004681 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.084216416 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.08389369 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.083469696 seconds)
  done (took 1.502787482 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.438019487 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.20047062 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.2873867 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.101279792 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.08492684 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.290197667 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.083515541 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.083907579 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.08867329 seconds)
  done (took 2.604609888 seconds)
done (took 12.719409394 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.097617214 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.163934005 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.488915474 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.106459629 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.084469549 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.150322131 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.200419228 seconds)
done (took 2.214793766 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.251218498 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.139296886 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.109415649 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.085304332 seconds)
  done (took 1.497118614 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.087839264 seconds)
    (2/2) benchmarking "read"...
    done (took 0.091878918 seconds)
  done (took 1.102501678 seconds)
done (took 3.520504528 seconds)
(10/20) benchmarking "scalar"...
  (1/24) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.108182493 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083211578 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.083137621 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.083114584 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.082803156 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.082958658 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.084131965 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.083097752 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.083169243 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.082560772 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.085618277 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084248204 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084284945 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103730244 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084659354 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.085639243 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.084837053 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084513707 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.084697255 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.085128962 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.084551957 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.087611601 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.083262339 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.083740478 seconds)
  done (took 3.020073666 seconds)
  (2/24) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.086002813 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.083228259 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.083333742 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.08328854 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.083864108 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.083024245 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.083466101 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.083121388 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086007855 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.083006837 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.083126165 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.083942473 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.084111041 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.084643349 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101789739 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.086008703 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.085414294 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08501663 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084484348 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.087615299 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.084546741 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085014669 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.083386609 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08306032 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.083314186 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.083620414 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.083119386 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.083192442 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.082476646 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.100723543 seconds)
  done (took 3.487791721 seconds)
  (3/24) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.091149736 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.081729588 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.08347403 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.086313544 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.082689281 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.08330757 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.080327054 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.083281231 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.083745322 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.083110668 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.084479251 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.08616415 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.08445266 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.084168141 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.101523749 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.084604786 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.08519844 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.084658988 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.084361719 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.084485494 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.08506703 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.082793032 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.086828308 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.085041706 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.08316471 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.080612947 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.083631642 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.08352467 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.102112921 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.084204857 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.084607012 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.084939256 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.084512438 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.08897312 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.084235989 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.084199588 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.084519994 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.082277465 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.084978981 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.080873834 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.081147105 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.084153595 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.083828637 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.103092597 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.086611341 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.084416585 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.084498878 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.085400705 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.084490656 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.084384642 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.083316582 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.084229749 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.084229596 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.084884941 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.0846022 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.083190038 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.084114069 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.099860556 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.085699381 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.085104583 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.085772043 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.081337944 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.085198868 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.0842128 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.088866347 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.085642481 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.087085407 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.084381958 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.08418349 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.08434427 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.085169655 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.087392637 seconds)
  done (took 7.079162126 seconds)
  (4/24) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.085509181 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.084518164 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.084101311 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.084051613 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.083448321 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.08640925 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.084059038 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08337129 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083300648 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.083988539 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083396173 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.083763055 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084225149 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.083380782 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.100930036 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.084191229 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.086177072 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084190379 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.084418741 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.084007725 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.084108189 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.084465707 seconds)
  done (took 2.807088278 seconds)
  (5/24) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086382576 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.088394017 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.085429718 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.085919158 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.088185945 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.089224689 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.084616843 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086128948 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084057128 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084441273 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084297366 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08470073 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.086153297 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086273349 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.102087882 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086279661 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086816138 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.087072622 seconds)
  done (took 2.503658011 seconds)
  (6/24) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.086792322 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.084528315 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.084693062 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.086121827 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.085034303 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.08543329 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084121983 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.083864881 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.084064038 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.086777824 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.084668643 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085718209 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.085708601 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085159301 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102668157 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.085560193 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.084877558 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086002464 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086078301 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088600467 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.085300924 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.088107806 seconds)
  done (took 2.836623537 seconds)
  (7/24) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086852265 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.085201799 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.086244755 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085908188 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.085765626 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.085449837 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.086385703 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.085977496 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.089603943 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.08509052 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.0888889 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.085842778 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.089672511 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.086274954 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.104603957 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086648839 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.086280466 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.086484108 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.085638472 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.086007215 seconds)
  done (took 2.692350246 seconds)
  (8/24) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.146030799 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.088991361 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.086291513 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086314585 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.087019369 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.086432131 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.085886064 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.086452555 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.085429546 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.08784009 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.087101013 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.087397726 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109942114 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.087880053 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.088630703 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.088468803 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.087799672 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.087744111 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.088164355 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086960107 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086089802 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086421271 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.08625607 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.089793864 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.087173776 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.08770303 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107589469 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.089202206 seconds)
  done (took 3.492642244 seconds)
  (9/24) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086314202 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.086178644 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.086280266 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.086276354 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.085601418 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.086245801 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.088249137 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.085471493 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.085425774 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.086148443 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.085501985 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.085374167 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.085170663 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.08526151 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.103208038 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.08668099 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086450471 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.0889452 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086741727 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086475336 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.085731604 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085323932 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.085769867 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.085227383 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085507707 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.086821547 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086823045 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.08645387 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.088473288 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.1075444 seconds)
  done (took 3.572932259 seconds)
  (10/24) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.090238633 seconds)
    (2/2) benchmarking "in"...
    done (took 0.088167621 seconds)
  done (took 1.123458002 seconds)
  (11/24) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.087695873 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086079384 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.086341544 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.087570039 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.087289614 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.086714941 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.086471101 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089657673 seconds)
  done (took 1.64361636 seconds)
  (12/24) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.147128882 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.159880338 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.086486144 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.091214455 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.159263944 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.157152852 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.119565687 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.086586486 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.098353831 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.086613041 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.144568171 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.085905854 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.089307236 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088429646 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.089325392 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.111589749 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.085516975 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.09137647 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.088354016 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.08548388 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087624095 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.092976368 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.091241494 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.090644238 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.087517962 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.103386652 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.0910013 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.089421452 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088703845 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.110548593 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089060516 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.08685863 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.089458909 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.086126741 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.084743571 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.158677576 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.093098663 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089558239 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.098662764 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086412818 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.090656019 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.104862551 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.090067745 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.092201834 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092064415 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.086383833 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.086709625 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.084931289 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.086648283 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.087865953 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.084819102 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088588563 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.084856704 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.09097831 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.094162197 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112021763 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.086788267 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.089489762 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.08765921 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.091680217 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.08966694 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.090200738 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.091540212 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.08594392 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092673185 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.093457282 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090019805 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.084933857 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.087255862 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.104855732 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.094325781 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.114913126 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.092277092 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.086001595 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087667317 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.085372897 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091758929 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086989165 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088586258 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.087214322 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.086176842 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.088378936 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109790139 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.089514353 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.089320938 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.088676066 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.086569477 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.088862074 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.087143024 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.094752395 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.086819401 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.085012503 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.087251386 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.09031053 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.087915135 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.087360188 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.087116434 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108046869 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.088604156 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.087840191 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087261715 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.089712423 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.092150393 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.08825569 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087631964 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.090548988 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.153955058 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090098077 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.094645575 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.109338684 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087611446 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.09135846 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.090398518 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.085377828 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089198407 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.086531156 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.08663222 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.088880436 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.086448588 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.086835188 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090951655 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.09251358 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.087384099 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.10462617 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.09005987 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.087106488 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087773296 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.088555752 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.087013176 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.085637383 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.085647323 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.094276307 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.089424749 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.089765465 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087686634 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089718207 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.085865923 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.105268767 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.087582918 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.092027419 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.090082634 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.090765003 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.092472635 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.091148959 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.086896834 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.089978441 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.089138254 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.088347718 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.089520371 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.087117495 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.085456096 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.08767007 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.108936214 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.087823573 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.091234337 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088272426 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.090333084 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.086661807 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088726366 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.088642184 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.087043649 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.087649633 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087132309 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.086469722 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.090990079 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.088293261 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.105401112 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.086879121 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.08882426 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.087669791 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.087626667 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.088424945 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.089678031 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.086701326 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.087376354 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.086475829 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.093462823 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.093778971 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.092050438 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087529986 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.108138635 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.091671129 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.087996436 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.092204366 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.087649522 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087422803 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.087464846 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.092616917 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.088886744 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088113513 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.088704167 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.087690759 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092333979 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090446049 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.105960754 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.086742368 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.087773601 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.08910314 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.093339344 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.087852003 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.087366925 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.086346385 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.089978319 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088610398 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.089875772 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.087482307 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.087731384 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.087122381 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.108725054 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.091094767 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087677618 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.090567755 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090255134 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.086445725 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087662478 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.087182391 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.090781873 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.086465667 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.08756081 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.089232479 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.089928726 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.087486028 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.095653592 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.105016957 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092743669 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.093309125 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.091632978 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.08797093 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.087484306 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.089590963 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.089607433 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.092367839 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.088702065 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.090799684 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091720233 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.090143516 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.088915753 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.110631837 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.088949037 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.087243962 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.090228744 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.087392631 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.092765361 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.087421762 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.087451426 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090065023 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088241704 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.092783513 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.086782106 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.09026344 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.087342741 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.106302291 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.087045017 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.093349741 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.091122609 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.087723542 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.0892522 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088166852 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.08736936 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091278547 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.087613866 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.087566793 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.088039848 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090898707 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.090186665 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.092375241 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.107889582 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.087154412 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.08932828 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.086616514 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.090869178 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.088049722 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.09063721 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091439335 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.088584948 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.089458571 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.091368878 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.088015869 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.087412975 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.087694664 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.108536737 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091514139 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.09104433 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.09034778 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.091708998 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.086693536 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094524926 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.089177356 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093364203 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.090090612 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.08714625 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.08868947 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.092217105 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.089323914 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.107215149 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.089106802 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.0898766 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.090714271 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.091186128 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.089712451 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.088564013 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.091666808 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090374455 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.091003977 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.091318772 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.091416688 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.090076319 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.088935913 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.090050561 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.108458321 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.091299874 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.088752684 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.091851679 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.091441577 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.089934072 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.09349003 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.089562577 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.09085526 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.089176888 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.089686215 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.088793453 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.088595225 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.087928543 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110142828 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.090006623 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.092921839 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.089006332 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.089698435 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.089484707 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.087423627 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.08978991 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.092531325 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.088836843 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.090345613 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.088607509 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.092231721 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.089241974 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.106243478 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.088576895 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.087261062 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.089276534 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095105771 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.090804289 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.092887326 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.087718109 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.088900358 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.087039821 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.08889161 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.088346895 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.090815415 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.086369234 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.110099869 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.09241079 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.091018668 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.089330676 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.092832213 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088913429 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091098117 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.089377954 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.088242659 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.088178881 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.087343261 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.087628833 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.088645824 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.093070564 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.107920172 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.09067227 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.091552158 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.08892965 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.088076124 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.089871114 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.088703641 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.090231356 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093106197 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.089057016 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.091913095 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.08856596 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.087296668 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.089941133 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.089138942 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.10822737 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.089732668 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.091499088 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092539751 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.089085713 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.09169168 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.091518129 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.091693284 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.090450816 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.087761168 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.088700209 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.08899601 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.089256816 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.089446202 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.10879664 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095301036 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.087313848 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.091941216 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088932163 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.088855603 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.093992149 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.088474052 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.088529001 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.091355737 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.091475991 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.091561726 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.092758181 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.089259361 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.113508165 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.089514099 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.091331631 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090291863 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.088842765 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.090273805 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.092354057 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.089502283 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.091227359 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.09270621 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.089160025 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.090505865 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.088882415 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.095165179 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.088691674 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.109723683 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.089911534 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.087170783 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.088748834 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088902749 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090618607 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.091019455 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094223782 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.087671421 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.087590317 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.089964314 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.089178976 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.091342177 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.092569787 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109348578 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.092385344 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.088762111 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.08966856 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.094345278 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090947515 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.092327566 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.089546304 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.092237188 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.089502054 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.09131758 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.0889266 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.090970307 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.090172413 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.112397628 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.094478795 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.090773198 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09133787 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.092270325 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089093158 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.091545323 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.09203349 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.091668238 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.087394474 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.088648466 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.089564278 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09383354 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.088789629 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.090190928 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.110846497 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.092405405 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.090775255 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090273915 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.089148086 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.091037303 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.088190263 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.09233975 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090812975 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.089121929 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.087612353 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.088808482 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.089735082 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.091866579 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.108877961 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.088773189 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.090951335 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.092086439 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.08918205 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.091517699 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088600632 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.087424376 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.087977206 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.089565037 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089443995 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.092216346 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.090536715 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.089709404 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.10850936 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.088505576 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.092267324 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091968357 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.09144153 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.08903857 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.088367763 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.088824806 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.087934221 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.091435376 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.089256024 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.089085736 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.0933202 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.091261965 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.08741896 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.109739802 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.087466555 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.091571418 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.09071774 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.090334042 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.093133372 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.092988665 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094247754 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.08871241 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.090052567 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.088591683 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.089205089 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.090950554 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.08918966 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.108523335 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.092923506 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092142221 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.089310928 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.089440407 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.091434115 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.092504631 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.090547585 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089893416 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.089278127 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.092265977 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.093849173 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.090248742 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.092913423 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110496601 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.089964831 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.089362226 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.089448808 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.094388382 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.089513074 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.088737205 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.089822803 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.089248691 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.08845631 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.090226283 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.089535895 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.089843089 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.092698561 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.092051595 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.109545803 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.090566434 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.089958807 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.089118184 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.090363351 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.091704368 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.08916921 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.089398857 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.08892928 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.091868537 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091309444 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.091055365 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.089916787 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.090806136 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.107929191 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.091326979 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.092732148 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.09201743 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.087945672 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.089968391 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.089535895 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.092649741 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.092651474 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.089608191 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.092240487 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.091622808 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.092671387 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.088362907 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.091705724 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.109980998 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.095627073 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.08993697 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.089937889 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.092569098 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092024934 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.090976644 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.089536943 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.092766773 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.093135025 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.089772707 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.091169872 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.087856607 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.0911906 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.10715257 seconds)
  done (took 55.765694652 seconds)
  (13/24) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.106264114 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.088978716 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.088915316 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.088564554 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.088990273 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.088017483 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.088696562 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.08906563 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.088211721 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.08791195 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.088281569 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.090856165 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.088622412 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088397644 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.108063679 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.089323056 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.089473678 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.088938957 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.088839149 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.087755795 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088116074 seconds)
  done (took 2.915861625 seconds)
  (14/24) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.089860932 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.091096926 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.089174324 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088276346 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087794489 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.088246871 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.087991877 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087854182 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.087802827 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087684775 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.087721625 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088130264 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.090390602 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.087930509 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108104683 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088825739 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.08842097 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088801567 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.088449329 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.087912015 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.088212707 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.088143102 seconds)
  done (took 2.983672696 seconds)
  (15/24) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.092597772 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.093343358 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.090554749 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.088680347 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.090257073 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.08897469 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.089503991 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.08797064 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.091247475 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.090895079 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.090302194 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.090366273 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.092122876 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.088614587 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.108795342 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.088649652 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.092090792 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.090008695 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.09029692 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.089857411 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.089343865 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.088033047 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.088774391 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.093385019 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.090179708 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.089921174 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.088687003 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.090110528 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.109431484 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.090710625 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.090091583 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.09004756 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.089723854 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.090108844 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.093140006 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.089522187 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.090346618 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.089380406 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.08782468 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.089414358 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.088680072 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.090237535 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.110071961 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.088812482 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.088992582 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.092240615 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.090368976 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.088537695 seconds)
  done (took 5.399394863 seconds)
  (16/24) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.091110374 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.114037244 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.088954473 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.113016186 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.088878224 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.088805939 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.088814701 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.112721611 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.090769575 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.088233952 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.088476311 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.088423631 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.110419752 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.088872808 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.088914777 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.089202622 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.089522477 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.088458703 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.089231728 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.091487819 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.08894046 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.088806621 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.088063911 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.08838693 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.088099088 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.088237594 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.089126294 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.110476594 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.088873031 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.088846744 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.091432939 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.089622867 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.088704597 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.088319846 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.088601774 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.090491458 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.089071369 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.088376523 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088492536 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.089556351 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.088741618 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.112675703 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.089301625 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.08882416 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.089145486 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.088847105 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.089106662 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.089244833 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.088460171 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.087994558 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.08814086 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.088696214 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.091564813 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.089908706 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.08848863 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.089167962 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.108662298 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.090465579 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.089179318 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.090408317 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.088783578 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089267848 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.088542173 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.088226349 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.09190092 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.089066886 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.089354848 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088333602 seconds)
  done (took 7.349429069 seconds)
  (17/24) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090793363 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.089467132 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.089002028 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.089049246 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.088522567 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.088510264 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.088179224 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.090848664 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.088461696 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.088221689 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088856991 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088521863 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089230957 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089270741 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109372187 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08932674 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090542253 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.089567929 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.09176538 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.090529887 seconds)
  done (took 2.839754993 seconds)
  (18/24) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.091249276 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.089808077 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.089806098 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.08974382 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.089489951 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.089515474 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.089332185 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089067638 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089270451 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091194715 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.089482216 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.090315177 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089597016 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.090181594 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.109874084 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.090964944 seconds)
  done (took 2.491939055 seconds)
  (19/24) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.094452199 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.120582408 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.170391738 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.090222056 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.091927466 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.092406788 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.089431894 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.089018442 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.090419022 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.096618493 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.088699745 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.11000616 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.101549968 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.090818734 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.08925731 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.091573849 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.089075412 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.089492938 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.089937095 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.170677973 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.089832819 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.088771024 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.089208826 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.113658607 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.090518892 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.089565061 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.091998145 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.089819533 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.092192943 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.089707048 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.089977165 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.089527832 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.088968235 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.089907312 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.089931755 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.089460347 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.089048726 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.091246423 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.112028667 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.090025987 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.089049186 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.091194983 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.089207607 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.089744824 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.089276887 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.089150542 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.089627058 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.088897831 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.091599321 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.090035422 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.089681123 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.089235323 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.111607106 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.090436951 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089497937 seconds)
  done (took 6.284137341 seconds)
  (20/24) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092704155 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.091513269 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.090808563 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.089588759 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.092771207 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.090221986 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.089820829 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.094460697 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091767617 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.089901162 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091067241 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.093644994 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090152751 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.090268081 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.111390769 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.092848635 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.090313071 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.090987859 seconds)
  done (took 2.704522419 seconds)
  (21/24) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.093122319 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.09104092 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.090149198 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.090979698 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.090396295 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.089377797 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08982046 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.090073301 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092023255 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.089270136 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089801884 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.089610517 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089194388 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.089402641 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.110267204 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0897446 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.089660876 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089663002 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.090191913 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093131734 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.089139678 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089330825 seconds)
  done (took 3.047372074 seconds)
  (22/24) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.103282668 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.158785137 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.101195027 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.165017273 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.09187707 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.093023822 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.098994463 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.091812435 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.129791152 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.09273723 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.092807234 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.09267174 seconds)
  done (took 2.355763468 seconds)
  (23/24) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093765553 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091130362 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.090073835 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09031917 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090130229 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090592089 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090986464 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092460427 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090630206 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090101361 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09242077 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090316096 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090329356 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090517951 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110978364 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090630708 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090660779 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09132393 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093409112 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090903339 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090861493 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090578812 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09218443 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091049211 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090121146 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089891638 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089946914 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090479524 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089791414 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113979357 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090692811 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090995028 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091325918 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090376889 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090181772 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091222434 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090424338 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090062395 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090541574 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090126014 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.092965597 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089953227 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090048536 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111283678 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091534471 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091805857 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091467479 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090653257 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091015005 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090658722 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091310126 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093083391 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091641852 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09093931 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090196231 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090405642 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090503015 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090182958 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111583449 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091745751 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091152973 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090004019 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091378773 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093474442 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091834708 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090918747 seconds)
  done (took 7.137005384 seconds)
  (24/24) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094956055 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.090746054 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090950123 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091275485 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090379548 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089847755 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091158376 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090785298 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093582737 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090531284 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089936759 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090270929 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09102337 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089869471 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111191423 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090593315 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091793958 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091812996 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090700418 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092451143 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090981325 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090246111 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090747355 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09131548 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090007145 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089832021 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090728323 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090137547 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090737274 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112073172 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093976788 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090600195 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091269349 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.091548775 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091249303 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091142946 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090254703 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091208512 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09006451 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090129942 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090303272 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092008646 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090938404 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111500376 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091614792 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091556523 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091094777 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091117012 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092006961 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092233458 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090370196 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091614915 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092700666 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09222857 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090329421 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09130035 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090489426 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091313512 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112233904 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091474271 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090885607 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090789993 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090918709 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09340394 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090835109 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091077411 seconds)
  done (took 7.153728165 seconds)
done (took 143.610166745 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.165442767 seconds)
    (2/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.186080802 seconds)
    (3/16) benchmarking ("ctranspose!", (20000, 20000))...
    done (took 0.243179545 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.152886633 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.140304559 seconds)
    (6/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.121802537 seconds)
    (7/16) benchmarking ("transpose", (600, 600))...
    done (took 0.091802479 seconds)
    (8/16) benchmarking ("ctranspose!", (600, 600))...
    done (took 0.09193414 seconds)
    (9/16) benchmarking ("ctranspose", (600, 400))...
    done (took 0.094511428 seconds)
    (10/16) benchmarking ("ctranspose", (600, 600))...
    done (took 0.110845948 seconds)
    (11/16) benchmarking ("transpose", (600, 400))...
    done (took 0.091851391 seconds)
    (12/16) benchmarking ("ctranspose!", (600, 400))...
    done (took 0.092414089 seconds)
    (13/16) benchmarking ("ctranspose", (20000, 10000))...
    done (took 0.143564306 seconds)
    (14/16) benchmarking ("ctranspose", (20000, 20000))...
    done (took 0.18960964 seconds)
    (15/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.092702174 seconds)
    (16/16) benchmarking ("ctranspose!", (20000, 10000))...
    done (took 0.125672778 seconds)
  done (took 3.179744835 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.183186965 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.264596107 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.106018616 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.094386696 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.09593688 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.091432745 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.0914583 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.160725495 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.094536484 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.092703388 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.09346405 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.090969762 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.092329281 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.090994616 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.094017402 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.091866515 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.092366634 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.091247336 seconds)
  done (took 3.073581671 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.114402564 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.133629441 seconds)
  done (took 1.314206636 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.118811938 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.126565917 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.265180369 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.12068803 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.108001331 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.099052455 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.120438363 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.12268994 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.167632036 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.092716489 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.092332918 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.093430951 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.110312344 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.091483475 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.099856662 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.093520207 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.113027899 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.091381237 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.091537492 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.091383486 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.134409274 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.093269494 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.091302684 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.090977542 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.158569403 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.091840638 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.093427466 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.094987614 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.092664653 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.091541695 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.091515259 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.093709441 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.092014077 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.113963861 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.099991872 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.093909356 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.093431883 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.092081213 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.093970112 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.091558952 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.092158625 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.091758992 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.095839862 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.093999418 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.092562609 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.093450212 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.114322717 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.093338446 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.093452397 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.097136811 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.091855627 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.091985583 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.091977386 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.093604957 seconds)
  done (took 6.683420241 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.503396025 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.127508449 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.093497534 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.55181004 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094536521 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094238911 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.47955271 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115965644 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.199720553 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.5176092 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.107970693 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.091930284 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.105209671 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.20001333 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.150555072 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.22501316 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.414511964 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.098444424 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.116768638 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.105436484 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.092157931 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094688029 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.095200267 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.691488943 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.091926104 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.093918193 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.09181568 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.092076818 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.125884833 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.094577589 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.092561174 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.107967485 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.210609708 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.106379565 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.093207523 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.093305341 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.092263085 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.101332382 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.177065412 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.104474964 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.169947879 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092896442 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.114674219 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.0929025 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.095449491 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.093135771 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.093603739 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.107670882 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.104787917 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.091786274 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.095092706 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.092509901 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.091733517 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.094164703 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.094027582 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.226556754 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.248671249 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.09375514 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.093378088 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.094434314 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.176385433 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.100290579 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.105762596 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.108106449 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.101887917 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.093317789 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 1.048382146 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.104024932 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.093607361 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.092696828 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.092671925 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.112867455 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.09474211 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.153959102 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.670985205 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.092819263 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.091961359 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093126399 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.16357834 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.093520448 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.092690486 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.100965874 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.091469708 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.094788213 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.092310676 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.113792015 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.105515365 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.189116263 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.092078338 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.092251544 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.092548239 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.102137189 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.091945956 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.188879808 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.097212948 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.093557845 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.182292259 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.092871668 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.095458168 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.126218805 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.092465997 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.105751138 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.093675184 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.097063777 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.092015516 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.096993417 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.102859196 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.099011771 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092258627 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.092253948 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.104191555 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.097657249 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.092558565 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.127692205 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.720519654 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.103428017 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.095046577 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.099259926 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.093123668 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.104304825 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092125467 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.17793471 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094240873 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.101681627 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.092646362 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.092324148 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.093372747 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.115247161 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.09948485 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.093882773 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.093481882 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.096657229 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.198645946 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.10187035 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.09237962 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.173602505 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.174237269 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.09252791 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.10776623 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.094650899 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.106986204 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.117465484 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.093007784 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.092210155 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 1.047192665 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.097287433 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.0938439 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.09308951 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.174155244 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.093345082 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.101924327 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.093420716 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092448942 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 1.04983175 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.097591916 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.094690172 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.120891578 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.092781898 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.093380224 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.092793145 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.093535515 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.096767497 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.106098667 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.092552792 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.092759153 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.093412269 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.101859243 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.09231522 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.093881812 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.093421338 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.116487953 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.094361573 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.096034947 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.099871069 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.106820969 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.094641809 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.095397605 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.868587371 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.093907879 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.09455865 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.107112126 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094335303 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.195317297 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095895248 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.126743198 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.102257362 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.094798687 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.226202642 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.105156891 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.176437318 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.097597696 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.10719709 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.093475224 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.092596318 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.09663779 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.093700646 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.092366771 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.094800352 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.114452195 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.093772491 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.154956978 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.094449962 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.200945446 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.092591232 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.106808919 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.095620844 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092841259 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.195058 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.093723809 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.096656231 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.095669383 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.09275714 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.094248518 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.829838397 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.094597726 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.096709957 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.094951446 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.094766436 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.102856042 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.092975096 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.09293466 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.092885373 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.096039332 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.18014507 seconds)
  done (took 41.622676465 seconds)
done (took 56.932588712 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.162595408 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.137844499 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.185008745 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.115794831 seconds)
  done (took 1.768244239 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.183771466 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.1111521 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.17329394 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.092674138 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.173947907 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.114978144 seconds)
  done (took 1.9461183 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.128344757 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.112271992 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.109721215 seconds)
  done (took 1.439252842 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.154168367 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.146822802 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.417900242 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.34039628 seconds)
  done (took 2.251031539 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.207681709 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.09492694 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.095578439 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.173162275 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.178210713 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.132602465 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.097040438 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.104270765 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.100116502 seconds)
  done (took 2.325576555 seconds)
done (took 10.82378023 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.271672371 seconds)
    (2/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.497093933 seconds)
    (3/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.137481844 seconds)
    (4/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.273997944 seconds)
    (5/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.146505432 seconds)
    (6/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.195372871 seconds)
    (7/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.26813399 seconds)
    (8/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.166508171 seconds)
    (9/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.194535276 seconds)
    (10/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.198971195 seconds)
    (11/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.199981959 seconds)
    (12/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.096828604 seconds)
    (13/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.132967721 seconds)
    (14/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.226590608 seconds)
    (15/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.096925035 seconds)
    (16/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.145360233 seconds)
    (17/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.095939789 seconds)
    (18/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.174723744 seconds)
    (19/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.218288619 seconds)
    (20/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.175340671 seconds)
    (21/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.20577179 seconds)
    (22/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.119714918 seconds)
    (23/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.141985821 seconds)
    (24/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.098810847 seconds)
    (25/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.161371493 seconds)
    (26/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.095609377 seconds)
    (27/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.112834813 seconds)
    (28/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.096040278 seconds)
    (29/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.093353343 seconds)
    (30/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.191026879 seconds)
    (31/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.17522224 seconds)
    (32/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.139383997 seconds)
    (33/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.179480426 seconds)
    (34/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.23334708 seconds)
    (35/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.104220429 seconds)
    (36/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.200525174 seconds)
    (37/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.115351295 seconds)
    (38/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.111369484 seconds)
    (39/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.095934276 seconds)
    (40/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.151781346 seconds)
    (41/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.100283394 seconds)
    (42/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.093035058 seconds)
    (43/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.155059736 seconds)
    (44/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.217863161 seconds)
    (45/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.188657659 seconds)
    (46/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.173958289 seconds)
    (47/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.100952707 seconds)
    (48/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.175386341 seconds)
    (49/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.185442565 seconds)
    (50/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.117819215 seconds)
    (51/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.113195319 seconds)
    (52/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.098371654 seconds)
    (53/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.100063218 seconds)
    (54/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.161692179 seconds)
    (55/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.095750402 seconds)
    (56/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.132842312 seconds)
    (57/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.150209431 seconds)
    (58/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.117935585 seconds)
    (59/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.095530199 seconds)
    (60/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.232918282 seconds)
    (61/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.149969308 seconds)
    (62/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.09388903 seconds)
    (63/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.132488837 seconds)
    (64/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.093236066 seconds)
    (65/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.194797619 seconds)
    (66/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.092887663 seconds)
    (67/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.119555414 seconds)
    (68/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.160758518 seconds)
    (69/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.106747607 seconds)
    (70/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.138692914 seconds)
    (71/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.16856375 seconds)
    (72/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.182479927 seconds)
    (73/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.103001065 seconds)
    (74/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.092038496 seconds)
    (75/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.094150654 seconds)
    (76/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.182613154 seconds)
    (77/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.146062783 seconds)
    (78/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.199086135 seconds)
    (79/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.13543845 seconds)
    (80/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.112031633 seconds)
    (81/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.202710466 seconds)
    (82/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.096843208 seconds)
    (83/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.095715869 seconds)
    (84/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.09407655 seconds)
    (85/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.174702596 seconds)
    (86/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.112408966 seconds)
    (87/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.102465021 seconds)
    (88/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.156807375 seconds)
    (89/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.094280272 seconds)
    (90/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.094031546 seconds)
    (91/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.099867614 seconds)
    (92/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.105613362 seconds)
    (93/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.108233822 seconds)
    (94/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.093550904 seconds)
    (95/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.095196223 seconds)
    (96/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.136103824 seconds)
    (97/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.097499933 seconds)
    (98/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.1531162 seconds)
    (99/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.149262581 seconds)
    (100/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.093475103 seconds)
    (101/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.095115445 seconds)
    (102/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.097266078 seconds)
    (103/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.098802115 seconds)
    (104/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.138589998 seconds)
    (105/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.144493771 seconds)
    (106/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.177636342 seconds)
    (107/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.112448428 seconds)
    (108/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.095228745 seconds)
    (109/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.100443728 seconds)
    (110/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.11496331 seconds)
    (111/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.106520558 seconds)
    (112/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.10725172 seconds)
    (113/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.107960479 seconds)
    (114/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.096383684 seconds)
    (115/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.101001281 seconds)
    (116/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.09399119 seconds)
    (117/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.137042053 seconds)
    (118/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.094460487 seconds)
    (119/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.095864008 seconds)
    (120/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.217822201 seconds)
    (121/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.176096763 seconds)
    (122/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.093527905 seconds)
    (123/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.095358713 seconds)
    (124/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.095951033 seconds)
    (125/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.092208488 seconds)
    (126/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.116778161 seconds)
    (127/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.093490398 seconds)
    (128/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.112233401 seconds)
    (129/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.112462225 seconds)
    (130/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.095904437 seconds)
    (131/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.094130465 seconds)
    (132/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.155975611 seconds)
    (133/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.09349008 seconds)
    (134/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.093259883 seconds)
    (135/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.095827066 seconds)
    (136/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.112756334 seconds)
    (137/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.094315558 seconds)
    (138/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.176967303 seconds)
    (139/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.094124214 seconds)
    (140/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.096715052 seconds)
    (141/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.103466152 seconds)
    (142/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.101993166 seconds)
    (143/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.096754911 seconds)
    (144/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.093050797 seconds)
    (145/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.095270494 seconds)
    (146/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.093958542 seconds)
    (147/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.099590998 seconds)
    (148/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.095849285 seconds)
    (149/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.095049137 seconds)
    (150/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.09271984 seconds)
    (151/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.117692235 seconds)
    (152/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.106855707 seconds)
    (153/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.094587687 seconds)
    (154/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.164618961 seconds)
    (155/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.09750232 seconds)
    (156/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.096691618 seconds)
    (157/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.095229735 seconds)
    (158/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.095858438 seconds)
    (159/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.094949543 seconds)
    (160/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.138724842 seconds)
    (161/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.09371326 seconds)
    (162/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.095640442 seconds)
    (163/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.11804496 seconds)
    (164/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.09507153 seconds)
    (165/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.108250018 seconds)
    (166/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.093435781 seconds)
    (167/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.106703416 seconds)
    (168/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.0961094 seconds)
    (169/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.113305762 seconds)
    (170/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.094242214 seconds)
    (171/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.095633387 seconds)
    (172/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.094983336 seconds)
    (173/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.092686656 seconds)
    (174/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.097030652 seconds)
    (175/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.118381079 seconds)
    (176/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.122722018 seconds)
    (177/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.096827438 seconds)
    (178/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.105629713 seconds)
    (179/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.097020012 seconds)
    (180/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.095068791 seconds)
    (181/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.094493045 seconds)
    (182/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.102982425 seconds)
    (183/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.097365216 seconds)
    (184/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.094975389 seconds)
    (185/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.093475028 seconds)
    (186/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.094176042 seconds)
    (187/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.108060585 seconds)
    (188/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.095901923 seconds)
    (189/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.096115296 seconds)
    (190/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.12011037 seconds)
    (191/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.093584908 seconds)
    (192/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.114491151 seconds)
  done (took 25.692955072 seconds)
done (took 26.802305944 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.176451785 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.121698546 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.103420927 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.103602218 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.169992141 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.121232797 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.111166712 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.127635416 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.103896661 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.094036301 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.094998031 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.106674725 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.103233414 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.174706299 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.105274301 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.094743967 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.093800506 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.132245367 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.109365685 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.109084287 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.170247565 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.098401816 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.104032162 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.094568322 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.168045068 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.098664178 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.1319771 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.112828272 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.110790397 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.094174764 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.110933208 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.095241863 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.109125807 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.107712175 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09646913 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.093471723 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.097021787 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.099165696 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.094311934 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.122696695 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.107333009 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.094763289 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.103020941 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.095317716 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.094431657 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.094193193 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.097568922 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.106359545 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.095079224 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.112033007 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102229598 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.107270345 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.119155973 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.095932226 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.095638675 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.094924481 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.103650149 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096284908 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.107377438 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097117736 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.094671165 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.099169885 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.094279543 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.096600571 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.093739191 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.094072019 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.116956531 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.094546991 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.094246829 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.100313806 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096738591 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.094515896 seconds)
done (took 8.897762309 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/18) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.100394098 seconds)
    (2/18) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.112872545 seconds)
    (3/18) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.095185054 seconds)
    (4/18) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.170841079 seconds)
    (5/18) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.154607894 seconds)
    (6/18) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.094829689 seconds)
    (7/18) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.094206777 seconds)
    (8/18) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.094769745 seconds)
    (9/18) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.125916183 seconds)
    (10/18) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.094851834 seconds)
    (11/18) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.094667686 seconds)
    (12/18) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.098911904 seconds)
    (13/18) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.096308871 seconds)
    (14/18) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.094926433 seconds)
    (15/18) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.093955966 seconds)
    (16/18) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.09930092 seconds)
    (17/18) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.093989405 seconds)
    (18/18) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.095332113 seconds)
  done (took 3.037748356 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.111085666 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.116015097 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.106180524 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.105990938 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.097125313 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.095320243 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.094328037 seconds)
  done (took 1.877851903 seconds)
  (3/5) benchmarking "types"...
    (1/91) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.09697044 seconds)
    (2/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.182980395 seconds)
    (3/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.16674451 seconds)
    (4/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.165613632 seconds)
    (5/91) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.197151037 seconds)
    (6/91) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.17048985 seconds)
    (7/91) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.094639295 seconds)
    (8/91) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.104927737 seconds)
    (9/91) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.09680751 seconds)
    (10/91) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.178572457 seconds)
    (11/91) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.209563013 seconds)
    (12/91) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.094789135 seconds)
    (13/91) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.099149924 seconds)
    (14/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.168210537 seconds)
    (15/91) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.094185145 seconds)
    (16/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.160778733 seconds)
    (17/91) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.094803152 seconds)
    (18/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.120186632 seconds)
    (19/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.166139583 seconds)
    (20/91) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.098094699 seconds)
    (21/91) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.107762251 seconds)
    (22/91) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.104379247 seconds)
    (23/91) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.094779324 seconds)
    (24/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.176474661 seconds)
    (25/91) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.094761212 seconds)
    (26/91) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.096485225 seconds)
    (27/91) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.121175039 seconds)
    (28/91) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.097271839 seconds)
    (29/91) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.121623371 seconds)
    (30/91) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.177927532 seconds)
    (31/91) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.10071744 seconds)
    (32/91) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.095820285 seconds)
    (33/91) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.1714859 seconds)
    (34/91) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.095747687 seconds)
    (35/91) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.199101626 seconds)
    (36/91) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.096556478 seconds)
    (37/91) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.17454474 seconds)
    (38/91) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.098438924 seconds)
    (39/91) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.098979847 seconds)
    (40/91) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.094629059 seconds)
    (41/91) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.096927804 seconds)
    (42/91) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.185274362 seconds)
    (43/91) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.095071191 seconds)
    (44/91) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.098841172 seconds)
    (45/91) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.095924812 seconds)
    (46/91) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.18278624 seconds)
    (47/91) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.095335279 seconds)
    (48/91) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.175597571 seconds)
    (49/91) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.096108999 seconds)
    (50/91) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.120694449 seconds)
    (51/91) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.099416887 seconds)
    (52/91) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.096871815 seconds)
    (53/91) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.098854637 seconds)
    (54/91) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.094400787 seconds)
    (55/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.183430328 seconds)
    (56/91) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.097240645 seconds)
    (57/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.162222285 seconds)
    (58/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.189251696 seconds)
    (59/91) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.176529282 seconds)
    (60/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.163611325 seconds)
    (61/91) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.096534769 seconds)
    (62/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.202539159 seconds)
    (63/91) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.169632796 seconds)
    (64/91) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.099116002 seconds)
    (65/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09520326 seconds)
    (66/91) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.094075403 seconds)
    (67/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.163421076 seconds)
    (68/91) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.092783791 seconds)
    (69/91) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.098815325 seconds)
    (70/91) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.184933919 seconds)
    (71/91) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.096087126 seconds)
    (72/91) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.167042484 seconds)
    (73/91) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.166726492 seconds)
    (74/91) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.09906601 seconds)
    (75/91) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.097497556 seconds)
    (76/91) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.097106729 seconds)
    (77/91) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.121381197 seconds)
    (78/91) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.168075456 seconds)
    (79/91) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095320442 seconds)
    (80/91) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.096829045 seconds)
    (81/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.163472993 seconds)
    (82/91) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.093825336 seconds)
    (83/91) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.095594452 seconds)
    (84/91) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.095861058 seconds)
    (85/91) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.120853149 seconds)
    (86/91) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.099463694 seconds)
    (87/91) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.097508333 seconds)
    (88/91) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.094220472 seconds)
    (89/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.164827864 seconds)
    (90/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.163759097 seconds)
    (91/91) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.095273228 seconds)
  done (took 12.725085624 seconds)
  (4/5) benchmarking "randstring"...
    (1/2) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.098098648 seconds)
    (2/2) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.095784025 seconds)
  done (took 1.372812665 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.105520441 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.095538222 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.104199136 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.094939477 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103075467 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.181710616 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.177623389 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.094981389 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.124926424 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.102111086 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.179561728 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.182377687 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.178984589 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.120525756 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.180179306 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.0972312 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.179334154 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.094514633 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.101104107 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.094748183 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.1001243 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.095536309 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.121702935 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.160663839 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.094620588 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.094860309 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.098196669 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.100598615 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.101375908 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.09561186 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096451132 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.094797724 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.095451394 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.094807458 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.20739878 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.095349337 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.094549939 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.098139414 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.094179352 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.095099573 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.181571069 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.095194192 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.120430898 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.096059758 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.0957303 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.095962915 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.095699321 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.096338755 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.182554241 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.095162185 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.095457157 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.094566233 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.095101004 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.095161184 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.12127824 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096283504 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.095939809 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.182151769 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.095525011 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.097084738 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.094352338 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.094663144 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.095436524 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.095678109 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.094980268 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120804877 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.095918441 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.096313362 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096452043 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.094764773 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.09855918 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.094841316 seconds)
  done (took 9.296953244 seconds)
done (took 29.458649526 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.130086556 seconds)
  done (took 2.301378741 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.633421384 seconds)
  done (took 1.806762552 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 7.70225064 seconds)
  done (took 8.907687244 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.365690635 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.281349903 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.866648635 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.143183798 seconds)
  done (took 2.829532207 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.11221272 seconds)
  done (took 2.307734384 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.236456179 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.192710487 seconds)
  done (took 1.605928255 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.733566246 seconds)
  done (took 1.929848025 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.318940523 seconds)
  done (took 2.49815061 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.195527987 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.161030083 seconds)
  done (took 1.54489594 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.527486801 seconds)
  done (took 1.715043429 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.6904156 seconds)
  done (took 8.879206584 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.230235546 seconds)
  done (took 1.40980646 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.260757278 seconds)
  done (took 1.448556048 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 2.062749786 seconds)
  done (took 3.251594991 seconds)
done (took 43.626576203 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.103448902 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.108194942 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.106537091 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.103518886 seconds)
  done (took 1.595016866 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.104411011 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.10084632 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.101509401 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.09994029 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.1015048 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.100785148 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.099196245 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.098991517 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.102474547 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.100143534 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.099955803 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.098796686 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.099306431 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.122301089 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.095768442 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.100566915 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.101448776 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.100249721 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.099057082 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.101882786 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.095877585 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.100105201 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.099790267 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.101935895 seconds)
  done (took 3.6166177 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.105281392 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.101541415 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.101710453 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.100507561 seconds)
  done (took 1.602756306 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.106454798 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.107306809 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.107785537 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.104109277 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.107212032 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.105518909 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.098514681 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.095005732 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.098356275 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.103345264 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.10730663 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.100991043 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.131122824 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.105944734 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.105593257 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.096211732 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.104579041 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.106155022 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.103456672 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.103940311 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.101894072 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.103955569 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.095941415 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.099515745 seconds)
  done (took 3.693420305 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.169426448 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.10775298 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.119054933 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 0.122178355 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.096054815 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.122172341 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 0.118425485 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 0.094949463 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.102531116 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 0.09535149 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 0.09610191 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 0.121955975 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.123590704 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.105320985 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.095854554 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.096156616 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.09632596 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.102744418 seconds)
    (19/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.105009436 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.096267822 seconds)
    (21/22) benchmarking ("var", "Int64")...
    done (took 0.15030281 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.107811999 seconds)
  done (took 3.644726633 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.110247026 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.100170238 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.096263233 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.09693095 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.106573393 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.102470599 seconds)
  done (took 1.813888523 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.104064941 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.098330046 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.099081194 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.096449124 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.101058278 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.09937093 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.096508299 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.098091633 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.097632133 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.096450792 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.095950804 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.096414867 seconds)
  done (took 2.378309902 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.211585998 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.116117144 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.121361753 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.096247273 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.101356553 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.096403416 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.109012235 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.098521362 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.097817896 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.09537451 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.095856622 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.097466243 seconds)
  done (took 2.537836742 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148479023 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101608976 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160152281 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.458516368 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112704117 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155163061 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.387984051 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145146402 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.129289449 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110251413 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130856032 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112870255 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148381942 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1396009 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112194146 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.375898872 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151041415 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144727233 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114658984 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143773482 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125881368 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16406068 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136278073 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116009862 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139087228 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113742978 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.099540465 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103712676 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.120049907 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122339962 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124482164 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141472436 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107094326 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135483316 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.11331548 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11931605 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209480296 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105154357 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.231764424 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.131923376 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144928274 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109194373 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153598406 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118732341 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10588823 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139949947 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109269796 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.126697495 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.107710111 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112248789 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154037344 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124838172 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.119047369 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110406187 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.427207834 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10520506 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.114232623 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145179573 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138413342 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136047468 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130891331 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.100907453 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169396717 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13286256 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126672898 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.110339327 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.114942698 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09561206 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159280536 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165250337 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125708144 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156341797 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.142232212 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109968574 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124306747 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120985683 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146096045 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127411705 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124018597 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.099927116 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143318347 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10557218 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106635008 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.167319665 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101252051 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166793643 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106599496 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.30794708 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136010982 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118802054 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116463164 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121070952 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156113466 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119589172 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.139963902 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113979705 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.115491566 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146837181 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101614071 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116372905 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139442154 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.100270171 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11972223 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.129116247 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124331586 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.133663167 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118038567 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129946718 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.111335536 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133409181 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113241352 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.150870755 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123975594 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132799793 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105076678 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10627259 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13373203 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129126638 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.107577026 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149523681 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13252554 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.141214965 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106028484 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.106393932 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180138366 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110725228 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158716679 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107627553 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106432762 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.127281556 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13030129 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116106027 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.12538958 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104704652 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.120436838 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154611211 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.103105757 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111798034 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134013612 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127388407 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104635662 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136459276 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105675424 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.115007655 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.122394685 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.108513702 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143811395 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129103127 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127696714 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109833351 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133920397 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.11402386 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105680746 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.129242297 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144237699 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.099324732 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.125706383 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132070801 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103457482 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172947033 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.119647896 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175535 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127327047 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105491451 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17367176 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104289629 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.125139272 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.105474781 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121133175 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117328553 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.128303805 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147704599 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.141197867 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.121774098 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115378722 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11856574 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.154279688 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116229153 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.107439956 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128438481 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12376615 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.101042333 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.097589062 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.10201588 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112189717 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102249903 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133765031 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122191844 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119919395 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146317013 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127806453 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107799003 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15885798 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.100700994 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118399325 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.125345255 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110474528 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.125432221 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133496589 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132972461 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105730728 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136096075 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.102831707 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103249754 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.103426322 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12092283 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109361406 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106325234 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105919359 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136077058 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122584172 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138745338 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150246944 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144607374 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140654751 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.102050482 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.143962975 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115646086 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129964742 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.17531558 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106099758 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.118041051 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132105784 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109633822 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141197207 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125483784 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152902342 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133437635 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.12933524 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103424524 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109369453 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15636368 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105781611 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.114255332 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107481971 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1056337 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108973247 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.108828571 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125131422 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124709612 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113994294 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114256379 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.111908962 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138463046 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105638725 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106434869 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132151101 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139063222 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.121567422 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122885712 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116595006 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111802217 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136010404 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118286609 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103667019 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.435962658 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127810526 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124568356 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105980556 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107904391 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160661584 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113417408 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113292305 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174447147 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108352757 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129516809 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156946543 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.106658248 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106636023 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116255627 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115270124 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.128306937 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.097367096 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.120555054 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.140009615 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12500459 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139010932 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131517543 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125263875 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.123712373 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.121459274 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109606776 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164895688 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126443841 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.121754159 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.128998318 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.112267616 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174699432 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129849902 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103888872 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.100384734 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175605735 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106428826 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129058566 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.175322932 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152618809 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131197873 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157531509 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138496369 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.102931741 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126669452 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138598606 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149937022 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106841055 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.106595579 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129951627 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.166234241 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129110101 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155187148 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.408598376 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142179805 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.118023932 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.120043935 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.433610173 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10485999 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105091752 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114015353 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.118900016 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.102065933 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.175133838 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130582471 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108765131 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11439166 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105468566 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172023208 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140195651 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.107340552 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121835007 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.107553843 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117376535 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114449827 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119440211 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115891506 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.142600115 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114642655 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132770698 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.122156805 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.102791011 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126402235 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125904901 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129371428 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113945324 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110212362 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201001546 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105261806 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114024463 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104753037 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09800784 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14832475 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.148794656 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131248646 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119563145 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125057903 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106864877 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098045457 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109009581 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125497955 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11077673 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.104468999 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124522419 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.13258289 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127889186 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129411118 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107060868 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128398502 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10743634 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098506469 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105777882 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108284035 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10624384 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.169807138 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120310178 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.09832881 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119401321 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.108229987 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118381786 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111490271 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132739043 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 15.519662417 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.103743743 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134277521 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146359817 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141344457 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114574969 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127388989 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126647768 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141352113 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.106068825 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107805831 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.206279548 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112169033 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.121577426 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104845602 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108365837 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140013465 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.098162209 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115450771 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151628041 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112955092 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.106516589 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.126220965 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11312124 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.131969473 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114399882 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134496856 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147121223 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126464382 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17655736 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106926784 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151803145 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117099615 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103756071 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.117658219 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119876576 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141511733 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110068212 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.105480046 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.107992713 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128823951 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.104601401 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123136141 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152003658 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127267674 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124925237 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.098015159 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125682867 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106543143 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126202595 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097942509 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.10931285 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15534183 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10731835 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.102499871 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12894749 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109662364 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.125333432 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098987447 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.167462831 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136094257 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.103692507 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105164717 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.390492085 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148994672 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201919932 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.130619244 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107842032 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138454387 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116016429 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.125838222 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131160505 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.098767148 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105895649 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.098723598 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.237818565 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.125878634 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130814938 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148666476 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112743567 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178515541 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.111324365 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.275773693 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114917524 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154554182 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.123577308 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.102458008 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110555568 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105127807 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109433061 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172353454 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13318771 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.129158805 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.108668355 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099213754 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.105415064 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106605068 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115208725 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110679479 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156332211 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111126835 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.119357594 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108042301 seconds)
  done (took 79.512903503 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.150269288 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.134976201 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.149557154 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.219009078 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.166331664 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.281785363 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.237760463 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.248929972 seconds)
  done (took 2.890194371 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.105152057 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.122511385 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.120687078 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.122716682 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.102435939 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.30563044 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.142836337 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.100655683 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.143343767 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.126805002 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.104501096 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.456940559 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.100717896 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.101277707 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.125651658 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.101099106 seconds)
  done (took 3.66979 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.462773985 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.344381829 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 3.536839873 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.202096008 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.415028814 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.122267494 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.528029147 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.102507711 seconds)
  done (took 10.014247881 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.136175337 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.129339408 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.218082802 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.230227245 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.136197941 seconds)
  done (took 2.150861077 seconds)
done (took 120.295195941 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.105212595 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.105627174 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.10955353 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.106918441 seconds)
  done (took 1.714300022 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.157888397 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.100595725 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.103425049 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.105161743 seconds)
  done (took 1.76763548 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.424273598 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.101292822 seconds)
  done (took 1.864668326 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.134292102 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.123816683 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.124704371 seconds)
  done (took 1.692415269 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.115671299 seconds)
  done (took 1.421477404 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.108218518 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.106156988 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.175471767 seconds)
  done (took 1.696678185 seconds)
done (took 11.464387239 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.209988414 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.944148642 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.410330741 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.152625343 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.70132847 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.389068734 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.410135229 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.100473657 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.110858095 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.100139684 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.100677685 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.681170622 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.35981076 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.873812229 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.394850439 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.873360798 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.680083785 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.126996549 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.10184891 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.100860166 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.359314998 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.100191031 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.100188341 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.102938458 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.680785488 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.400711708 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.10038828 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.87278538 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.101107771 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127058681 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.387555656 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.101645147 seconds)
  done (took 20.543611714 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.132909422 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.122288643 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.108782238 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.101924594 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.101283624 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.102874125 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.103850767 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.101077632 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.116815104 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.100447837 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.100880288 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.125782298 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.113915738 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.104114849 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.11652612 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.102115643 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.100775552 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.101552537 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.101620161 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.101611972 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.104442486 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.12625216 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.101264032 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.101367504 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.10344088 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.110607819 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.101308238 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.100999798 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.101134201 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.100815423 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.102323889 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.100924249 seconds)
  done (took 4.730140424 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.144772639 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.138038732 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.106672386 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.133909282 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.129250466 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.102847142 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.155855673 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.100908199 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.14406009 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.101272784 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.101904509 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.101361505 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.117671701 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.102537165 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.120091075 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.102963019 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.101548941 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.100987453 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.100955784 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.127135234 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.105625632 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.101351967 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.101269625 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.100622187 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.103846577 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.113779116 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.101614447 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.102039224 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.101931062 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126220913 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.103545916 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.102087324 seconds)
  done (took 4.914242775 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.101184961 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.109874278 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.133544693 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.135776492 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.102244821 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.100884066 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.101304829 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.100578535 seconds)
  done (took 2.201580135 seconds)
done (took 33.700189336 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.113520717 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.109052861 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.111416531 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.110916038 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.167603189 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.100031954 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.11019893 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.101424338 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.107517498 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.113863609 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.128375657 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.101778627 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.11268136 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.103534898 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.170252208 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.109905884 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.169847071 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.198399164 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.104411744 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.110208424 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.100284454 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.170281347 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.103420992 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.102122658 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.194008026 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.105266796 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.104114176 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.103473878 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.102907837 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.104912384 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.168571851 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.104154751 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.101911083 seconds)
  done (took 5.314832843 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.172292803 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.099746191 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.101266204 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.099762677 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.099173738 seconds)
    (6/30) benchmarking ("IntSet", "Int", "start")...
    done (took 0.099057969 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.174532444 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.10197627 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.127105814 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.100718568 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.099923391 seconds)
    (12/30) benchmarking ("IntSet", "Int", "next")...
    done (took 0.188710443 seconds)
    (13/30) benchmarking ("IntSet", "Int", "done")...
    done (took 0.09995892 seconds)
    (14/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.100683434 seconds)
    (15/30) benchmarking ("Set", "Int", "next")...
    done (took 0.102504323 seconds)
    (16/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.0962079 seconds)
    (17/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.099855276 seconds)
    (18/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.102025962 seconds)
    (19/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.203675963 seconds)
    (20/30) benchmarking ("Set", "String", "start")...
    done (took 0.103148014 seconds)
    (21/30) benchmarking ("Vector", "String", "next")...
    done (took 0.101787697 seconds)
    (22/30) benchmarking ("Set", "Any", "next")...
    done (took 0.102121428 seconds)
    (23/30) benchmarking ("Vector", "String", "start")...
    done (took 0.096388917 seconds)
    (24/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.099814083 seconds)
    (25/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.194943748 seconds)
    (26/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.096227964 seconds)
    (27/30) benchmarking ("Set", "String", "done")...
    done (took 0.100209158 seconds)
    (28/30) benchmarking ("Set", "Any", "done")...
    done (took 0.128182122 seconds)
    (29/30) benchmarking ("Set", "Int", "start")...
    done (took 0.100992307 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.099911561 seconds)
  done (took 4.821549003 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.109240798 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.120029105 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.119418243 seconds)
    (4/117) benchmarking ("IntSet", "Int", "intersect", "IntSet")...
    done (took 0.124410266 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.102413217 seconds)
    (6/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.101531777 seconds)
    (7/117) benchmarking ("Vector", "Int", "setdiff", "IntSet")...
    done (took 0.114878662 seconds)
    (8/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.11153532 seconds)
    (9/117) benchmarking ("IntSet", "Int", "union!", "Vector")...
    done (took 0.105732127 seconds)
    (10/117) benchmarking ("IntSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.138795173 seconds)
    (11/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.100812995 seconds)
    (12/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.107150498 seconds)
    (13/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.130345768 seconds)
    (14/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.102039705 seconds)
    (15/117) benchmarking ("Vector", "Int", "intersect", "IntSet")...
    done (took 0.113748259 seconds)
    (16/117) benchmarking ("Set", "Int", "setdiff", "IntSet")...
    done (took 0.112615563 seconds)
    (17/117) benchmarking ("Set", "Int", "intersect", "IntSet", "IntSet")...
    done (took 0.115153298 seconds)
    (18/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.100660443 seconds)
    (19/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.111842459 seconds)
    (20/117) benchmarking ("Set", "Int", "symdiff", "IntSet", "IntSet")...
    done (took 0.151179138 seconds)
    (21/117) benchmarking ("IntSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.108891563 seconds)
    (22/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.108993194 seconds)
    (23/117) benchmarking ("IntSet", "Int", "setdiff!", "Vector")...
    done (took 0.109952525 seconds)
    (24/117) benchmarking ("IntSet", "Int", "symdiff!", "Set")...
    done (took 0.105696451 seconds)
    (25/117) benchmarking ("IntSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.107309848 seconds)
    (26/117) benchmarking ("IntSet", "Int", "<", "IntSet")...
    done (took 0.141478579 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.122202726 seconds)
    (28/117) benchmarking ("IntSet", "Int", "union!", "IntSet")...
    done (took 0.101712356 seconds)
    (29/117) benchmarking ("IntSet", "Int", "symdiff!", "IntSet")...
    done (took 0.101567163 seconds)
    (30/117) benchmarking ("IntSet", "Int", "union!", "Set")...
    done (took 0.109988417 seconds)
    (31/117) benchmarking ("IntSet", "Int", "⊆", "self")...
    done (took 0.101572259 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.103118685 seconds)
    (33/117) benchmarking ("Set", "Int", "union", "IntSet")...
    done (took 0.124953766 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.114959724 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.101141549 seconds)
    (36/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.105779181 seconds)
    (37/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.111425867 seconds)
    (38/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.102065388 seconds)
    (39/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.13719215 seconds)
    (40/117) benchmarking ("IntSet", "Int", "intersect", "Set")...
    done (took 0.11330057 seconds)
    (41/117) benchmarking ("IntSet", "Int", "⊆", "Set")...
    done (took 0.104268457 seconds)
    (42/117) benchmarking ("IntSet", "Int", "symdiff", "Vector")...
    done (took 0.101763811 seconds)
    (43/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.122374303 seconds)
    (44/117) benchmarking ("IntSet", "Int", "union", "Set")...
    done (took 0.102357849 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.103004326 seconds)
    (46/117) benchmarking ("IntSet", "Int", "==", "self")...
    done (took 0.100042344 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "IntSet", "IntSet")...
    done (took 0.112558291 seconds)
    (48/117) benchmarking ("Set", "Int", "setdiff!", "IntSet")...
    done (took 0.114988748 seconds)
    (49/117) benchmarking ("IntSet", "Int", "intersect", "Vector")...
    done (took 0.111699085 seconds)
    (50/117) benchmarking ("Set", "Int", "symdiff", "IntSet")...
    done (took 0.10256186 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "IntSet", "IntSet")...
    done (took 0.123611396 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.128920354 seconds)
    (53/117) benchmarking ("IntSet", "Int", "setdiff!", "Set")...
    done (took 0.102171471 seconds)
    (54/117) benchmarking ("Vector", "Int", "symdiff", "IntSet", "IntSet")...
    done (took 0.106828815 seconds)
    (55/117) benchmarking ("IntSet", "Int", "setdiff", "Set")...
    done (took 0.102903045 seconds)
    (56/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.103595066 seconds)
    (57/117) benchmarking ("IntSet", "Int", "setdiff!", "IntSet")...
    done (took 0.122502577 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.111863111 seconds)
    (59/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.104713723 seconds)
    (60/117) benchmarking ("IntSet", "Int", "symdiff", "IntSet")...
    done (took 0.101928753 seconds)
    (61/117) benchmarking ("IntSet", "Int", "union", "IntSet")...
    done (took 0.102719947 seconds)
    (62/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.102535062 seconds)
    (63/117) benchmarking ("IntSet", "Int", "union", "Vector", "Vector")...
    done (took 0.122368548 seconds)
    (64/117) benchmarking ("Set", "Int", "intersect", "IntSet")...
    done (took 0.113033939 seconds)
    (65/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.129716479 seconds)
    (66/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.116967773 seconds)
    (67/117) benchmarking ("Vector", "Int", "union", "IntSet")...
    done (took 0.103600419 seconds)
    (68/117) benchmarking ("IntSet", "Int", "⊆", "IntSet")...
    done (took 0.101818387 seconds)
    (69/117) benchmarking ("IntSet", "Int", "symdiff", "IntSet", "IntSet")...
    done (took 0.105188796 seconds)
    (70/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.101514904 seconds)
    (71/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.11602075 seconds)
    (72/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.102009498 seconds)
    (73/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.109124137 seconds)
    (74/117) benchmarking ("IntSet", "Int", "⊆", "Vector")...
    done (took 0.103972471 seconds)
    (75/117) benchmarking ("Set", "Int", "union", "IntSet", "IntSet")...
    done (took 0.122338633 seconds)
    (76/117) benchmarking ("IntSet", "Int", "==", "IntSet")...
    done (took 0.099868816 seconds)
    (77/117) benchmarking ("IntSet", "Int", "union", "Vector")...
    done (took 0.101924803 seconds)
    (78/117) benchmarking ("IntSet", "Int", "intersect", "IntSet", "IntSet")...
    done (took 0.131920963 seconds)
    (79/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.100684967 seconds)
    (80/117) benchmarking ("Set", "Int", "⊆", "IntSet")...
    done (took 0.107074005 seconds)
    (81/117) benchmarking ("IntSet", "Int", "intersect", "Set", "Set")...
    done (took 0.108830266 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.109322763 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "IntSet")...
    done (took 0.102201284 seconds)
    (84/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.101925388 seconds)
    (85/117) benchmarking ("IntSet", "Int", "setdiff", "IntSet")...
    done (took 0.102069731 seconds)
    (86/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.102268967 seconds)
    (87/117) benchmarking ("empty", "Int", "<", "IntSet")...
    done (took 0.100391044 seconds)
    (88/117) benchmarking ("Set", "Int", "union")...
    done (took 0.102672962 seconds)
    (89/117) benchmarking ("IntSet", "Int", "symdiff")...
    done (took 0.102340381 seconds)
    (90/117) benchmarking ("empty", "Int", "⊆", "IntSet")...
    done (took 0.100566892 seconds)
    (91/117) benchmarking ("IntSet", "Int", "union")...
    done (took 0.101482322 seconds)
    (92/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.100367975 seconds)
    (93/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.128189885 seconds)
    (94/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.102744137 seconds)
    (95/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.103539089 seconds)
    (96/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.100598199 seconds)
    (97/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.106119072 seconds)
    (98/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.10235574 seconds)
    (99/117) benchmarking ("IntSet", "Int", "symdiff", "Set")...
    done (took 0.101875538 seconds)
    (100/117) benchmarking ("IntSet", "Int", "symdiff!", "Vector")...
    done (took 0.103679651 seconds)
    (101/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.110833857 seconds)
    (102/117) benchmarking ("IntSet", "Int", "union", "Set", "Set")...
    done (took 0.123582944 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "IntSet")...
    done (took 0.103015785 seconds)
    (104/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.107493261 seconds)
    (105/117) benchmarking ("Vector", "Int", "⊆", "IntSet")...
    done (took 0.107156391 seconds)
    (106/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.129771807 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.123645627 seconds)
    (108/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.101008398 seconds)
    (109/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.102340372 seconds)
    (110/117) benchmarking ("IntSet", "Int", "union", "IntSet", "IntSet")...
    done (took 0.114832184 seconds)
    (111/117) benchmarking ("IntSet", "Int", "intersect")...
    done (took 0.10478793 seconds)
    (112/117) benchmarking ("IntSet", "Int", "setdiff", "Vector")...
    done (took 0.102919847 seconds)
    (113/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.109986932 seconds)
    (114/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.102649276 seconds)
    (115/117) benchmarking ("IntSet", "Int", "intersect!", "IntSet")...
    done (took 0.101928476 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.102034341 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.128992203 seconds)
  done (took 14.197851173 seconds)
  (4/6) benchmarking "optimizations"...
    (1/19) benchmarking ("Vector", "concrete", "Void")...
    done (took 0.17941197 seconds)
    (2/19) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.233548115 seconds)
    (3/19) benchmarking ("Set", "concrete", "Void")...
    done (took 0.280524368 seconds)
    (4/19) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.245153859 seconds)
    (5/19) benchmarking ("Dict", "abstract", "Void")...
    done (took 0.188556237 seconds)
    (6/19) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.162037942 seconds)
    (7/19) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.256507876 seconds)
    (8/19) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.111266742 seconds)
    (9/19) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.22965172 seconds)
    (10/19) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.108661693 seconds)
    (11/19) benchmarking ("Dict", "concrete", "Void")...
    done (took 0.153772323 seconds)
    (12/19) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.233299701 seconds)
    (13/19) benchmarking ("BitSet", "Int8")...
    done (took 0.115502825 seconds)
    (14/19) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.290351997 seconds)
    (15/19) benchmarking ("Set", "abstract", "Void")...
    done (took 0.106720813 seconds)
    (16/19) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.129025209 seconds)
    (17/19) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.1242046 seconds)
    (18/19) benchmarking ("Vector", "abstract", "Void")...
    done (took 0.101362537 seconds)
    (19/19) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.112695058 seconds)
  done (took 4.720336232 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/76) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.104954424 seconds)
    (2/76) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.121771282 seconds)
    (3/76) benchmarking ("IntSet", "Int", "in", "true")...
    done (took 0.10302759 seconds)
    (4/76) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.101370515 seconds)
    (5/76) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.102506615 seconds)
    (6/76) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.10348114 seconds)
    (7/76) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.113192672 seconds)
    (8/76) benchmarking ("Vector", "String", "push!")...
    done (took 0.108274813 seconds)
    (9/76) benchmarking ("Set", "String", "in", "false")...
    done (took 0.101878799 seconds)
    (10/76) benchmarking ("Set", "Int", "first")...
    done (took 0.103817599 seconds)
    (11/76) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.115042458 seconds)
    (12/76) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.113599989 seconds)
    (13/76) benchmarking ("IntSet", "Int", "push!", "overwrite")...
    done (took 0.106028854 seconds)
    (14/76) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.150531054 seconds)
    (15/76) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.108010436 seconds)
    (16/76) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.10162676 seconds)
    (17/76) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.101144848 seconds)
    (18/76) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.108843613 seconds)
    (19/76) benchmarking ("Dict", "String", "getindex")...
    done (took 0.105150443 seconds)
    (20/76) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.123080604 seconds)
    (21/76) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.11171095 seconds)
    (22/76) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.106286059 seconds)
    (23/76) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.102697971 seconds)
    (24/76) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.101706059 seconds)
    (25/76) benchmarking ("IntSet", "Int", "length")...
    done (took 0.100313448 seconds)
    (26/76) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.100476782 seconds)
    (27/76) benchmarking ("Vector", "Int", "last")...
    done (took 0.101080286 seconds)
    (28/76) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.130222062 seconds)
    (29/76) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.102472715 seconds)
    (30/76) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.109482988 seconds)
    (31/76) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.107064959 seconds)
    (32/76) benchmarking ("Vector", "Int", "length")...
    done (took 0.100467767 seconds)
    (33/76) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.105841518 seconds)
    (34/76) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.106265659 seconds)
    (35/76) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.104043211 seconds)
    (36/76) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.106631423 seconds)
    (37/76) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.102214011 seconds)
    (38/76) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.106724502 seconds)
    (39/76) benchmarking ("Dict", "Int", "first")...
    done (took 0.212877828 seconds)
    (40/76) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.105112182 seconds)
    (41/76) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.103441228 seconds)
    (42/76) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.100951742 seconds)
    (43/76) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.103975327 seconds)
    (44/76) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.101166042 seconds)
    (45/76) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.101208387 seconds)
    (46/76) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.110014587 seconds)
    (47/76) benchmarking ("Dict", "Int", "length")...
    done (took 0.100681469 seconds)
    (48/76) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.100845236 seconds)
    (49/76) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.109850505 seconds)
    (50/76) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.100941898 seconds)
    (51/76) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.101838027 seconds)
    (52/76) benchmarking ("Vector", "Int", "push!")...
    done (took 0.104652201 seconds)
    (53/76) benchmarking ("IntSet", "Int", "first")...
    done (took 0.132585264 seconds)
    (54/76) benchmarking ("Vector", "String", "getindex")...
    done (took 0.102483562 seconds)
    (55/76) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.104475905 seconds)
    (56/76) benchmarking ("Vector", "Int", "first")...
    done (took 0.10144023 seconds)
    (57/76) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.101142426 seconds)
    (58/76) benchmarking ("IntSet", "Int", "pop!", "unspecified")...
    done (took 0.112718812 seconds)
    (59/76) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.101734459 seconds)
    (60/76) benchmarking ("Set", "String", "in", "true")...
    done (took 0.102650079 seconds)
    (61/76) benchmarking ("IntSet", "Int", "in", "false")...
    done (took 0.103653735 seconds)
    (62/76) benchmarking ("IntSet", "Int", "pop!", "specified")...
    done (took 0.109195605 seconds)
    (63/76) benchmarking ("Vector", "Any", "push!")...
    done (took 0.102888018 seconds)
    (64/76) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.103862493 seconds)
    (65/76) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.103000428 seconds)
    (66/76) benchmarking ("IntSet", "Int", "push!", "new")...
    done (took 0.106664768 seconds)
    (67/76) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.132404166 seconds)
    (68/76) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.111868044 seconds)
    (69/76) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.101329662 seconds)
    (70/76) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.10286391 seconds)
    (71/76) benchmarking ("Set", "Int", "length")...
    done (took 0.101074681 seconds)
    (72/76) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.107295937 seconds)
    (73/76) benchmarking ("IntSet", "Int", "last")...
    done (took 0.101471719 seconds)
    (74/76) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.102072046 seconds)
    (75/76) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.104779255 seconds)
    (76/76) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.107400459 seconds)
  done (took 9.581375542 seconds)
  (6/6) benchmarking "deletion"...
    (1/19) benchmarking ("Vector", "String", "pop!")...
    done (took 0.106187324 seconds)
    (2/19) benchmarking ("Set", "Int", "filter!")...
    done (took 0.111674255 seconds)
    (3/19) benchmarking ("Set", "String", "filter!")...
    done (took 0.114520721 seconds)
    (4/19) benchmarking ("Set", "Any", "pop!")...
    done (took 0.104774432 seconds)
    (5/19) benchmarking ("Vector", "Any", "filter")...
    done (took 0.111450851 seconds)
    (6/19) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.101595692 seconds)
    (7/19) benchmarking ("Vector", "String", "filter")...
    done (took 0.11277552 seconds)
    (8/19) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.116379304 seconds)
    (9/19) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.115270285 seconds)
    (10/19) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.103775643 seconds)
    (11/19) benchmarking ("Vector", "String", "filter!")...
    done (took 0.114541298 seconds)
    (12/19) benchmarking ("Set", "Int", "pop!")...
    done (took 0.104196853 seconds)
    (13/19) benchmarking ("Set", "Any", "filter!")...
    done (took 0.143156467 seconds)
    (14/19) benchmarking ("Vector", "Int", "filter")...
    done (took 0.110586318 seconds)
    (15/19) benchmarking ("Set", "String", "filter")...
    done (took 0.112532151 seconds)
    (16/19) benchmarking ("Set", "Int", "filter")...
    done (took 0.112501553 seconds)
    (17/19) benchmarking ("Set", "Any", "filter")...
    done (took 0.112431543 seconds)
    (18/19) benchmarking ("Set", "String", "pop!")...
    done (took 0.104657874 seconds)
    (19/19) benchmarking ("IntSet", "Int", "pop!")...
    done (took 0.108134958 seconds)
  done (took 3.492714834 seconds)
done (took 43.446702241 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.386515121 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.564204705 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.365974188 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.365389044 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.367208346 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.391297124 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.364275761 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.357386427 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.856379985 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.364053871 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.357204087 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.356066142 seconds)
done (took 30.437040994 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 2.388671797 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 1.361332494 seconds)
    (2/2) benchmarking "String"...
    done (took 1.365446662 seconds)
  done (took 4.356660424 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 1.360457077 seconds)
    (2/2) benchmarking "String"...
    done (took 1.363661603 seconds)
  done (took 4.06765822 seconds)
  (4/5) benchmarking "replace"...
  done (took 2.358004515 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.361753161 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.358845541 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.556602387 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.398916082 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.357730159 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.357491788 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.36537172 seconds)
  done (took 18.100770372 seconds)
done (took 32.617201106 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.394250567 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.553977534 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.615729308 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.361799904 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.364805861 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.358566369 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.365778508 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.370750338 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.367736863 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.364802119 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.7161005 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.622374781 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.360049837 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.771758752 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.354543892 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.369705389 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.360992892 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.604159572 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.360490184 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.400854481 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.371058629 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.354776063 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.366922746 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.379909672 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.461223946 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.371433357 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.399788424 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.36020443 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.547764803 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.385440739 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.399919246 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.360753274 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.40580023 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.359375448 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.359931456 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.368139079 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.559054643 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.463866224 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.360326475 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.371682745 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.560718825 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.364512748 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.364251857 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.370109481 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.364612929 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.390079576 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.599210094 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.456733832 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.361888224 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.366254775 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.381369303 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.755903785 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.371049113 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.377709599 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.357661419 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.581933006 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.368111143 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.397277149 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.37783908 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.361084027 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.361810356 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.373613106 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.397604011 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.367389323 seconds)
  done (took 154.421465843 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.355603683 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.360133297 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.363367392 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.367734693 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.362295781 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.367044363 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.363080266 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.362574228 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.361801957 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.365667352 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.363930321 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.36390141 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.362866101 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.359696471 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.359942442 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.38104336 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.361165539 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.357187719 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.362686921 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.357333814 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.380849189 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.362494013 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.364484549 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.360910274 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.38073259 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.42491203 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.380628048 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.36420569 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.354641892 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.362639462 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.389208104 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.402717739 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.849123175 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.213673161 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.379081104 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.375206222 seconds)
  done (took 85.950011384 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.357454749 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.362472232 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.35777883 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.389894787 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.363211066 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.827485455 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.829233718 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.322814147 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.485104162 seconds)
    (10/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 1.778849289 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.41008713 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.536614897 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.364616098 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.448616471 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.374256807 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.358255486 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.409824173 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.384474462 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.358408004 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.360600978 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.824287309 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.374186971 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.547522712 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.513330649 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.359819358 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.380269774 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.79200243 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.355655423 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.386596719 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.743357307 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.390554538 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.361712446 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.589757534 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.325656513 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.359355891 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.46423018 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.358892607 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.385149352 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.353080446 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.632960174 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.361675367 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.360564929 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.361409429 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.919294206 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.363412377 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.830142686 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.360154512 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.205028221 seconds)
    (49/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.363047162 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.359819888 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.360813985 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.827727932 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.851735021 seconds)
    (54/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.36318098 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.362259464 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.364661367 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.365606824 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.364448923 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.363658047 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.389856248 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.794006218 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.518028392 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.364279238 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.367659288 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.391575469 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.365610816 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.363795354 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.74627975 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.424629186 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.138854722 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.832339418 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.366427536 seconds)
    (73/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 21.377283765 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.456597838 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.481564774 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.36571651 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.364609875 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.365835433 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.364818884 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.470647014 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.365061609 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.719588236 seconds)
    (83/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.364077626 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.522245465 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.366255122 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.421426828 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.458221136 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.365932017 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.591773766 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.365494168 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.364686694 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.97236532 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.458352106 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.368567201 seconds)
    (95/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.368070951 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.368649168 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.721905422 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.837110112 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.510024033 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.369308694 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.784586452 seconds)
    (102/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.368365261 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.715241083 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.822079245 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.889078856 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.367485495 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.47375709 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.524047516 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.368514862 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.366475317 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.412583552 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.368495218 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.427702647 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.36627344 seconds)
  done (took 383.081347861 seconds)
done (took 624.794431378 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.367559638 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.373192513 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.373148305 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.37946296 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.379029191 seconds)
  done (took 13.213751191 seconds)
done (took 14.553948327 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/23) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.589300867 seconds)
    (2/23) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.587843001 seconds)
    (3/23) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.429553401 seconds)
    (4/23) benchmarking ("Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##3#6}", "10-90")...
    done (took 1.400743172 seconds)
    (5/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.491896739 seconds)
    (6/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.539682619 seconds)
    (7/23) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.405560006 seconds)
    (8/23) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.590827317 seconds)
    (9/23) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.588996844 seconds)
    (10/23) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.539156812 seconds)
    (11/23) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.395601604 seconds)
    (12/23) benchmarking ("Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##3#6}", "50-50")...
    done (took 1.414749685 seconds)
    (13/23) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.491160096 seconds)
    (14/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.493306429 seconds)
    (15/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.586642516 seconds)
    (16/23) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.439326515 seconds)
    (17/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.588666098 seconds)
    (18/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.589354033 seconds)
    (19/23) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.490682565 seconds)
    (20/23) benchmarking ("Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##3#6}", "90-10")...
    done (took 1.441372952 seconds)
    (21/23) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.41321457 seconds)
    (22/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.589184111 seconds)
    (23/23) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.392375641 seconds)
  done (took 35.841081219 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.726213692 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.729298801 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.421959102 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.724996041 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.405676924 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.719468192 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.60255077 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.598656304 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.599138671 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.437060521 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.389255365 seconds)
  done (took 18.707626676 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.696192726 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.682417109 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.424137667 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.671488687 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.406792383 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.690287855 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.565587864 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.572475893 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.561591441 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.397205957 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.387632025 seconds)
  done (took 18.407895101 seconds)
done (took 74.309455996 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.400437353 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.448606561 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.384276468 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.384034712 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.384383397 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.382962261 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.386006672 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.383759332 seconds)
  done (took 12.506049353 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.383706731 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.383079037 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.383228231 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.382339055 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.383040063 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.382517155 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.38302954 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.383259982 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.382965138 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.383563864 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.382619439 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.384605332 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.382807112 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.383816338 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.384695226 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.383442799 seconds)
  done (took 23.485450124 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.385134097 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.383416819 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.383062094 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.383253625 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.384104277 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.381719364 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.381534724 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.380873116 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.380769929 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.381086291 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.382612947 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.381310378 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.382113202 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.382004879 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.381904974 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.385266508 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.381353663 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.381171452 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.385503246 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.381151772 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.382702147 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.380996724 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.380853442 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.380815829 seconds)
  done (took 34.527181911 seconds)
done (took 71.870662424 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.376388236 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.37952925 seconds)
  done (took 6.106697165 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.781846371 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.826798976 seconds)
  done (took 4.962044076 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.383733646 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.383183465 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.383402601 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.383304549 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.382787164 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.383334324 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.384544208 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.381948082 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.382205034 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.383128441 seconds)
  done (took 15.185720729 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.381624579 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.382503909 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.383564577 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.383870134 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.384609875 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.383540277 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.383147869 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.38320501 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.383676873 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.382892982 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.383702325 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.383565259 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.383207221 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.3830746 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.382997483 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.383465985 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.38335958 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.383726412 seconds)
  done (took 26.252027977 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.400043548 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.405875378 seconds)
  done (took 4.157789092 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.518107544 seconds)
    (2/7) benchmarking "second"...
    done (took 1.424305176 seconds)
    (3/7) benchmarking "month"...
    done (took 1.491145652 seconds)
    (4/7) benchmarking "year"...
    done (took 1.482512848 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.424237863 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.411489608 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.424877809 seconds)
  done (took 11.528440966 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.383102613 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.631776523 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.775446428 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.126435211 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.383425564 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.387218105 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.156717815 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.387429601 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.388727018 seconds)
  done (took 15.972546744 seconds)
done (took 85.516328747 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.387858424 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.380306196 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.396543634 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.385206033 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.793760889 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.394942092 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.379534539 seconds)
done (took 17.470494384 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.379718409 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.377849533 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.387770024 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.37680883 seconds)
  done (took 10.875057963 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.333563627 seconds)
    (2/2) benchmarking "read"...
    done (took 1.704244558 seconds)
  done (took 5.391698383 seconds)
done (took 17.619606835 seconds)
(10/20) benchmarking "scalar"...
  (1/24) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.383750808 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.382439976 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.383079423 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.382231849 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.382448816 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.383779195 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.383534998 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.383222276 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.383969533 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.382961973 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.383079687 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.383647047 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.382503658 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.383290623 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.382816618 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.382873096 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.383243441 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.383455938 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.383174307 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.382925836 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.383251228 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.382229703 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.382567252 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.382942993 seconds)
  done (took 34.546174226 seconds)
  (2/24) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.382002642 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.381930792 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.384164483 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.382871339 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.384023205 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.383444884 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.384913997 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.38368649 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.382006261 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.383810151 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.382938425 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.382602056 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.38304753 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.382738874 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.383212203 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.383056006 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.383178725 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.381942522 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.382865415 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.383505418 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.383602707 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.383170791 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.383144343 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.382268165 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.382904258 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.383405143 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.381878042 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.382385281 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.381095176 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.382035259 seconds)
  done (took 42.840989727 seconds)
  (3/24) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.385326522 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.38979686 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.381047613 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.382026844 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.382108054 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.382765416 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.382740548 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.384584382 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.382134691 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.384382307 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.381716398 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.381685453 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.382284393 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.382220354 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.381635263 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.382573667 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.383637911 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.38020902 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.379559877 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.380131627 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.380078224 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.379317567 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.379069896 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.380980892 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.379500216 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.377632766 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.377933265 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.377825281 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.377076508 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.377270649 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.378074859 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.378046426 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.377797025 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.377867652 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.377871073 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.378903211 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.381080287 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.385349832 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.37786464 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.378088789 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.378196722 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.377753042 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.377809848 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.378421793 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.378582767 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.378123779 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.378021276 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.377404455 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.376182788 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.377432346 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.37639571 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.376751345 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.377020391 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.376126264 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.377142429 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.375895786 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.37755072 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.375415629 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.375058925 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.376210496 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.375565875 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.375699383 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.373687363 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.374531642 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.375798792 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.375388521 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.375141269 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.375634951 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.373060567 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.373774816 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.37051907 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.373131838 seconds)
  done (took 100.617856125 seconds)
  (4/24) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.367093061 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.376677757 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.378150875 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.377773709 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.377143967 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.376953666 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.37785415 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.376993986 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.379380756 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.378799517 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.37857016 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.379665569 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.378736432 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.378225951 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.378318629 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.378237172 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.380034128 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.376385928 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.377831057 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.377182357 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.376991316 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.377122508 seconds)
  done (took 31.65267045 seconds)
  (5/24) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.378126133 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.376372239 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.376656908 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.379049896 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.380107881 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.377432433 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.375616957 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.378917476 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.375264185 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.375375077 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.375193008 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.37452606 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.376394052 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.374068333 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.375106637 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.37722624 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.374246931 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.377287605 seconds)
  done (took 26.126347693 seconds)
  (6/24) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.374996605 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.374551565 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.374774311 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.374324843 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.374854862 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.375476818 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.374354896 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.37524492 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.374155509 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.374691128 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.375259612 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.37538072 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.375189623 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.374622281 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.373825876 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.375877203 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.374671843 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.376264527 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.374672171 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.373775855 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.374907511 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.374373768 seconds)
  done (took 31.595457045 seconds)
  (7/24) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.374560655 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.375375981 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.37480166 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.374850683 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.375791332 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.374666836 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.375199389 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.374432144 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.37596413 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.374281401 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.375319748 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.375694865 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.376740092 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.374723308 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.375131694 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.374739374 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.375466556 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.374969925 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.373878991 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.374881641 seconds)
  done (took 28.850555909 seconds)
  (8/24) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.37517397 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.375488236 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.37513556 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.375465621 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.375016027 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.377436686 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.375468533 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.375262505 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.375989947 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.376840736 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.375501653 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.379321509 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.375758255 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.375756757 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.375762856 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.375418878 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.375986593 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.376308527 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.376387707 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.374758496 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.376810798 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.375332291 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.374744792 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.375860753 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.376322727 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.376052941 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.375514014 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.375492991 seconds)
  done (took 39.87459723 seconds)
  (9/24) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.375072251 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.37443526 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.376509885 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.375740334 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.375191521 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.376309038 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.375637162 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.374301049 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.376199523 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.374608511 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.375537503 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.374043024 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.373876867 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.37392686 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.373966635 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.374080723 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.374280241 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.375517032 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.374703155 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.374661576 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.374739949 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.375502101 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.37559387 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.374621654 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.374558651 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.375564823 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.375064254 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.374889368 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.375261853 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.374238416 seconds)
  done (took 42.598512609 seconds)
  (10/24) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.431930502 seconds)
    (2/2) benchmarking "in"...
    done (took 1.439393591 seconds)
  done (took 4.220205832 seconds)
  (11/24) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.374130008 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.374176716 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.374496696 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.375186468 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.375732714 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.37603037 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.378189427 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.37520529 seconds)
  done (took 12.352405494 seconds)
  (12/24) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.377961328 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.375708986 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.375480709 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.375216021 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.375283757 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.376385527 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.384869793 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.379915193 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.377751466 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.376906597 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.380540385 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.380424113 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.37883287 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.378126732 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.377013425 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.382350467 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.37766399 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.375572897 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.377219703 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.374866942 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.376203874 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.37948031 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.381737232 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.37769178 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.375990175 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.38833639 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.385220983 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.378726053 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.376150794 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.383607527 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.377766664 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.375888129 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.376447231 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.375707029 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.37508867 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.376537312 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.386009055 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.382788962 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.38442634 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.380235255 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.375581398 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.37553065 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.378063272 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.379716116 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.379535512 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.379155991 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.375207441 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.37556624 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.374447349 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.380138888 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.379308064 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.375989895 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.373202561 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.380904119 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.381173529 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.383803895 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.378530578 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.375481559 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.378752441 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.381783206 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.393306936 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.387522456 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.37963877 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.375342787 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.382358952 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.386761462 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.382849163 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.378024935 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.375765728 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.372597499 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.381538949 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.396617646 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.392244043 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.375446616 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.372995473 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.373360077 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.374877419 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.372880555 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.382028825 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.381118174 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.375791484 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.373465932 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.380779057 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.386052716 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.373847758 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.373678827 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.373407568 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.372260054 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.373018187 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.381588861 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.382269468 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.37306656 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.3753292 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.375673865 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.377056629 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.373780911 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.374564576 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.378200221 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.374583698 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.371576181 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.373509719 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.376113096 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.379462263 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.37581935 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.373340964 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.382640111 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.376374973 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.373673898 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.382024204 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.376595156 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.372867189 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.375808761 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.380614189 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.372921905 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.374975852 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.377331315 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.373931706 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.374043235 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.373789204 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.373572465 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.380691925 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.388067881 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.373877448 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.371253569 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.376325168 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.378601596 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.3748395 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.375392775 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.373257553 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.370587248 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.371372908 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.372947091 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.373680559 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.372935786 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.374927922 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.372571135 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.370993782 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.369423553 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.370156393 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.372216049 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.374663916 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.374740168 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.374881931 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.376317001 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.373373223 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.374510761 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.383018253 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.37623327 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.375645291 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.375044035 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.372244046 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.372660008 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.373635387 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.372973394 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.372692308 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.373585657 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.371891035 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.372535099 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.370618979 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.371006965 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.370034723 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.37293998 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.374854103 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.372964875 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.37635034 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.374336753 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.371590314 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.369850403 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.371502824 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.371177804 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.371254928 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.370986339 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.375345105 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.375341874 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.370008571 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.370738567 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.374634506 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.373417882 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.37110704 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.370921432 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.374370615 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.375345574 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.374820903 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.378453948 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.375046586 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.371093739 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.370439129 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.372449334 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.371702064 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.371809352 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.374281816 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.374676187 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.389561366 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.389741655 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.371966394 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.370141729 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.37072038 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.371613871 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.375910281 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.374051901 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.369892284 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.370658387 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.370953835 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.372007211 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.372099393 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.372099456 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.370487165 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.370399429 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.370854066 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.370657467 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.369811279 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.372246335 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.376391337 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.370575064 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.370316312 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.370335531 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.370812285 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.372207178 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.369901077 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.37144738 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.370790949 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.371274301 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.378831331 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.373043038 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.373013013 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.37599273 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.374444751 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.371840694 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.371015659 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.37353417 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.374454638 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.379670679 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.376735721 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.372945671 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.37974353 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.376677756 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.370877677 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.375070167 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.372350134 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.369088364 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.372783602 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.375271578 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.370112355 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.372908721 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.370413207 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.370981207 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.371451518 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.377973253 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.373660035 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.371040931 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.371166592 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.372192739 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.370817109 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.372179587 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.373966987 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.372956198 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.374838327 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.372707055 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.369019294 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.372397341 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.371035476 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.370201206 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.37026358 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.372712495 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.375987695 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.379328356 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.375511703 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.374242037 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.371987274 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.370291833 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.371654154 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.37119425 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.371710115 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.390938468 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.386129644 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.38504573 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.384481582 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.369370479 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.376040951 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.374743081 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.371578552 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.37175494 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.372511899 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.372670817 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.371259126 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.370554015 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.371876378 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.37170842 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.372479281 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.372957509 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.369795115 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.368794001 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.370092053 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.371452115 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.372049417 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.368806966 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.369374302 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.369419731 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.372985161 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.374146383 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.373054132 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.373811234 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.379313636 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.375566701 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.374168702 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.373060186 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.370549464 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.370001582 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.372995337 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.370697353 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.372599888 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.373718647 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.372048219 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.375847115 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.370794853 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.375888535 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.372888932 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.371885129 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.372528137 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.368054739 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.368541262 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.370464568 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.369255383 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.377776522 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.374369957 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.370479473 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.371550747 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.368959873 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.368743595 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.368013059 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.369322106 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.368143283 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.368574522 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.378654385 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.376731767 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.369816811 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.373103827 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.371108098 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.369252399 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.368158337 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.368790629 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.375126919 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.371525965 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.371094231 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.372415528 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.371847792 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.368451691 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.369098754 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.367891349 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.368653295 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.367914246 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.377398257 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.376665708 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.37154262 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.368692255 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.378162495 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.373403978 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.378512882 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.374041924 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.370529552 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.372225486 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.368482686 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.370615469 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.370469662 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.372369191 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.3721401 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.369371185 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.37083462 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.369086195 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.372171082 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.373097248 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.371127833 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.369481762 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.377648337 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.37942491 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.370113564 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.369799756 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.368343247 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.37001909 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.369374 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.369104915 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.369678731 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.373655121 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.377869372 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.372333388 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.369761158 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.37046568 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.370939727 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.370166763 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.368070149 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.367681559 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.369221654 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.368032334 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.369939199 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.369602247 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.375881152 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.37152454 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.370221658 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.372884234 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.370819692 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.377580607 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.373939933 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.370756481 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.371202927 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.369888713 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.370264343 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.37142948 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.370737672 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.371919787 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.369276828 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.369735593 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.373457577 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.372570277 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.374729193 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.374031526 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.370819881 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.370363289 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.370598044 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.370638968 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.369149024 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.369107877 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.370775028 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.3719186 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.370278453 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.369268816 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.368684624 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.372505908 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.370213997 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.371550723 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.374374883 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.371977673 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.369414144 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.368271306 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.368595096 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.370655497 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.371298778 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.379577429 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.376933053 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.376127225 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.373409308 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.370059233 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.370134463 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.373851412 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.374749663 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.371433972 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.371579983 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.371318974 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.372474394 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.372329048 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.372919282 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.369844002 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.377120314 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.374489089 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.370974199 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.381067952 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.376190534 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.371613951 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.368846758 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.369942177 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.372439857 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.36892266 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.366343927 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.365142337 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.370895276 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.368344079 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.361658243 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.363363313 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.364667054 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.360688515 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.361477317 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.35892869 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.361673492 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.360875911 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.361249665 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.361242484 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.359120045 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.358700716 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.359745306 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.361810219 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.363723181 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.362854075 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.359315578 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.363231042 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.363636065 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.362780252 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.36133527 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.358870095 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.360588459 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.358536826 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.360265038 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.360333155 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.36079342 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.364238355 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.362490218 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.360988597 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.359051498 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.359305067 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.36252365 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.365317047 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.36262716 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.358473209 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.360222366 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.362458352 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.365376299 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.36319875 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.359525599 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.360824287 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.363653733 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.360378534 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.360588113 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.358809729 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.362828185 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.373344618 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.364717514 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.361745336 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.363438469 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.366840651 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.363729173 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.359120138 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.358930622 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.363344179 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.364927072 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.362777879 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.359861053 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.368034258 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.366216225 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.361882141 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.35966683 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.363741588 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.364271357 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.36496771 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.362539099 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.359944372 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.364434277 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.373332994 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.362682712 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.367965842 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.377511812 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.367383159 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.362898112 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.36147179 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.360571695 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.36124693 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.362623802 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.361702774 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.358992493 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.35918285 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.359880544 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.361685334 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.363859152 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.365759336 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.367282113 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.362681781 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.360978745 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.363203511 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.359620498 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.359363287 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.360043302 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.359874549 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.359922542 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.359520008 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.361507214 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.377904186 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.377628161 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.360518686 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.360283052 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.358994963 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.364510976 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.366098155 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.366104337 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.361529986 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.359798564 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.359825248 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.362123043 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.362228438 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.360004537 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.361432181 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.361797539 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.361582459 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.362114834 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.373315169 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.370902141 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.366168038 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.36372922 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.36105267 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.359402294 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.362665359 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.361702667 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.36057755 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.363523797 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.364422358 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.363000803 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.360143118 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.359552452 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.363652856 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.362286944 seconds)
  done (took 818.785822502 seconds)
  (13/24) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.362208525 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.359539634 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.359708836 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.359369769 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.360365497 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.360541549 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.359580003 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.359098016 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.359533166 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.360634648 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.359138609 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.359966505 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.360436641 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.363413923 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.360503292 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.360498697 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.358793018 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.359094532 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.35968064 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.359087078 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.360813633 seconds)
  done (took 29.89520062 seconds)
  (14/24) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.359477752 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.358929876 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.36014983 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.358722451 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.359085269 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.359416496 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.360177839 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.358775726 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.359246513 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.359064835 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.358954119 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.35924724 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.358941623 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.359335496 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.35895036 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.359088671 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.359212383 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.35932688 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.358810683 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.358168746 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.353734407 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.354220616 seconds)
  done (took 31.223461046 seconds)
  (15/24) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.354721678 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.356583336 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.354801969 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.356638407 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.347399335 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.347009268 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.348882674 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.349853511 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.348753345 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.35335429 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.347299398 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.349711985 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.355773501 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.354681712 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.353023331 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.352474571 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.349094983 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.353027047 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.351688257 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.34919578 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.357746043 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.354719083 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.348717494 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.348763316 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.349814065 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.349763331 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.343363892 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.343852337 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.344798082 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.344726603 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.342858313 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.346314117 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.348624718 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.347559104 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.339328943 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.337354171 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.337460492 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.336177198 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.336198725 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.345420678 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.347806331 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.336254643 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.351206915 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.34691873 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.335056343 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.339350249 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.340089489 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.334270628 seconds)
  done (took 65.995989504 seconds)
  (16/24) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.334176247 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.335870888 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.335521135 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.335097203 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.334877187 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.334943762 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.338351212 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.33011714 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.331082346 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.330780953 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.330811811 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.330593745 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.33132004 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.330662916 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.332483808 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.325581413 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.324795021 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.324224667 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.325155881 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.324261706 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.323138893 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.326153054 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.317439841 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.317051157 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.316481713 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.316674068 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.316706197 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.316686207 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.316736823 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.318772617 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.314349519 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.314059116 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.314434812 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.314702586 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.31395997 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.314333395 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.314603207 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.313635212 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.311061205 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.310909811 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.310825109 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.310622949 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.310795088 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.310600008 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.315292203 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.308854221 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.308163203 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.308616552 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.308964537 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.308109215 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.308543086 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.308777987 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.310363595 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.305923052 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.305820073 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.306426655 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.30582006 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.305541262 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.305684639 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.307632665 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.303118687 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.303310272 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.303510011 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.304093409 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.303193753 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.303425607 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.303633924 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.303922006 seconds)
  done (took 90.854300752 seconds)
  (17/24) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.302880432 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.30375756 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.303180082 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.303447252 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.302785198 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.30266409 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.303116906 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.30434761 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.302912555 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.30293957 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.303618902 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.303078328 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.304075914 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.304462569 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.303679226 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.304453263 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.303114941 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.303043381 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.303101653 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.303390076 seconds)
  done (took 27.346205781 seconds)
  (18/24) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.303175495 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.303146425 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.302833321 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.30312412 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.302520567 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.302778717 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.302823528 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.302779357 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.303000118 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.30258841 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.303203605 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.303097362 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.303030687 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.30358905 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.302893158 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.303304346 seconds)
  done (took 22.125279564 seconds)
  (19/24) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.303614972 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.305514766 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.303758223 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.303811629 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.303361068 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.302632122 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.303414662 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.302869614 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.30398344 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.303163381 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.302890295 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.303818324 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.303412913 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.304157926 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.303321114 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.303865873 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.303149701 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.303431284 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.303747057 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.303929835 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.304118355 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.303163333 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.30395049 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.303215186 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.303250806 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.303878665 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.302907593 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.304129847 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.303626426 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.303134882 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.303552586 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.303666072 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.304712262 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.303175489 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.303973838 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.303060739 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.302867276 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.303026805 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.303556645 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.304402275 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.302798435 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.303464544 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.302907372 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.303066021 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.303182582 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.302938766 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.301875547 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.302903604 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.301468429 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.302089947 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.301591366 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.302103028 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.301550903 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.297900656 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.297526467 seconds)
  done (took 72.949806267 seconds)
  (20/24) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.298426475 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.297579271 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.297807793 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.297759088 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.300261744 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.294915186 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.295238504 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.29821341 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.294959038 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.294843283 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.294754164 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.296073817 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.295912763 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.293089906 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.292896384 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.292704139 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.293205727 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.29290173 seconds)
  done (took 24.593906997 seconds)
  (21/24) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.293937731 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.292766675 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.292131278 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.292147551 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.291491612 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.291849076 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.291952062 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.291508012 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.292410079 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.292833567 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.291752828 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.292869307 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.291803371 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.291848974 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.292330415 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.291984525 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.29228495 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.292402324 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.29236507 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.292305971 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.29459388 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.292137317 seconds)
  done (took 29.699970047 seconds)
  (22/24) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.292913879 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.292043701 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.292754048 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.302633511 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.295848274 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.292415636 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.292619118 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.292846174 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.305689632 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.310123759 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.30691769 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.295710633 seconds)
  done (took 16.839755482 seconds)
  (23/24) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292176642 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292305004 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.292423379 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292402682 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.2924355 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292569396 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292318401 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292225171 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291740022 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293429878 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292304628 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292097351 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292209327 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292305966 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292045743 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292343721 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294271801 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292189101 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292457933 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292130925 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292859135 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292407975 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292015283 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292134298 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292150664 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292128142 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292144334 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292776291 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29187715 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291705758 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291805359 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292084444 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292011389 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292537858 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291650092 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291469023 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291012237 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291409501 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291424523 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291278686 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.290940495 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292488777 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292525172 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291964972 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29143468 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290532042 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290946094 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291901774 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290873193 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291616414 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290618158 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.2898176 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289198435 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289769978 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289049191 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289794721 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290805782 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290571098 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289801933 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291195946 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290195032 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289516177 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289579893 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291512799 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290177422 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290493938 seconds)
  done (took 86.514200676 seconds)
  (24/24) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289510506 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.289531898 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289599951 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291036549 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290222085 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290503993 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290916589 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290109252 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289700186 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290144495 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290664452 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291873945 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290082548 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289681409 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29059439 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289999928 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290626295 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289959788 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289390386 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290467317 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289835312 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.2906931 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289943424 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289622991 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291728673 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289592108 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289802062 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289672262 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28950406 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289931734 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290564319 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289683772 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289822814 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.289876102 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290111898 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290498845 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289704162 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290043738 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28995754 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289674264 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290005104 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289471322 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29105758 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289639829 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290856029 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289902643 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290028584 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290163918 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290428668 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290384974 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291055859 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290554491 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291168198 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289746918 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289809076 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289894272 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289487872 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290005042 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289812185 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289635617 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289924354 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290099578 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290203137 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289941827 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290020929 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289931138 seconds)
  done (took 86.414747547 seconds)
done (took 1799.866807297 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.451738123 seconds)
    (2/16) benchmarking ("transpose", (20000, 20000))...
    done (took 2.382123665 seconds)
    (3/16) benchmarking ("ctranspose!", (20000, 20000))...
    done (took 2.325536477 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.29757511 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 2.3035419 seconds)
    (6/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.303332094 seconds)
    (7/16) benchmarking ("transpose", (600, 600))...
    done (took 1.760307394 seconds)
    (8/16) benchmarking ("ctranspose!", (600, 600))...
    done (took 1.479368508 seconds)
    (9/16) benchmarking ("ctranspose", (600, 400))...
    done (took 1.715690708 seconds)
    (10/16) benchmarking ("ctranspose", (600, 600))...
    done (took 1.915905909 seconds)
    (11/16) benchmarking ("transpose", (600, 400))...
    done (took 1.593993565 seconds)
    (12/16) benchmarking ("ctranspose!", (600, 400))...
    done (took 1.410920611 seconds)
    (13/16) benchmarking ("ctranspose", (20000, 10000))...
    done (took 2.320144654 seconds)
    (14/16) benchmarking ("ctranspose", (20000, 20000))...
    done (took 2.417033649 seconds)
    (15/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.383499965 seconds)
    (16/16) benchmarking ("ctranspose!", (20000, 10000))...
    done (took 2.289638453 seconds)
  done (took 32.614789525 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.31221838 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.297411841 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.383797358 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.2944194 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.315807796 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.440525584 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.339814538 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.300654333 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 2.288520971 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.318039348 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.290976053 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.314121981 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.294504168 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.125799397 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.633537354 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.440458992 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.499575962 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.290831793 seconds)
  done (took 29.445931022 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.607866421 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.415029681 seconds)
  done (took 5.287811618 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.310093637 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.295822755 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.295782113 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.293300817 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.286020162 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.287023034 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.291819413 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.291774476 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.290471636 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.386569379 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.295301449 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.304068849 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.293924248 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.294479395 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.291743086 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.333926266 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.427628888 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.292312279 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.291653225 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.299169476 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.293197022 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.392151074 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.327644522 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.291552366 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.387033093 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.290916838 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.295431794 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.301158268 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.418620251 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.292170302 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.292460476 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.298008498 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.297665207 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.03801811 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.756058419 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.28704218 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.304294444 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.304022779 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.291974107 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.442866256 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.294659487 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.301176519 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.29209691 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.733185239 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.401022165 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.398253789 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.294686687 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.294339105 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.295690834 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.357332336 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.293587036 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.29545576 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.328753138 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.095541578 seconds)
  done (took 82.699453998 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.360869512 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.285828917 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.481145558 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.289753832 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.285874989 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.285680529 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.287110787 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.490683223 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.352217259 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.294910787 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.539846813 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.753469629 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.285821168 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.358756684 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.343214556 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.343630166 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.286336332 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.286065936 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.286180565 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.292679729 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.755761784 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.286019221 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.286052627 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.48315359 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.321586736 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.773413666 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.292880943 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.286144554 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.287232792 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.286265891 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.734765611 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.28835983 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.347373272 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.286901248 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.526140503 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.605165239 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.578639775 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.288352884 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.320831408 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.28728991 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.293524949 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.767005943 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.600270981 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.28784047 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.286019377 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.76557883 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.286350833 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.296806008 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.293450168 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.549547527 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.285390577 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.285945562 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.287148122 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.285884677 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.286069418 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.381178353 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.360892635 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.776959451 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.286252261 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.28630278 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.368501326 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.28997278 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.295816055 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.290971026 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.293289764 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.605041225 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.194603494 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.294315258 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.602574491 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.724417467 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.285854335 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.798802119 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.286054515 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.316539397 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.441402801 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.286463732 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.286329063 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.777392577 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.345980223 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.286488471 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.579780484 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.292454517 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.541264169 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.286292004 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.286389741 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.774984125 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.296271396 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.362127466 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.285748653 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.285850545 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.285641985 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.293718953 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.528498746 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.346880601 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.285738949 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.287056181 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.323527988 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.286193854 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.285756505 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.286794488 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.801374804 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.285617221 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.285958845 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.288726353 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.286766605 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.286933377 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.288469042 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.290248982 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.564672486 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.285352261 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.295116432 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.289673996 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.285346884 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.292900279 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.482185613 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.293185649 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.517083708 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.288072794 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.286609718 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.292640253 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.286204796 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.298069284 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.286246313 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.292408372 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.286198399 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.61097971 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.286624085 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.286696839 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.288519686 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.286008845 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.288419508 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.289650705 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.346181851 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.28702707 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.960140313 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.338283937 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.340920714 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.286438849 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.300104085 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.286065042 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.28734185 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.28930429 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.642299296 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.523825832 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.192449465 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.285906786 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.286388181 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.02772414 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.340275709 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.486279414 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.291310903 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.286231484 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.591825639 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.1998028 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.289292803 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.28585767 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.288316053 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.587232551 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.286190175 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.646910295 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.750966893 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.287942039 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.287240139 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.019932597 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.286615759 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.28714969 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.292110683 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.537464789 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.286215953 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.286010802 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.286143903 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.286427347 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.286460426 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.2896008 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.292077091 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.286220108 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.28604555 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.834271807 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.493977202 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.286278856 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.286536162 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.775523746 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.297134855 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.286150809 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.287074943 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.293314067 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.286059079 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.339552939 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.291801987 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.349139772 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.288970943 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.288710744 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.797550708 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.286347271 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.287528406 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.491451799 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.8799084 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.287558671 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.286366592 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.286330998 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.346525978 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.802771245 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.353809445 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.518066017 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.291626248 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.320573216 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.285955407 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.301231185 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.800354442 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.287583363 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.285865574 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.950430803 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.286265889 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.096987404 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.286840788 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.288575938 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.865604185 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.287493989 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.28654153 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.286314968 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.28648885 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.588925724 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.288505616 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.325709975 seconds)
  done (took 491.381028532 seconds)
done (took 642.6931203 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.286390262 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.286801297 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.287006018 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.286882025 seconds)
  done (took 10.412518564 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.29283801 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.29268433 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.291528945 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.291592844 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.291950967 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.292254878 seconds)
  done (took 9.020232834 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.287264161 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.285542035 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.286041732 seconds)
  done (took 8.125217227 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.448956111 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.285696268 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.56763762 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.290807563 seconds)
  done (took 8.859867994 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.29190179 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.291635863 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.291480763 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.291944259 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.293051551 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.293307014 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.292644763 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.292613988 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.292943848 seconds)
  done (took 12.896615727 seconds)
done (took 50.580855445 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.286840439 seconds)
    (2/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.288656204 seconds)
    (3/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.296900268 seconds)
    (4/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.296675766 seconds)
    (5/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.287068252 seconds)
    (6/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.554462258 seconds)
    (7/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.723606371 seconds)
    (8/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.508502115 seconds)
    (9/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.668391865 seconds)
    (10/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.608417744 seconds)
    (11/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.167300377 seconds)
    (12/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.301858435 seconds)
    (13/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.286847975 seconds)
    (14/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.289539138 seconds)
    (15/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.302143485 seconds)
    (16/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.287317068 seconds)
    (17/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.295314969 seconds)
    (18/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.295803179 seconds)
    (19/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.287272947 seconds)
    (20/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.971790901 seconds)
    (21/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.734146405 seconds)
    (22/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 2.28837211 seconds)
    (23/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.406209591 seconds)
    (24/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.300015974 seconds)
    (25/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.286702409 seconds)
    (26/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.289864534 seconds)
    (27/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.525624089 seconds)
    (28/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.286495559 seconds)
    (29/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.010599751 seconds)
    (30/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.516830386 seconds)
    (31/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.286581636 seconds)
    (32/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.427491421 seconds)
    (33/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.919835721 seconds)
    (34/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.76594865 seconds)
    (35/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.374034049 seconds)
    (36/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.286687885 seconds)
    (37/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.217495451 seconds)
    (38/192) benchmarking ("perf_sum", Float32, false)...
    done (took 2.074011729 seconds)
    (39/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.527133908 seconds)
    (40/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.98312607 seconds)
    (41/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.511824166 seconds)
    (42/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.509379943 seconds)
    (43/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.664603608 seconds)
    (44/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.173551114 seconds)
    (45/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.140376571 seconds)
    (46/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.24463364 seconds)
    (47/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.60732047 seconds)
    (48/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.01193614 seconds)
    (49/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.288238639 seconds)
    (50/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.287343877 seconds)
    (51/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.296108635 seconds)
    (52/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.302109848 seconds)
    (53/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.504752445 seconds)
    (54/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.287031227 seconds)
    (55/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.286896363 seconds)
    (56/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.288511592 seconds)
    (57/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.2194728 seconds)
    (58/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.816918843 seconds)
    (59/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.97637492 seconds)
    (60/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.293992429 seconds)
    (61/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.690454995 seconds)
    (62/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.28701231 seconds)
    (63/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.185358767 seconds)
    (64/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.290767513 seconds)
    (65/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.289016933 seconds)
    (66/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.295529834 seconds)
    (67/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.287356371 seconds)
    (68/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.717231894 seconds)
    (69/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.98191716 seconds)
    (70/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.302737093 seconds)
    (71/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.055867105 seconds)
    (72/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.507548097 seconds)
    (73/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.381164799 seconds)
    (74/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.302884163 seconds)
    (75/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.294736394 seconds)
    (76/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.288369518 seconds)
    (77/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.287267608 seconds)
    (78/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.748889794 seconds)
    (79/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.155645553 seconds)
    (80/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.249480725 seconds)
    (81/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.739917629 seconds)
    (82/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.287567528 seconds)
    (83/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.29010377 seconds)
    (84/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.288044024 seconds)
    (85/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.287750645 seconds)
    (86/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.248348121 seconds)
    (87/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.374417842 seconds)
    (88/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.954704118 seconds)
    (89/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.287370364 seconds)
    (90/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.287628481 seconds)
    (91/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.629930658 seconds)
    (92/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.374567155 seconds)
    (93/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.286976946 seconds)
    (94/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.606013632 seconds)
    (95/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.302324865 seconds)
    (96/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.290232468 seconds)
    (97/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.286813311 seconds)
    (98/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.959230567 seconds)
    (99/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.822457615 seconds)
    (100/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.626242196 seconds)
    (101/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.969581116 seconds)
    (102/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.301184074 seconds)
    (103/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.300606399 seconds)
    (104/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.403963175 seconds)
    (105/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.544230583 seconds)
    (106/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.404280228 seconds)
    (107/192) benchmarking ("perf_sum", Int64, true)...
    done (took 2.051376565 seconds)
    (108/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.298662825 seconds)
    (109/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.6244608 seconds)
    (110/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.821011995 seconds)
    (111/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.288750473 seconds)
    (112/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.610990472 seconds)
    (113/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.67979622 seconds)
    (114/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.287803132 seconds)
    (115/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.302574879 seconds)
    (116/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.287180834 seconds)
    (117/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.208576387 seconds)
    (118/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.593728601 seconds)
    (119/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.301014998 seconds)
    (120/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.287418189 seconds)
    (121/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.288033349 seconds)
    (122/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.543293942 seconds)
    (123/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.287608214 seconds)
    (124/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.293982807 seconds)
    (125/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.303273742 seconds)
    (126/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.298677163 seconds)
    (127/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.300527961 seconds)
    (128/192) benchmarking ("perf_sum", Float64, false)...
    done (took 2.005456114 seconds)
    (129/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.806282154 seconds)
    (130/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.766913254 seconds)
    (131/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.551506923 seconds)
    (132/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.707749447 seconds)
    (133/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.30393588 seconds)
    (134/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.579192599 seconds)
    (135/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.39957329 seconds)
    (136/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.196823968 seconds)
    (137/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.734307864 seconds)
    (138/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.73621185 seconds)
    (139/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.301483341 seconds)
    (140/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.288866734 seconds)
    (141/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.427348084 seconds)
    (142/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.379545417 seconds)
    (143/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.515321554 seconds)
    (144/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.42615893 seconds)
    (145/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.961219876 seconds)
    (146/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.28824177 seconds)
    (147/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.77459649 seconds)
    (148/192) benchmarking ("perf_sum", Float64, true)...
    done (took 2.0026787 seconds)
    (149/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.675110661 seconds)
    (150/192) benchmarking ("perf_sum", Int64, false)...
    done (took 2.0776134 seconds)
    (151/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.489379738 seconds)
    (152/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.960021196 seconds)
    (153/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.287449393 seconds)
    (154/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.288055114 seconds)
    (155/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.299438386 seconds)
    (156/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.61134366 seconds)
    (157/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.287488629 seconds)
    (158/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.302495375 seconds)
    (159/192) benchmarking ("perf_sum", Float32, true)...
    done (took 2.07196277 seconds)
    (160/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.540570244 seconds)
    (161/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.618172005 seconds)
    (162/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.763504794 seconds)
    (163/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.497278722 seconds)
    (164/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.912824743 seconds)
    (165/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.964621818 seconds)
    (166/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.301010475 seconds)
    (167/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.392338135 seconds)
    (168/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.290615683 seconds)
    (169/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.288780307 seconds)
    (170/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.547180595 seconds)
    (171/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.288518062 seconds)
    (172/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.287112387 seconds)
    (173/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.302513906 seconds)
    (174/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.177733417 seconds)
    (175/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.847674446 seconds)
    (176/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.28776982 seconds)
    (177/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.775645562 seconds)
    (178/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.287329233 seconds)
    (179/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.295047358 seconds)
    (180/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.286896461 seconds)
    (181/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.619032636 seconds)
    (182/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.484641908 seconds)
    (183/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.28739578 seconds)
    (184/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.297494538 seconds)
    (185/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.971527594 seconds)
    (186/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.499601719 seconds)
    (187/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.684573948 seconds)
    (188/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.627181512 seconds)
    (189/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.846806339 seconds)
    (190/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.680966374 seconds)
    (191/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.30031954 seconds)
    (192/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.812391895 seconds)
  done (took 367.780195736 seconds)
done (took 369.046443074 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.314818422 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.914957856 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.294813944 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.294608953 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.2957404 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.28620396 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.307150181 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.296177968 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.299530292 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.299453378 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.286869012 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.294366041 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.310257963 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.296004772 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.314539691 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.295149874 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.294993146 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.295129422 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.300525238 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.305353652 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.296215913 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.296601725 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.312482952 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.294805275 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.304828023 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.303621441 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.301165602 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.287251673 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.294162658 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.300192214 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.286839716 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.301719784 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.302699534 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.296360344 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.296479026 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.296555438 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.295906488 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.913148166 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.30644328 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.296001155 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.293622233 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.302843933 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.299952818 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.300055829 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.296550143 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.312791554 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.304084575 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.310459317 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.286827564 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.287909156 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.315977548 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.299101654 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.293993478 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.287051413 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.296046103 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.311819447 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.295195674 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.314923474 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.292340072 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.296172746 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.311461265 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.314577099 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.29868175 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.303149566 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.292955485 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.310563272 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.294751703 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.305812908 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.293161084 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.296391039 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.296558038 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.292934923 seconds)
done (took 104.058279815 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/18) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.292697451 seconds)
    (2/18) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.292770437 seconds)
    (3/18) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.421408503 seconds)
    (4/18) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.292773559 seconds)
    (5/18) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.433509565 seconds)
    (6/18) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.292921574 seconds)
    (7/18) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.2925383 seconds)
    (8/18) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.30181664 seconds)
    (9/18) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.288915659 seconds)
    (10/18) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.292334227 seconds)
    (11/18) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.422461119 seconds)
    (12/18) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.292341258 seconds)
    (13/18) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.423533836 seconds)
    (14/18) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.434592538 seconds)
    (15/18) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.420910085 seconds)
    (16/18) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.286342555 seconds)
    (17/18) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.292537624 seconds)
    (18/18) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.286892019 seconds)
  done (took 28.327856857 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.367798793 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.365096104 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.396703069 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.293323722 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.344375247 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.398254441 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.293741527 seconds)
  done (took 10.726518194 seconds)
  (3/5) benchmarking "types"...
    (1/91) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.300303962 seconds)
    (2/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.292446482 seconds)
    (3/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.358879146 seconds)
    (4/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.358888544 seconds)
    (5/91) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.293880357 seconds)
    (6/91) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.508775395 seconds)
    (7/91) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.305691907 seconds)
    (8/91) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.292220403 seconds)
    (9/91) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.364838856 seconds)
    (10/91) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.29312462 seconds)
    (11/91) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.292103809 seconds)
    (12/91) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.301814329 seconds)
    (13/91) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.293248444 seconds)
    (14/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.35787113 seconds)
    (15/91) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.305861354 seconds)
    (16/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.422925951 seconds)
    (17/91) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.296071879 seconds)
    (18/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.294497663 seconds)
    (19/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.470770977 seconds)
    (20/91) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.293635708 seconds)
    (21/91) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.301891972 seconds)
    (22/91) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.351499004 seconds)
    (23/91) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.306140393 seconds)
    (24/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.29309711 seconds)
    (25/91) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.300112566 seconds)
    (26/91) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.292831367 seconds)
    (27/91) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.292622065 seconds)
    (28/91) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.29337708 seconds)
    (29/91) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.369430204 seconds)
    (30/91) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.292445239 seconds)
    (31/91) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.292757647 seconds)
    (32/91) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.292239344 seconds)
    (33/91) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.293521031 seconds)
    (34/91) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.293067222 seconds)
    (35/91) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.29201403 seconds)
    (36/91) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.295121294 seconds)
    (37/91) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.292460264 seconds)
    (38/91) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.292655568 seconds)
    (39/91) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.292689052 seconds)
    (40/91) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.292873317 seconds)
    (41/91) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.292286349 seconds)
    (42/91) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.316861952 seconds)
    (43/91) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.292762388 seconds)
    (44/91) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.292671775 seconds)
    (45/91) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.292796686 seconds)
    (46/91) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.292463751 seconds)
    (47/91) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.361203009 seconds)
    (48/91) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.292344754 seconds)
    (49/91) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.293067657 seconds)
    (50/91) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.294444471 seconds)
    (51/91) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.36772855 seconds)
    (52/91) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.302183932 seconds)
    (53/91) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.293527896 seconds)
    (54/91) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.292320313 seconds)
    (55/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.292681849 seconds)
    (56/91) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.292284107 seconds)
    (57/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.47016024 seconds)
    (58/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.359091171 seconds)
    (59/91) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.292489713 seconds)
    (60/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.358429885 seconds)
    (61/91) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.292589924 seconds)
    (62/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.292537646 seconds)
    (63/91) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.292242479 seconds)
    (64/91) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.29236578 seconds)
    (65/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.366585946 seconds)
    (66/91) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.292083735 seconds)
    (67/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.35795927 seconds)
    (68/91) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.29241759 seconds)
    (69/91) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.514667896 seconds)
    (70/91) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.317546413 seconds)
    (71/91) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.29374304 seconds)
    (72/91) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.297655405 seconds)
    (73/91) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.298190048 seconds)
    (74/91) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.28642043 seconds)
    (75/91) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.299983285 seconds)
    (76/91) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.292503767 seconds)
    (77/91) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.296098322 seconds)
    (78/91) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.300357269 seconds)
    (79/91) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.301939396 seconds)
    (80/91) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.293143647 seconds)
    (81/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.492870767 seconds)
    (82/91) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.292569297 seconds)
    (83/91) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.311942522 seconds)
    (84/91) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.301777788 seconds)
    (85/91) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.292765387 seconds)
    (86/91) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.363866164 seconds)
    (87/91) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.292753522 seconds)
    (88/91) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.292485859 seconds)
    (89/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.389069629 seconds)
    (90/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.42298356 seconds)
    (91/91) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.357252685 seconds)
  done (took 125.414194496 seconds)
  (4/5) benchmarking "randstring"...
    (1/2) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.311238475 seconds)
    (2/2) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.296864179 seconds)
  done (took 3.875433142 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.29628574 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.293566609 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.293338818 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.292750154 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.294529247 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.292837599 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.293943086 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.29524041 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.2946909 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.292414856 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.292458982 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.293472398 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.293477341 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.293927576 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.293355831 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.292563115 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.293678983 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.293963085 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.292619858 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.293975397 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 1.904731756 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.294295315 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.294348634 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.293517809 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.293785025 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.293024831 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.318540618 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.292970763 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.292910889 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.301476418 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.295386164 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.292574142 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.293344363 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.296910226 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.294493409 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.293476387 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.293258302 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.293788552 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.292820244 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.292709201 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.294098315 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.293962692 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.2926354 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.293995441 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.294419014 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.293768766 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.294373227 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.318472017 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.295457975 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.294001614 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.294049148 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.292832046 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.292515253 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.293590425 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.296066544 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.296144711 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.294889336 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.294005349 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.29442829 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.294002755 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.294115809 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.292782679 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.295576009 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.294455209 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.293450498 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.294728385 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.294401692 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.294533172 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.294477652 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.292766654 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.294423725 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.293154974 seconds)
  done (took 95.09840664 seconds)
done (took 264.708893433 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.101790639 seconds)
  done (took 4.368399496 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.557975655 seconds)
  done (took 3.82582681 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.94203732 seconds)
  done (took 10.211623129 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.33172934 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.309904295 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.287303371 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.296946013 seconds)
  done (took 10.493768472 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.900864791 seconds)
  done (took 4.168419876 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.288113957 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.295939401 seconds)
  done (took 5.852394562 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.461423242 seconds)
  done (took 3.728333546 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.3941611 seconds)
  done (took 3.660787607 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.304627316 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.307710335 seconds)
  done (took 5.887876616 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.288242219 seconds)
  done (took 3.555654176 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.712014147 seconds)
  done (took 8.979455189 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.288140556 seconds)
  done (took 3.557765346 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.344633299 seconds)
  done (took 3.611846748 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 2.990462183 seconds)
  done (took 4.257521955 seconds)
done (took 77.427797861 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.287644266 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.290000638 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.289630941 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.288125152 seconds)
  done (took 10.422778057 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.359243434 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.351835598 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.368087374 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.345497605 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.351561101 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.351996449 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.319232718 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.319006711 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.3535256 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.34932386 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.351672075 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.344356886 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.361637393 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.318519006 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.350221409 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.363750397 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.349296933 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.35836065 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.319418226 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.344335361 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.293623598 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.351610426 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.345136024 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.293385239 seconds)
  done (took 33.48313837 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.686659715 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.36350668 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.500059864 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.344861241 seconds)
  done (took 7.16271916 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.386006724 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.3962824 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.396245809 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.439050867 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.467174183 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.395724025 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.319023407 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.314090961 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.300447328 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.396267384 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.461848301 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.292999882 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.567081877 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.292787264 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.583778522 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.292819615 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.294693858 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.38833733 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.435974421 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.450887058 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.293278224 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.382588577 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.389509067 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.292811635 seconds)
  done (took 34.498292482 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.300897755 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.310038192 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.294388905 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 1.294638513 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.294708708 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.295796371 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 1.308850486 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 1.296162572 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.30037547 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 1.293754331 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 1.293876312 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 1.2951223 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.308456901 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.295225844 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.29489194 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.300893205 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.298072417 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.301014319 seconds)
    (19/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.29389386 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.294714301 seconds)
    (21/22) benchmarking ("var", "Int64")...
    done (took 1.304152287 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.300991093 seconds)
  done (took 29.839435081 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.288299554 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.289966055 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.639409243 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.544064501 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.287353371 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.287432313 seconds)
  done (took 13.604714771 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.34422503 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.368282949 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.294189548 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.541808072 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.602534917 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.295436573 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.295170459 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.397561675 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.598206289 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.662957807 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.325209299 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.333925566 seconds)
  done (took 18.328088794 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.289600833 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.28804929 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.295802602 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.302893631 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.332933422 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.296581721 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.300349019 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.28786512 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.333196608 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.336834345 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.296783176 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.334229299 seconds)
  done (took 20.963296608 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.989590212 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.177102951 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.287572007 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41374434 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.287382472 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.301817291 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.402604087 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.692172454 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.293457687 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.564138685 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.287584386 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.872657703 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.296079802 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.295147383 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.28760909 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.288069285 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.294203449 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.972271281 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.28794436 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.288138826 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.289765098 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.287454992 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.288141326 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.454316077 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.302364567 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.287237663 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.55685259 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.28766273 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.520585683 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.488662066 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.492445346 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.290914487 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.565646438 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.633408118 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.430038443 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.455073738 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.300603505 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.288934076 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.331652274 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.292428434 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.289662572 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.289484608 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.490598602 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.289550386 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.287441786 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.29258265 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.693087654 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.295749182 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.288157515 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.289289588 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.493431156 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.877047122 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.293869324 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.287717566 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.443526411 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.287906369 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.293381573 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.483359397 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.287674908 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.287769527 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.289442348 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.287776302 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.300290452 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.2957916 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.865713502 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.295608755 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.293132572 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.293473839 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.306056416 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.292889084 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.311021007 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3011104 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.308580877 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.288013472 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.929490071 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.289614532 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.301158608 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.934077989 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.291198416 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.287778274 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.298749316 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.28854422 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.287755324 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.287519987 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.288075731 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.030934678 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.294225572 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.288208138 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.304689715 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.692956351 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.452837195 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.084262211 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.28839832 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.294671619 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.294154103 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.289336418 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.291704447 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.301468605 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.310676305 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.693438002 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.288897644 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.29306042 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.28800905 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.498599115 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.29131153 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.287412815 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.695425041 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.287725355 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.309111441 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.293255633 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.447782887 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.772024428 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.492556064 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.297202966 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.317495586 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.288174874 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.09069302 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.287962007 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.294221404 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.288095155 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.526305726 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.28878138 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.288166972 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.410641579 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.322009906 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.288661485 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.288004918 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.289675667 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.288288024 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.521391877 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.295951651 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.489662779 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.290276737 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.287921902 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.291886067 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.29408204 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.290092468 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.287861039 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.289575647 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.562219875 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.28784802 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.298608596 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.287718747 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.287933116 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.29972565 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.29387559 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.295633265 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.293105681 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.29454934 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.490539051 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.315860048 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.431858835 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.315733803 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.288851241 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.291188285 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.293259205 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.29383487 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.287999644 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.289174082 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.287805067 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.296049273 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.296508994 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.777333107 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.265000523 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.319003745 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.176359775 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.303659206 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.408491102 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.296269503 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.450202545 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.288601675 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.308536823 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.295144548 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.287896965 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.29382329 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.490275198 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.299017452 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.46001558 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.692909621 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.778002584 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.696517593 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.28918803 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.288384047 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.287651463 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.287787054 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.2895921 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.289398869 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.451729114 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.497427973 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.306452986 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.779159191 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.291549991 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.293910817 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.29458748 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.490971397 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.29784858 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.290181831 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.287866782 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.296226856 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.294835853 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.488719087 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.568877747 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.303664313 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.287533428 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.805874592 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.295622945 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.289021305 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.288313494 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.317667671 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.287974333 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.768761222 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.301398624 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.296225375 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.493956003 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.288931542 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.308103456 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.288233012 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.290010636 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.294209728 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.291100576 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.295831075 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.451008676 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.295270552 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.289604101 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.288296396 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.943266632 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.737283692 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.289776443 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.289752423 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.287268037 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.695057193 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.300878983 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.288217847 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.485889004 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.694261519 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.288980768 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.693444273 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.291047152 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.876433427 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.491026681 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.297537201 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.288852904 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.28994716 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.494670004 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.499995958 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.320266509 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.290836559 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.29241435 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.290882337 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.772168542 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.288317668 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.465504127 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.693123123 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.290033079 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.29021249 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.355237466 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.293407386 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.601133295 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.288099879 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.28803373 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.297471665 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.288072476 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.77224405 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.319806509 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.288359884 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.875490738 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.294204055 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.694072489 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.288347037 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.452460956 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.491566429 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.560728965 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.289395889 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.292659436 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.289421057 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.493793977 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.304310524 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.290797888 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.736734137 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.156693229 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.296227702 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.288834613 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.084720636 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.291350002 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.519991637 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.291228212 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.29094609 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.323193144 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.288820078 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.288225481 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.287972363 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.317769729 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.260528142 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.838165131 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.291697619 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.302890116 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.292870843 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.299273782 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.298965766 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.304175786 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.774822525 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.290072209 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.294282759 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.3166454 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.294381663 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.296420019 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.301648705 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.290108518 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.304720852 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.454082633 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.289320346 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.290880688 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.292618379 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.412196343 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.498423893 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.288375643 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.289100615 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.486531502 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.288301042 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.292413764 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.953305454 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.297735553 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.29338782 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.290230803 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.289982333 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.305876121 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.411973118 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.450775659 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.49239137 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.494300447 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.60228711 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.288740118 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.290150895 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 2.022200631 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.994944572 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.289320838 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.297100966 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.290809813 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.779788427 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.945829125 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.78457686 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.495567074 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.29132094 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.310811655 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.28856559 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.59966522 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.288126676 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.564362363 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.291481517 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.295188233 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.310540382 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.295004164 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.295456744 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.498688706 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.562360265 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.288298545 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.295812378 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.287588145 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.288386214 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.493072219 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.499730106 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.965993414 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.932446652 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.288182302 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.294459522 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.69368661 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.564195082 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.288286706 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.290526412 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.288421189 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.292603388 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.301730955 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.296678987 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.297987969 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.564491686 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.488852193 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.636715382 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.487281263 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 16.169885658 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.165058604 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.296623567 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.293740713 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.288945697 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.449979552 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.768796556 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.881739669 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.299250121 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.413292639 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.453157933 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.287596726 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.603280804 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.296204724 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.288128064 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.28907883 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.300872288 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.288447522 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.487040028 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.78672024 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.300015671 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.294822447 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.29400107 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.288446123 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.449054169 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.297444231 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.028494575 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.290689312 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.490422773 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.320382681 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.28904974 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.773179376 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.494429732 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.289715401 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.294130319 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.482154422 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.291236765 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.32594159 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.166517357 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.288972067 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.084450286 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.501019349 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.084952268 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.292075646 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.88162935 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.780091503 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.296475215 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.840283668 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.289153607 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.291071566 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.564800214 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.29782423 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.295751495 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.57658134 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.293928491 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.293124515 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.453451292 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.771218808 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.882979318 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.296932075 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.291352482 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.29022124 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.288921556 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411393154 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.302359641 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.295395428 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.685915678 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.289007905 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.293165772 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.852755196 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.289587232 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.292839612 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.287282927 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.288962631 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.297011271 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.329168158 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.290342621 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.296385341 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.483489991 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.767094577 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.306675872 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.913761573 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.623908211 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.293230721 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.291208722 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.292030617 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.297280723 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.290440606 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.288675715 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.28937709 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.299095249 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.087225641 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.290372665 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.489210778 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.295467161 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.498903683 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.499119654 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.291212696 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.451875054 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.293190223 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.307537109 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.293438871 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.290253277 seconds)
  done (took 974.384351067 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.316234716 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.294975008 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.301715573 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.322068983 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.323803745 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.330403893 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.343930037 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.314867654 seconds)
  done (took 19.817329696 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.297309183 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.299969217 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.294616247 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.299656435 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.291965761 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.535619228 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.290190421 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.299414728 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.304886084 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.297843156 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.288707377 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 1.670358381 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.29887737 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.292420354 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.301086821 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.298731713 seconds)
  done (took 30.6317931 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 2.967898081 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.318241757 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.31768286 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.328369598 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.307535024 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.293719636 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.420523204 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.298627324 seconds)
  done (took 22.522995099 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.306421522 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.306852028 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.306565686 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.306901678 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.307043391 seconds)
  done (took 7.803247804 seconds)
done (took 1224.731264469 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.295287644 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.295123306 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.296802203 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.297524589 seconds)
  done (took 6.453629712 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.289615773 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.289830305 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.290161246 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.707843093 seconds)
  done (took 9.846555259 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.605705174 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.732086244 seconds)
  done (took 4.607179692 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.658223199 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.344365995 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.469801866 seconds)
  done (took 5.741853054 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.688094298 seconds)
  done (took 2.957918598 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.773793431 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.752313003 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.446956805 seconds)
  done (took 6.242507318 seconds)
done (took 37.119015489 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.29237054 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.061526591 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.457911541 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.289085766 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.450100039 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.445995943 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.516744797 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.289137643 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.295691563 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.294350986 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.289083599 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.450248157 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.504623998 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.061058933 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.504213278 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.060148296 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.448808121 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.288760472 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.289599843 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.291889923 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.5166883 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.293031753 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.295503376 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.289412954 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.449833424 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.433689527 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.2910801 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.061629787 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.288846724 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.296526487 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.432399838 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.290325691 seconds)
  done (took 79.789878099 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.289464774 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.288442188 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.289820998 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.288705109 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.291363102 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.290560848 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.291314956 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.289068077 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.296273319 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.291619893 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.295082376 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.289134636 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.288778033 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.293305511 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.288765082 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.289200874 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.289144869 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.288338565 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.288891906 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.29794591 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.29064061 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.295285428 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.289497017 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.288902847 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.288990338 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.289593612 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.288483089 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.289426535 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.289305592 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.299721316 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.290616462 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.289615399 seconds)
  done (took 74.575770419 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.289498936 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.289393277 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.290956846 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.288305748 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.289696688 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.290495887 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.292466937 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.289027395 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.289805219 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.286930517 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.289747011 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.288595776 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.293596329 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.289650885 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.297037883 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.289418994 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.289454612 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.295117567 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.288129939 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.287989468 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.29078429 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.298131864 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.289741663 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.289191414 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.298549553 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.289528325 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.288719024 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.297743751 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.29053659 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.289079358 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.288494722 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.296055722 seconds)
  done (took 74.582072028 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.519692408 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.294703444 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.296781883 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.289286373 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.296259649 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.294859541 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.289290801 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.521709859 seconds)
  done (took 14.07193796 seconds)
done (took 244.288578251 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.289357834 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.774624216 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.31689773 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.29069812 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.319785185 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.319927302 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.452801703 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.317349852 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.4377183 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.292460757 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.318294044 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.289752002 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.003536661 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.401134053 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.165336593 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.282680002 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.076892552 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.290399966 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.833572145 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.46123094 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.316513785 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.290057726 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.171095157 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.080543536 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.289993377 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.300507915 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.30130049 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.409435488 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.378053513 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.300419661 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.768135142 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.290109403 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.289397333 seconds)
  done (took 60.38960709 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.294698784 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.294694263 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.294612803 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.294504193 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.294628463 seconds)
    (6/30) benchmarking ("IntSet", "Int", "start")...
    done (took 1.294601392 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.294665642 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.294969597 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.295025829 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.294761769 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.295101137 seconds)
    (12/30) benchmarking ("IntSet", "Int", "next")...
    done (took 1.295925131 seconds)
    (13/30) benchmarking ("IntSet", "Int", "done")...
    done (took 1.294355235 seconds)
    (14/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.295652654 seconds)
    (15/30) benchmarking ("Set", "Int", "next")...
    done (took 1.295986538 seconds)
    (16/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.294776077 seconds)
    (17/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.296908641 seconds)
    (18/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.29961352 seconds)
    (19/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.294708946 seconds)
    (20/30) benchmarking ("Set", "String", "start")...
    done (took 1.294847153 seconds)
    (21/30) benchmarking ("Vector", "String", "next")...
    done (took 1.29436098 seconds)
    (22/30) benchmarking ("Set", "Any", "next")...
    done (took 1.298784971 seconds)
    (23/30) benchmarking ("Vector", "String", "start")...
    done (took 1.294730568 seconds)
    (24/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.294961009 seconds)
    (25/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.294820866 seconds)
    (26/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.295152123 seconds)
    (27/30) benchmarking ("Set", "String", "done")...
    done (took 1.294526824 seconds)
    (28/30) benchmarking ("Set", "Any", "done")...
    done (took 1.294913482 seconds)
    (29/30) benchmarking ("Set", "Int", "start")...
    done (took 1.29560965 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.294251862 seconds)
  done (took 40.127742132 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.294868407 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.984604778 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.290291586 seconds)
    (4/117) benchmarking ("IntSet", "Int", "intersect", "IntSet")...
    done (took 1.299353214 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.605177963 seconds)
    (6/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.593172102 seconds)
    (7/117) benchmarking ("Vector", "Int", "setdiff", "IntSet")...
    done (took 2.129457246 seconds)
    (8/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.516024256 seconds)
    (9/117) benchmarking ("IntSet", "Int", "union!", "Vector")...
    done (took 1.301016754 seconds)
    (10/117) benchmarking ("IntSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.373280848 seconds)
    (11/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.291018431 seconds)
    (12/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.295184309 seconds)
    (13/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.295264325 seconds)
    (14/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.973160886 seconds)
    (15/117) benchmarking ("Vector", "Int", "intersect", "IntSet")...
    done (took 1.328825359 seconds)
    (16/117) benchmarking ("Set", "Int", "setdiff", "IntSet")...
    done (took 1.92762612 seconds)
    (17/117) benchmarking ("Set", "Int", "intersect", "IntSet", "IntSet")...
    done (took 1.373140872 seconds)
    (18/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.650566266 seconds)
    (19/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.455510515 seconds)
    (20/117) benchmarking ("Set", "Int", "symdiff", "IntSet", "IntSet")...
    done (took 2.290711225 seconds)
    (21/117) benchmarking ("IntSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.436226094 seconds)
    (22/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.423567902 seconds)
    (23/117) benchmarking ("IntSet", "Int", "setdiff!", "Vector")...
    done (took 1.300053355 seconds)
    (24/117) benchmarking ("IntSet", "Int", "symdiff!", "Set")...
    done (took 1.304025974 seconds)
    (25/117) benchmarking ("IntSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.327979793 seconds)
    (26/117) benchmarking ("IntSet", "Int", "<", "IntSet")...
    done (took 1.302076242 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.683122936 seconds)
    (28/117) benchmarking ("IntSet", "Int", "union!", "IntSet")...
    done (took 1.301243342 seconds)
    (29/117) benchmarking ("IntSet", "Int", "symdiff!", "IntSet")...
    done (took 1.301629447 seconds)
    (30/117) benchmarking ("IntSet", "Int", "union!", "Set")...
    done (took 1.303791155 seconds)
    (31/117) benchmarking ("IntSet", "Int", "⊆", "self")...
    done (took 1.30092539 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.585764523 seconds)
    (33/117) benchmarking ("Set", "Int", "union", "IntSet")...
    done (took 2.290385155 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.289849931 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.68240908 seconds)
    (36/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.295154466 seconds)
    (37/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.900754969 seconds)
    (38/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.295479699 seconds)
    (39/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.48729551 seconds)
    (40/117) benchmarking ("IntSet", "Int", "intersect", "Set")...
    done (took 1.30197844 seconds)
    (41/117) benchmarking ("IntSet", "Int", "⊆", "Set")...
    done (took 1.295854657 seconds)
    (42/117) benchmarking ("IntSet", "Int", "symdiff", "Vector")...
    done (took 1.302244241 seconds)
    (43/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.290056091 seconds)
    (44/117) benchmarking ("IntSet", "Int", "union", "Set")...
    done (took 1.302396601 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.670381221 seconds)
    (46/117) benchmarking ("IntSet", "Int", "==", "self")...
    done (took 1.29551442 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "IntSet", "IntSet")...
    done (took 1.328502697 seconds)
    (48/117) benchmarking ("Set", "Int", "setdiff!", "IntSet")...
    done (took 1.59500042 seconds)
    (49/117) benchmarking ("IntSet", "Int", "intersect", "Vector")...
    done (took 1.299385279 seconds)
    (50/117) benchmarking ("Set", "Int", "symdiff", "IntSet")...
    done (took 2.289363596 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "IntSet", "IntSet")...
    done (took 2.298555931 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.670493595 seconds)
    (53/117) benchmarking ("IntSet", "Int", "setdiff!", "Set")...
    done (took 1.300240474 seconds)
    (54/117) benchmarking ("Vector", "Int", "symdiff", "IntSet", "IntSet")...
    done (took 2.300913978 seconds)
    (55/117) benchmarking ("IntSet", "Int", "setdiff", "Set")...
    done (took 1.300934882 seconds)
    (56/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.670090194 seconds)
    (57/117) benchmarking ("IntSet", "Int", "setdiff!", "IntSet")...
    done (took 1.301647725 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.135817819 seconds)
    (59/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.600065793 seconds)
    (60/117) benchmarking ("IntSet", "Int", "symdiff", "IntSet")...
    done (took 1.301141072 seconds)
    (61/117) benchmarking ("IntSet", "Int", "union", "IntSet")...
    done (took 1.301506809 seconds)
    (62/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.290305022 seconds)
    (63/117) benchmarking ("IntSet", "Int", "union", "Vector", "Vector")...
    done (took 2.289779764 seconds)
    (64/117) benchmarking ("Set", "Int", "intersect", "IntSet")...
    done (took 1.366856387 seconds)
    (65/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.289734057 seconds)
    (66/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.300621282 seconds)
    (67/117) benchmarking ("Vector", "Int", "union", "IntSet")...
    done (took 2.299372255 seconds)
    (68/117) benchmarking ("IntSet", "Int", "⊆", "IntSet")...
    done (took 1.301060044 seconds)
    (69/117) benchmarking ("IntSet", "Int", "symdiff", "IntSet", "IntSet")...
    done (took 1.308229031 seconds)
    (70/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.671124353 seconds)
    (71/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.289551915 seconds)
    (72/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.290065966 seconds)
    (73/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.489278365 seconds)
    (74/117) benchmarking ("IntSet", "Int", "⊆", "Vector")...
    done (took 1.296418313 seconds)
    (75/117) benchmarking ("Set", "Int", "union", "IntSet", "IntSet")...
    done (took 2.289919298 seconds)
    (76/117) benchmarking ("IntSet", "Int", "==", "IntSet")...
    done (took 1.296165778 seconds)
    (77/117) benchmarking ("IntSet", "Int", "union", "Vector")...
    done (took 1.300995288 seconds)
    (78/117) benchmarking ("IntSet", "Int", "intersect", "IntSet", "IntSet")...
    done (took 1.30656359 seconds)
    (79/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.29586838 seconds)
    (80/117) benchmarking ("Set", "Int", "⊆", "IntSet")...
    done (took 1.295222643 seconds)
    (81/117) benchmarking ("IntSet", "Int", "intersect", "Set", "Set")...
    done (took 1.394802852 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.420545226 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "IntSet")...
    done (took 1.597485342 seconds)
    (84/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.593348445 seconds)
    (85/117) benchmarking ("IntSet", "Int", "setdiff", "IntSet")...
    done (took 1.301813228 seconds)
    (86/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.426829811 seconds)
    (87/117) benchmarking ("empty", "Int", "<", "IntSet")...
    done (took 1.300005806 seconds)
    (88/117) benchmarking ("Set", "Int", "union")...
    done (took 1.585310837 seconds)
    (89/117) benchmarking ("IntSet", "Int", "symdiff")...
    done (took 1.295557643 seconds)
    (90/117) benchmarking ("empty", "Int", "⊆", "IntSet")...
    done (took 1.300026982 seconds)
    (91/117) benchmarking ("IntSet", "Int", "union")...
    done (took 1.298431188 seconds)
    (92/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.294804107 seconds)
    (93/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.093650886 seconds)
    (94/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.289744976 seconds)
    (95/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.295845921 seconds)
    (96/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.295508562 seconds)
    (97/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.431334883 seconds)
    (98/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.682911889 seconds)
    (99/117) benchmarking ("IntSet", "Int", "symdiff", "Set")...
    done (took 1.303859262 seconds)
    (100/117) benchmarking ("IntSet", "Int", "symdiff!", "Vector")...
    done (took 1.303116366 seconds)
    (101/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.455433279 seconds)
    (102/117) benchmarking ("IntSet", "Int", "union", "Set", "Set")...
    done (took 2.290565278 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "IntSet")...
    done (took 2.289386916 seconds)
    (104/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.603210426 seconds)
    (105/117) benchmarking ("Vector", "Int", "⊆", "IntSet")...
    done (took 1.295353806 seconds)
    (106/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.289518751 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.290010915 seconds)
    (108/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.426193922 seconds)
    (109/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.296249283 seconds)
    (110/117) benchmarking ("IntSet", "Int", "union", "IntSet", "IntSet")...
    done (took 1.306016731 seconds)
    (111/117) benchmarking ("IntSet", "Int", "intersect")...
    done (took 1.299274152 seconds)
    (112/117) benchmarking ("IntSet", "Int", "setdiff", "Vector")...
    done (took 1.29878775 seconds)
    (113/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.513591929 seconds)
    (114/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.591297754 seconds)
    (115/117) benchmarking ("IntSet", "Int", "intersect!", "IntSet")...
    done (took 1.301718491 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.290326436 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.623641927 seconds)
  done (took 189.738649791 seconds)
  (4/6) benchmarking "optimizations"...
    (1/19) benchmarking ("Vector", "concrete", "Void")...
    done (took 1.29671995 seconds)
    (2/19) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.291908096 seconds)
    (3/19) benchmarking ("Set", "concrete", "Void")...
    done (took 2.289763423 seconds)
    (4/19) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.297607028 seconds)
    (5/19) benchmarking ("Dict", "abstract", "Void")...
    done (took 2.291313698 seconds)
    (6/19) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.301057211 seconds)
    (7/19) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.289796933 seconds)
    (8/19) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.289957484 seconds)
    (9/19) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.290299507 seconds)
    (10/19) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.289069702 seconds)
    (11/19) benchmarking ("Dict", "concrete", "Void")...
    done (took 2.290308098 seconds)
    (12/19) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.292528425 seconds)
    (13/19) benchmarking ("BitSet", "Int8")...
    done (took 2.289741243 seconds)
    (14/19) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.290147781 seconds)
    (15/19) benchmarking ("Set", "abstract", "Void")...
    done (took 2.29147257 seconds)
    (16/19) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.290990059 seconds)
    (17/19) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.291890178 seconds)
    (18/19) benchmarking ("Vector", "abstract", "Void")...
    done (took 1.294570162 seconds)
    (19/19) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.29080646 seconds)
  done (took 42.820737173 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/76) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.295399856 seconds)
    (2/76) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.652414382 seconds)
    (3/76) benchmarking ("IntSet", "Int", "in", "true")...
    done (took 1.294946014 seconds)
    (4/76) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.295430945 seconds)
    (5/76) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.336251368 seconds)
    (6/76) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.294821017 seconds)
    (7/76) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.28977164 seconds)
    (8/76) benchmarking ("Vector", "String", "push!")...
    done (took 1.413715719 seconds)
    (9/76) benchmarking ("Set", "String", "in", "false")...
    done (took 1.295301492 seconds)
    (10/76) benchmarking ("Set", "Int", "first")...
    done (took 1.295299607 seconds)
    (11/76) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.295452259 seconds)
    (12/76) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.289534835 seconds)
    (13/76) benchmarking ("IntSet", "Int", "push!", "overwrite")...
    done (took 1.298941487 seconds)
    (14/76) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.683862423 seconds)
    (15/76) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.296006907 seconds)
    (16/76) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.683554368 seconds)
    (17/76) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.294966973 seconds)
    (18/76) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.295583968 seconds)
    (19/76) benchmarking ("Dict", "String", "getindex")...
    done (took 1.294608257 seconds)
    (20/76) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.683714846 seconds)
    (21/76) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.289964024 seconds)
    (22/76) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.586624791 seconds)
    (23/76) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.33820012 seconds)
    (24/76) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.683984431 seconds)
    (25/76) benchmarking ("IntSet", "Int", "length")...
    done (took 1.295138823 seconds)
    (26/76) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.294944603 seconds)
    (27/76) benchmarking ("Vector", "Int", "last")...
    done (took 1.295934501 seconds)
    (28/76) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.683276498 seconds)
    (29/76) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.295379747 seconds)
    (30/76) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.69523323 seconds)
    (31/76) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.296993482 seconds)
    (32/76) benchmarking ("Vector", "Int", "length")...
    done (took 1.295515776 seconds)
    (33/76) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.338075915 seconds)
    (34/76) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.339856767 seconds)
    (35/76) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.289784473 seconds)
    (36/76) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.588427106 seconds)
    (37/76) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.317505684 seconds)
    (38/76) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.403013823 seconds)
    (39/76) benchmarking ("Dict", "Int", "first")...
    done (took 1.296420859 seconds)
    (40/76) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.297304592 seconds)
    (41/76) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.688524431 seconds)
    (42/76) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.296769231 seconds)
    (43/76) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.297922752 seconds)
    (44/76) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.300897726 seconds)
    (45/76) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.661724506 seconds)
    (46/76) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.661767391 seconds)
    (47/76) benchmarking ("Dict", "Int", "length")...
    done (took 1.295001011 seconds)
    (48/76) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.296188634 seconds)
    (49/76) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.689087573 seconds)
    (50/76) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.660931353 seconds)
    (51/76) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.654278789 seconds)
    (52/76) benchmarking ("Vector", "Int", "push!")...
    done (took 1.412180624 seconds)
    (53/76) benchmarking ("IntSet", "Int", "first")...
    done (took 1.295823811 seconds)
    (54/76) benchmarking ("Vector", "String", "getindex")...
    done (took 1.295214016 seconds)
    (55/76) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.585874348 seconds)
    (56/76) benchmarking ("Vector", "Int", "first")...
    done (took 1.29578569 seconds)
    (57/76) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.688721583 seconds)
    (58/76) benchmarking ("IntSet", "Int", "pop!", "unspecified")...
    done (took 1.299092248 seconds)
    (59/76) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.296051781 seconds)
    (60/76) benchmarking ("Set", "String", "in", "true")...
    done (took 1.296176527 seconds)
    (61/76) benchmarking ("IntSet", "Int", "in", "false")...
    done (took 1.295661353 seconds)
    (62/76) benchmarking ("IntSet", "Int", "pop!", "specified")...
    done (took 1.299229575 seconds)
    (63/76) benchmarking ("Vector", "Any", "push!")...
    done (took 1.41438988 seconds)
    (64/76) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.686797399 seconds)
    (65/76) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.590933354 seconds)
    (66/76) benchmarking ("IntSet", "Int", "push!", "new")...
    done (took 1.300425546 seconds)
    (67/76) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.290516543 seconds)
    (68/76) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.290955657 seconds)
    (69/76) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.296410198 seconds)
    (70/76) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.338462184 seconds)
    (71/76) benchmarking ("Set", "Int", "length")...
    done (took 1.295057928 seconds)
    (72/76) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.290785929 seconds)
    (73/76) benchmarking ("IntSet", "Int", "last")...
    done (took 1.296205943 seconds)
    (74/76) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.337041946 seconds)
    (75/76) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.599437263 seconds)
    (76/76) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.291553466 seconds)
  done (took 115.655957223 seconds)
  (6/6) benchmarking "deletion"...
    (1/19) benchmarking ("Vector", "String", "pop!")...
    done (took 1.387041337 seconds)
    (2/19) benchmarking ("Set", "Int", "filter!")...
    done (took 1.711863277 seconds)
    (3/19) benchmarking ("Set", "String", "filter!")...
    done (took 2.290040301 seconds)
    (4/19) benchmarking ("Set", "Any", "pop!")...
    done (took 2.298456357 seconds)
    (5/19) benchmarking ("Vector", "Any", "filter")...
    done (took 1.403038762 seconds)
    (6/19) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.390734413 seconds)
    (7/19) benchmarking ("Vector", "String", "filter")...
    done (took 1.490551984 seconds)
    (8/19) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.354921548 seconds)
    (9/19) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.346200692 seconds)
    (10/19) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.387533331 seconds)
    (11/19) benchmarking ("Vector", "String", "filter!")...
    done (took 1.407155066 seconds)
    (12/19) benchmarking ("Set", "Int", "pop!")...
    done (took 1.703305357 seconds)
    (13/19) benchmarking ("Set", "Any", "filter!")...
    done (took 2.289554301 seconds)
    (14/19) benchmarking ("Vector", "Int", "filter")...
    done (took 1.366371708 seconds)
    (15/19) benchmarking ("Set", "String", "filter")...
    done (took 1.891008029 seconds)
    (16/19) benchmarking ("Set", "Int", "filter")...
    done (took 1.517057287 seconds)
    (17/19) benchmarking ("Set", "Any", "filter")...
    done (took 2.06433037 seconds)
    (18/19) benchmarking ("Set", "String", "pop!")...
    done (took 2.295952096 seconds)
    (19/19) benchmarking ("IntSet", "Int", "pop!")...
    done (took 1.438163696 seconds)
  done (took 33.304133251 seconds)
done (took 483.306057099 seconds)
SAVING RESULT...
DONE!
